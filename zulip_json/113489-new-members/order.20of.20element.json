[
    {
        "content": "<p>So I'd like to prove some things about the order of an element of a group. Based on the definitions/lemmas in group_theory/order_of_element, it seems like what's happening is the group is simply declared as finite, which forces the elements to have finite order. What I'd like to know is whether there's a way to declare some element <code>a  :  G</code> for (possibly infinite) group <code>G</code> such that <code>order_of a</code> exists, i.e. it's finite. Would I have to grab a finite subgroup of <code>G</code> in order to do that, or is there another way?</p>",
        "id": 201912980,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593038836
    },
    {
        "content": "<p>(sorry this might be a question that belongs in <a class=\"stream\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F\">#Is there code for X?</a> now that I think about it)</p>",
        "id": 201913135,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593038973
    },
    {
        "content": "<p>Is it not the case that there's a function which works in general and returns 0 if it has infinite order?</p>",
        "id": 201913238,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593039032
    },
    {
        "content": "<p>The cunning way to do the order of an element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span></span></span></span> of a group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span> in general is to consider the kernel of the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo>→</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}\\to G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span> sending <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>g</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">g^n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.858832em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 201913290,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593039072
    },
    {
        "content": "<p>It's principal with a canonical generator.</p>",
        "id": 201913304,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593039086
    },
    {
        "content": "<p>i don't see the function kevin is asking about anywhere nearby <a href=\"https://leanprover-community.github.io/mathlib_docs/find/order_of\">docs#order_of</a></p>",
        "id": 201913916,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593039560
    },
    {
        "content": "<p>but the approach used there will let you define <code>order_of</code> on anything for which you can prove is torsion</p>",
        "id": 201914045,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593039619
    },
    {
        "content": "<p>I guess what I'm trying to prove is more like, if there exists some element of G of finite order n, then...etc</p>",
        "id": 201922424,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593047151
    },
    {
        "content": "<p>So it's like, in general, I'm trying to construct the statement <code>order_of a = n → something</code> regardless of whether there actually is an element of finite order in the given group</p>",
        "id": 201922887,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593047662
    },
    {
        "content": "<p>If the group has no elements of finite order besides the identity, the thing I want to prove is trivially true so it technically is a true statement regardless of whether the group is finite</p>",
        "id": 201923025,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593047860
    },
    {
        "content": "<p>yes, i think the things you're saying mean the same thing I said. You can look at the implementation of <code>order_of_element</code> and add an extra hypothesis <code>∃ n, x ^ n = 1</code></p>",
        "id": 201924110,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593049177
    },
    {
        "content": "<p>all of the proofs will go through, changing at most one line in each one</p>",
        "id": 201924164,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593049210
    },
    {
        "content": "<p>maybe I don't know where you are stuck</p>",
        "id": 201924190,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593049269
    },
    {
        "content": "<p>Ah gotcha, that works. Thanks!</p>",
        "id": 201924533,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593049595
    },
    {
        "content": "<p>and this clearly belongs in mathlib, but I don't know how one would organize it</p>",
        "id": 201925130,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593050226
    }
]