[
    {
        "content": "<p>The final <code>example</code> in <a href=\"https://github.com/leanprover/mathlib/blob/master/docs/theories/integers.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/theories/integers.md\">this file from the mathlib docs</a> (I guess it originally comes from <a href=\"https://xenaproject.wordpress.com/maths-in-lean-integers/\" target=\"_blank\" title=\"https://xenaproject.wordpress.com/maths-in-lean-integers/\">this page on the xena blog</a>) doesn't seem to typecheck for me:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">gcd</span>\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">gcd</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">gcd_a</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">gcd_b</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">gcd_eq_gcd_ab</span>\n</pre></div>\n\n\n<p>I get this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">gcd_a</span> <span class=\"n\">m</span> <span class=\"n\">n</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">gcd_a</span> <span class=\"n\">m</span> <span class=\"n\">n</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">ℤ</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"bp\">ℕ</span>\n</pre></div>\n\n\n<p>and something similar for the other summand.</p>",
        "id": 131176076,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1533825321
    },
    {
        "content": "<p>that should be</p>\n<div class=\"codehilite\"><pre><span></span>example (m n : ℕ) : (nat.gcd m n : ℤ) = m * (gcd_a m n) + n * (gcd_b m n) := gcd_eq_gcd_ab m n\n</pre></div>",
        "id": 131177735,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533826861
    },
    {
        "content": "<p>[what Mario said]</p>",
        "id": 131177872,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533826968
    },
    {
        "content": "<p>Thanks! I was having trouble figuring out the fix by myself...</p>",
        "id": 131178041,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1533827123
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/pull/244\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/244\">https://github.com/leanprover/mathlib/pull/244</a></p>",
        "id": 131181859,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533830720
    },
    {
        "content": "<p>It would be really nice to find a workflow making sure examples in the docs are correct. The manual way would be to copy them to a <code>tests/docs/</code> directory, and hope things will stay synced.</p>",
        "id": 131181958,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533830817
    },
    {
        "content": "<p>Thanks Mario! I wonder if this is my new merge time record. I already hit some similar score a long time ago.</p>",
        "id": 131182072,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533830901
    }
]