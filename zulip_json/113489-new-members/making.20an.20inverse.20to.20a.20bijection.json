[
    {
        "content": "<p>Is there something in mathlib that lets you (constructively) make an inverse to a bijection between two fintypes with decidably equality?</p>\n<p>It feels to me like it should be possible without axioms.</p>",
        "id": 135775250,
        "sender_full_name": "Sebastian Zimmer",
        "timestamp": 1539519151
    },
    {
        "content": "<p>You are right that it is possible without axioms, but I don't think we have exactly that</p>",
        "id": 135775318,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539519346
    },
    {
        "content": "<p>How about unique choice in a fintype?</p>",
        "id": 135775361,
        "sender_full_name": "Sebastian Zimmer",
        "timestamp": 1539519368
    },
    {
        "content": "<p>There is <code>encodable.choose</code>, but a fintype isn't actually <code>encodable</code> because it doesn't have an ordering</p>",
        "id": 135775365,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539519377
    },
    {
        "content": "<p>but as you say for unique choice it doesn't matter</p>",
        "id": 135775368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539519393
    },
    {
        "content": "<p>That's something that makes sense to define, but you would have to write it yourself (and PR to mathlib)</p>",
        "id": 135775374,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539519430
    },
    {
        "content": "<p>I've implemented this. Should I make a PR to leanprover-community or directly to leanprover/mathlib?</p>",
        "id": 135790982,
        "sender_full_name": "Sebastian Zimmer",
        "timestamp": 1539546786
    },
    {
        "content": "<p>You should PR directly to mathlib. leanprover-community is typically used as a collaborative staging area for larger PR's that multiple people work on; you can get contributor access to it if you ask Mario or Simon Hudon.</p>",
        "id": 135793320,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1539550948
    },
    {
        "content": "<p>I don't know your github username</p>",
        "id": 135793395,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539551113
    },
    {
        "content": "<p>It looks like Sebastian has already opened a PR to leanprover-community:</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/7\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/7\">https://github.com/leanprover-community/mathlib/pull/7</a></p>",
        "id": 135793496,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1539551335
    },
    {
        "content": "<p>ok, I've opened a PR directly to mathlib here <a href=\"https://github.com/leanprover/mathlib/pull/421\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/421\">https://github.com/leanprover/mathlib/pull/421</a></p>",
        "id": 135795680,
        "sender_full_name": "Sebastian Zimmer",
        "timestamp": 1539555749
    },
    {
        "content": "<p>I made a bunch of changes in reponse to the comments on it</p>",
        "id": 136213925,
        "sender_full_name": "Sebastian Zimmer",
        "timestamp": 1540129946
    }
]