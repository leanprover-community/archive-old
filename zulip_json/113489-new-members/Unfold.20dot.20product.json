[
    {
        "content": "<p>How can I prove this technical lemma, please?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">this_shoud_be_trivial</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">matrix.dot_product</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">]</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">d</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">e</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">f</span>\n<span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>This question is related to (I am implementing the cross product):<br>\n<a href=\"#narrow/stream/113488-general/topic/cross.20product\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/cross.20product</a></p>",
        "id": 265554372,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640002305
    },
    {
        "content": "<p>This is the definition (from <code>data.matrix.basic</code>) I am referring to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- `dot_product v w` is the sum of the entrywise products `v i * w i` -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">dot_product</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">w</span> <span class=\"n\">i</span>\n</code></pre></div>",
        "id": 265554510,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640002407
    },
    {
        "content": "<p><code>by simp [add_assoc]</code> seems to work.</p>",
        "id": 265554931,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1640002662
    }
]