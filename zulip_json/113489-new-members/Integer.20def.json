[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.complex.circle</span>\n<span class=\"kn\">import</span> <span class=\"n\">group_theory.specific_groups.dihedral</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.trigonometric</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">integer_def</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span>  <span class=\"bp\">∨</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 246784289,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1626904246
    },
    {
        "content": "<p>Is there a lemma on mathlib that shows this? Library_Search can't seem to find it</p>",
        "id": 246784318,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1626904272
    },
    {
        "content": "<p><code>library_search!</code> gets it for me</p>",
        "id": 246784485,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1626904359
    },
    {
        "content": "<p>whatever you're doing, it seems like <code>cases n</code> is much wiser</p>",
        "id": 246784540,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1626904398
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/le_or_lt\">docs#le_or_lt</a></p>",
        "id": 246784565,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1626904419
    },
    {
        "content": "<p>Ah yeah, the exclamation mark makes the difference. Thank you!</p>",
        "id": 246784711,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1626904509
    },
    {
        "content": "<p><code>cases n</code> is breaking an abstraction barrier. Probably best to break into eg &lt;= 0 and &gt; 0 whilst keeping everything an integer</p>",
        "id": 246786639,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1626905481
    }
]