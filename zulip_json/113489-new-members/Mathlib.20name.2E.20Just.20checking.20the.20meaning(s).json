[
    {
        "content": "<p>On the StackExchange site there is a need for tags for Mathlib. My understanding is that for Lean 3 there is Mathlib and for Lean 4 there is Mathlib 4. Is this correct? Also there are no other things that could be confused with mathlib or would such tags need Lean with them, e.g. <em>lean-mathlib</em>?</p>",
        "id": 271638768,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1644614553
    },
    {
        "content": "<p>Not answering the question, but in the wild when I mention mathlib, I tend to write lean/mathlib, to recognize there are two parts coming together (so a sort of Stallman-like approach, where he writes GNU/Linux).</p>\n<p>I do this mainly to help people who only have heard about Lean to know to search for mathlib, too.</p>",
        "id": 271640874,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644615147
    },
    {
        "content": "<p>At the moment there is a mathlib 4, but I'd describe that more as the future version of mathlib being developed in a separate repository instead of an independent project. The expectation is that the whole community will switch eventually.</p>\n<p>I don't expect <code>mathlib</code> by itself will be confusing in the context of the Proof Assistant site. Although the name mathlib is generic enough that <code>lean-mathlib</code> is also fine for me. A quick search shows:</p>\n<ul>\n<li><a href=\"http://mathlib.readthedocs.io/\">http://mathlib.readthedocs.io/</a></li>\n<li><a href=\"https://www.ti.com/tool/MATHLIB\">https://www.ti.com/tool/MATHLIB</a></li>\n<li><a href=\"http://mathlibs.org/\">http://mathlibs.org/</a></li>\n<li><a href=\"https://www.ibm.com/docs/en/rbd/9.5.1?topic=variables-egl-library-mathlib\">https://www.ibm.com/docs/en/rbd/9.5.1?topic=variables-egl-library-mathlib</a></li>\n<li><a href=\"https://www.nuget.org/packages/MathLib\">https://www.nuget.org/packages/MathLib</a></li>\n</ul>",
        "id": 271650041,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1644620439
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/Mathlib.20name.2E.20Just.20checking.20the.20meaning.28s.29/near/271640874\">said</a>:</p>\n<blockquote>\n<p>I tend to write lean/mathlib, to recognize there are two parts coming together (so a sort of Stallman-like approach, where he writes GNU/Linux).</p>\n</blockquote>\n<p><a href=\"https://mastodon.vierkantor.com/users/Vierkantor/statuses/107518385822995083\">I'd like to interject for a moment...</a></p>",
        "id": 271650089,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1644620483
    },
    {
        "content": "<p>I see this with a lot of proof assistants.  metamath is a completely generic logic-agnostic proof assistant, but metamath/set.mm is based on ZFC.  I guess Isabelle already goes by Isabelle/HOL but most people probably mean Isabelle/HOL/AFP.  I don't know about Coq though...  When people say Lean vs Coq, they usually mean Lean/mathlib vs Coq, but I guess that is the point since Coq has many libraries.</p>",
        "id": 271651584,
        "sender_full_name": "Jason Rute",
        "timestamp": 1644621388
    },
    {
        "content": "<p>For those interested in tags on the StackExchange site. The associated meta question about mathlib tag names is <a href=\"https://proofassistants.meta.stackexchange.com/q/70/5\">here</a>.</p>",
        "id": 271680966,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1644659921
    },
    {
        "content": "<p>Does AFP contain a lot of user-contributed tactics though? I often find it hard to use lean without mathlib because there are just so many tactics, automation and linters that are very useful that you can only get by adding a mathlib dependency, even if I want to write something that doesn't involve mathematics at all!<br>\nIn that sense it seems Lean and mathlib might be a bit more closely tied than just a proof assistant and a mathemtics library for it.</p>",
        "id": 271681987,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1644661545
    },
    {
        "content": "<p>Furthermore I would imagine that disassociating the tactics from the maths would be very hard work. Tactics like <code>nlinarith</code> will no doubt use a lot of stuff in the earlier parts of mathlib.</p>",
        "id": 271687643,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644670444
    },
    {
        "content": "<p>I wonder to what extent the fact that lean is written in lean has made our lives easier here. I think the Coq community doesn't have this luxury.</p>",
        "id": 271687664,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644670507
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Mathlib.20name.2E.20Just.20checking.20the.20meaning.28s.29/near/271687664\">said</a>:</p>\n<blockquote>\n<p>I wonder to what extent the fact that lean is written in lean has made our lives easier here. I think the Coq community doesn't have this luxury.</p>\n</blockquote>\n<p>Coq users can metaprogram in Coq itself and thus write tactics/plugins/extensions in Coq, via MetaCoq: <a href=\"https://github.com/MetaCoq/metacoq\">https://github.com/MetaCoq/metacoq</a></p>",
        "id": 271753409,
        "sender_full_name": "Karl Palmskog",
        "timestamp": 1644769245
    },
    {
        "content": "<p>also, on the topic  of Coq vs. its libraries. Coq now has a fully working <code>-noinit</code> option that avoids loading any part of the Coq standard library at startup. This is used most prominently by the Coq-HoTT library, but other libraries such as MathComp are also usable in this way (though not officially like Coq-HoTT).</p>",
        "id": 271754339,
        "sender_full_name": "Karl Palmskog",
        "timestamp": 1644770653
    },
    {
        "content": "<p>I created the tag <a href=\"https://proofassistants.stackexchange.com/questions/tagged/lean-mathlib\">lean-mathlib</a></p>",
        "id": 271756469,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1644773598
    },
    {
        "content": "<p>Only time will tell if this is the wrong way or the right way to name it.</p>",
        "id": 271756471,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1644773601
    }
]