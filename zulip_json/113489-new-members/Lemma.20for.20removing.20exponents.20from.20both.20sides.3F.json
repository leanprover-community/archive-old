[
    {
        "content": "<p>I can't find a lemma which says</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"n\">c</span>\n</code></pre></div>\n<p>EDIT<br>\nand similar stuff for exponents. Looking at <a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/special_functions/pow.html\">https://leanprover-community.github.io/mathlib_docs/analysis/special_functions/pow.html</a></p>",
        "id": 231922593,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616742020
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 231923001,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616742429
    },
    {
        "content": "<p>Don't think it exists; however there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.rpow_le_rpow_iff\">docs#real.rpow_le_rpow_iff</a>, and you can get your result by applying it twice.</p>",
        "id": 231923095,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1616742504
    },
    {
        "content": "<p>Should be added if it's not there. A good easy PR! (Do write <code>ha : 0 &lt; a</code>, however, reverse the <code>iff</code>, and make it a <code>@[simp]</code> lemma!)</p>",
        "id": 231923173,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616742585
    },
    {
        "content": "<p>We should prove it's a <code>strict_mono</code></p>",
        "id": 231923243,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616742618
    },
    {
        "content": "<p>Was thinking the same. Thank you two!</p>",
        "id": 231923244,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616742618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"355764\">@Hanting Zhang</span> this seems not so straightforward though, since in my lemma the exponent can be negative.</p>",
        "id": 231924015,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616743299
    },
    {
        "content": "<p>So you have to case split on the sign of <code>c</code></p>",
        "id": 231924213,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616743480
    },
    {
        "content": "<p>Hopefully there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.rpow_le_rpow_iff_of_neg\">docs#real.rpow_le_rpow_iff_of_neg</a></p>",
        "id": 231924249,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616743517
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> 404 Not Found :/</p>",
        "id": 231924282,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616743553
    },
    {
        "content": "<p>Yes, I noticed <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 231924335,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616743569
    },
    {
        "content": "<p>I gave exactly this lemma as part of my answer to your previous question, see <a href=\"#narrow/stream/116395-maths/topic/fastest.20approach.20to.20proving.20equation.20iffs/near/231864539\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/fastest.20approach.20to.20proving.20equation.20iffs/near/231864539</a></p>",
        "id": 231925458,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1616744501
    },
    {
        "content": "<p>Hmmm...</p>",
        "id": 231925682,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616744679
    },
    {
        "content": "<p>Ah, did not see that. Still figuring out Zulip. Thanks a lot!</p>",
        "id": 231925723,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616744735
    }
]