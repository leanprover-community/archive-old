[
    {
        "content": "<p>Hello,<br>\nI'm currently getting an error about inductive types that I don't quite understand:</p>\n<div class=\"codehilite\"><pre><span></span><code>structure simple_graph :=\n(E: V → V → Prop)\n(loopless: irreflexive E)\n(undirected: symmetric E)\n\n\ninductive path [G : simple_graph V]: V → V → Type*\n| nil  : Π (h : V), path h h\n| cons : Π {h s t : V} (e : G.E h s) (l : path s t), path h t\n</code></pre></div>\n\n\n<p>Error:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">universe</span> <span class=\"n\">level</span> <span class=\"n\">of</span> <span class=\"n\">type_of</span><span class=\"o\">(</span><span class=\"n\">arg</span> <span class=\"bp\">#</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">of</span> <span class=\"err\">&#39;</span><span class=\"n\">path</span><span class=\"bp\">.</span><span class=\"n\">nil&#39;</span> <span class=\"n\">is</span> <span class=\"n\">too</span> <span class=\"n\">big</span> <span class=\"n\">for</span> <span class=\"n\">the</span> <span class=\"n\">corresponding</span> <span class=\"kn\">inductive</span> <span class=\"n\">datatype</span>\n</code></pre></div>",
        "id": 204161109,
        "sender_full_name": "Michael Hahn",
        "timestamp": 1594947003
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">universes</span> <span class=\"n\">u</span>\n<span class=\"kn\">variable</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">simple_graph</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">E</span><span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→</span> <span class=\"n\">V</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">loopless</span><span class=\"o\">:</span> <span class=\"n\">irreflexive</span> <span class=\"n\">E</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">undirected</span><span class=\"o\">:</span> <span class=\"n\">symmetric</span> <span class=\"n\">E</span><span class=\"o\">)</span>\n\n\n<span class=\"kn\">inductive</span> <span class=\"n\">path</span> <span class=\"o\">[</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">simple_graph</span> <span class=\"n\">V</span><span class=\"o\">]:</span> <span class=\"n\">V</span> <span class=\"bp\">→</span> <span class=\"n\">V</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n<span class=\"bp\">|</span> <span class=\"n\">nil</span>  <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">),</span> <span class=\"n\">path</span> <span class=\"n\">h</span> <span class=\"n\">h</span>\n<span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">h</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"bp\">.</span><span class=\"n\">E</span> <span class=\"n\">h</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">path</span> <span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">),</span> <span class=\"n\">path</span> <span class=\"n\">h</span> <span class=\"n\">t</span>\n</code></pre></div>\n\n\n<p>I think the universe assigned to the <code>Type*</code> in <code>path</code> has to be greater than or equal to the universe level that <code>V</code> lives in?</p>",
        "id": 204161518,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1594947519
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 204162442,
        "sender_full_name": "Michael Hahn",
        "timestamp": 1594948696
    }
]