[
    {
        "content": "<p>hello, how do i discharge <code>a = b -&gt; a = b</code>?</p>",
        "id": 193672634,
        "sender_full_name": "Nam",
        "timestamp": 1586629100
    },
    {
        "content": "<p><code>exact id</code> or <code>intro H, exact H</code></p>",
        "id": 193672646,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629122
    },
    {
        "content": "<p>nothing similar to <code>refl</code>?</p>",
        "id": 193672657,
        "sender_full_name": "Nam",
        "timestamp": 1586629157
    },
    {
        "content": "<p><code>refl</code> says <code>x = x</code>. You want <code>x -&gt; x</code></p>",
        "id": 193672665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586629178
    },
    {
        "content": "<p>I mean, <code>refl</code> should work... (if we have the right instance)</p>",
        "id": 193672721,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629220
    },
    {
        "content": "<p>afterall <code>-&gt;</code> is a partial order</p>",
        "id": 193672730,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629243
    },
    {
        "content": "<p>a total order if you believe in classical logic</p>",
        "id": 193672735,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629266
    },
    {
        "content": "<p>but I don't think Mario will like the instance</p>",
        "id": 193672742,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629274
    },
    {
        "content": "<p>i tried <code>refl</code>. that didn't work. <code>simp</code> worked.</p>",
        "id": 193672747,
        "sender_full_name": "Nam",
        "timestamp": 1586629289
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">refl</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">testing</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">id</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>invalid reflexivity rule, result type must be an operator application\n</pre></div>",
        "id": 193672795,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629330
    },
    {
        "content": "<p>so I can't tag it with <code>refl</code>, but I don't understand why</p>",
        "id": 193672800,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629344
    },
    {
        "content": "<p>maybe <code>-&gt;</code> is special</p>",
        "id": 193672804,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629353
    },
    {
        "content": "<p>That's interesting! I was thinking along the same lines as you.</p>",
        "id": 193672805,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586629359
    },
    {
        "content": "<p>because sometimes you want extra hypotheses or something</p>",
        "id": 193672808,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629370
    },
    {
        "content": "<p>which will be <code>-&gt;</code></p>",
        "id": 193672809,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629373
    },
    {
        "content": "<p>But I'm still hung up in proving A x B = A x B in the other thread ;-)</p>",
        "id": 193672810,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586629375
    },
    {
        "content": "<p>so you don't want <code>-&gt;</code> to ever have other properties</p>",
        "id": 193672811,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629377
    },
    {
        "content": "<p>I guess <code>-&gt;</code> isn't a binary relation. But it should be on Prop, right?</p>",
        "id": 193672823,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586629417
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">refl&#39;</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">exact</span> <span class=\"n\">id</span><span class=\"o\">]</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">test</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">refl&#39;</span>\n</pre></div>",
        "id": 193672870,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629456
    },
    {
        "content": "<p>:P</p>",
        "id": 193672871,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586629458
    },
    {
        "content": "<p>I'm not impressed</p>",
        "id": 193672878,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586629493
    },
    {
        "content": "<p>that's not actually refl</p>",
        "id": 193672885,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586629508
    },
    {
        "content": "<p>Does <code>library_search</code> find it?</p>",
        "id": 193683988,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586646180
    },
    {
        "content": "<p>Apparently not...</p>",
        "id": 193684039,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586646246
    },
    {
        "content": "<p>Thanks Zulip for making this thread look recent.</p>\n<p>The CS people call this <code>id</code>.</p>",
        "id": 216308262,
        "sender_full_name": "Chris B",
        "timestamp": 1605071060
    }
]