[
    {
        "content": "<p>Hello. I am currently an undergraduate maths student at Imperial College London. I formalised  Gram-Schmidt Orthogonalization which seems not in mathlib yet and Professor Kevin Buzzard have looked at my code. I am wondering whether this topic is appropriate for mathlib. <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 275839374,
        "sender_full_name": "Jiale Miao",
        "timestamp": 1647625812
    },
    {
        "content": "<p>Welcome! Do you have a link to your code?</p>",
        "id": 275840000,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647626096
    },
    {
        "content": "<p>These classical matrix algorithms definitely belong in mathlib</p>",
        "id": 275840034,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647626115
    },
    {
        "content": "<p>It's here <a href=\"https://github.com/Biiiilly/Gram_Schmidt_Ortho\">https://github.com/Biiiilly/Gram_Schmidt_Ortho</a> and we can work on it more before a PR is coming. Billy is a 1st year UG who's been following my course and is now venturing off doing his own stuff. He originally did it for R^n but he's now trying a general inner product space.</p>",
        "id": 275841161,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647626559
    },
    {
        "content": "<p>I am particularly fond of the use of 37 in the construction.</p>",
        "id": 275841452,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647626699
    },
    {
        "content": "<p>Yeah, that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>37</mn></mrow><annotation encoding=\"application/x-tex\">37</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">37</span></span></span></span> is commonly overlooked in all informal linear algebra texts.</p>",
        "id": 275841925,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647626947
    },
    {
        "content": "<p>The trick was to avoid the issue that even though we're doing <code>‚àë i in finset.range(k+1),</code> in the definition of <code>GS (k+1)</code>, the equation compiler cannot immediately see that <code>i &lt; k+1</code> so it won't let you use <code>GS i</code>.</p>\n<p>In fact <span class=\"user-mention\" data-user-id=\"452140\">@Billy Miao</span> I see now that the base case and the inductive step are the same -- this is really a definition by strong induction. You can do </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Gram-Schmidt Process -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">GS</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">E</span><span class=\"o\">):</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">E</span>\n<span class=\"bp\">|</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"k\">if</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"k\">then</span> <span class=\"n\">proj</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E</span> <span class=\"o\">(</span><span class=\"n\">GS</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"n\">f</span> <span class=\"mi\">37</span>\n</code></pre></div>",
        "id": 275842772,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647627345
    },
    {
        "content": "<p>oh yes, that's much better now</p>",
        "id": 275842995,
        "sender_full_name": "Jiale Miao",
        "timestamp": 1647627463
    },
    {
        "content": "<p>I guess I could keep the <code>lemma GS_k_1</code> since I am gonna use it in the final proof</p>",
        "id": 275843561,
        "sender_full_name": "Jiale Miao",
        "timestamp": 1647627754
    },
    {
        "content": "<p>Presumably getting the full QR decomposition isn't a difficult step from here?</p>",
        "id": 275851921,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647631861
    },
    {
        "content": "<p>Does summing over <code>fin n</code> avoid the 37?</p>",
        "id": 275852173,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647632004
    },
    {
        "content": "<p>probably you would have to explicitly put <code>i.2</code> into the local context? (I think it uses <code>assumption</code> to check)</p>",
        "id": 275852914,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647632387
    },
    {
        "content": "<p>You will need <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.attach\">docs#finset.attach</a></p>",
        "id": 275875118,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1647646537
    },
    {
        "content": "<p>But <code>‚àë i in (finset.range n).attach</code> is <code>‚àë i : fin n</code> definitionally, isn't it?</p>",
        "id": 275876386,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647647827
    },
    {
        "content": "<p>Don't think so (<code>univ : finset {x // x &lt; n}</code> vs <code>univ : finset {x // x ‚àà finset.range n}</code>) but I see your point about summing over <code>fin n</code>.</p>",
        "id": 275877917,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1647649356
    },
    {
        "content": "<p>Hello,  I want to make a pull request to mathlib. Could somebody give me the permission to push a branch? My username is Biiiilly</p>",
        "id": 276037018,
        "sender_full_name": "Jiale Miao",
        "timestamp": 1647862365
    },
    {
        "content": "<p>Invite sent!</p>",
        "id": 276048939,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647868778
    },
    {
        "content": "<p>Thank you! Got it</p>",
        "id": 276061277,
        "sender_full_name": "Jiale Miao",
        "timestamp": 1647874153
    }
]