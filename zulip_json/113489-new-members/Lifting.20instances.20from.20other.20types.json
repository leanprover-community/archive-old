[
    {
        "content": "<p>I am defining a small wrapper type around another type and I would like my new type to \"inherit\" all of the instances of the other type<br>\nFor example,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">nat_plus</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_lift</span> <span class=\"n\">nat</span> <span class=\"n\">nat_plus</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">nat_plus.mk</span><span class=\"o\">⟩</span>\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">linear_order</span> <span class=\"n\">nat_plus</span> <span class=\"o\">:=</span> <span class=\"bp\">↑</span><span class=\"n\">nat.linear_order</span> <span class=\"c1\">-- Does not work</span>\n</code></pre></div>\n<p>Here I have wrapped the nat type and would like my new type to use nat's linear_order. Is there a way to do this using coe/lift and without having to wrap each individual field in every instance I would like to copy over?</p>",
        "id": 281726546,
        "sender_full_name": "Fingy Soupy",
        "timestamp": 1652121260
    },
    {
        "content": "<p>There are helpers like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.injective.add_comm_monoid\">docs#function.injective.add_comm_monoid</a></p>",
        "id": 281730331,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652122852
    },
    {
        "content": "<p>And <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_order.lift\">docs#linear_order.lift</a></p>",
        "id": 281730357,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652122862
    },
    {
        "content": "<p>This is perfect thanks, <br>\nIs there a reason there is no complete_lattice.lift?</p>",
        "id": 281734473,
        "sender_full_name": "Fingy Soupy",
        "timestamp": 1652124771
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.injective.complete_lattice\">docs#function.injective.complete_lattice</a></p>",
        "id": 281736474,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1652125617
    },
    {
        "content": "<p>Thanks! :) I guess I was looking in the wrong place</p>",
        "id": 281736876,
        "sender_full_name": "Fingy Soupy",
        "timestamp": 1652125836
    },
    {
        "content": "<p>There's an open issue about standardizing the names</p>",
        "id": 281741843,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652128306
    }
]