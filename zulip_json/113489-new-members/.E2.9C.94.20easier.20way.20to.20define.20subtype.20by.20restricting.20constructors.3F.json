[
    {
        "content": "<p>In terms of the MWE, I think I am trying to do something like this (not compiling):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">stuffFor</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">red</span> <span class=\"o\">:</span> <span class=\"n\">stuffFor</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"n\">blue</span> <span class=\"o\">:</span> <span class=\"n\">stuffFor</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"n\">inside</span> <span class=\"o\">{</span> <span class=\"n\">k</span> <span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">stuffFor</span> <span class=\"n\">k</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">stuffFor</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">stuffFor</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">onlyRed</span> <span class=\"o\">:</span> <span class=\"bp\">Σ</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">stuffFor</span> <span class=\"n\">k</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">red</span> <span class=\"o\">:</span> <span class=\"n\">onlyRed</span> <span class=\"n\">red</span>\n<span class=\"bp\">|</span> <span class=\"n\">inside</span> <span class=\"o\">{</span> <span class=\"n\">s</span> <span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">onlyRed</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">onlyRed</span> <span class=\"o\">(</span><span class=\"n\">inside</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">redStuffFor</span> <span class=\"o\">:=</span> <span class=\"bp\">Σ</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">subtype</span> <span class=\"o\">(</span><span class=\"n\">onlyRed</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 268150088,
        "sender_full_name": "Malvin Gattinger",
        "timestamp": 1642285064
    },
    {
        "content": "<p>Try this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">onlyRed</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">},</span> <span class=\"n\">stuffFor</span> <span class=\"n\">k</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">red</span> <span class=\"o\">:</span> <span class=\"n\">onlyRed</span> <span class=\"n\">red</span>\n<span class=\"bp\">|</span> <span class=\"n\">inside</span> <span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">stuffFor</span> <span class=\"n\">k</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">onlyRed</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">onlyRed</span> <span class=\"o\">(</span><span class=\"n\">inside</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">redStuffFor</span> <span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"n\">subtype</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">onlyRed</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 268150461,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1642285587
    },
    {
        "content": "<p>wonderful, thanks! I there now a way to make the k an explicit argument in the last line?</p>",
        "id": 268150744,
        "sender_full_name": "Malvin Gattinger",
        "timestamp": 1642286027
    },
    {
        "content": "<p>Replace <code>{k}</code> with <code>(k)</code></p>",
        "id": 268150805,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1642286097
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 268150831,
        "sender_full_name": "Malvin Gattinger",
        "timestamp": 1642286157
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"422703\">Malvin Gattinger</span> has marked this topic as resolved.</p>",
        "id": 268151486,
        "sender_full_name": "Notification Bot",
        "timestamp": 1642287134
    }
]