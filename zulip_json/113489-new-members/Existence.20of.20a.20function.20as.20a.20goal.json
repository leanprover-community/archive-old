[
    {
        "content": "<p>I have some goals of the form: there exists a function satisfying some conditions (e.g. commuting with two given functions). I can <code>have u : B â†’ C, </code> and build it how I would on paper, but then Lean forgets the properties of <code>u</code> I baked into the construction. </p>\n<p>Are there any resources on/general tips for accomplishing these sorts of goals? Can I <code>def</code> a function in the tactic state?</p>\n<p>For context, I'm trying to a formalize an assignment for the course I TA for.</p>",
        "id": 255884774,
        "sender_full_name": "Torger Olson",
        "timestamp": 1633195018
    },
    {
        "content": "<p>Use <code>let u := blah</code> (see <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#let\">tactic#let</a>) instead of have</p>",
        "id": 255884808,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633195062
    }
]