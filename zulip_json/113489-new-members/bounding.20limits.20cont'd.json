[
    {
        "content": "<p>Hello, Can I please get some help on what theorem I can use to prove this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">cau_lim_le</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">cau_seq</span> <span class=\"n\">ℝ</span> <span class=\"n\">abs</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">cau_seq</span> <span class=\"n\">ℝ</span> <span class=\"n\">abs</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">i</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">f.lim</span> <span class=\"bp\">≤</span> <span class=\"n\">g.lim</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n\n<p>Thank you!</p>",
        "id": 212595649,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1602093423
    },
    {
        "content": "<p>I'm not an expert on this part of the library so hopefully someone can chime in with  a better way, but I tried to use the lemma<br>\n<code>le_of_tendsto_of_tendsto</code> which phrases everything in terms of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.eventually\">docs#filter.eventually</a>, it takes a little work to line that up with the form you have though.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.metric_space.cau_seq_filter</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">cau_lim_le</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">cau_seq</span> <span class=\"n\">ℝ</span> <span class=\"n\">abs</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">cau_seq</span> <span class=\"n\">ℝ</span> <span class=\"n\">abs</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">i</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">f.lim</span> <span class=\"bp\">≤</span> <span class=\"n\">g.lim</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"n\">le_of_tendsto_of_tendsto</span> <span class=\"o\">(</span><span class=\"n\">cau_seq.tendsto_limit</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cau_seq.tendsto_limit</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">filter.eventually_le</span><span class=\"o\">,</span> <span class=\"n\">filter.eventually_at_top</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 212614057,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1602101998
    },
    {
        "content": "<p>Thank you!!!</p>",
        "id": 212633404,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1602114418
    },
    {
        "content": "<p><code>cau_seq.tendsto_limit</code> is the main way to deal with <code>cau_seq</code>s. E.g., this will require very few modifications once we port <code>exp</code> to analytic functions.</p>",
        "id": 212641505,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602123588
    },
    {
        "content": "<p>We have many theorems about <code>tendsto</code> and much less about <code>cau_seq</code>.</p>",
        "id": 212641552,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602123630
    }
]