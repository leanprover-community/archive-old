[
    {
        "content": "<p>I see in the topology file that writing things such as</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">continuous_mul</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"bp\">.</span><span class=\"n\">prod_mk</span> <span class=\"n\">hg</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>is equivalent to writing</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">by</span> <span class=\"n\">exact</span> <span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">continuous_mul</span> <span class=\"o\">(</span><span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"n\">prod_mk</span> <span class=\"n\">hf</span> <span class=\"n\">hg</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>and I was wondering: can someone point me to some tutorial or some topic where I can understand where this is coming from?<br>\nWhy does defining a lemma such as</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">continuous</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">continuous</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"err\">∘</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">assume</span> <span class=\"n\">s</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">hf</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"n\">s</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>allows to write <code>.comp</code> instead of the whole <code>continuous.comp</code>?</p>",
        "id": 202072128,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593166020
    },
    {
        "content": "<p>The dot notation trick works like this: if f has type <code>blah</code> or <code>blah R</code> or <code>blah a b c</code> then f.foo is short for blah.foo f</p>",
        "id": 202072667,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593166434
    },
    {
        "content": "<p>Or actually a little more generally it's short for blah.foo and then insert f in the first place where it makes sense</p>",
        "id": 202072734,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593166461
    },
    {
        "content": "<p>In your example hf has type continuous something so you can do hf.prod_mk</p>",
        "id": 202072789,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593166524
    },
    {
        "content": "<p>Ok thanks! Why can I avoid writing <code>by exact</code> when using this notation?</p>",
        "id": 202073119,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593166788
    },
    {
        "content": "<p>That's something different. <code>by</code> allows you to go from term mode to tactic mode, <code>exact</code> allows you to go from tactic mode to term mode. So  <code>by exact</code> goes from term mode to tactic mode back to term mode. Hence (I think) you can always just delete <code>by exact</code>.</p>",
        "id": 202073328,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1593166939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266440\">Shing Tak Lam</span> <a href=\"#narrow/stream/113489-new-members/topic/.2Ecomp.20.2Emul/near/202073328\">said</a>:</p>\n<blockquote>\n<p>That's something different. <code>by</code> allows you to go from term mode to tactic mode, <code>exact</code> allows you to go from tactic mode to term mode. So  <code>by exact</code> goes from term mode to tactic mode back to term mode. Hence (I think) you can always just delete <code>by exact</code>.</p>\n</blockquote>\n<p>Yes, this is correct (modulo some elaboration issue edge cases that shouldn't exist).</p>",
        "id": 202073370,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593166993
    },
    {
        "content": "<p>may I present the even stronger <code>by convert</code></p>",
        "id": 202073630,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1593167199
    }
]