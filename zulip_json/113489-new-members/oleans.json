[
    {
        "content": "<p>What should I read to understand how Lean decides whether an olean (presumably one fetched out of band) is acceptable for the .lean file it sits near? Is there a \"magic number\" or equivalent that takes into account the Lean interpreter version? Presumably there's a checksum on the file contents? The X to this Y is I'm recently [last 2 weeks?] noticing much more compilation happening when I use <code>leanproject</code> to fetch mathlib cached oleans (where I've made no changes).</p>",
        "id": 231684333,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610196
    },
    {
        "content": "<p>I don't think this is documented anywhere outside of the code. <a href=\"https://github.com/leanprover-community/lean/issues/140\">lean#140</a> by <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> would be where I'd start investigating.</p>",
        "id": 231685230,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1616610496
    },
    {
        "content": "<p>Thanks! The thing I particularly want to check is whether platform architecture is somehow part of it -- in particular I notice this on my M1, and not on my intel mac (though it's possible I've somehow broken the setup in an unrelated way). Will start by reading there, appreciated.</p>",
        "id": 231685371,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610556
    },
    {
        "content": "<p>As far as I know platform architecture isn't supposed to matter in Lean 3, so it's interesting if that somehow changed on M1.</p>",
        "id": 231685715,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1616610698
    },
    {
        "content": "<p>A haaaa I found it.</p>",
        "id": 231685817,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610729
    },
    {
        "content": "<p>Platform is not it, but platform caused the it. (Sorry, I should have found this by just opening the olean in vim)</p>",
        "id": 231685858,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610749
    },
    {
        "content": "<p>I had to start compiling lean myself because the version on GH somehow recently stopped working for reasons I didn't diagnose</p>",
        "id": 231685891,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610767
    },
    {
        "content": "<p>And .oleans contain not just the version but the <em>full</em> version it seems</p>",
        "id": 231685935,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610787
    },
    {
        "content": "<p>Specifically I see in the file: <code>3.28.0, commit 5a3bb32c05bc</code></p>",
        "id": 231685980,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610798
    },
    {
        "content": "<p>and I compiled some commit 1 or 2 commits past that probably</p>",
        "id": 231685999,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610808
    },
    {
        "content": "<p>Yep, this is something we've talked about removing in the past, but it hasn't been high on the list.</p>",
        "id": 231686108,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1616610844
    },
    {
        "content": "<p>Got it, ok, lesson learned, I'll go compile the release commit</p>",
        "id": 231686166,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616610862
    }
]