[
    {
        "content": "<p>I'm trying to consider two different group actions of G on A as examples of <code>mul_action</code>. If I define both as instances, then when I write <code>g â€¢ a</code>, it would not be clear which of the two actions it refers to. Does that mean I should just write <code>def action1 ... : mul_action G A</code> and <code>def action2 ... : mul_action G A</code>, and use the <code>.smul g a</code> method of each?</p>",
        "id": 241664775,
        "sender_full_name": "Winston Yin",
        "timestamp": 1622941975
    },
    {
        "content": "<p>When I write theorems about the two <code>mul_action</code>s, would I then have to explicitly provide <code>(ma1 ma2 : mul_action G A)</code> as variables?</p>",
        "id": 241664861,
        "sender_full_name": "Winston Yin",
        "timestamp": 1622942142
    },
    {
        "content": "<p>Don't consider two different actions of <code>G</code>. Instead introduce a type synonym for one of the actions.</p>",
        "id": 241665181,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1622942718
    },
    {
        "content": "<p>Could you elaborate on type synonym pls?</p>",
        "id": 241665413,
        "sender_full_name": "Winston Yin",
        "timestamp": 1622943148
    },
    {
        "content": "<p>An example would be <code>mul_action (opposite M) M</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/opposite.monoid.to_opposite_mul_action\">docs#opposite.monoid.to_opposite_mul_action</a>) vs <code>mul_action M M</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/monoid.to_mul_action\">docs#monoid.to_mul_action</a>)</p>",
        "id": 241677985,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622963972
    },
    {
        "content": "<p>Here <a href=\"https://leanprover-community.github.io/mathlib_docs/find/opposite\">docs#opposite</a> is the synonym</p>",
        "id": 241678043,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622964037
    }
]