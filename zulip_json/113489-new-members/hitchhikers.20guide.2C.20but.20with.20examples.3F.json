[
    {
        "content": "<p>I'm reading the \"The Hitchhikerâ€™s Guide to Logical Verification\". It's awesome, but are there any somewhat bigger examples to look at? Are there any small projects or that uses Lean that one can look at. </p>\n<p>(I found a coulple, one related to Soong and a masters work by  Sebastian Ullrich).</p>\n<p>EDIT: I was thinking about program verification examples.</p>",
        "id": 267717267,
        "sender_full_name": "Anders Larsson",
        "timestamp": 1641990781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430763\">@Anders Larsson</span> Are you looking for examples in CS or in maths direction?</p>",
        "id": 267717839,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1641991153
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/hitchhikers.20guide.2C.20but.20with.20examples.3F/near/267717839\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"430763\">Anders Larsson</span> Are you looking for examples in CS or in maths direction?</p>\n</blockquote>\n<p>I was thinking about program verification examples.</p>",
        "id": 267719432,
        "sender_full_name": "Anders Larsson",
        "timestamp": 1641992019
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430763\">@Anders Larsson</span> I have <a href=\"https://github.com/arthurpaulino/LeanMySQL/blob/ad41e5e35a5a0d4ac06625ffb8d77a392f9a2aa5/lib/DataFrame.lean#L80\">this small</a> example where I defined a <code>DataFrame</code> and one of its fields is a constraint of consistency.<br>\nThat rule of consistency requires a proof that every row has the same length and types as defined in the dataframe scheme.</p>\n<p>See how clean (and waaaaay less prone to bugs) <code>addRow</code> has become in comparison with <a href=\"https://github.com/arthurpaulino/LeanMySQL/blob/ad41e5e35a5a0d4ac06625ffb8d77a392f9a2aa5/lib/DataFrameOld.lean#L162\">this approach</a>. Notice the struggle to map the situations where I'd make Lean panic.</p>",
        "id": 267726928,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641995698
    },
    {
        "content": "<p>And in <a href=\"https://github.com/arthurpaulino/LeanMusic/blob/aac6cdc34fd7cc950898a150816ef2a505dc7fda/LeanMusic/Scales.lean#L9\">this example</a> I defined a musical scale shape as a sequence of intervals, with some constraints. Then I provided proofs that allowed me to invert scale shapes and guarantee the consistency of the resulting scale shapes. So I'm feeling pretty confident about that inversion operation <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 267728034,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641996167
    },
    {
        "content": "<p>Nice with small but meaningful examples.</p>",
        "id": 267737699,
        "sender_full_name": "Anders Larsson",
        "timestamp": 1642000401
    },
    {
        "content": "<p>You can find even more examples in Lean 4's <code>Std.Data</code> source code:<br>\n<a href=\"https://github.com/leanprover/lean4/tree/master/src/Std/Data\">https://github.com/leanprover/lean4/tree/master/src/Std/Data</a></p>",
        "id": 267742180,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642002254
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/113489-new-members/topic/hitchhikers.20guide.2C.20but.20with.20examples.3F/near/267742180\">said</a>:</p>\n<blockquote>\n<p>You can find even more examples in Lean 4's <code>Std.Data</code> source code:<br>\n<a href=\"https://github.com/leanprover/lean4/tree/master/src/Std/Data\">https://github.com/leanprover/lean4/tree/master/src/Std/Data</a></p>\n</blockquote>\n<p>That's interesting too. I'm not goining to confuse my brain with Lean4 the coming days, but hopefully in the future.</p>",
        "id": 267835961,
        "sender_full_name": "Anders Larsson",
        "timestamp": 1642061762
    }
]