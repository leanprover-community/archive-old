[
    {
        "content": "<p>Hi to everybody. I am a number theorist and I am quite new to the Lean community. I am reading/viewing various tutorials/videos to understand how it works, but after that I would like to try to prove something that is not already in mathlib. I found this list</p>\n<p><a href=\"https://github.com/kbuzzard/xena/blob/master/many_maths_challenges.txt\">https://github.com/kbuzzard/xena/blob/master/many_maths_challenges.txt</a></p>\n<p>Is it reasonable to try to set one of these goals (say in two or three months of  work) or it is something very hard? If I start working on some of these problems should I say it here?</p>\n<p>Thank you!</p>",
        "id": 209111978,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1599235494
    },
    {
        "content": "<p>Hi Riccardo! I wrote that list. People have been working on Dedekind domains and number fields in the mean time -- there is a thread about them <a href=\"#narrow/stream/116395-maths/topic/Dedekind.20domains\">here</a>. </p>\n<p>For mathematicians, it's much harder writing definitions of new structures than proving theorems about them, because defining structures is all about implementing specifications, and as mathematicians we're not trained to do that. They typically tell us a way to do ordered pairs in set theory, using the {{x},{x,y}} trick, and leave us how to figure out the rest ourselves.</p>\n<p>Group cohomology -- my student finished their thesis so group cohomology can certainly be done, but in doing so I think I learnt a better way to do it -- again this is an implementation issue. it would be hard right now to prove stuff like Hochschild-Serre because abelian categories in Lean have only just appeared, and a tactic for working with exact sequences is being worked on but I'm not sure that it's in mathlib yet. </p>\n<p>Galois theory is in full swing. It's pretty much all they talk about in <a class=\"stream\" data-stream-id=\"240192\" href=\"/#narrow/stream/240192-Berkeley-Lean-Seminar\">#Berkeley Lean Seminar</a> .</p>\n<p>Local fields -- I defined DVRs recently and I think it would be a very interesting project to start getting the basic theory of local fields into Lean. You will be able to get some kind of feeling as to where we are by looking at the (work in progress) file</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/blob/e80f2799aed8410574ceeec14877e5e1f555ae0e/src/ring_theory/discrete_valuation_ring.lean\">https://github.com/leanprover-community/mathlib/blob/e80f2799aed8410574ceeec14877e5e1f555ae0e/src/ring_theory/discrete_valuation_ring.lean</a></p>\n<p>In short, we next need to define the valuation on a DVR and prove basic stuff about it. I still haven't decided on the best way to define a local field. There's of course also the issue as to whether we allow R and C to be local fields.</p>\n<p>Galois cohomology -- the definition is just group cohomology and then profinite cohomology, and then everything else is way off because it somehow relies on all of the other stuff.</p>\n<p>Elliptic curves -- Cremona and I defined the group law on an elliptic curve over k but the equations are so unwieldy that we ran out of memory proving associativity. Of course the correct way to do it is via Picard groups, but we'll get to them later. </p>\n<p>Algebra: we now have eigenspaces and generalised eigenspaces. We still don't have the structure theorem for f.g. modules over a PID but it might be the case that <span class=\"user-mention\" data-user-id=\"118107\">@Amelia Livingston</span> will be doing this for her MSc project with me next year -- or did we decide on something else Amelia? Ashvni is doing Iwasawa theory so she'll need the structure theorem for modules over a certain 2-d local ring (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mi>p</mi></msub><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">[</mo><mi>T</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\Z_p[[T]]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">â€‹</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span></span></span></span>) at some point.</p>\n<p>Algebraic topology -- I don't know why nobody has defined homology and cohomology of a top space; I'm not an expert in this area and it might be worth talking to others about this.</p>\n<p>Representation theory -- I think people are working on this. <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> what's the status of rep theory in Lean?</p>\n<p>Modular forms we have essentially nothing. Proving finite-dimensionality might be hard. </p>\n<p>On top of all that though, there are schemes. These were defined a week or so ago in Lean and there are plenty of theorems which need proving, for example the fact that Gamma and Spec are adjoint functors from rings to locally ringed spaces. <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> you had proved that for the old-fashioned definition -- do you have to start again from scratch with the new definition?</p>\n<p>I should tell you that I learnt Lean by doing some undergraduate level stuff and then defining schemes in Lean.</p>",
        "id": 209114342,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599236885
    },
    {
        "content": "<p>We haven't decided yet on MSc project but  the structure theorem is at <a href=\"https://github.com/101damnations/fg_over_pid\">this</a> state currently, 'a few' intermediate sorrys left in 'submodule of free module over PID is free' and 'torsion free over PID implies free'; my first job is to factor out lemmas and document, it's extremely messy rn and some of the functions have profane names</p>",
        "id": 209120117,
        "sender_full_name": "Amelia Livingston",
        "timestamp": 1599240337
    },
    {
        "content": "<p>Oh wow you've done tons!</p>",
        "id": 209120481,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599240525
    },
    {
        "content": "<p>Thank you for the answers! I will have a look about local fields and see if there is something doable! In any case I would be happy to do anything in number theory/algebraic geometry.</p>",
        "id": 209125589,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1599243661
    }
]