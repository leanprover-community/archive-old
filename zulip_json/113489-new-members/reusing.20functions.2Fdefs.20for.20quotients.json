[
    {
        "content": "<p>Suppose I make a quotient type  <code>formulae</code> based on some satisfaction relation</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.set</span> <span class=\"n\">data.stream</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">open</span> <span class=\"n\">set</span> <span class=\"n\">stream</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">base_formula</span> <span class=\"o\">(</span><span class=\"n\">AP</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">base_formula</span>\n<span class=\"bp\">|</span> <span class=\"n\">atom</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">AP</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">base_formula</span>\n<span class=\"bp\">|</span> <span class=\"n\">conj</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">base_formula</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">base_formula</span>\n<span class=\"bp\">|</span> <span class=\"n\">neg</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">base_formula</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">base_formula</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">inf_word</span> <span class=\"o\">(</span><span class=\"n\">AP</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>  <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">stream</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">AP</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sat</span>  <span class=\"o\">{</span><span class=\"n\">AP</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n<span class=\"o\">:</span> <span class=\"n\">inf_word</span> <span class=\"n\">AP</span> <span class=\"bp\">→</span> <span class=\"n\">base_formula</span> <span class=\"n\">AP</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">my_eqv_rel</span> <span class=\"o\">{</span><span class=\"n\">AP</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>  <span class=\"o\">:</span> <span class=\"n\">base_formula</span> <span class=\"n\">AP</span> <span class=\"bp\">→</span> <span class=\"n\">base_formula</span> <span class=\"n\">AP</span> <span class=\"bp\">→</span>  <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">P</span> <span class=\"n\">Q</span><span class=\"o\">,</span>\n<span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"bp\">|</span> <span class=\"n\">sat</span> <span class=\"n\">σ</span> <span class=\"n\">P</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"bp\">|</span> <span class=\"n\">sat</span> <span class=\"n\">σ</span> <span class=\"n\">Q</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">base_formula_rel</span>  <span class=\"o\">(</span><span class=\"n\">AP</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">base_formula</span> <span class=\"n\">AP</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n <span class=\"o\">{</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">my_eqv_rel</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">formula</span> <span class=\"o\">(</span><span class=\"n\">AP</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">base_formula_rel</span> <span class=\"n\">AP</span><span class=\"o\">)</span>\n</code></pre></div>\n\n<p>I now want to prove some theorems about the satisfaction of formulae but I don't want to define a new satisfaction relation for <code>formula</code>, I want to use the same one I used to define the quotient type. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">new</span> <span class=\"o\">{</span><span class=\"n\">AP</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">inf_word</span> <span class=\"n\">AP</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">Φ</span> <span class=\"o\">:</span> <span class=\"n\">formula</span> <span class=\"n\">AP</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"c\">/-</span><span class=\"cm\"> something to do with sat σ Φ --/</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n<p>Is this possible? Or is this misguided</p>",
        "id": 215005992,
        "sender_full_name": "Logan Murphy",
        "timestamp": 1603994776
    },
    {
        "content": "<p>I haven't been able to find a way to write a coercion from a quotient to its base type, does that exist?</p>",
        "id": 215006164,
        "sender_full_name": "Logan Murphy",
        "timestamp": 1603994878
    }
]