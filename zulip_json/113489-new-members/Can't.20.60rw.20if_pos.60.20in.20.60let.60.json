[
    {
        "content": "<p>Ok, I've got another one I don't know how to fix:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">ports</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">list</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">empty</span><span class=\"o\">)</span>\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_append</span> <span class=\"n\">ports</span> <span class=\"o\">:=</span> <span class=\"o\">‚ü®</span><span class=\"n\">list.has_append.append</span><span class=\"o\">‚ü©</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">merge</span> <span class=\"o\">(</span><span class=\"n\">first</span> <span class=\"n\">last</span> <span class=\"o\">:</span> <span class=\"n\">ports</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ports</span> <span class=\"o\">:=</span>\n    <span class=\"k\">let</span> <span class=\"n\">p'</span> <span class=\"o\">:=</span> <span class=\"n\">last.zip_with</span> <span class=\"o\">(</span><span class=\"bp\">&lt;|&gt;</span><span class=\"o\">)</span> <span class=\"n\">first</span> <span class=\"k\">in</span>\n    <span class=\"k\">if</span> <span class=\"n\">first.length</span> <span class=\"bp\">‚â§</span> <span class=\"n\">last.length</span> <span class=\"k\">then</span> <span class=\"n\">p'</span> <span class=\"k\">else</span> <span class=\"n\">p'</span> <span class=\"bp\">++</span> <span class=\"n\">list.repeat</span> <span class=\"n\">none</span> <span class=\"o\">(</span><span class=\"n\">first.length</span> <span class=\"bp\">-</span> <span class=\"n\">last.length</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ports</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">merge</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">list.repeat</span> <span class=\"n\">none</span> <span class=\"n\">p.length</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">merge</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">list.length</span> <span class=\"n\">p</span> <span class=\"bp\">‚â§</span> <span class=\"n\">list.length</span> <span class=\"o\">(</span><span class=\"n\">list.repeat</span> <span class=\"o\">(</span><span class=\"n\">none</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">empty</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">list.length</span> <span class=\"n\">p</span><span class=\"o\">)),</span> <span class=\"k\">from</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I would like to apply <code>rw if_pos h</code>, but get an error,  even though I've literally copy-pasted the hypothesis <code>h</code> out of the goal.<br>\nHow can I solve this?</p>",
        "id": 223237517,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1611068341
    },
    {
        "content": "<p>The main trick is is to read the webpage <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>.</p>",
        "id": 223238412,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611068555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Can't.20.60rw.20if_pos.60.20in.20.60let.60/near/223238412\">said</a>:</p>\n<blockquote>\n<p>The main trick is is to read the webpage <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>.</p>\n</blockquote>\n<p>Haha sorry, I've updated the example above.</p>",
        "id": 223239807,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1611068951
    },
    {
        "content": "<p>Using <code>let</code> like this is asking for trouble.</p>",
        "id": 223240070,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611069061
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Can't.20.60rw.20if_pos.60.20in.20.60let.60/near/223240070\">said</a>:</p>\n<blockquote>\n<p>Using <code>let</code> like this is asking for trouble.</p>\n</blockquote>\n<p>I've heard this before. What is the right way to use <code>let</code> then, and how can I circumvent it in this example?</p>",
        "id": 223240174,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1611069110
    },
    {
        "content": "<p>What about</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">merge</span> <span class=\"o\">(</span><span class=\"n\">first</span> <span class=\"n\">last</span> <span class=\"o\">:</span> <span class=\"n\">ports</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ports</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">last.zip_with</span> <span class=\"o\">(</span><span class=\"bp\">&lt;|&gt;</span><span class=\"o\">)</span> <span class=\"n\">first</span><span class=\"o\">)</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">first.length</span> <span class=\"bp\">‚â§</span> <span class=\"n\">last.length</span> <span class=\"k\">then</span> <span class=\"n\">list.nil</span> <span class=\"k\">else</span> <span class=\"n\">list.repeat</span> <span class=\"n\">none</span> <span class=\"o\">(</span><span class=\"n\">first.length</span> <span class=\"bp\">-</span> <span class=\"n\">last.length</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 223240326,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611069178
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Can't.20.60rw.20if_pos.60.20in.20.60let.60/near/223240326\">said</a>:</p>\n<blockquote>\n<p>What about</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">merge</span> <span class=\"o\">(</span><span class=\"n\">first</span> <span class=\"n\">last</span> <span class=\"o\">:</span> <span class=\"n\">ports</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ports</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">last.zip_with</span> <span class=\"o\">(</span><span class=\"bp\">&lt;|&gt;</span><span class=\"o\">)</span> <span class=\"n\">first</span><span class=\"o\">)</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">first.length</span> <span class=\"bp\">‚â§</span> <span class=\"n\">last.length</span> <span class=\"k\">then</span> <span class=\"n\">list.nil</span> <span class=\"k\">else</span> <span class=\"n\">list.repeat</span> <span class=\"n\">none</span> <span class=\"o\">(</span><span class=\"n\">first.length</span> <span class=\"bp\">-</span> <span class=\"n\">last.length</span><span class=\"o\">))</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Ah yes, <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>üèº‚Äç‚ôÄÔ∏è Thanks :D</p>",
        "id": 223240513,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1611069261
    }
]