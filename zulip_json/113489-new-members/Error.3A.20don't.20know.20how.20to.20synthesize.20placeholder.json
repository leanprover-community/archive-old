[
    {
        "content": "<p>What is wrong here? I get \"don't know how to synthesize placeholder\" error.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span>  <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">sub_nonneg</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">mul_nonneg_of_nonpos_of_nonpos</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"n\">sub_nonpos</span> <span class=\"n\">hab</span><span class=\"o\">)</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n     <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 252941517,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1631401262
    },
    {
        "content": "<p>Can you post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>? (All imports etc). It makes life easier for everyone else and it's the norm here.</p>",
        "id": 252941544,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631401308
    },
    {
        "content": "<p>This is this file: <a href=\"https://github.com/leanprover-community/tutorials/blob/master/src/exercises/02_iff_if_and.lean\">https://github.com/leanprover-community/tutorials/blob/master/src/exercises/02_iff_if_and.lean</a>. The only import is <code>import data.real.basic</code> as far as I can tell. So I guess the MWE is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span>  <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">sub_nonneg</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">mul_nonneg_of_nonpos_of_nonpos</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"n\">sub_nonpos</span> <span class=\"n\">hab</span><span class=\"o\">)</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n     <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 252941702,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1631401492
    },
    {
        "content": "<p>Ah, it looks like it's the comma in <code>calc</code>... My bad!</p>",
        "id": 252941795,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1631401581
    },
    {
        "content": "<p>After deleting the comma and <code>hab</code> in <code>rwas sub_nonpos hab</code> everything works.</p>",
        "id": 252941840,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1631401655
    },
    {
        "content": "<p>Yeah, sometimes the errors in <code>calc</code> mode can be pretty incomprehensible!</p>",
        "id": 252941918,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631401746
    }
]