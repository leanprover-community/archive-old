[
    {
        "content": "<p>Does lean or mathlib have anything to search theorems? Something like entering an expression with some metavariables and finding a definition whose type contains a subexpression that can unify with it.</p>",
        "id": 190268024,
        "sender_full_name": "ohhaimark",
        "timestamp": 1583923024
    },
    {
        "content": "<p>afaik, there's <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#library_search\" target=\"_blank\" title=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#library_search\">library_search</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#hint\" target=\"_blank\" title=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#hint\">hint</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#suggest\" target=\"_blank\" title=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#suggest\">suggest</a>.</p>",
        "id": 190269183,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1583924138
    },
    {
        "content": "<p>lastly, there's also <a href=\"https://leanprover-community.github.io/mathlib_docs/commands.html#find\" target=\"_blank\" title=\"https://leanprover-community.github.io/mathlib_docs/commands.html#find\">#find</a></p>",
        "id": 190269295,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1583924244
    }
]