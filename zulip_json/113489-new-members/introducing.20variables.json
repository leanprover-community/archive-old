[
    {
        "content": "<p>If I have a Prop that says <code>∃ a b c, p</code>, whats the quickest way of introducing a b c and p? In tactic mode, I have to use <code>cases</code> three times to obtain all of them.</p>",
        "id": 129956826,
        "sender_full_name": "Ali Sever",
        "timestamp": 1532034398
    },
    {
        "content": "<p>mathlib has <code>rcases</code> for this</p>",
        "id": 129957010,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532034565
    },
    {
        "content": "<p><code>rcases h with ⟨a, b, c, hp⟩</code></p>",
        "id": 129957025,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532034585
    },
    {
        "content": "<p>there is also <code>rintro</code> for introducing and casing at the same time, <code>rintro ⟨a, b, c, hp⟩</code> takes a goal of the form <code>(∃ a b c, p) -&gt; q</code> and splits off the parts and has <code>q</code> as subgoal</p>",
        "id": 129957121,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532034653
    },
    {
        "content": "<p>Is there a similar thing for term mode?</p>",
        "id": 129957266,
        "sender_full_name": "Ali Sever",
        "timestamp": 1532034770
    },
    {
        "content": "<p><code>let ⟨a, b, c, hp⟩ := h in ...</code> is the equivalent of <code>rcases</code> and <code>λ ⟨a, b, c, hp⟩,</code> is the equivalent of <code>rintro</code>. Neither of those require mathlib</p>",
        "id": 129957292,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532034818
    },
    {
        "content": "<p>I have <code>def col (a b c : point) : Prop := B a b c ∨ B b c a ∨ B c a b</code>. I want to prove <code>col a b c ∧ (some other stuff) → col a' b' c'</code>. Depending on the cases of <code>col a b c</code>, all the proofs are the same. So can I name <code>{a, b, c} = {x, y, z}</code> such that <code>B x y z</code> is true. So that when I prove <code>B x' y' z'</code>,  I will have proven <code>col a' b' c'</code>?</p>",
        "id": 130049223,
        "sender_full_name": "Ali Sever",
        "timestamp": 1532169150
    },
    {
        "content": "<p>what is the relation between <code>x',y',z'</code> and <code>a',b',c'</code>?</p>",
        "id": 130049272,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532169276
    },
    {
        "content": "<p>One option is to prove as a lemma/<code>have</code> something like <code>\\forall x y z, B x y z ∧ (some other stuff) → B x' y' z'</code> (where presumably <code>x'</code> is a function of <code>x</code> or something), and then instantiate it three times for the final proof</p>",
        "id": 130049324,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532169429
    },
    {
        "content": "<p>I can prove <code>B a b c → B a' b' c'</code> for any order of a,b and c. So if <code>x  = a</code>, <code>x' = a'</code>.</p>",
        "id": 130049325,
        "sender_full_name": "Ali Sever",
        "timestamp": 1532169443
    },
    {
        "content": "<p>Ah, and then when I do cases, I can just use <code>lemma _ _ _</code> and let lean guess the order.</p>",
        "id": 130049374,
        "sender_full_name": "Ali Sever",
        "timestamp": 1532169524
    },
    {
        "content": "<p>Depending on how often you need this, it might even be worth making a lemma to abstract this proof pattern</p>",
        "id": 130049381,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532169560
    },
    {
        "content": "<p>By the way, from your two questions I have a pretty good idea what you are working on ;)</p>",
        "id": 130049389,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532169601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120256\">@Ali Sever</span> Are you aware of <a href=\"http://geocoq.github.io/GeoCoq/\" target=\"_blank\" title=\"http://geocoq.github.io/GeoCoq/\">http://geocoq.github.io/GeoCoq/</a>?</p>",
        "id": 130050497,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532172016
    },
    {
        "content": "<p>wow that's a nice project page</p>",
        "id": 130050501,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532172045
    },
    {
        "content": "<p>Yes, mathlib could use a webdesigner</p>",
        "id": 130050605,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532172358
    },
    {
        "content": "<p>Yes, I looked around and I found out they were using the same book I was. I don't know exactly how Coq works, but when I get better at lean, I hope to write some interesting tactics.</p>",
        "id": 130050654,
        "sender_full_name": "Ali Sever",
        "timestamp": 1532172428
    },
    {
        "content": "<p>But the message for Ali was rather more: beware that formalizing elementary geometry can be a lifetime project, especially because of the kind of symmetry issues that appeared in your question. See in particular <a href=\"https://hal.inria.fr/hal-00989781v2\" target=\"_blank\" title=\"https://hal.inria.fr/hal-00989781v2\">https://hal.inria.fr/hal-00989781v2</a></p>",
        "id": 130050695,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532172525
    }
]