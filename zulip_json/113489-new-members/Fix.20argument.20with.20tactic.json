[
    {
        "content": "<p>I have defined something along the lines below. Then I noticed that in many cases I provide the <code>context.nth i = some σ</code> argument of <code>var</code> simply with <code>by simp</code>, like in the example at the end. Due to this, I want to define some <code>var'</code> to be <code>var</code> in which the second explicit argument is fixed as <code>by simp</code>. Can this be done?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">@[derive decidable_eq]</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">type</span>\n<span class=\"bp\">|</span> <span class=\"n\">ground</span> <span class=\"o\">:</span> <span class=\"n\">type</span>\n<span class=\"bp\">|</span> <span class=\"n\">arrow</span> <span class=\"o\">:</span> <span class=\"n\">type</span> <span class=\"bp\">→</span> <span class=\"n\">type</span> <span class=\"bp\">→</span> <span class=\"n\">type</span>\n\n<span class=\"kd\">@[reducible]</span>\n<span class=\"kd\">def</span> <span class=\"n\">context</span> <span class=\"o\">:=</span> <span class=\"n\">list</span> <span class=\"n\">type</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">context</span> <span class=\"bp\">→</span> <span class=\"n\">type</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">var</span> <span class=\"o\">{</span><span class=\"n\">ctx</span> <span class=\"o\">:</span> <span class=\"n\">context</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">ctx.nth</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"n\">ctx</span> <span class=\"n\">σ</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">type</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">v₀</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"o\">[</span><span class=\"n\">σ</span><span class=\"o\">,</span> <span class=\"n\">τ</span><span class=\"o\">]</span> <span class=\"n\">σ</span> <span class=\"o\">:=</span> <span class=\"n\">term.var</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 236382717,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1619546750
    },
    {
        "content": "<p>Notations can do that:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">notation</span> <span class=\"bp\">`#`</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">term.var</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">type</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">v₀</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"o\">[</span><span class=\"n\">σ</span><span class=\"o\">,</span> <span class=\"n\">τ</span><span class=\"o\">]</span> <span class=\"n\">σ</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 236383261,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1619546987
    },
    {
        "content": "<p>Right, thanks!</p>",
        "id": 236384081,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1619547310
    }
]