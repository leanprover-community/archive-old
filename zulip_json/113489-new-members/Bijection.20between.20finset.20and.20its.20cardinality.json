[
    {
        "content": "<p>Hi everyone,</p>\n<p>I'm trying to find a lemma that says there exists a bijection between a finset and its cardinality. I saw in the library that there exists what I want for fintypes: <code>fintype.equiv_fin T</code> where <code>T</code> is a fintype. But <code>finset.equiv_fin</code> doesn't exist.<br>\nIs there something like this for finsets, or is my best bet to use <code>fintype.of_finset</code> to convert it into a fintype and work from there? <br>\nI want finsets in particular because I'm working with finite subsets of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span> and I want to take the min/Inf of said sets (which, unluckily, seem to only take in finsets).</p>\n<p>Thanks!</p>",
        "id": 233690953,
        "sender_full_name": "Minsung C",
        "timestamp": 1617901714
    },
    {
        "content": "<p>Can you prove a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> showing what type you want out?</p>",
        "id": 233691684,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617901964
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite.fin_embedding\">docs#set.finite.fin_embedding</a> is probably close to what you want</p>",
        "id": 233692100,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617902096
    },
    {
        "content": "<blockquote>\n<p>bijection between a finset and its cardinality</p>\n</blockquote>\n<p>An equiv is between types, so you'd have to coerce the finset to a Sort (and the cardinality to a Sort, which would be <code>fin n</code>) to have an equiv. Which is exactly what your thought of <code>fintype.of_finset</code> combined with <code>fintype.equiv_fin</code> would give you.</p>",
        "id": 233697106,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1617903786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113489-new-members/topic/Bijection.20between.20finset.20and.20its.20cardinality/near/233697106\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>bijection between a finset and its cardinality</p>\n</blockquote>\n<p>An equiv is between types, so you'd have to coerce the finset to a Sort (and the cardinality to a Sort, which would be <code>fin n</code>) to have an equiv. Which is exactly what your thought of <code>fintype.of_finset</code> combined with <code>fintype.equiv_fin</code> would give you.</p>\n</blockquote>\n<p>This was exactly the issue I had while trying to make an mwe for Eric. Still getting used to the whole sets vs types thing. Will try this out...thank you!</p>",
        "id": 233698626,
        "sender_full_name": "Minsung C",
        "timestamp": 1617904269
    },
    {
        "content": "<p><code>fintype.equiv_fin (s : set _)</code> may be what you're after, for some finset <code>s</code></p>",
        "id": 233698954,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617904381
    }
]