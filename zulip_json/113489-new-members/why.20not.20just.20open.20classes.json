[
    {
        "content": "<p>Why in stdlib a lot of custom selector functions from classes instead of just openings of them?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">has_to_string</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">to_string</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">string</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">to_string</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_to_string</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">string</span> <span class=\"o\">:=</span>\n<span class=\"n\">has_to_string.to_string</span>\n</code></pre></div>\n<p>instead of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">has_to_string</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">to_string</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">string</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">has_to_string</span>\n</code></pre></div>",
        "id": 226853334,
        "sender_full_name": "Kana",
        "timestamp": 1613671673
    },
    {
        "content": "<p>So that <code>to_string</code> is available everywhere without having to do <code>open has_to_string</code> in your file.</p>",
        "id": 226853795,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1613671857
    },
    {
        "content": "<p><code>open</code> is local to the file it is in.</p>",
        "id": 226853829,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1613671873
    },
    {
        "content": "<p>I understood, thanks. Are there any ways to <code>include</code> content of one namespace into current?</p>",
        "id": 226854378,
        "sender_full_name": "kana",
        "timestamp": 1613672086
    },
    {
        "content": "<p><code>export</code> perhaps?</p>",
        "id": 226855552,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613672509
    }
]