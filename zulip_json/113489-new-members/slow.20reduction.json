[
    {
        "content": "<p>I have a <code>#reduce</code> that's leading to \"(deterministic) timeout\" and I'm wondering what I can do to find out what's taking so long. Can I <code>#reduce</code> step-by-step?</p>",
        "id": 134782780,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538094371
    },
    {
        "content": "<p>Unfortunately no. <code>#reduce</code> is not really intended for serious use</p>",
        "id": 134783570,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538095579
    },
    {
        "content": "<p>It turns out that unfolding a proof down to axioms is actually kind of expensive :)</p>",
        "id": 134783577,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538095617
    },
    {
        "content": "<p>Hmm, well it's also breaking my examples/tests, since it can't even prove things by <code>rfl</code> at very small input sizes, and I can't figure out why, because the code seems fairly straightforward.</p>",
        "id": 134783646,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538095737
    },
    {
        "content": "<p>this is also not unusual</p>",
        "id": 134783655,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538095764
    },
    {
        "content": "<p>I think <code>theorem nat.prime 5 := dec_trivial</code> times out</p>",
        "id": 134783660,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538095788
    },
    {
        "content": "<p>it depends on what numerical functions you are calling</p>",
        "id": 134783706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538095807
    },
    {
        "content": "<p>I guess it would be nice to have bytecode-based tests for quick dumb sanity checks</p>",
        "id": 134783720,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538095844
    },
    {
        "content": "<p>You should use <code>#eval</code> for that</p>",
        "id": 134783731,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538095872
    },
    {
        "content": "<p>I do, I just wish I could write something that asserts on the result rather than simply printing it</p>",
        "id": 134783741,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538095895
    },
    {
        "content": "<p>you can use <code>run_cmd</code>: </p>\n<div class=\"codehilite\"><pre><span></span>run_cmd guard (2 + 2 = 4)\nrun_cmd guard (2 + 2 = 5) -- failed\n</pre></div>",
        "id": 134784254,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538096770
    },
    {
        "content": "<p>Perfect, thanks!</p>",
        "id": 134784267,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538096872
    }
]