[
    {
        "content": "<p>Is there a way to have Lean tell me, whether my project contains any errors/sorrys?<br>\nI use Lean in VS Code and I don't know how I can be sure, that all files are checked and error/sorry-free.<br>\nI'm hoping there's some invocation from the command line that plainly says something like \"0 errors / 0 sorrys\".</p>",
        "id": 232578077,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617192292
    },
    {
        "content": "<p><code>leanproject build</code></p>",
        "id": 232578331,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617192418
    },
    {
        "content": "<p>or <code>lean --make src/</code></p>",
        "id": 232578348,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617192427
    },
    {
        "content": "<p>Of course you can also <code>grep sorry</code> if you want to quickly find sorrys, but that won't find errors <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 232578442,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617192475
    },
    {
        "content": "<p>Ahhh, how can I avoid checking all of Mathlib in the process? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 232578526,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617192503
    },
    {
        "content": "<p><code>leanproject get-mathlib-cache</code></p>",
        "id": 232578661,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617192571
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Check.20Project.20is.20Error-Free/near/232578661\">said</a>:</p>\n<blockquote>\n<p><code>leanproject get-mathlib-cache</code></p>\n</blockquote>\n<p>Hmmm, that didn't work for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">marcus</span><span class=\"bp\">@</span><span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"n\">ls</span>\n<span class=\"n\">README.md</span>   <span class=\"n\">_target</span>     <span class=\"n\">leanpkg.path</span>    <span class=\"n\">leanpkg.toml</span>    <span class=\"n\">src</span>\n\n<span class=\"n\">marcus</span><span class=\"bp\">@</span><span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n\n<span class=\"n\">marcus</span><span class=\"bp\">@</span><span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"n\">leanproject</span> <span class=\"n\">build</span>\n<span class=\"n\">Building</span> <span class=\"n\">project</span> <span class=\"n\">Code</span>\n<span class=\"n\">configuring</span> <span class=\"n\">Code</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">trying</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"mi\">22</span><span class=\"n\">e34370e62f4338d73889dc93094829439eb420</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach 22e34370e62f4338d73889dc93094829439eb420    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"mi\">22</span><span class=\"n\">e34370e</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">big_operators</span><span class=\"bp\">/</span><span class=\"n\">basic</span><span class=\"o\">):</span> <span class=\"n\">lemmas</span> <span class=\"n\">prod_range_add</span><span class=\"o\">,</span> <span class=\"n\">sum_range_add</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">6484</span><span class=\"o\">)</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">lean</span> <span class=\"c1\">--make src</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">marcus</span><span class=\"bp\">/</span><span class=\"n\">Code</span><span class=\"bp\">/</span><span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">scc.lean</span><span class=\"o\">:</span> <span class=\"n\">parsing</span> <span class=\"n\">at</span> <span class=\"n\">line</span>\n<span class=\"bp\">```</span>\n</code></pre></div>",
        "id": 232579224,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617192822
    },
    {
        "content": "<p>Do I need to let it do Mathlib once, and then I'm set for future builds?</p>",
        "id": 232579319,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617192855
    },
    {
        "content": "<p>did you modify files in mathlib, by chance?</p>",
        "id": 232579335,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617192861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Check.20Project.20is.20Error-Free/near/232579335\">said</a>:</p>\n<blockquote>\n<p>did you modify files in mathlib, by chance?</p>\n</blockquote>\n<p>Not that I'm aware of.</p>",
        "id": 232579365,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617192877
    },
    {
        "content": "<p>try <code>lean --old --make src/</code></p>",
        "id": 232579400,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617192902
    },
    {
        "content": "<p>that should trick lean into using the <code>olean</code>s from the cache</p>",
        "id": 232579445,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617192918
    },
    {
        "content": "<p><code>leanproject -f get-mathlib-cache</code> perhaps?</p>",
        "id": 232579448,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617192918
    },
    {
        "content": "<p>(And/or nuke your <code>_target</code> directory in case you did accidentally modify mathlib itself)</p>",
        "id": 232579548,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617192958
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Check.20Project.20is.20Error-Free/near/232579400\">said</a>:</p>\n<blockquote>\n<p>try <code>lean --old --make src/</code></p>\n</blockquote>\n<p>Ok, that simply completed without any output. I'm guessing that means everything is fine? ¯\\_(ツ)_/¯</p>",
        "id": 232579635,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617192981
    },
    {
        "content": "<p>Well... I would say that anytime you've run it with <code>--old</code> you don't know anything. :-)</p>",
        "id": 232579683,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617193005
    },
    {
        "content": "<p>That is only really intended to speed things up while hacking around, not for being sure everything is working.</p>",
        "id": 232579736,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617193030
    },
    {
        "content": "<p>I would just remove the entire <code>_target</code> directory and <code>leanproject build</code> in the root of your project.</p>",
        "id": 232579794,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617193066
    },
    {
        "content": "<p>Don't you need <code>leanproject get-mathlib-cache</code> before the <code>leanproject build</code>?</p>",
        "id": 232579978,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617193155
    },
    {
        "content": "<p>So I removed <code>_target</code> but still get:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">marcus</span><span class=\"bp\">@</span><span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"n\">leanproject</span> <span class=\"n\">build</span>\n<span class=\"n\">Building</span> <span class=\"n\">project</span> <span class=\"n\">Code</span>\n<span class=\"n\">configuring</span> <span class=\"n\">Code</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"n\">Cloning</span> <span class=\"n\">into</span> <span class=\"bp\">'</span><span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib'...</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">1223</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">1223</span><span class=\"bp\">/</span><span class=\"mi\">1223</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">615</span><span class=\"bp\">/</span><span class=\"mi\">615</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Total</span> <span class=\"mi\">136788</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">797</span><span class=\"o\">),</span> <span class=\"n\">reused</span> <span class=\"mi\">904</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">606</span><span class=\"o\">),</span> <span class=\"n\">pack</span><span class=\"bp\">-</span><span class=\"n\">reused</span> <span class=\"mi\">135565</span>\n<span class=\"n\">Receiving</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">136788</span><span class=\"bp\">/</span><span class=\"mi\">136788</span><span class=\"o\">),</span> <span class=\"mi\">58</span><span class=\"bp\">.</span><span class=\"mi\">45</span> <span class=\"n\">MiB</span> <span class=\"bp\">|</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">70</span> <span class=\"n\">MiB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">Resolving</span> <span class=\"n\">deltas</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">107855</span><span class=\"bp\">/</span><span class=\"mi\">107855</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach 22e34370e62f4338d73889dc93094829439eb420    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"mi\">22</span><span class=\"n\">e34370e</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">big_operators</span><span class=\"bp\">/</span><span class=\"n\">basic</span><span class=\"o\">):</span> <span class=\"n\">lemmas</span> <span class=\"n\">prod_range_add</span><span class=\"o\">,</span> <span class=\"n\">sum_range_add</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">6484</span><span class=\"o\">)</span>\n<span class=\"n\">configuring</span> <span class=\"n\">Code</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">trying</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"mi\">22</span><span class=\"n\">e34370e62f4338d73889dc93094829439eb420</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach 22e34370e62f4338d73889dc93094829439eb420    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"mi\">22</span><span class=\"n\">e34370e</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">big_operators</span><span class=\"bp\">/</span><span class=\"n\">basic</span><span class=\"o\">):</span> <span class=\"n\">lemmas</span> <span class=\"n\">prod_range_add</span><span class=\"o\">,</span> <span class=\"n\">sum_range_add</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">6484</span><span class=\"o\">)</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">lean</span> <span class=\"c1\">--make src</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">marcus</span><span class=\"bp\">/</span><span class=\"n\">Library</span><span class=\"bp\">/</span><span class=\"n\">Mobile</span> <span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">com</span><span class=\"bp\">~</span><span class=\"n\">apple</span><span class=\"bp\">~</span><span class=\"n\">CloudDocs</span><span class=\"bp\">/</span><span class=\"n\">Bachelorarbeit</span><span class=\"bp\">/</span><span class=\"n\">Code</span><span class=\"bp\">/</span><span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/...</span>\n</code></pre></div>",
        "id": 232580008,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617193176
    },
    {
        "content": "<p>Or may it does that step automatically if <code>_target</code> is entirely missing.</p>",
        "id": 232580009,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617193176
    },
    {
        "content": "<p>Yeah, that looks like it didn't attempt to download oleans. Try my suggestion.</p>",
        "id": 232580119,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617193220
    },
    {
        "content": "<p>Scott's suggestion should do it now -- break out the build, get-mathlib-cache, and then build again.</p>",
        "id": 232580206,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617193258
    },
    {
        "content": "<p>Ok, removing <code>_target</code> and then running <code>leanproject build</code> worked.<br>\nIt still did whatever it was doing in my last post, but that only took like 1min and now I just get:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">marcus</span><span class=\"bp\">@</span><span class=\"n\">Code</span><span class=\"o\">:</span> <span class=\"n\">leanproject</span> <span class=\"n\">build</span>\n<span class=\"n\">Building</span> <span class=\"n\">project</span> <span class=\"n\">Code</span>\n<span class=\"n\">configuring</span> <span class=\"n\">Code</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">trying</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"mi\">22</span><span class=\"n\">e34370e62f4338d73889dc93094829439eb420</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach 22e34370e62f4338d73889dc93094829439eb420    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"mi\">22</span><span class=\"n\">e34370e</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">big_operators</span><span class=\"bp\">/</span><span class=\"n\">basic</span><span class=\"o\">):</span> <span class=\"n\">lemmas</span> <span class=\"n\">prod_range_add</span><span class=\"o\">,</span> <span class=\"n\">sum_range_add</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">6484</span><span class=\"o\">)</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">lean</span> <span class=\"c1\">--make src</span>\n</code></pre></div>\n<p>Thank you all :)</p>",
        "id": 232580501,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1617193397
    }
]