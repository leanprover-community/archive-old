[
    {
        "content": "<p>I want to formalize competitive programming problems in Lean. Think of it as a competitive programming analog of the IMO Grand Challenge, LOL. But I don't really know how to formalize commonly used algorithms and data structures such as BFS, Dijkstra, Floyd–Warshall, sparse tables, segment trees and stuff. Can anyone point me in the right direction?</p>",
        "id": 225403941,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1612608843
    },
    {
        "content": "<p>For example, could you point me to a GitHub repository of formalized algorithms in Lean?</p>",
        "id": 225404514,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1612609537
    },
    {
        "content": "<p>Personally idk about any repositiories with all of that, but I do know that mathlib currently contains a little bit of material on binary trees</p>",
        "id": 225406510,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1612611989
    },
    {
        "content": "<p>Don't remember how much material there is though</p>",
        "id": 225406512,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1612611999
    },
    {
        "content": "<p>Can you not just follow the kind of thing done in Haskell?</p>",
        "id": 225407089,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612612725
    },
    {
        "content": "<p>Of course I can't, that's why I'm asking! Sure I can crib techniques from Haskell when I formalize the implementation but I think proving is more complicated, and I'm pretty sure Haskell is not a verification language by any stretch of the imagination.</p>",
        "id": 225410375,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1612615764
    },
    {
        "content": "<p>By now I've skimmed through every thread in the Program verification stream and I couldn't find anything I'm looking for.</p>",
        "id": 225410624,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1612616133
    },
    {
        "content": "<p>I had misunderstood, I thought you were just asking about implementing the algorithms and data structures you listed</p>",
        "id": 225412344,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612618682
    },
    {
        "content": "<p>Maybe you should ask a more precise question</p>",
        "id": 225412484,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612618838
    },
    {
        "content": "<p>Generally speaking, you can just write a program like you would in haskell and as long as it's non-<code>meta</code> you can prove properties about it after the fact in lean</p>",
        "id": 225427223,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612640871
    },
    {
        "content": "<p>the only thing you have to be careful about while writing the definition is that it is structured such that it \"manifestly\" terminates</p>",
        "id": 225427291,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612640955
    },
    {
        "content": "<p>as always, software foundations has you covered:</p>",
        "id": 225437822,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1612658848
    },
    {
        "content": "<p><a href=\"https://softwarefoundations.cis.upenn.edu/vfa-current/index.html\">https://softwarefoundations.cis.upenn.edu/vfa-current/index.html</a></p>",
        "id": 225437823,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1612658850
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110025\">@Andrew Ashworth</span> Oh neat! From what I've gathered, it looks like no one has attempted to formalize and prove properties about the algorithms and data structures I mentioned in Lean right? So I could consider myself a pioneer, haha. And I don't expect segment trees, sparse tables or even tries to be covered by software foundations as these data structures are specific to competitive programming, which is a pretty niche field.</p>",
        "id": 225441369,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1612665282
    }
]