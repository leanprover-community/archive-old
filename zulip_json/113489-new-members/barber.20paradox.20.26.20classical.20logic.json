[
    {
        "content": "<p>I have tried to solve the examples in the TPL4 and I've encountered the barber paradox at exercise 3 <a href=\"https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#exercises\">here</a> (end of the page).</p>\n<p>I've solved it this way:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">men</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">barber</span> <span class=\"o\">:</span> <span class=\"n\">men</span><span class=\"o\">)</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">shaves</span> <span class=\"o\">:</span> <span class=\"n\">men</span> <span class=\"bp\">→</span> <span class=\"n\">men</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">shaves</span> <span class=\"n\">barber</span> <span class=\"n\">barber</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">men</span><span class=\"o\">,</span> <span class=\"n\">shaves</span> <span class=\"n\">barber</span> <span class=\"n\">x</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span> <span class=\"n\">shaves</span> <span class=\"n\">x</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">barber</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"k\">let</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">shaves</span> <span class=\"n\">barber</span> <span class=\"n\">barber</span>\n      <span class=\"n\">Or.elim</span> <span class=\"o\">(</span><span class=\"n\">em</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">absurd</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"n\">a</span><span class=\"o\">))</span>\n        <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">absurd</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Besides my syntax usage that could be improved for sure, do I always need classical logic to prove this? I'm using classical with the <code>em</code> bit for stating <code>p v !p</code> basically.</p>",
        "id": 306471254,
        "sender_full_name": "Kristian Notari",
        "timestamp": 1666883497
    },
    {
        "content": "<p>no, you don't need classical logic; <code>¬(p ↔ ¬p)</code> suffices, and it's a fun exercise to prove that one intuistionistically</p>",
        "id": 306482832,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1666886645
    },
    {
        "content": "<p>Thanks for answering. I'm not sure I correctly understood what \"intuistionistically\" means in this context. It has nothing to do with Lean, right? It was like saying \"prove that in your mind, with words, it should be fun\" ?</p>\n<p>By the way I'm not getting how to prove that with <code>¬(p ↔ ¬p)</code> honestly :( I'll try again asap</p>",
        "id": 306613547,
        "sender_full_name": "Kristian Notari",
        "timestamp": 1666948973
    },
    {
        "content": "<p>No. They were referring to intuitionistic logic, that is, constructive proof required.</p>",
        "id": 306615129,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1666949512
    },
    {
        "content": "<p>Ok, so to be clear, constructive proof --&gt; proof by actually instantiating a value for the given proof, by using lean terms directly instead of using tactics. Am I right?</p>\n<p>Sorry for being new to all this, I'm going through the TPL4 as I'm writing this</p>",
        "id": 306615733,
        "sender_full_name": "Kristian Notari",
        "timestamp": 1666949681
    },
    {
        "content": "<p>A constructive proof is one that doesn't need classical logic like <code>em</code>, and in some ways yes, you just write a function in terms of recursors etc</p>",
        "id": 306615823,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1666949713
    }
]