[
    {
        "content": "<p>I am trying to end a namespace </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideals</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">principal_ideal_domain</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n\n<span class=\"o\">(</span><span class=\"n\">prime_ideal&#39;</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"o\">(</span><span class=\"n\">primality</span> <span class=\"o\">:</span> <span class=\"n\">prime_ideal&#39;</span><span class=\"bp\">.</span><span class=\"n\">is_prime</span><span class=\"o\">)</span>\n\n<span class=\"o\">(</span><span class=\"n\">is_nonzero</span> <span class=\"o\">:</span> <span class=\"n\">prime_ideal&#39;</span> <span class=\"bp\">≠</span> <span class=\"err\">⊥</span><span class=\"o\">)</span>\n\n<span class=\"o\">(</span><span class=\"n\">unique_nonzero_prime_ideal</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">is_prime</span> <span class=\"bp\">→</span> <span class=\"n\">P</span> <span class=\"bp\">=</span> <span class=\"err\">⊥</span> <span class=\"bp\">∨</span> <span class=\"n\">P</span> <span class=\"bp\">=</span> <span class=\"n\">prime_ideal&#39;</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">discrete_valuation_ring</span>\n<span class=\"c\">/-</span><span class=\"cm\"> blah blah -/</span>\n<span class=\"kn\">end</span> <span class=\"n\">dicrete_valuation_ring</span>\n</code></pre></div>\n\n\n<p>I get the errors</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">command</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"n\">accept</span> <span class=\"n\">doc</span> <span class=\"n\">string</span>\n</code></pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">end</span> <span class=\"n\">of</span> <span class=\"n\">module</span><span class=\"o\">,</span> <span class=\"n\">expecting</span> <span class=\"err\">&#39;</span><span class=\"kn\">end</span><span class=\"err\">&#39;</span>\n</code></pre></div>\n\n\n<p>Any help is appreciated. Thanks!</p>",
        "id": 201480405,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1592664602
    },
    {
        "content": "<p>You have misspelt discrete_valuation_ring in the <code>end</code> version</p>",
        "id": 201480482,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592664659
    },
    {
        "content": "<p>A docstring is something which looks like <code>/-- blah -/</code> and it is only allowed to appear directly before a definition or theorem. You can't put it in front of any other command.</p>",
        "id": 201480503,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592664698
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/End.20of.20namespace/near/201480482\">said</a>:</p>\n<blockquote>\n<p>You have misspelt discrete_valuation_ring in the <code>end</code> version</p>\n</blockquote>\n<p>Ah, that is a mistake I made while typing it out. The spelling is correct in the document.</p>",
        "id": 201480722,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1592664950
    },
    {
        "content": "<p>The error <code>command does not accept doc string</code> means that you put a docstring directly above a command.</p>",
        "id": 201480791,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592664993
    },
    {
        "content": "<p>The error <code>invalid end of module, expecting 'end'</code> means that you opened a section or a namespace with the <code>section</code> or <code>namespace</code> command, and did not close it.</p>",
        "id": 201480814,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592665030
    },
    {
        "content": "<p>As a general rule, try and fix the first error in your file; other errors might be a weird consequence of Lean getting confused after the first error.</p>",
        "id": 201480824,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592665049
    },
    {
        "content": "<p>Ah I got it! Thank you!</p>",
        "id": 201482072,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1592666640
    }
]