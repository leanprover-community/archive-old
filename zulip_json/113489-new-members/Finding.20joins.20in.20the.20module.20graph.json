[
    {
        "content": "<p>Assume I have a helper lemma that combines two concepts (in this case, <code>nat.coprime.mul</code> and <code>finset.prod</code>), and I need to find the right module to put this. Is there a tool that helps me with that? Something that might tell me “All modules depending on both <code>data.nat.gcd</code> and <code>algebra.big_operators.basic</code> also depend on module <code>X</code>”, so that <code>X</code> is the natural home for such a lemma?</p>",
        "id": 273059384,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1645691263
    },
    {
        "content": "<p>If you're familiar with Python and networkx, there's a dependency graph that you can read in available at <a href=\"https://leanprover-community.github.io/mathlib_docs/import.gexf\">https://leanprover-community.github.io/mathlib_docs/import.gexf</a></p>",
        "id": 273059801,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645691548
    },
    {
        "content": "<p>Note that <code>leanproject</code> will also create such a graph for you: <code>leanproject import-graph --help</code></p>",
        "id": 273061508,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645692744
    },
    {
        "content": "<p>Is there an easy way to read this back into lean?</p>",
        "id": 273062161,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645693188
    },
    {
        "content": "<p>I've found in the past that <code>leanproject import-graph </code> is painfully slow - but maybe you just need a clean working tree</p>",
        "id": 273075055,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645700843
    },
    {
        "content": "<p>I vaguely recall that for Isabelle I once wrote a command that would suggest which module to move a theorem to, that may be possible in lean too, but that would only consider modules that are already imported, so a bit less useful.</p>",
        "id": 273090185,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1645710222
    },
    {
        "content": "<p>There is a prototype of this at <a href=\"https://github.com/alexjbest/dag-tools/blob/master/src/home_finder.lean\">https://github.com/alexjbest/dag-tools/blob/master/src/home_finder.lean</a> it is a bit slow but more or less works iirc</p>",
        "id": 273096489,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645713203
    },
    {
        "content": "<p>It's called <code>#vind_home</code> to avoid conflict with <code>#find</code> lol</p>",
        "id": 273096610,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645713245
    },
    {
        "content": "<p>Demo is at <a href=\"https://github.com/alexjbest/dag-tools/blob/master/src/test_home_finder.lean\">https://github.com/alexjbest/dag-tools/blob/master/src/test_home_finder.lean</a></p>",
        "id": 273097124,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645713481
    },
    {
        "content": "<p>JFTR (or just-for-the-web-archive-if-someone-googles-this-thread), as I randomly stumbled over it: My experiments with such a tool in Isabelle are in <a href=\"https://github.com/nomeata/isa-where-to-move\">https://github.com/nomeata/isa-where-to-move</a></p>",
        "id": 274860324,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1646930035
    }
]