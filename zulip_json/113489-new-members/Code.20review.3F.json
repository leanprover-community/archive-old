[
    {
        "content": "<p>I'm more or less done constructing the irrelevant ideal of N graded rings, but I've come across a bunch of problems or things that I didn't like in the proof, where I didn't think I could construct a small example of the problem. So I've made a gist that should be self contained and put questions and other comments in the proof (the long one, at the end of the file). I'd be grateful for any comments! <a href=\"https://gist.github.com/WhatisRT/98b512bd534d70e430f9aafa350dc581\">https://gist.github.com/WhatisRT/98b512bd534d70e430f9aafa350dc581</a></p>",
        "id": 207021315,
        "sender_full_name": "Andre Knispel",
        "timestamp": 1597496913
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"282095\">@Andre Knispel</span> that's a nice topic (-;</p>",
        "id": 207022107,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498212
    },
    {
        "content": "<p>Thanks! My plan is to construct the <code>Proj</code> functor and if I it doesn't take too long, state and prove the moduli problem for projective space</p>",
        "id": 207022197,
        "sender_full_name": "Andre Knispel",
        "timestamp": 1597498422
    },
    {
        "content": "<p>Sounds great.</p>",
        "id": 207022429,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498794
    },
    {
        "content": "<p>I think the general problem with your code might be that it's an extremely long proof</p>",
        "id": 207022477,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498819
    },
    {
        "content": "<p>Breaking things into sublemmas usually helps a lot.</p>",
        "id": 207022480,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498833
    },
    {
        "content": "<p>But let me load your code into Lean and take a quick look</p>",
        "id": 207022490,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498843
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282095\">@Andre Knispel</span> What is in <code>leanpkg.toml</code> in the base of your mathlib clone?</p>",
        "id": 207022567,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498955
    },
    {
        "content": "<p>Because I get a <em>lot</em> of errors when I use a recent mathlib.</p>",
        "id": 207022570,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498966
    },
    {
        "content": "<p>(Like, imports that are wrong.)</p>",
        "id": 207022573,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597498980
    },
    {
        "content": "<p>Note that in some sense we don't have the Spec functor yet, because we don't have the target category. The reason schemes are not yet in mathlib is that there still seems to be no acceptable way to say \"I am a sheaf of rings\" in mathlib. In the schemes repo we just made an ad hoc definition of a sheaf of rings, however the definition of a presheaf in mathlib takes values in a category so is incompatible with ours (which just took values in Type). In particular if you want to develop code which will be in mathlib it is extremely difficult to proceed right now.</p>",
        "id": 207022648,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597499116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I'm using the mathlib I got from lean-scheme, it says version 0.1</p>",
        "id": 207023851,
        "sender_full_name": "Andre Knispel",
        "timestamp": 1597501128
    },
    {
        "content": "<p>Oof, I see. That version is ancient (-;</p>",
        "id": 207023917,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597501259
    },
    {
        "content": "<p>The big downside is that we don't have precompiled versions of that mathlib, I think.</p>",
        "id": 207023933,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597501311
    },
    {
        "content": "<p>This is not the right answer. Version 0.1 is the version of lean-scheme</p>",
        "id": 207024032,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597501446
    },
    {
        "content": "<p>But if you're building on lean-scheme then the answer is that it's the version of mathlib used there. In some sense there is little point building on this because it will have to be rewritten when it all moves to mathlib, but a different way of looking at it is that if you're learning how to use lean then perhaps getting stuff into mathlib is not really your main concern</p>",
        "id": 207024112,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597501572
    },
    {
        "content": "<p>There's a whole bunch of ideas in that repo, there is Gamma Spec duality, glueing sheaves and various other things, but none of it can go into mathlib because we just have to wait until they give us a definition of a ringed space</p>",
        "id": 207024197,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597501753
    },
    {
        "content": "<p>Oh hot news: <a href=\"https://github.com/leanprover-community/mathlib/commit/099f070f41867bb6bd0f6494307873a126e3c4ad\">https://github.com/leanprover-community/mathlib/commit/099f070f41867bb6bd0f6494307873a126e3c4ad</a> is merged! So we have sheaves as of basically just now!</p>",
        "id": 207024362,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597501990
    },
    {
        "content": "<p>Ok this changes everything. <span class=\"user-mention\" data-user-id=\"282095\">@Andre Knispel</span> if you want to do something which could go in mathlib we are now in a position to define ringed spaces and schemes. However without a sheafification functor we're still not able to get too far. But at least we can now start. Basically this enables us to make new definitions but we're still limited in what theorems we can prove</p>",
        "id": 207024562,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597502308
    },
    {
        "content": "<p>Oh, that's great! As you've guessed, getting this into mathlib isn't my main concern, but it would be nice. What I've done so far doesn't use any schemes of course, so I could just as well use master for that. Maybe getting <code>Proj</code> as a ringed space would also be nice, if that has the advantage of being able to be merged</p>",
        "id": 207024838,
        "sender_full_name": "Andre Knispel",
        "timestamp": 1597502816
    },
    {
        "content": "<p>Sounds good to me</p>",
        "id": 207024900,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597502963
    },
    {
        "content": "<p>I hope that by the time you have Proj as ringed space, we'll have a category of schemes (-;</p>",
        "id": 207024908,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597502982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> actually there's still a problem with defining schemes. A scheme is something locally isomorphic as a presheafed space to Spec(R) but we can't make Spec(R) a presheafed space because we only know the values of the presheaf on a basis. In the schemes repo is the proof that this presheaf is a sheaf on a basis but then we'll need to extend to the entire top space and my guess is that one is supposed to do this using formal machinery</p>",
        "id": 207025343,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597503714
    },
    {
        "content": "<p>Yup... I know. But Bhavik seems to have this</p>",
        "id": 207025695,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597504238
    },
    {
        "content": "<p>So we need to wait for his PR (-;</p>",
        "id": 207025699,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597504245
    },
    {
        "content": "<p>But I don't think that Andre will have Proj next week (-; so we still have a couple of days to get our act together <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 207025711,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597504273
    },
    {
        "content": "<p>I've taken some time to make my code compatible with the mathlib on master and updated the gist. A bunch of problems I've had went away, which made the proof much shorter, but I still have some questions that are in the comments. <a href=\"https://gist.github.com/WhatisRT/98b512bd534d70e430f9aafa350dc581\">https://gist.github.com/WhatisRT/98b512bd534d70e430f9aafa350dc581</a></p>",
        "id": 207075890,
        "sender_full_name": "Andre Knispel",
        "timestamp": 1597591722
    }
]