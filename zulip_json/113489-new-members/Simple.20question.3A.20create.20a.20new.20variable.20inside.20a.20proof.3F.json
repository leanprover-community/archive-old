[
    {
        "content": "<p>Sorry about my stupid questions.<br>\nSuppose my current state is something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"n\">some_type</span>\n<span class=\"bp\">⊢</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">z</span>\n</code></pre></div>\n<p>Is there a way that I can, within my proof and without defining any new functions outside my proof, go to a state like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">some_type</span>\n<span class=\"n\">definition_of_a</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">z</span>\n</code></pre></div>\n<p>Obviously in that simple example it's not especially useful, but in a more realistic case we might have some very complicated expression that occurs multiple times within the target, ergo folding it down to a single variable (while keeping the definition of that variable so we unfold it later) will make life much easier.</p>",
        "id": 224734165,
        "sender_full_name": "Nicholas Dyson",
        "timestamp": 1612190279
    },
    {
        "content": "<p><code>set a := x + y with definition_of_a</code></p>",
        "id": 224734286,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612190325
    },
    {
        "content": "<p>Sick, knew there was probably a straightforward tactic for that but couldn't find it.  TY TY.</p>",
        "id": 224734343,
        "sender_full_name": "Nicholas Dyson",
        "timestamp": 1612190360
    }
]