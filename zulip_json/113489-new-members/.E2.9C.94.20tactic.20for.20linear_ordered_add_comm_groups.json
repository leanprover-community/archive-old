[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"494571\">Raphael Appenzeller</span> has marked this topic as resolved.</p>",
        "id": 291920694,
        "sender_full_name": "Notification Bot",
        "timestamp": 1659561033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"494571\">@Raphael Appenzeller</span> The following should be a fairly universal algorithm for such things, also:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">ex</span> <span class=\"o\">(</span><span class=\"bp\">Λ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_add_comm_group</span> <span class=\"bp\">Λ</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">txf</span> <span class=\"n\">tyf</span> <span class=\"n\">fa</span> <span class=\"n\">fb</span> <span class=\"n\">f1a</span> <span class=\"n\">f1b</span> <span class=\"n\">f2a</span> <span class=\"n\">f2b</span> <span class=\"o\">:</span> <span class=\"bp\">Λ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">txf</span> <span class=\"bp\">-</span> <span class=\"n\">fa</span> <span class=\"bp\">+</span> <span class=\"n\">f1a</span> <span class=\"bp\">≤</span> <span class=\"n\">f1b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">f2a</span> <span class=\"bp\">≤</span> <span class=\"n\">tyf</span> <span class=\"bp\">-</span> <span class=\"n\">fb</span> <span class=\"bp\">+</span> <span class=\"n\">f2b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"n\">f1b</span> <span class=\"bp\">-</span> <span class=\"n\">f1a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f2b</span> <span class=\"bp\">-</span> <span class=\"n\">f2a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">fb</span> <span class=\"bp\">-</span> <span class=\"n\">fa</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">txf</span> <span class=\"bp\">≤</span> <span class=\"n\">tyf</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">sub_nonneg</span> <span class=\"n\">at</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"bp\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">sub_eq_zero</span> <span class=\"n\">at</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_nonneg</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">congr_arg</span> <span class=\"n\">has_neg.neg</span> <span class=\"n\">h3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ge</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">abel</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 291932815,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1659568456
    },
    {
        "content": "<ol>\n<li>Move everything to the RHS to get inequalities/equalities of the form <code>0 ≤ *</code> or <code>0 = *</code>;</li>\n<li>Figure out the coefficients with which to add the hypotheses to get the goal, and build up this combination of the hypotheses using <code>add_le_add</code>, <code>add_nonneg</code>, <code>congr_arg</code></li>\n<li><code>convert</code> to that combination</li>\n<li>run <code>abel</code></li>\n</ol>",
        "id": 291932992,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1659568621
    },
    {
        "content": "<p>This is actually how <code>linear_combination</code> works, and <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> could probably advise on whether it's worth encoding the abel-with-inequalities version as a tactic.</p>",
        "id": 291933120,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1659568704
    }
]