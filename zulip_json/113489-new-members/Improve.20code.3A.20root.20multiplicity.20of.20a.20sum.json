[
    {
        "content": "<p>Hi all! As I mentioned in  <a class=\"stream-topic\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F/topic/A.20polynomial.20splits.20if.20it.20has.20enough.20roots\">#Is there code for X? &gt; A polynomial splits if it has enough roots</a> I wanted to prove that  the multiplicity of a root in a sum of two polynomials is at least the minimum of the multiplicities.  I figured it by myself and I think it is something that should be added to mathlib (specifically to <code>data.polynomial.ring_division</code>). My code works, but I don't think its quality is very high, so before  making a PR I would like to have some comments. Here it is (the last lemma is the important one):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.ring_division</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">polynomial</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">The multiplicity of a as root of (X - a)^n is n-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">root_multiplicity_X_sub_C_pow</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"o\">((</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n<span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">root_multiplicity_eq_zero</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">},</span>\n<span class=\"k\">have</span> <span class=\"n\">hzero</span> <span class=\"o\">:=</span>  <span class=\"o\">(</span><span class=\"n\">ne_zero_of_monic</span> <span class=\"o\">(</span><span class=\"n\">monic_pow</span> <span class=\"o\">(</span><span class=\"n\">monic_X_sub_C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">n.succ</span><span class=\"o\">)),</span>\n<span class=\"n\">rw</span> <span class=\"n\">pow_succ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">root_multiplicity_mul</span> <span class=\"n\">hzero</span><span class=\"o\">,</span> <span class=\"n\">root_multiplicity_X_sub_C_self</span><span class=\"o\">],</span>\n<span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">hn</span><span class=\"o\">],</span>\n<span class=\"n\">exact</span> <span class=\"n\">nat.one_add</span> <span class=\"n\">n</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">If (X - a)^n divides a polynomial p then the multipicity of a as root of p is at least n-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">multiplicity_ge_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">hzero</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">div</span> <span class=\"o\">:=</span> <span class=\"n\">exists_eq_mul_right_of_dvd</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">div</span> <span class=\"k\">with</span> <span class=\"n\">q</span> <span class=\"n\">hq</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">hq</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">root_multiplicity_mul</span> <span class=\"n\">hzero</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">root_multiplicity_X_sub_C_pow</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">nat.le.intro</span> <span class=\"n\">rfl</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">min_power_dvd_sum</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">d</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">d</span><span class=\"bp\">^</span><span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">d</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">cases</span> <span class=\"n\">hp</span> <span class=\"k\">with</span> <span class=\"n\">p₁</span> <span class=\"n\">hdivp</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">hq</span> <span class=\"k\">with</span> <span class=\"n\">q₁</span> <span class=\"n\">hdivq</span><span class=\"o\">,</span>\n<span class=\"n\">by_cases</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span><span class=\"o\">,</span>\n<span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">ex</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">le_iff_exists_add.mp</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">ex</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">pow_add</span> <span class=\"n\">d</span> <span class=\"n\">n</span> <span class=\"n\">a</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hdivq</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hdivp</span><span class=\"o\">,</span> <span class=\"n\">hdivq</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">factor</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">p₁</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">q₁</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">p₁</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">q₁</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">factor</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">dvd.intro</span> <span class=\"o\">(</span><span class=\"n\">p₁</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">q₁</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"o\">},</span>\n<span class=\"c\">/-</span><span class=\"cm\">I tried to avoid this part with wlog but I wasn't able to do it-/</span>\n<span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">ex</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">le_iff_exists_add.mp</span> <span class=\"o\">(</span><span class=\"n\">le_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n  <span class=\"n\">cases</span> <span class=\"n\">ex</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">le_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">pow_add</span> <span class=\"n\">d</span> <span class=\"n\">m</span> <span class=\"n\">a</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hdivp</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hdivq</span><span class=\"o\">,</span> <span class=\"n\">hdivp</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">factor</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">p₁</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">q₁</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">q₁</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">p₁</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">factor</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">dvd.intro</span> <span class=\"o\">(</span><span class=\"n\">q₁</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">p₁</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">The multiplicty of p+q is at leas the minimum of the multiplicities-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">root_multiplicity_add</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hzero</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">≥</span>\n<span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">apply</span> <span class=\"n\">multiplicity_ge_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">+</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"n\">hzero</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">hdivp</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">pow_root_multiplicity_dvd</span>  <span class=\"n\">p</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">hdivq</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"n\">pow_root_multiplicity_dvd</span>  <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">min_power_dvd_sum</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">hdivp</span> <span class=\"n\">hdivq</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">polynomial</span>\n</code></pre></div>\n\n<p>All comments are welcome! Thank you.</p>",
        "id": 212305424,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1601907674
    },
    {
        "content": "<p><code>min_power_dvd_sum</code> doesn't have anything to do with <code>polynomial</code> and the proof can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pow_dvd_pow\">docs#pow_dvd_pow</a> rather than a case split.</p>",
        "id": 212307617,
        "sender_full_name": "Reid Barton",
        "timestamp": 1601908611
    },
    {
        "content": "<p>Some thoughts about formatting, avoiding <code>\\ge</code> and implicit args:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.ring_division</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">polynomial</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">The multiplicity of a as root of (X - a)^n is n-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">root_multiplicity_X_sub_C_pow</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"o\">((</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"n\">root_multiplicity_eq_zero</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">eval_one</span><span class=\"o\">,</span> <span class=\"n\">is_root.def</span><span class=\"o\">,</span> <span class=\"n\">not_false_iff</span><span class=\"o\">,</span> <span class=\"n\">one_ne_zero</span><span class=\"o\">,</span> <span class=\"n\">pow_zero</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hzero</span> <span class=\"o\">:=</span>  <span class=\"o\">(</span><span class=\"n\">ne_zero_of_monic</span> <span class=\"o\">(</span><span class=\"n\">monic_pow</span> <span class=\"o\">(</span><span class=\"n\">monic_X_sub_C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">n.succ</span><span class=\"o\">)),</span>\n  <span class=\"n\">rw</span> <span class=\"n\">pow_succ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"n\">at</span> <span class=\"n\">hzero</span> <span class=\"bp\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">root_multiplicity_mul</span> <span class=\"n\">hzero</span><span class=\"o\">,</span> <span class=\"n\">root_multiplicity_X_sub_C_self</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">,</span> <span class=\"n\">nat.one_add</span><span class=\"o\">]</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">If (X - a)^n divides a polynomial p then the multipicity of a as root of p is at least n-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">multiplicity_of_dvd</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hzero</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">hq</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">exists_eq_mul_right_of_dvd</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hq</span> <span class=\"n\">at</span> <span class=\"n\">hzero</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hq</span><span class=\"o\">,</span> <span class=\"n\">root_multiplicity_mul</span> <span class=\"n\">hzero</span><span class=\"o\">,</span> <span class=\"n\">root_multiplicity_X_sub_C_pow</span><span class=\"o\">,</span>\n             <span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">zero_le</span><span class=\"o\">,</span> <span class=\"n\">le_add_iff_nonneg_right</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">min_power_dvd_sum</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">d</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">p₁</span><span class=\"o\">,</span> <span class=\"n\">hdivp</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">q₁</span><span class=\"o\">,</span> <span class=\"n\">hdivq</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hq</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hdivp</span><span class=\"o\">,</span> <span class=\"n\">hdivq</span><span class=\"o\">],</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">The multiplicty of p+q is at leas the minimum of the multiplicities-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">root_multiplicity_add</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hzero</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"n\">multiplicity_of_dvd</span> <span class=\"n\">hzero</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hdivp</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">pow_root_multiplicity_dvd</span> <span class=\"n\">p</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hdivq</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"n\">pow_root_multiplicity_dvd</span> <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">min_power_dvd_sum</span> <span class=\"n\">hdivp</span> <span class=\"n\">hdivq</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">polynomial</span>\n</code></pre></div>",
        "id": 212310427,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1601909635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>  <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>  thank you very much!  I've modified <code>min_power_dvd_sum</code> to hold in an arbitrary commutative semiring and taken into account the other  suggestions.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.ring_division</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">min_power_dvd_sum</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">d</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">d</span><span class=\"bp\">^</span><span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">d</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">by_cases</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span><span class=\"o\">,</span>\n<span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">],</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hq</span> <span class=\"o\">:=</span> <span class=\"n\">dvd.trans</span> <span class=\"o\">(</span><span class=\"n\">pow_dvd_pow</span> <span class=\"n\">d</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"n\">hq</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">dvd_add</span> <span class=\"n\">hp</span> <span class=\"n\">hq</span> <span class=\"o\">},</span>\n<span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">le_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">],</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hp</span> <span class=\"o\">:=</span> <span class=\"n\">dvd.trans</span> <span class=\"o\">(</span><span class=\"n\">pow_dvd_pow</span> <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">le_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">dvd_add</span> <span class=\"n\">hp</span> <span class=\"n\">hq</span><span class=\"o\">,</span>\n <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">polynomial</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">The multiplicity of a as root of (X - a)^n is n-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">root_multiplicity_X_sub_C_pow</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"o\">((</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"n\">root_multiplicity_eq_zero</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">eval_one</span><span class=\"o\">,</span> <span class=\"n\">is_root.def</span><span class=\"o\">,</span> <span class=\"n\">not_false_iff</span><span class=\"o\">,</span> <span class=\"n\">one_ne_zero</span><span class=\"o\">,</span> <span class=\"n\">pow_zero</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hzero</span> <span class=\"o\">:=</span>  <span class=\"o\">(</span><span class=\"n\">ne_zero_of_monic</span> <span class=\"o\">(</span><span class=\"n\">monic_pow</span> <span class=\"o\">(</span><span class=\"n\">monic_X_sub_C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">n.succ</span><span class=\"o\">)),</span>\n  <span class=\"n\">rw</span> <span class=\"n\">pow_succ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"n\">at</span> <span class=\"n\">hzero</span> <span class=\"bp\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">root_multiplicity_mul</span> <span class=\"n\">hzero</span><span class=\"o\">,</span> <span class=\"n\">root_multiplicity_X_sub_C_self</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">,</span> <span class=\"n\">nat.one_add</span><span class=\"o\">]</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">If (X - a)^n divides a polynomial p then the multipicity of a as root of p is at least n-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">multiplicity_of_dvd</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hzero</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">hq</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">exists_eq_mul_right_of_dvd</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hq</span> <span class=\"n\">at</span> <span class=\"n\">hzero</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hq</span><span class=\"o\">,</span> <span class=\"n\">root_multiplicity_mul</span> <span class=\"n\">hzero</span><span class=\"o\">,</span> <span class=\"n\">root_multiplicity_X_sub_C_pow</span><span class=\"o\">,</span>\n             <span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">zero_le</span><span class=\"o\">,</span> <span class=\"n\">le_add_iff_nonneg_right</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">The multiplicty of p+q is at leas the minimum of the multiplicities-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">root_multiplicity_add</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hzero</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"n\">multiplicity_of_dvd</span> <span class=\"n\">hzero</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hdivp</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">pow_root_multiplicity_dvd</span> <span class=\"n\">p</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hdivq</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">root_multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">q</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"n\">pow_root_multiplicity_dvd</span> <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">min_power_dvd_sum</span> <span class=\"n\">hdivp</span> <span class=\"n\">hdivq</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">polynomial</span>\n</code></pre></div>\n\n<p>It looks already much better!</p>",
        "id": 212313039,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1601910617
    },
    {
        "content": "<p>Would it help anything if we made <code>multiplicity</code> a valuation?</p>",
        "id": 212385372,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1601960734
    },
    {
        "content": "<p>What do you mean with valuation?</p>",
        "id": 212386875,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1601962881
    },
    {
        "content": "<p>mathlib only knows about multiplicative valuations atm...</p>",
        "id": 212386878,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1601962902
    },
    {
        "content": "<p>I mean that mathematically it looks like a monoidal, additive, valuation</p>",
        "id": 212649147,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1602135915
    },
    {
        "content": "<p>And I wonder if we would be helped by tweaking the definitions of multiplicity and/or valuation to be able to at least have a valuation that’s related to multiplicity</p>",
        "id": 212649229,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1602135970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Do you think it's true that most valuations are actually additive?</p>",
        "id": 212650740,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602138025
    },
    {
        "content": "<p>I think that most of the time one simply doesn't care and there's a trivial dictionary which passes from one language to the other. But I've not had enough experience using them to know whether this is going to be a pain in practice. I'll get back to DVRs in a couple of weeks and might learn more</p>",
        "id": 212651219,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1602138524
    },
    {
        "content": "<p>Well, at the moment that \"trivial dictionary\" doesn't exist in Lean</p>",
        "id": 212651785,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602139143
    },
    {
        "content": "<p>And if from a user perspective it is a lot better to work with additive valuations all the time, then maybe we should switch to that.</p>",
        "id": 212651803,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602139168
    },
    {
        "content": "<p>But I don't look forward to implementing <code>add_group_with_top</code> and <code>linearly_ordered_add_comm_group_with_top</code></p>",
        "id": 212651865,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602139216
    }
]