[
    {
        "content": "<p>How can I put a docstring on a particular constructor?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">inductive</span> <span class=\"n\">commented</span>\n<span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"c\">/-</span><span class=\"cm\"> hello-/</span>\n<span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"c\">/-</span><span class=\"cm\">- world -/</span>\n<span class=\"bp\">|</span> <span class=\"n\">c</span> <span class=\"c\">/-</span><span class=\"cm\"> error: expected command -/</span>\n</pre></div>",
        "id": 168399960,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1560864259
    },
    {
        "content": "<p>can't</p>",
        "id": 168400583,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1560864661
    },
    {
        "content": "<p>use regular comments</p>",
        "id": 168400600,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1560864671
    },
    {
        "content": "<p>Would it be worth adding in 3.5?</p>",
        "id": 168405239,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1560867553
    },
    {
        "content": "<p>I would say so, but this might be a significant change. Right now Lean <a href=\"https://github.com/leanprover-community/lean/blob/master/src/frontends/lean/parser.cpp#L2549\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/blob/master/src/frontends/lean/parser.cpp#L2549\">expects a command after a docstring</a>. There is also a stupid workaround:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">run_cmd</span> <span class=\"n\">add_doc_string</span> <span class=\"bp\">``</span><span class=\"n\">commented</span><span class=\"bp\">.</span><span class=\"n\">b</span> <span class=\"s2\">&quot;world&quot;</span>\n</pre></div>\n\n\n<p>EDIT: or maybe the parser for inductive types should not stop when seeing a doc block</p>",
        "id": 168406416,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1560868301
    },
    {
        "content": "<p>I think as an excuse to learn the Lean sources a bit, I could give implementing this a stab.</p>",
        "id": 168408477,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1560869582
    },
    {
        "content": "<p>This is a little more annoying than I thought, basically because in the following comment A applies to a ctr, but comment B applies to the next inductive, <code>bar</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">inductive</span> <span class=\"n\">foo</span><span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"c\">/-</span><span class=\"cm\">- A -/</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk_foo</span><span class=\"o\">:</span> <span class=\"n\">foo</span>\n<span class=\"c\">/-</span><span class=\"cm\">- B-/</span>\n<span class=\"kn\">inductive</span> <span class=\"n\">bar</span><span class=\"o\">:</span> <span class=\"kt\">Type</span>\n</pre></div>\n\n\n<p>Which means the parser has to do lookahead to determine what the doc-block applies to. Is it okay to do that?<br>\nEDIT: I made <a href=\"https://github.com/leanprover-community/lean/pull/50\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/pull/50\">a PR</a> on community Lean, but the lookahead issue remains.</p>",
        "id": 168423968,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1560878449
    }
]