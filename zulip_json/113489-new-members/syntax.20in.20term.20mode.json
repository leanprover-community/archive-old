[
    {
        "content": "<p>All, had a question on syntax as I'm still trying to get more comfortable with term mode.  From an example in TPIL I was trying to match the \"have\" and \"from\" terms when the corresponding lambdas:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">hpp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"k\">have</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"bp\">_</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">hpp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">),</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">_</span>\n</pre></div>\n\n\n<p>The goal window shows a different result in both cases.</p>",
        "id": 194051871,
        "sender_full_name": "PV",
        "timestamp": 1586965984
    },
    {
        "content": "<p>If you put <code> ```lean </code> at the top then you get syntax highlighting. If you put <code>variables (p q : Prop)</code> then your code compiles as it stands so people can just cut and paste it. The second example is a type mismatch so your question is difficult to make sense of.</p>",
        "id": 194052747,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586966333
    },
    {
        "content": "<p>The second example should be</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">hpp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">),</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 194052855,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586966377
    },
    {
        "content": "<p>In the first example, the <code>have</code> means \"put the goal on hold, I'm adding another proof to the local context\"</p>",
        "id": 194052878,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586966386
    },
    {
        "content": "<p>Thanks, so is it just a disadvantage that you don't get the same context window when trying to use the lambda syntax and skipping the have and from?</p>",
        "id": 194054180,
        "sender_full_name": "PV",
        "timestamp": 1586966890
    },
    {
        "content": "<p>you don't get the context window either way</p>",
        "id": 194054497,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1586967018
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">hpp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>gives the same as the first example</p>",
        "id": 194054522,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586967033
    },
    {
        "content": "<p>The advantage of <code>have</code> is simply that it reads more naturally and is easier to format</p>",
        "id": 194054548,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1586967050
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/syntax.20in.20term.20mode/near/194054522\" title=\"#narrow/stream/113489-new-members/topic/syntax.20in.20term.20mode/near/194054522\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">hpp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>gives the same as the first example</p>\n</blockquote>\n<p>Ahh, ok so giving it the \": q\" shows the context window as the have and from example.  Thanks.  Sorry that is what I meant by the context windows matching between the two.</p>",
        "id": 194054798,
        "sender_full_name": "PV",
        "timestamp": 1586967169
    }
]