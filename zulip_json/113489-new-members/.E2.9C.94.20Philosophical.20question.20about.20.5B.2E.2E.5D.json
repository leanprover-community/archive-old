[
    {
        "content": "<p>OK, thanks for the info. I'll take it as NO.</p>",
        "id": 252163209,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1630928493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 252163236,
        "sender_full_name": "Notification Bot",
        "timestamp": 1630928516
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Philosophical.20question.20about.20.5B.2E.2E.5D/near/252159410\">said</a>:</p>\n<blockquote>\n<p>On the wishlist for a while has been a \"derive handler\" for <code>inhabited</code>, so that you could just write <code>@[derive inhabited]</code> before a definition and hope automation can take care of it.</p>\n</blockquote>\n<p>What do you mean by this? Things like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[derive inhabited]</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">N</span>\n<span class=\"bp\">|</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">N</span>\n<span class=\"bp\">|</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"n\">N</span>\n</code></pre></div>\n<p>work. What are the situations I am missing?</p>",
        "id": 252196211,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1630944829
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n\n<span class=\"kd\">@[derive inhabited]</span> <span class=\"kd\">def</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">ℕ</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n</code></pre></div>\n<p>also works.</p>",
        "id": 252197550,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630945672
    },
    {
        "content": "<p>Kevin's example is just the \"delta\" derive handler, which can derive anything that is available just by unfolding the definition.</p>",
        "id": 252232484,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630970965
    },
    {
        "content": "<p>But I'd been ignorant that Horatiu's example worked.</p>",
        "id": 252232550,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630971011
    }
]