[
    {
        "content": "<p>What's the best way to fill in this <code>sorry</code>?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">fintype</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">big_operators</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"err\">∑</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"err\">∑</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 209590276,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1599704846
    },
    {
        "content": "<p>I think there is <code>finset.sum_le_sum</code></p>",
        "id": 209590346,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1599704994
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"err\">∑</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"err\">∑</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>  <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_le_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"bp\">_</span> <span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 209590462,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1599705140
    },
    {
        "content": "<p>How well does <code>suggest</code> do with this?</p>",
        "id": 209590494,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599705239
    },
    {
        "content": "<p>Not so well when I tried it, I didn't see anything useful from a quick look anyway.</p>",
        "id": 209590539,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1599705262
    },
    {
        "content": "<p>I was editing things in <code>algebra.big_operators.basic</code> itself, so I wasn't able to see it with either <code>library_search</code> or <code>suggest</code></p>",
        "id": 209590568,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1599705328
    },
    {
        "content": "<p>Thanks for pointing me to it!</p>",
        "id": 209590577,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1599705357
    },
    {
        "content": "<p>At least for me library search and suggest didn't work, I had to fall back to the old trusty of guess the name of a useful lemma!</p>",
        "id": 209590620,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1599705391
    },
    {
        "content": "<p>kids these days with their <code>suggest</code> tactics</p>",
        "id": 209599282,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1599718261
    }
]