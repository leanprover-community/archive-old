[
    {
        "content": "<p>Is it possible to formulize that for every natural number <code>n</code>, there is a <code>fintype</code> whose <code>card</code> is <code>n</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.fintype.card</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">,</span> <span class=\"n\">fintype.card</span> <span class=\"n\">I</span> <span class=\"bp\">=</span> <span class=\"n\">n</span>\n</code></pre></div>",
        "id": 247080108,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1627140216
    },
    {
        "content": "<p>I was able to find all the proofs using <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#library_search\">tactic#library_search</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.fintype.card</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">fintype</span> <span class=\"n\">I</span><span class=\"o\">),</span> <span class=\"bp\">@</span><span class=\"n\">fintype.card</span> <span class=\"n\">I</span> <span class=\"n\">h</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">fin.fintype</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">fintype.card_fin</span> <span class=\"n\">n</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 247080378,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1627140555
    },
    {
        "content": "<p>That's the second new member question we've had today for which the answer was <code>by library_search</code> :-)</p>",
        "id": 247080461,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1627140650
    },
    {
        "content": "<p>Ah, actually, I had to know that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin\">docs#fin</a> existed too.</p>",
        "id": 247080628,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1627140911
    },
    {
        "content": "<p>Aah yes, you need to know that mathlib has a \"canonical\" type of size n.</p>",
        "id": 247080648,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1627140951
    }
]