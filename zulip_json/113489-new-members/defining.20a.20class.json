[
    {
        "content": "<p>I seem to have set up a class in a bad way, or perhaps am using it in the wrong way.  I cannot get access to the information in the class hypothesis without an extra-line workaround.  Toy example (error is \"invalid field notation, function 'sevenish.seven' does not have explicit argument with type (sevenish ...)\":</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">group_power</span>\n\n<span class=\"n\">class</span> <span class=\"n\">sevenish</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">seven</span> <span class=\"o\">:</span> <span class=\"bp\">âˆ€</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"bp\">^</span> <span class=\"mi\">7</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">sevenish</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">^</span> <span class=\"mi\">14</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:=</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">seven</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- error</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">sevenish</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">^</span> <span class=\"mi\">14</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:=</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">seven</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:=</span> <span class=\"n\">h1</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- works, can continue with the hypothesis `g ^ 7 = 1`</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p><a href=\"https://github.com/leanprover-community/mathlib/blob/4760a33ade7444ff1e3cb82052d5685c57f48542/src/geometry/manifold/charted_space.lean#L363\">Here</a> is the real example, btw.</p>",
        "id": 204322557,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595115030
    },
    {
        "content": "<p>I think <code>sevenish.seven g</code> should work if you don't name the instance with h.</p>",
        "id": 204323129,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1595116276
    },
    {
        "content": "<p>But I'm not near a computer.</p>",
        "id": 204323132,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1595116289
    },
    {
        "content": "<p>Yes, thank you!</p>",
        "id": 204323664,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595117329
    },
    {
        "content": "<p>I'm surprised that <code>h.seven</code> doesn't work.</p>",
        "id": 204323679,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595117389
    },
    {
        "content": "<p>There's some protection around fields of instances right? For example, you can see what happens when you try to do <code>cases h</code>. I wonder if this is why it doesn't work.</p>",
        "id": 204323843,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1595117722
    },
    {
        "content": "<p>Presumably <code>h.seven</code> would work if you use <code>(h : sevenish G)</code> instead of <code>[...]</code></p>",
        "id": 204324572,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1595118970
    },
    {
        "content": "<p>scratch that. <code>h.seven</code> doesn't work even if you use <code>(h : ...)</code>.</p>",
        "id": 204326340,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1595122246
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> to <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/defining.20a.20class\">#general &gt; defining a class</a></p>",
        "id": 204333387,
        "sender_full_name": "Notification Bot",
        "timestamp": 1595135031
    }
]