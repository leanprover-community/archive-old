[
    {
        "content": "<p>Exactly, when there is an error it doesn't always produce an error: that's the error! Sometimes it does, sometimes it doesn't. It's hit and miss. But I don't yet know why.</p>",
        "id": 273484198,
        "sender_full_name": "Robert Watson",
        "timestamp": 1646052773
    },
    {
        "content": "<p>I'm afraid there is nothing we can do to help you without a mwe.</p>",
        "id": 273484433,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646052941
    },
    {
        "content": "<p>Can you post a screenshot?</p>",
        "id": 273484508,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1646052963
    },
    {
        "content": "<p>On the Natural Numbers Game, advanced addition world 13/13. I am not trying to complete it though, I've done that. This is more or less an mwe just to illustrate a really simple question:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">add_one</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">add_one_eq_succ</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">add_one2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">add_one</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"n\">add_one2</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>The query:</p>\n<p>Is there a way to do this in one tactic USING add_one_eq_succ n? eg rw (‚Üêadd_one_eq_succ n) at f   RATHER THAN using the 'different' tactic  succ_eq_add_one?  What I mean is...if a tactic is of the form a = b, then how do you do a rw using b = a without having to prove b = a from a = b? Is there a simple syntax for that? </p>\n<p>That's all the question is!</p>",
        "id": 273486645,
        "sender_full_name": "Robert Watson",
        "timestamp": 1646054157
    },
    {
        "content": "<p>My guess with no context: you are missing a right brace somewhere.</p>",
        "id": 273517920,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1646066590
    }
]