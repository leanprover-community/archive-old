[
    {
        "content": "<p>Hello. I am new to Lean (only finished the natural number game). I am trying to understand what \"Infix\" mean/does, an explanation is appreciated.</p>",
        "id": 322754290,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1674319718
    },
    {
        "content": "<p><code>&lt;expr&gt; &lt;op&gt; &lt;expr&gt;</code> is infix notation, where &lt;op&gt; is just any operation. So say 1 + 1 or 37 * 5.<br>\nOn the other hand, there are postfix and prefix notations, where you have <code>&lt;expr&gt; &lt;expr&gt; &lt;op&gt;</code> or <code>&lt;op&gt; &lt;expr&gt; &lt;expr&gt;</code>. For example, <code>3 3 +</code> would evaluate to 6 in postfix notation. Using such notation has an interesting implication that you don't need parentheses, since things like <code>5 * (3 + 4)</code> will be written as <code>3 4 + 5 *</code> or <code>* + 3 4 5</code> (or other equivalents) :)</p>",
        "id": 322754747,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1674319950
    },
    {
        "content": "<p>Interesting! I've seen the infix being followed by :55, what is that?</p>",
        "id": 322755230,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1674320200
    },
    {
        "content": "<p>That's the binding power of the notation. For example Lean will interpret <code>1 + 2 * 3</code> as <code>1 + (2 * 3)</code> because the binding power of <code>*</code> (70 IIRC) is greater than the binding power of <code>+</code> (65)</p>",
        "id": 322758380,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674321691
    },
    {
        "content": "<p>Or in more classic terms, the \"precedence order\" :D</p>",
        "id": 322758750,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1674321865
    },
    {
        "content": "<p>Awesome, thank you.</p>",
        "id": 322758833,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1674321899
    }
]