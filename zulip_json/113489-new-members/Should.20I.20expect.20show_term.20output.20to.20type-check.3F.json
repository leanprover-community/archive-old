[
    {
        "content": "<p>If I add <code>by show_term</code> to the beginning of this proof, the output looks fairly sensible, but it fails to type-check in a couple places. Is that expected? <a href=\"https://gist.github.com/jorendorff/8229ce03eb29e6031602f4003bfbf153\">https://gist.github.com/jorendorff/8229ce03eb29e6031602f4003bfbf153</a></p>",
        "id": 201392661,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592574780
    },
    {
        "content": "<p>Both errors are around <code>eq.rec</code>, which I guess has special elaborator support. I wasn't able to fix either one just by adding type-annotations; one I was able to fix by adding a call to <code>iff_of_eq</code> <em>and</em> a type annotation</p>",
        "id": 201392835,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592574856
    },
    {
        "content": "<p>the other one, I gave up</p>",
        "id": 201392881,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592574877
    },
    {
        "content": "<p>Did it try to use dot notation for <code>eq.rec</code>?</p>",
        "id": 201393333,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592575083
    },
    {
        "content": "<p>The general answer is unfortunately \"No, you should not expect output from the pretty printer to always round-trip. There's no perfect balance between readable output and correct output.\" But special cases may be fixable!</p>",
        "id": 201399813,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1592578105
    },
    {
        "content": "<blockquote>\n<p>Did it try to use dot notation for <code>eq.rec</code>?</p>\n</blockquote>\n<p>No, that wasn't the problem. Here's the output, with comments telling what the errors were <a href=\"https://gist.github.com/jorendorff/8229ce03eb29e6031602f4003bfbf153#file-uniqueness_show_term_output-lean\">https://gist.github.com/jorendorff/8229ce03eb29e6031602f4003bfbf153#file-uniqueness_show_term_output-lean</a></p>",
        "id": 201401314,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592578753
    },
    {
        "content": "<p>I find those sorts of puzzles quite messy to solve. You can probably get everything compiling if you tell Lean the types of a few terms (i.e. replace <code>x</code> with <code>(x : X)</code>) but if you don't understand the proof properly it's difficult to fathom out what the terms are (for me, at least)</p>",
        "id": 201401567,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592578841
    },
    {
        "content": "<p>I was really surprised that I wasn't able to fix these errors using type annotations.</p>",
        "id": 201401677,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592578888
    },
    {
        "content": "<p>If you <code>set_option pp.all true</code> you are much more likely to get something which survives the round trip -- and also much more likely to get something which is unwieldy and incomprehensible</p>",
        "id": 201401713,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592578909
    },
    {
        "content": "<p>oh! but i can be selective... thanks</p>",
        "id": 201401797,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592578930
    },
    {
        "content": "<p>if you can see the wood from the trees</p>",
        "id": 201401826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592578943
    },
    {
        "content": "<p>it actually translates pretty cleanly, because almost all of my proof uses extremely simple tactics</p>",
        "id": 201401877,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592578964
    },
    {
        "content": "<p>I think I'll try again with the type annotations; I was tired when I tried it last night</p>",
        "id": 201401897,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592578971
    },
    {
        "content": "<p>(probably 97% of the problem honestly)</p>",
        "id": 201401926,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592578980
    },
    {
        "content": "<p>This is basically the stupidity of the stupid triangle in action</p>",
        "id": 201402014,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592579016
    },
    {
        "content": "<p><code>rw</code> is just better than the Lean elaborator</p>",
        "id": 201402048,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592579032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306644\">@Jason Orendorff</span> do you know about the widgety VS Code extension? This makes your job a lot easier.</p>",
        "id": 201403602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592579700
    },
    {
        "content": "<p>The widget version of the VS Code extension shows you the expected type of everything in that pp.all mess.</p>",
        "id": 201404433,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592580095
    },
    {
        "content": "<p>I pasted in the @eq.rec stuff in the two places where you had an error, and now I get another error in a new place :-(</p>",
        "id": 201405257,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592580490
    },
    {
        "content": "<p>heh!!</p>",
        "id": 201405304,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592580517
    },
    {
        "content": "<p>The first one is big</p>",
        "id": 201405321,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592580525
    },
    {
        "content": "<p>stupid computer</p>",
        "id": 201405328,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592580528
    },
    {
        "content": "<p>pasting it worked for me just now</p>",
        "id": 201405418,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592580563
    },
    {
        "content": "<p>Nice! I might well have slipped up then.</p>",
        "id": 201405439,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592580575
    },
    {
        "content": "<p>hmm, even the fully expanded version times out on <a href=\"http://codewars.com\">codewars.com</a>, but that's a separate issue...</p>",
        "id": 201408926,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592582208
    },
    {
        "content": "<p>Give an upvote to the codewars version upgrade which will make everything twice as fast :-)</p>",
        "id": 201408976,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592582242
    },
    {
        "content": "<p>is that ... an issue somewhere that i can vote on, or...?</p>",
        "id": 201409093,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592582304
    },
    {
        "content": "<p>I think it was mentioned in <a class=\"stream\" data-stream-id=\"238266\" href=\"/#narrow/stream/238266-Codewars\">#Codewars</a></p>",
        "id": 201409118,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592582318
    },
    {
        "content": "<p>making things faster is a good exercise <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 201415090,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592585470
    },
    {
        "content": "<p>I'm very surprised that the original proof times out</p>",
        "id": 201417434,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592586730
    },
    {
        "content": "<p>Submitting an empty program times out! Apparently it is timing out trying to check mathlib's basic topology definitions and lemmas</p>",
        "id": 201425711,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592591416
    },
    {
        "content": "<p>Well then</p>",
        "id": 201425764,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592591460
    },
    {
        "content": "<p>Details in <a href=\"https://github.com/codewars/codewars-runner-cli/issues/824#issuecomment-646731296\">https://github.com/codewars/codewars-runner-cli/issues/824#issuecomment-646731296</a></p>",
        "id": 201425767,
        "sender_full_name": "Jason Orendorff",
        "timestamp": 1592591463
    }
]