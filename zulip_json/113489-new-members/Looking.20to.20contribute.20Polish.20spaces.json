[
    {
        "content": "<p>Regarding the metrizable bit,  I looked at some theorems involving Polish spaces, and it looks like most of them have a formula for the complete metric. Thus it might be fine to define a “Polish metric space,\" which is just a metric space that is complete and separable.</p>\n<p>I will think about the pros and cons of metrizability later. I'll go look at the topology section and see what ways I can express Polish spaces.</p>",
        "id": 251338621,
        "sender_full_name": "Carlos Silva",
        "timestamp": 1630391645
    },
    {
        "content": "<p>Johan, you're making it much more complicated than needed:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">polish_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">uniform_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n  <span class=\"kd\">extends</span> <span class=\"n\">separable_space</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">complete_space</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">metrizable</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">m.to_uniform_space</span> <span class=\"bp\">=</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 251343208,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630394864
    },
    {
        "content": "<p>My recommendation is to prove all lemmas simply for complete metric space and worry about polish spaces only when dealing with examples.</p>",
        "id": 251343336,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630394928
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/22a297ca0f7b8d2a0be3cec12c3e73285ac78bc5/src/topology/metric_space/basic.lean#L1898-L1906\">This declaration</a> can be useful if you indeed have a type which already has a topology and you want to prove it's metrizable.</p>",
        "id": 251343627,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630395093
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I wasn't sure whether we wanted to assume <code>uniform_space</code> or merely <code>topological_space</code>.</p>",
        "id": 251344771,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630395675
    },
    {
        "content": "<p>You definitely only want to assume a topology, not a uniform structure.</p>",
        "id": 251347275,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1630397115
    },
    {
        "content": "<p>Apparently <a href=\"https://github.com/leanprover-community/mathlib/issues/8759\">#8759</a> added metrizable spaces. (I missed that PR. Holidays <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span>)</p>",
        "id": 251354683,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630401453
    },
    {
        "content": "<p>But not as a typeclass, apparently.</p>",
        "id": 251354794,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630401504
    }
]