[
    {
        "content": "<p>Dear All,</p>\n<p>I think that I convinced Lean that the morphism Spec R[x] --&gt; Spec R, induced by the natural inclusion C : R --&gt; R[x], is an open map.  I am not sure if this is already in mathlib, and I am certain that the version that I have proved will <strong>never</strong> be acceptable for mathlib!  Nevertheless, I am not sure that I can make it into something mathlibbable in any reasonable amount of time!  So... what should I do?  Is anyone interested in this fact?  I am happy to share my code!</p>",
        "id": 208317129,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598603404
    },
    {
        "content": "<p>Sure, you could paste it into a github gist</p>",
        "id": 208318810,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598604716
    },
    {
        "content": "<p>You are right that this is not in mathlib</p>",
        "id": 208318876,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598604730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> I would be very interested in taking a look!</p>",
        "id": 208318951,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598604784
    },
    {
        "content": "<p>If I understand correctly what gists are, I think that you can find the gist here:</p>",
        "id": 208319497,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598605132
    },
    {
        "content": "<p><a href=\"https://gist.github.com/adomani/c08807fb6f5d0e913e156f7e836bd7fa#file-2020-08-24-openmaprx2r-lean\">https://gist.github.com/adomani/c08807fb6f5d0e913e156f7e836bd7fa#file-2020-08-24-openmaprx2r-lean</a></p>",
        "id": 208319534,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598605167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> Thanks, I'm looking at it right now!</p>",
        "id": 208319848,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598605364
    },
    {
        "content": "<p>I am of course very happy with any form of comment, especially the negative ones!!</p>",
        "id": 208319944,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598605442
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> Concerning adding this to mathlib... I guess we want to show that a flat morphism of schemes is open, at some point...</p>",
        "id": 208320347,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598605689
    },
    {
        "content": "<p>So if there is not immediate application of this stuff, I'm not sure if we should add it directly.</p>",
        "id": 208320367,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598605708
    },
    {
        "content": "<p>But it is of course a very nice display of what someone can do with Lean after a little bit of practice!</p>",
        "id": 208320394,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598605728
    },
    {
        "content": "<p>Concerning cleaning up:</p>\n<ol>\n<li>Some of the lemmas are 1-liners, and can probably be inlined.</li>\n<li>The formatting doesn't look like mathlib code. Not sure if you care.</li>\n<li>Some of the names are confusing for people with a Lean background. For example, you have a polynomial (iirc) called <code>tt</code>. But <code>tt</code> is always the truth value <code>tt : bool</code>. Of course the code works, but it looks a bit funny to me.</li>\n</ol>",
        "id": 208320533,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598605819
    },
    {
        "content": "<p>Things like L295 are a nice place to learn about the <code>rintro</code> tactic. It allows you to do the <code>intro + cases + cases</code> in one go.</p>",
        "id": 208320644,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598605917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/is_open.20Spec.20R.5Bx.5D.20--.3E.20Spec.20R/near/208320367\">said</a>:</p>\n<blockquote>\n<p>So if there is not immediate application of this stuff, I'm not sure if we should add it directly.</p>\n</blockquote>\n<p>Ok, my intended application is as a step towards Chevalley's theorem.  I am planning now to prove what happens to closed sets under the map Spec R[x] to Spec R.  I agree not to add it to mathlib.</p>",
        "id": 208320722,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598605970
    },
    {
        "content": "<p>Right, if you manage to prove Chevalley, then we certainly want this in mathlib (-;</p>",
        "id": 208320762,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598606003
    },
    {
        "content": "<p>Ok, I will clean up my code a bit, following your suggestions and will also try to advance towards Chevalley's theorem</p>",
        "id": 208320837,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598606047
    },
    {
        "content": "<p>once I know what happens to closed sets under the projection, the rest is packaging everything into an induction</p>\n<p>This does not mean that I know how to do it in Lean, though!  Ahaha</p>",
        "id": 208320880,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598606086
    },
    {
        "content": "<p>Ooh, that might be really sweet</p>",
        "id": 208320899,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598606108
    },
    {
        "content": "<p>Lean is very good at induction (-; You'll probably want to use an inductive type/prop.</p>",
        "id": 208320920,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598606131
    },
    {
        "content": "<p>Ok, once I have the closed stuff, I will try to learn about inductive types and propositions</p>",
        "id": 208320940,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598606157
    },
    {
        "content": "<p>If you want to share your screen to get feedback on the cleaning up, I'm sure there will always be someone around who can help you.</p>",
        "id": 208320987,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598606169
    },
    {
        "content": "<p>screen sharing would be via zulip?</p>",
        "id": 208321019,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598606214
    },
    {
        "content": "<p>Ooh, any of the 1000 apps that people use these days</p>",
        "id": 208321069,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598606252
    },
    {
        "content": "<p>I typically use jitsi, but kevin's discord is another option</p>",
        "id": 208321089,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598606264
    },
    {
        "content": "<p>ok, thanks!  sorry for being so slow and needing explanations about anything!  I am starting to understand how lean feels...</p>",
        "id": 208321152,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598606297
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/is_open.20Spec.20R.5Bx.5D.20--.3E.20Spec.20R/near/208321089\">said</a>:</p>\n<blockquote>\n<p>I typically use jitsi, but kevin's discord is another option</p>\n</blockquote>\n<p>yes, I have used discord with kevin and kenny</p>",
        "id": 208321163,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598606318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/is_open.20Spec.20R.5Bx.5D.20--.3E.20Spec.20R/near/208321152\">said</a>:</p>\n<blockquote>\n<p>ok, thanks!  sorry for being so slow and needing explanations about anything!  I am starting to understand how lean feels...</p>\n</blockquote>\n<p>No worries! We've all been through this phase (-;</p>",
        "id": 208321688,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598606737
    }
]