[
    {
        "content": "<p>How can I close the second example? (it is a little bit weird to me that <code>norm_num</code> doesn't work for the second one...)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.set.lattice</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.nat.prime</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">set</span> <span class=\"n\">nat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">primes</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"n\">prime</span> <span class=\"n\">x</span><span class=\"o\">}</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">∈</span> <span class=\"n\">primes</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n   <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 241113052,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1622618119
    },
    {
        "content": "<p><code>norm_num</code> won't unfold the definition of <code>primes</code> for you so it can't make any progress</p>",
        "id": 241113678,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622618685
    },
    {
        "content": "<p>It's not its job to unfold things and it sticks to its job</p>",
        "id": 241113747,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622618748
    },
    {
        "content": "<p>maybe <code>norm_num [primes]</code> works.</p>",
        "id": 241114163,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622619051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/primes/near/241114163\">said</a>:</p>\n<blockquote>\n<p>maybe <code>norm_num [primes]</code> works.</p>\n</blockquote>\n<p>Sadly, it wouldn't work. What can I do to close the goal then?</p>",
        "id": 241152571,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1622642357
    },
    {
        "content": "<p><code>simp [primes], norm_num</code> should work</p>",
        "id": 241152773,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622642424
    },
    {
        "content": "<p>or you can <code>unfold primes</code> (which does <code>simp [primes]</code> under the hood)</p>",
        "id": 241153128,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622642579
    },
    {
        "content": "<p>actually just <code>unfold primes</code> won't be enough since you also need to cancel the mem and set_of</p>",
        "id": 241153236,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622642624
    },
    {
        "content": "<p>although <code>norm_num</code> will probably do this since it uses the default simp set iirc</p>",
        "id": 241153328,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622642650
    },
    {
        "content": "<p>by the way <code>simp [primes]</code> has an informative error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ambiguous</span> <span class=\"n\">overload</span><span class=\"o\">,</span> <span class=\"n\">possible</span> <span class=\"n\">interpretations</span>\n    <span class=\"n\">primes</span>\n    <span class=\"n\">nat.primes</span>\n</code></pre></div>",
        "id": 241153517,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622642756
    },
    {
        "content": "<p><code>norm_num [_root_.primes]</code> works</p>",
        "id": 241153650,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622642795
    },
    {
        "content": "<p>It does work!</p>",
        "id": 241153864,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1622642883
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 241153931,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1622642930
    },
    {
        "content": "<p>It should work here and it usually makes some kind of progress.</p>",
        "id": 241153998,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622642980
    },
    {
        "content": "<p>you will need to be more specific</p>",
        "id": 241154019,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622642992
    },
    {
        "content": "<p>I don't recommend <code>open nat</code> because it has a tendency to cause name conflicts</p>",
        "id": 241154105,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622643021
    },
    {
        "content": "<p>although I guess in this case it's due to your own definition overlapping with nat's</p>",
        "id": 241154160,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622643055
    },
    {
        "content": "<p>Could you explain what does <code>_root_</code> mean in <code>_root_.primes</code>?</p>",
        "id": 241154339,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1622643132
    },
    {
        "content": "<p><code>do_not_auto_insert_a_namespace.primes</code></p>",
        "id": 241154386,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622643158
    },
    {
        "content": "<p>it is being used here to disambiguate between the absolute path <code>primes</code> and <code>nat.primes</code> since with <code>open nat</code> the unqualified <code>primes</code> could refer to either of them</p>",
        "id": 241154495,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622643224
    },
    {
        "content": "<p>think of it like <code>/primes</code> vs <code>/nat/primes</code> instead of <code>primes</code> as a path</p>",
        "id": 241154587,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622643248
    }
]