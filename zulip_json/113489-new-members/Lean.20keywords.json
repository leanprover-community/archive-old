[
    {
        "content": "<p>Hi all,</p>\n<p>Is there a glossary or lexicon of all the Lean keywords and how they work? I've been looking through parts of \"Theorem Proving in Lean\" (<a href=\"https://leanprover.github.io/theorem_proving_in_lean/\">https://leanprover.github.io/theorem_proving_in_lean/</a>) but my issue is that I don't know which parts to look in. For example, is <code>let</code> going to appear under \"Propositions and Proofs\", \"Tactics\", \"Interacting with Lean\", or somewhere else? (I can't just search for <code>let</code> because it appears a lot in the exposition. The word \"keyword\" doesn't appear I don't think.) Other keywords I'd like to completely understand: <code>instance</code> <code>class</code> <code>show</code> <code>from</code> <code>by</code> <code>namespace</code>... also some tactics, <code>convert</code> <code>refine</code>.</p>\n<p>Note: I've done some of the tutorials (natural number game, proof of the intermediate value theorem, some notes from LFCTM2020, some stuff on my own). So I've learned a bunch of the basic \"mathy\" stuff, like how to <code>split</code> a goal <code>p \\and q</code> into two parts and how to use <code>have</code> and <code>obtain</code>, but I don't know much about the \"software\" aspects (some keywords, wisdom on using placeholders, defining typeclasses, etc)  and often don't know how to troubleshoot.</p>\n<p>I've also looked in the full API documentation (<a href=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a>), but there also, I don't know where to look/search and a lot of it is over my head.</p>\n<p>Thanks!<br>\nJake</p>",
        "id": 248869141,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1628525250
    },
    {
        "content": "<p>Does the reference manual work for your purpose of having a glossary?<br>\n<a href=\"https://leanprover.github.io/reference/\">https://leanprover.github.io/reference/</a></p>",
        "id": 248872366,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1628526616
    },
    {
        "content": "<p>That looks helpful! I'll take a look. I somehow didn't realize that was a different document from Theorem Proving in Lean. Maybe that's why I was having trouble finding things, haha.</p>",
        "id": 248872884,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1628526861
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 248872903,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1628526870
    },
    {
        "content": "<p>Note that the reference manual hasn't been updated in a long time so some things might be inaccurate.</p>",
        "id": 248873298,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1628527052
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/QPjKMisMDEVSyq1uI57XInFa/lean-tactics.pdf\">lean-tactics.pdf</a> <br>\nThis \"cheatsheet\" could also come handy. However, it is not a comprehensive list of Lean's keywords.</p>",
        "id": 248874765,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1628527753
    },
    {
        "content": "<p>For mathlib tactics there are pages in the mathlib docs like <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#convert\">tactic#convert</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#refine\">tactic#refine</a></p>",
        "id": 248884656,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1628532145
    },
    {
        "content": "<p>And <code>instance</code>, <code>class</code>, <code>show</code>, <code>from</code> and <code>by</code> are all in  <a href=\"https://leanprover.github.io/theorem_proving_in_lean/\">#tpil</a> somewhere. <code>show</code> and <code>from</code> very early on, <code>instance</code> and <code>class</code> in the section on typeclasses, and <code>by</code> is just <code>begin...end</code></p>",
        "id": 248895782,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1628537336
    },
    {
        "content": "<p>Thanks for the various links!</p>",
        "id": 248936814,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1628566494
    }
]