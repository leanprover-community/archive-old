[
    {
        "content": "<p>I have found some odd behavior with the <code>simp?</code> tactic. In certain cases, it closes the goal, but the \"Try this\" <code>simp only</code> command it suggests doesn't actually work to close the goal. A MWE is below. Is this a bug or just something strange happening on my end? On the latest version of mathlib if that matters.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span><span class=\"bp\">?</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- simp? suggests simp only [add_zero, eq_self_iff_true, zero_pow'],</span>\n  <span class=\"c1\">-- which does not close the goal</span>\n  <span class=\"c1\">-- squeeze_simp suggests simp only [zero_pow', ne.def, bit0_eq_zero,</span>\n  <span class=\"c1\">-- nat.one_ne_zero, not_false_iff], which does close the goal</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 282735913,
        "sender_full_name": "Michael Levenkov",
        "timestamp": 1652846808
    },
    {
        "content": "<p>Unfortunately <code>simp?</code> is buggy. <code>squeeze_simp</code> is slower, but much more reliable.</p>",
        "id": 282740064,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652851184
    },
    {
        "content": "<p>I don't know how to fix <code>simp?</code> and I think everybody is just hoping that in a few months we'll be using the Lean 4 version where everything will \"Just Work\".</p>",
        "id": 282740117,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652851217
    }
]