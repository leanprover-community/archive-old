[
    {
        "content": "<p>I have a polynomial ring and would like to take the sum and the product of some of the variables.  This is what I tried; I have added the errors I got as comments. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.mv_polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.mv_polynomial.comm_ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.zmod.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.ideal.operations</span>\n\n\n<span class=\"kn\">open</span> <span class=\"n\">mv_polynomial</span>\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">section</span>\n<span class=\"c1\">-- column sum of an nxn matrix of variables  using zmod</span>\n\n<span class=\"kd\">parameter</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n\n<span class=\"kd\">abbreviation</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">zmod</span> <span class=\"n\">n</span> <span class=\"bp\">×</span> <span class=\"n\">zmod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">zmod</span> <span class=\"mi\">101</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"n\">S</span>\n<span class=\"c1\">-- OK.</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">zmod</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">zmod</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">,</span><span class=\"n\">j</span><span class=\"o\">)</span>\n<span class=\"c1\">-- unexpected token at ∑</span>\n<span class=\"k\">#check</span> <span class=\"n\">h</span>\n<span class=\"c1\">-- unknown identifier \"h\"</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>How should I do this? (I looked in <em>Theorem proving in Lean</em> and <em>Mathematics in Lean</em> for examples of using <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Σ</mi></mrow><annotation encoding=\"application/x-tex\">\\Sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Σ</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∏</mo></mrow><annotation encoding=\"application/x-tex\">\\prod</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span></span></span></span>, but, I might have missed it.)</p>\n<p>As a supplementary question: is there a way to search using these unicode characters (in zulip or in the archive on github)?  <br>\nThanks.</p>",
        "id": 246336621,
        "sender_full_name": "Manoj Kummini",
        "timestamp": 1626545647
    },
    {
        "content": "<p><code>open_locale big_operators</code> will enable that notation</p>",
        "id": 246336694,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1626545771
    },
    {
        "content": "<p>The docs above <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.sum\">docs#finset.sum</a> should describe that notation</p>",
        "id": 246336710,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1626545806
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 246352926,
        "sender_full_name": "Manoj Kummini",
        "timestamp": 1626570623
    }
]