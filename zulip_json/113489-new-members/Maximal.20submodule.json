[
    {
        "content": "<p>I'm now defining the Jacobson radical of a (sub)module related to <a href=\"https://github.com/leanprover-community/mathlib/pull/13862\">#13862</a>, which is the intersection of all maximal submodules (containing a given submodule).<br>\nFor <a href=\"https://leanprover-community.github.io/mathlib_docs/ring_theory/jacobson_ideal.html#ideal.jacobson\"><code>ideal.jacobson</code></a>, the definition uses the typeclass <a href=\"https://leanprover-community.github.io/mathlib_docs/ring_theory/ideal/basic.html#ideal.is_maximal\"><code>ideal.is_maximal</code></a>. So if we want to generalize it to modules, maybe we want a new typeclass <code>submodule.is_maximal</code>, but we don't need it at least for defining the Jacobson radical (because a submodule <code>N</code> is maximal if <code>is_coatom N</code> is true).<br>\nI'm not sure whether we need <code>submodule.is_maximal</code>, and if so, also I can't see how this should be compatible with the already defined class <code>ideal.is_maximal</code>. Maybe if we define <code>submodule.is_maximal</code>, then for <code>I : ideal R</code> one can use <code>is_maximal I</code> since <code>ideal R</code> is defined to be <code>submodule R R</code>, so <code>ideal.is_maximal</code> will not be needed.</p>",
        "id": 284420498,
        "sender_full_name": "Haruhisa Enomoto",
        "timestamp": 1653963175
    },
    {
        "content": "<p>In my opinion we should have both (maybe defined in terms of each other, so defining <code>submodule.is_maximal N</code> as <code>is_coatom N</code>, but then defininig <code>ideal.is_maximal I</code> as <code>submodule.is_maximal I</code>? Both concepts are widely used and some people will get confused seeing <code>is_coatom</code> instead.</p>",
        "id": 284430172,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1653975902
    },
    {
        "content": "<p>I tried that, namely, define the typeclass <code>submodule.is_maximal</code> and put something like <code>@[class] def ideal.is_maximal := submodule.is_maximal</code>, but I got an ambiguity error for <code>I : ideal R</code>: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ambiguous</span> <span class=\"n\">overload</span><span class=\"o\">,</span> <span class=\"n\">possible</span> <span class=\"n\">interpretations</span>\n  <span class=\"n\">I.is_maximal</span>\n  <span class=\"n\">submodule.is_maximal</span> <span class=\"n\">I</span>\n</code></pre></div>\n<p>so problem is that <code>is_maximal I</code> has two interpretations, <code>submodule.is_maximal I</code> and <code>ideal.is_maximal I</code>, but of course they are equal (in some sense). How can I avoid it?</p>",
        "id": 284456875,
        "sender_full_name": "Haruhisa Enomoto",
        "timestamp": 1653994330
    },
    {
        "content": "<p>Why are you even defining <code>ideal.is_maximal</code> in the first place? <code>ideal</code> is a thin wrapper around <code>submodule</code>, so you can use <code>submodule.is_maximal</code> directly.</p>",
        "id": 284457108,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653994488
    },
    {
        "content": "<p>I think we want <code>ideal.is_maximal</code> when using e.g. <a href=\"https://leanprover-community.github.io/mathlib_docs/ring_theory/ideal/basic.html#ideal.is_maximal.is_prime\"><code>ideal.is_maximal.is_prime</code></a> and dot notation. If we have <code>h : is_maximal I</code> for <code>I : ideal R</code>, some proofs in mathlib use the notation <code>h.is_prime</code>, but for this to work we need <code>ideal.is_maximal</code>.</p>",
        "id": 284458574,
        "sender_full_name": "Haruhisa Enomoto",
        "timestamp": 1653995386
    },
    {
        "content": "<p>Well, you can rename <code>ideal.is_maximal.is_prime</code> to <code>submodule.is_maximal.is_prime</code>.</p>",
        "id": 284459318,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653995727
    },
    {
        "content": "<p>That renaming looks a little strange to me, because it seems to claim \"submodule which is maximal is prime\", but \"is_prime\" is only defined for ideals. Is it OK?</p>",
        "id": 284556266,
        "sender_full_name": "Haruhisa Enomoto",
        "timestamp": 1654045885
    },
    {
        "content": "<p>This is not such a problem. Allowing dot notation usually takes priority over strict semantical meaning, because it is so nice having it.</p>",
        "id": 284576374,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1654068765
    }
]