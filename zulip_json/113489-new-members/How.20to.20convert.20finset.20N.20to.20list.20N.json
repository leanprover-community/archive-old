[
    {
        "content": "<p>Given <code>s: finset N</code>, I want to get a list of sorted values, how do I do that? I tried <code>s.sort nat.lt</code> but that doesn't work.</p>",
        "id": 219414095,
        "sender_full_name": "Rui Liu",
        "timestamp": 1607556010
    },
    {
        "content": "<p>I think there's a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.to_list\">docs#finset.to_list</a> ?</p>",
        "id": 219414125,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607556042
    },
    {
        "content": "<p>I think it was more an <code>exists_list</code></p>",
        "id": 219414148,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607556074
    },
    {
        "content": "<p>There's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.sort\">docs#finset.sort</a></p>",
        "id": 219414187,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607556111
    },
    {
        "content": "<p>I guess <code>F.1.1</code> or something like that should spit out some list</p>",
        "id": 219414288,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607556190
    },
    {
        "content": "<p>You need to sort by a total relation, try <code>nat.le</code>. Best written as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">s.sort</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 219414293,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607556194
    },
    {
        "content": "<p>where <code>F</code> is a finset</p>",
        "id": 219414294,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607556195
    },
    {
        "content": "<p>Oh shit, <code>nat.le</code> works whereas <code>nat.lt</code> doesn't work? Why is that so?</p>",
        "id": 219414376,
        "sender_full_name": "Rui Liu",
        "timestamp": 1607556257
    },
    {
        "content": "<p>If you look at the docs it says it wants a total order</p>",
        "id": 219414392,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607556276
    },
    {
        "content": "<p>There's also a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.to_list\">docs#multiset.to_list</a> so you can do <code>F.1.to_list</code></p>",
        "id": 219414432,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607556324
    },
    {
        "content": "<p>you can just click through to see the definitions. <code>is_total</code> means <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_total\">docs#is_total</a> which is true for \\le but not \\lt</p>",
        "id": 219414439,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607556328
    },
    {
        "content": "<p>Oh, since we don't have <code>x &lt; x</code> in both direction, <code>&lt;</code> is not a total order, whereas <code>&lt;=</code> is!</p>",
        "id": 219414554,
        "sender_full_name": "Rui Liu",
        "timestamp": 1607556413
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 219414563,
        "sender_full_name": "Rui Liu",
        "timestamp": 1607556418
    },
    {
        "content": "<p>Right</p>",
        "id": 219414568,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607556423
    },
    {
        "content": "<p>(Oh, I just read that you wanted it sorted, sorry! If you don't care about sorting for some reason, you can convert to a multiset then to a list.)</p>",
        "id": 219414731,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607556527
    }
]