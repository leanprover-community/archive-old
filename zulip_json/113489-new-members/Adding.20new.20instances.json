[
    {
        "content": "<p>What is the general attitude for adding new instances? Should we add as much instances as possible or it is better to keep their number not too high (for performance reasons for example). I see that there is no <code>algebra R I.quotient</code>, where <code>I</code> is an ideal of <code>R</code>. Should I add it?</p>",
        "id": 220130835,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1608133144
    },
    {
        "content": "<p>The rules for adding instances are more complicated than that. It comes down to how the instance affects the overall search problem. Loops are bad, more instances are bad but only very slightly; instances are organized according to their type class (in this case <code>algebra</code>), so it depends on whether there are already many instances in this class and also how many search problems for other things go via this class (I would think not many, because <code>algebra</code> already has two input arguments).</p>",
        "id": 220131291,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608133352
    },
    {
        "content": "<p>The other major thing is whether there will be any competition for the things that this instance will satisfy, because non-defeq diamonds in the typeclass system are also bad</p>",
        "id": 220131492,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608133438
    },
    {
        "content": "<p>This sounds like a more powerful version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_action.quotient\">docs#mul_action.quotient</a>, right?</p>",
        "id": 220131503,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608133441
    },
    {
        "content": "<p>Yes. It is very easy ,<code>ring_hom.to_algebra (ideal.quotient.mk I)</code> is enough. To me it seems very natural to have it, but I can write it down explicitly in my theorems of course.</p>",
        "id": 220132300,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1608133735
    },
    {
        "content": "<p>smul is defined as <code>a * x</code>under the quotient, right?</p>",
        "id": 220133330,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608134182
    },
    {
        "content": "<p>Yes, it is  <code>(ideal.quotient.mk a) * x</code>.</p>",
        "id": 220133941,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1608134471
    },
    {
        "content": "<p>There is absolutely nothing deep or interesting in this particular case, I was just wondering  how to deal with missing instances that from a mathematical point of view are obvious.</p>",
        "id": 220134239,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1608134621
    },
    {
        "content": "<p>I only ask because I was worried that it might not be defeq to the mul_action instance</p>",
        "id": 220134734,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608134873
    },
    {
        "content": "<p>Ah, I see that there are subtle problems sometimes...</p>",
        "id": 220134848,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1608134921
    },
    {
        "content": "<p>Although actually that's not relevant here, ideals are not quotient_groups.</p>\n<p>Your instance sounds like a good ide ato me</p>",
        "id": 220136969,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608135696
    }
]