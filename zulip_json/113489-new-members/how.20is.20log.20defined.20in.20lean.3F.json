[
    {
        "content": "<p>I see that exp is defined as the limit of sum x^n/n! but I can't seem to find where log is defined? I'm hoping to be able to access something like: -log(1-x)=x+x^2/x+x^3/3+... (for |x|&lt;1/2, say)? Thanks!</p>",
        "id": 196802786,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1588871997
    },
    {
        "content": "<p>Searching for log at <a href=\"https://leanprover-community.github.io/mathlib_docs/\" title=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a> gives some info.</p>",
        "id": 196803214,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588872204
    },
    {
        "content": "<p>Thanks Kevin, I clicked around there for a while before asking, to no avail -- any more direct pointers please? What I'm hoping is the analog of:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">exp&#39;</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">cau_seq</span> <span class=\"n\">ℂ</span> <span class=\"n\">complex</span><span class=\"bp\">.</span><span class=\"n\">abs</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">z</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">/</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">fact</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">is_cau_exp</span> <span class=\"n\">z</span><span class=\"bp\">⟩</span>\n</code></pre></div>\n\n\n<p>which I see in the complex/exponential file, but I don't see a similar definition for log?... Thanks!</p>",
        "id": 196803717,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1588872447
    },
    {
        "content": "<p>hang on, I'll have a look</p>",
        "id": 196804378,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588872702
    },
    {
        "content": "<p>Did you actually typed log in the search form?</p>",
        "id": 196804464,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588872726
    },
    {
        "content": "<p>This brings to <a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/special_functions/exp_log.html#real.log\" title=\"https://leanprover-community.github.io/mathlib_docs/analysis/special_functions/exp_log.html#real.log\">https://leanprover-community.github.io/mathlib_docs/analysis/special_functions/exp_log.html#real.log</a> really fast</p>",
        "id": 196804716,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588872853
    },
    {
        "content": "<p><code>log</code> is defined on p200 of that file, as the inverse of exp (at least for positive inputs).</p>",
        "id": 196804775,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588872892
    },
    {
        "content": "<p>But I can't see the infinite sum fact there.</p>",
        "id": 196804866,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588872941
    },
    {
        "content": "<p>Ah thanks; I didn't know what classical.some was doing... So it's an inverse function; and is that expansion proved anywhere in Lean?</p>",
        "id": 196804949,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1588872967
    },
    {
        "content": "<p>Not that I can see. It might be tricky to prove as well, because I don't think we have the fact that we can differentiate a power series term by term, which would be the way I'd prove it.</p>",
        "id": 196805057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588873027
    },
    {
        "content": "<p>I don't think we have fund thm of calc either</p>",
        "id": 196805099,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588873049
    },
    {
        "content": "<p>The classical.some is hard to read in html doc because the proof is elided, but you can click the GitHub link to see the actual code</p>",
        "id": 196805171,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588873079
    },
    {
        "content": "<p>Both those things are in the pipes</p>",
        "id": 196805228,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588873096
    },
    {
        "content": "<p>FTC has an open PR, and differentiation of power series is very close to what Sébastien does those days</p>",
        "id": 196805282,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588873132
    },
    {
        "content": "<p>One could perhaps prove it as just a combinatorial identity -- open both series exp(-log(1-x)) = 1+[-log(1-x)]+[-log(1-x)]^2/2!+... <br>\n=1+[x+x^2/2+x^3/3+]+[x+x^2/2+x^3/3+]^2/2!+... <br>\nOpen things up and see that everything combines into 1+x+x^2+x^3+... which Lean does know is (1-x)^(-1)...?</p>",
        "id": 196805692,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1588873310
    },
    {
        "content": "<p>It sounds like a nice project (and certainly something we want in mathlib). If you want to give it a try you should coordinate with Sébastien.</p>",
        "id": 196807129,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588874003
    },
    {
        "content": "<p>Of course if you prove it using power series you'll still have the issue of checking all the rearrangements converge</p>",
        "id": 196807882,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588874333
    },
    {
        "content": "<p>Sure, sounds like fun. I'm sorry, I'm a newbie here - what is Sebastien's last name?</p>",
        "id": 196817732,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1588878873
    },
    {
        "content": "<p>The convergence of the log power series should be \"easy\", no? It's dominated termwise by the geometric series, which Lean knows...? (Of course, a lot of things I thought would be easy haven't been...)</p>",
        "id": 196817933,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1588878963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span> : <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span></p>",
        "id": 196818597,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588879300
    },
    {
        "content": "<p>Alex, I'm really sorry about that. There are many many people on this chat now, and I try to answer many questions really fast. I'm a bit lost about who knows who and what.</p>",
        "id": 196824325,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588882269
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252920\">Alex Kontorovich</span> <a href=\"#narrow/stream/113489-new-members/topic/how.20is.20log.20defined.20in.20lean.3F/near/196802786\" title=\"#narrow/stream/113489-new-members/topic/how.20is.20log.20defined.20in.20lean.3F/near/196802786\">said</a>:</p>\n<blockquote>\n<p>I see that exp is defined as the limit of sum x^n/n! but I can't seem to find where log is defined? I'm hoping to be able to access something like: -log(1-x)=x+x^2/x+x^3/3+... (for |x|&lt;1/2, say)? Thanks!</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/issues/2646\" title=\"https://github.com/leanprover-community/mathlib/issues/2646\">#2646</a></p>",
        "id": 197044682,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1589103216
    }
]