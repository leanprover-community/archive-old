[
    {
        "content": "<p>How can I subtract a set from a finset and get a finset?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">measure_theory.measure_space</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.ereal</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">measure_theory</span> <span class=\"n\">measure_theory.measure_space</span> <span class=\"n\">classical</span> <span class=\"n\">set</span> <span class=\"n\">real</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">finsub</span>  <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span> <span class=\"n\">t</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span><span class=\"bp\">ᶜ</span>\n</code></pre></div>\n<p>doesn't work</p>",
        "id": 231175725,
        "sender_full_name": "Iocta",
        "timestamp": 1616279336
    },
    {
        "content": "<p>Have you looked through the <code>finset</code> docs? Set differences are called <code>sdiff</code>.</p>",
        "id": 231176046,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1616279761
    },
    {
        "content": "<p>That only works on finsets</p>",
        "id": 231176177,
        "sender_full_name": "Iocta",
        "timestamp": 1616279898
    },
    {
        "content": "<p>Ah, my bad, I misread.</p>",
        "id": 231176200,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1616279976
    },
    {
        "content": "<p>You can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.filter\">docs#finset.filter</a> and filter out the stuff that's not in the set. I don't know if there is a better way.</p>",
        "id": 231176525,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1616280414
    },
    {
        "content": "<p>You could also work with sets and use <code>set.finite</code>. Do whatever you need in <code>set</code>, and then at the very end when you need a finset, use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite.to_finset\">docs#set.finite.to_finset</a>.</p>",
        "id": 231176634,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1616280551
    }
]