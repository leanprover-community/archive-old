[
    {
        "content": "<p>In <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/group/pi.html\"><code>algebra.group.pi</code></a> I see the type class constraint often written as <code>[Π i, mul_one_class $ f i]</code>. Is that different from <code>[Π i, mul_one_class (f i)]</code> or (more interestingly) from <code>[∀ i, mul_one_class $ f i]</code>?</p>",
        "id": 274264238,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1646513219
    },
    {
        "content": "<p><code>$</code> is a notation that's popular in Haskell, and allows you to avoid excess parentheses when calling a function and turning the end of your expression into Lisp ;)</p>",
        "id": 274264357,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1646513429
    },
    {
        "content": "<p>Those should all be the same.  Forall is a synonym for pi, and the pretty printer uses forall when a type is ultimately <code>Prop</code>-valued.  The dollar sign is just a way to use exactly the same number of characters for the same meaning:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"bp\">Π</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">mul_one_class</span> <span class=\"bp\">$</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"bp\">Π</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">mul_one_class</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)]</span>\n</code></pre></div>",
        "id": 274264373,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1646513461
    },
    {
        "content": "<p>Ah, I didn’t fully appreciate that <code>∀</code> and <code>Π</code> are really just synonyms (and not just related-but-different-because-of-Prop-vs-Type things). Thanks!</p>",
        "id": 274264939,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1646514151
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> has marked this topic as resolved.</p>",
        "id": 274264948,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646514178
    }
]