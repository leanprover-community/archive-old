[
    {
        "content": "<p>I have the following hypothesis:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">H1</span><span class=\"o\">:</span> <span class=\"n\">is_open</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">is_open</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">is_closed</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span> <span class=\"bp\">∪</span> <span class=\"n\">v</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span> <span class=\"bp\">∩</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"bp\">∩</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∅</span> <span class=\"bp\">→</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span> <span class=\"bp\">∧</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">v</span> <span class=\"bp\">∧</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span>\n</code></pre></div>\n<p>So at the end of this implication chain I have two <code>s ⊆ s</code>, is there any way for me to remove these?</p>",
        "id": 219499108,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1607618570
    },
    {
        "content": "<p>I might add that my goal is of the form</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">v</span>\n</code></pre></div>\n<p>which i why I want to remove the <code>s ⊆ s</code></p>",
        "id": 219499411,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1607618697
    },
    {
        "content": "<p>Okay I managed to solve it using <code>simp [set.subset.refl] at H1</code>. Thought I tried that before <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 219500097,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1607618927
    },
    {
        "content": "<p>You wrote <code>clean</code> again, which is punished with red rectangles.</p>",
        "id": 219500295,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1607618999
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 219500530,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1607619071
    },
    {
        "content": "<p>This is bad because for a few seconds I thought Zulip rolled back to the old pygments highlighting library which gave us all those red rectangles in the past.</p>",
        "id": 219501197,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1607619328
    },
    {
        "content": "<p>oh, I hadn't noticed their absence</p>",
        "id": 219504339,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1607620704
    },
    {
        "content": "<p>You would have noticed if they had returned.</p>",
        "id": 219504470,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1607620768
    },
    {
        "content": "<p>Note that <code>clean</code> happens because you type <code> ```lean </code>, and then zulip pops up an unhelpful suggestion box that is annoying to dismiss whose second option is <code>clean</code></p>",
        "id": 219505268,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607621146
    },
    {
        "content": "<p>If you just type <code> ``` </code> you get <code>lean</code> by default and no annoying box</p>",
        "id": 219505294,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607621161
    }
]