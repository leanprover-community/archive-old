[
    {
        "content": "<p>Without further ado, here is MWE.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">logic.relation</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_trans</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">relation.refl_trans_gen</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 271679840,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1644658075
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/relation.refl_trans_gen.trans\">docs#relation.refl_trans_gen.trans</a></p>",
        "id": 271679895,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644658165
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/relation.transitive_refl_trans_gen\">docs#relation.transitive_refl_trans_gen</a></p>",
        "id": 271679961,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1644658240
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 271680116,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1644658524
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">logic.relation</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_trans</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">relation.refl_trans_gen</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"n\">relation.transitive_refl_trans_gen</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 271680184,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644658605
    },
    {
        "content": "<p>Oh. I wrote the following but for some reason I didn't spot it passed correctly, lmao.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">logic.relation</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_trans</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">relation.refl_trans_gen</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">is_trans.mk</span> <span class=\"n\">relation.transitive_refl_trans_gen</span>\n</code></pre></div>",
        "id": 271680221,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1644658668
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 271680271,
        "sender_full_name": "Notification Bot",
        "timestamp": 1644658735
    }
]