[
    {
        "content": "<p>While working through the bounded_lattice file, I noticed that there are a lot of different classes in the file.  Is it standard practice to put a whole bunch of classes related together into one file, or have the various classes in that file not yet been split out into their own files?  Maybe a better example would be splitting lattice into a file for distributive_lattice, join_semilattice, and meet_semilattice? I'm not giving any suggestions or criticism.  I'm simply trying to understand the organizational choices being made.</p>",
        "id": 213866006,
        "sender_full_name": "Brent A Ritterbeck",
        "timestamp": 1603156255
    },
    {
        "content": "<p>It can be done either way. If there are lots of files importing can become more annoying/pedantic, this way you just say \"I want lattices\" and you get all the stuff</p>",
        "id": 213867023,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603157589
    },
    {
        "content": "<p>Note that not all the classes are actually in there, in particular I think complete lattices and boolean lattices are in another file</p>",
        "id": 213867032,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603157619
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Organization.20of.20Mathlib/near/213867023\">said</a>:</p>\n<blockquote>\n<p>It can be done either way. If there are lots of files importing can become more annoying/pedantic, this way you just say \"I want lattices\" and you get all the stuff</p>\n</blockquote>\n<p>Couldn't that be solved in a manner similar to <a href=\"https://github.com/lballabio/QuantLib/blob/master/ql/processes/all.hpp\">https://github.com/lballabio/QuantLib/blob/master/ql/processes/all.hpp</a>, which is pulling a lot of the stochastic process machinery into one header file for inclusion?</p>",
        "id": 213867854,
        "sender_full_name": "Brent A Ritterbeck",
        "timestamp": 1603158712
    },
    {
        "content": "<p>Yeah, we do that too, with <code>default.lean</code> files scattered about</p>",
        "id": 213867905,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603158769
    },
    {
        "content": "<p>not so much inside mathlib itself because we want to keep the dependency graph as decoupled as is reasonable</p>",
        "id": 213867912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603158806
    },
    {
        "content": "<p>but all these lattice theorems have low/similar dependencies so they don't hurt the dependency graph situation too much</p>",
        "id": 213867960,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603158846
    },
    {
        "content": "<p>That said, mathlib has seen many authors with different views on this subject, so some of the judgment calls here are made differently in different parts of the library</p>",
        "id": 213867986,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603158909
    },
    {
        "content": "<p>But there seems to be a naming convention for definitions and theorems, right? Just not for files, then? (And where can I find anything regarding such conventions?)</p>",
        "id": 315089263,
        "sender_full_name": "Pieter Cuijpers",
        "timestamp": 1670683640
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/contribute/naming.html\">https://leanprover-community.github.io/contribute/naming.html</a></p>",
        "id": 315089624,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1670683793
    }
]