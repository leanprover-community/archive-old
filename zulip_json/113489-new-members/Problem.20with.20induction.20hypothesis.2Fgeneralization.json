[
    {
        "content": "<p>Ok, I've got another one which is a bit more complicated:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">E</span>\n<span class=\"kd\">structure</span> <span class=\"n\">D</span> <span class=\"n\">where</span> <span class=\"n\">es</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">E</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">C</span>\n<span class=\"kd\">structure</span> <span class=\"n\">B</span> <span class=\"n\">where</span> <span class=\"n\">cs</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">List</span> <span class=\"n\">C</span>\n<span class=\"kd\">structure</span> <span class=\"n\">A</span> <span class=\"n\">where</span> <span class=\"n\">bs</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">B</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">CEquivE</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">makeE</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">a.bs</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">i</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">∈</span> <span class=\"n\">b.cs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">a.bs</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">List.forall₂</span> <span class=\"n\">CEquivE</span> <span class=\"o\">(</span><span class=\"n\">b.cs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">b.cs</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">attach.map</span> <span class=\"o\">(</span><span class=\"n\">makeE</span> <span class=\"n\">hb</span> <span class=\"bp\">·.</span><span class=\"n\">property</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">generalize</span> <span class=\"n\">b.cs</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>Here I can't generalize, because <code>tactic 'generalize' failed, result is not type correct</code>.<br>\nSimply trying <code>induction b.cs i</code> has the same problem.</p>\n<p>I'm guessing it has something to do with the fact that I'm using <code>attach</code> on <code>b.cs i</code>, but I don't know how to resolve the issue.</p>",
        "id": 267421674,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1641811425
    }
]