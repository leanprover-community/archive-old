[
    {
        "content": "<p>If I want to prove something about <code>x % 4</code>, how can I split the current goal into 4 goals with the first one having the additional hypothesis <code>x % 4 = 0 % 4</code>, the second <code>x % 4 = 1 % 4</code>, and so on?</p>",
        "id": 202836803,
        "sender_full_name": "Aniruddh Agarwal",
        "timestamp": 1593810285
    },
    {
        "content": "<p>I tried something at <a href=\"#narrow/stream/113488-general/topic/even.20or.20odd/near/195632609\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/even.20or.20odd/near/195632609</a> but my threat wasn't taken seriously (and indeed I didn't follow up).</p>",
        "id": 202836831,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593810358
    },
    {
        "content": "<p>But there is no obstruction beyond available time and energy.</p>",
        "id": 202836883,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593810396
    },
    {
        "content": "<p>doesn't <code>fin_cases</code> work here?</p>",
        "id": 202837852,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1593811675
    },
    {
        "content": "<p>The thing I linked to is a wrapper around fin_cases</p>",
        "id": 202837901,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593811706
    },
    {
        "content": "<p>okay, but the proof script using <code>fin_cases</code> directly shouldn't be nearly that bad</p>",
        "id": 202837921,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1593811748
    },
    {
        "content": "<p>I'm unable to use <code>ring</code> for some reason:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">parity</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interval_cases</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n<span class=\"kn\">open</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">open</span> <span class=\"n\">interactive</span> <span class=\"o\">(</span><span class=\"n\">parse</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"o\">(</span><span class=\"n\">tk</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">types</span> <span class=\"o\">(</span><span class=\"n\">texpr</span><span class=\"o\">)</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">modulo_cases</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">texpr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"o\">(</span><span class=\"n\">tk</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"bp\">*&gt;</span> <span class=\"n\">texpr</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">do</span> <span class=\"n\">qe</span> <span class=\"err\">←</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">i_to_expr</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n   <span class=\"n\">ne</span> <span class=\"err\">←</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">i_to_expr</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h1</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"bp\">=</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"bp\">+</span> <span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">))</span> <span class=\"bp\">``</span><span class=\"o\">((</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_add_div</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">),</span>\n   <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">rw</span> <span class=\"n\">add_comm</span> <span class=\"n\">at</span> <span class=\"n\">h1</span><span class=\"o\">],</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h2</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"bp\">&lt;</span> <span class=\"n\">abs</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_lt</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">norm_num</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)),</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h4</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">))</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">dec_trivial</span><span class=\"o\">),</span>\n   <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">rw</span> <span class=\"n\">abs_of_nonneg</span> <span class=\"n\">h4</span> <span class=\"n\">at</span> <span class=\"n\">h2</span><span class=\"o\">],</span>\n   <span class=\"n\">h4e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h4</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">clear</span> <span class=\"n\">h4e</span><span class=\"o\">,</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h3</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_nonneg</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"n\">dec_trivial</span><span class=\"o\">),</span>\n   <span class=\"n\">h1e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h1</span><span class=\"o\">,</span>\n   <span class=\"n\">h2e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h2</span><span class=\"o\">,</span>\n   <span class=\"n\">h3e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h3</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h1e</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h2e</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h3e</span><span class=\"o\">,</span>\n   <span class=\"n\">e</span> <span class=\"err\">←</span> <span class=\"o\">(</span><span class=\"n\">to_expr</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)),</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">generalize</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n   <span class=\"n\">e</span> <span class=\"err\">←</span> <span class=\"o\">(</span><span class=\"n\">to_expr</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"bp\">/</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)),</span>\n   <span class=\"bp\">`</span><span class=\"o\">[</span> <span class=\"n\">intros</span> <span class=\"n\">r</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n      <span class=\"n\">interval_cases</span> <span class=\"n\">r</span> <span class=\"bp\">;</span> <span class=\"n\">clear</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">add_zero</span> <span class=\"n\">at</span> <span class=\"n\">h3</span><span class=\"o\">}],</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">all_goals</span> <span class=\"err\">$</span> <span class=\"n\">do</span>\n      <span class=\"n\">h3e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h3</span><span class=\"o\">,</span>\n      <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h3e</span><span class=\"o\">,</span>\n      <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">generalize</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n      <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">rintros</span> <span class=\"n\">k</span> <span class=\"n\">rfl</span><span class=\"o\">]</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">th</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"n\">modulo_cases</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">),</span>\n    <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">right</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">right</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n    <span class=\"n\">ring</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>The error I'm getting is </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">istep</span> <span class=\"mi\">56</span> <span class=\"mi\">4</span> <span class=\"mi\">56</span> <span class=\"mi\">4</span> <span class=\"n\">ring</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">ring</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Type</span> <span class=\"err\">?</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"err\">?</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"err\">?</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">tactic</span> <span class=\"err\">?</span><span class=\"n\">m_1</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"err\">?</span>\n<span class=\"n\">don&#39;t</span> <span class=\"n\">know</span> <span class=\"n\">how</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">placeholder</span>\n<span class=\"kn\">context</span><span class=\"o\">:</span>\n<span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span>\n<span class=\"err\">⊢</span> <span class=\"kt\">Type</span> <span class=\"err\">?</span>\n</code></pre></div>",
        "id": 202839176,
        "sender_full_name": "Aniruddh Agarwal",
        "timestamp": 1593813656
    },
    {
        "content": "<p>you still have all the <code>open</code> statements from the tactic-writing part</p>",
        "id": 202839199,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593813720
    },
    {
        "content": "<p>you haven't imported <code>ring</code></p>",
        "id": 202839346,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1593813916
    },
    {
        "content": "<p>ah. <code>Type ? → Type ? : Type (?+1)</code> is the type signature of <code>ring</code> typeclass</p>",
        "id": 202839410,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593813998
    },
    {
        "content": "<p>Can someone help me finish the proof?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">parity</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">parity</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interval_cases</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n<span class=\"kn\">open</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">open</span> <span class=\"n\">interactive</span> <span class=\"o\">(</span><span class=\"n\">parse</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"o\">(</span><span class=\"n\">tk</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">types</span> <span class=\"o\">(</span><span class=\"n\">texpr</span><span class=\"o\">)</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">modulo_cases</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">texpr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"o\">(</span><span class=\"n\">tk</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"bp\">*&gt;</span> <span class=\"n\">texpr</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">do</span> <span class=\"n\">qe</span> <span class=\"err\">←</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">i_to_expr</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n   <span class=\"n\">ne</span> <span class=\"err\">←</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">i_to_expr</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h1</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"bp\">=</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"bp\">+</span> <span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">))</span> <span class=\"bp\">``</span><span class=\"o\">((</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_add_div</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">),</span>\n   <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">rw</span> <span class=\"n\">add_comm</span> <span class=\"n\">at</span> <span class=\"n\">h1</span><span class=\"o\">],</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h2</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"bp\">&lt;</span> <span class=\"n\">abs</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_lt</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">norm_num</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">qe</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)),</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h4</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">))</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">dec_trivial</span><span class=\"o\">),</span>\n   <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">rw</span> <span class=\"n\">abs_of_nonneg</span> <span class=\"n\">h4</span> <span class=\"n\">at</span> <span class=\"n\">h2</span><span class=\"o\">],</span>\n   <span class=\"n\">h4e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h4</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">clear</span> <span class=\"n\">h4e</span><span class=\"o\">,</span>\n   <span class=\"err\">«</span><span class=\"k\">have</span><span class=\"err\">»</span> <span class=\"bp\">`</span><span class=\"n\">h3</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_nonneg</span> <span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"n\">dec_trivial</span><span class=\"o\">),</span>\n   <span class=\"n\">h1e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h1</span><span class=\"o\">,</span>\n   <span class=\"n\">h2e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h2</span><span class=\"o\">,</span>\n   <span class=\"n\">h3e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h3</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h1e</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h2e</span><span class=\"o\">,</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h3e</span><span class=\"o\">,</span>\n   <span class=\"n\">e</span> <span class=\"err\">←</span> <span class=\"o\">(</span><span class=\"n\">to_expr</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"err\">%</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)),</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">generalize</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n   <span class=\"n\">e</span> <span class=\"err\">←</span> <span class=\"o\">(</span><span class=\"n\">to_expr</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"err\">%%</span><span class=\"n\">ne</span> <span class=\"bp\">/</span> <span class=\"err\">%%</span><span class=\"n\">qe</span><span class=\"o\">)),</span>\n   <span class=\"bp\">`</span><span class=\"o\">[</span> <span class=\"n\">intros</span> <span class=\"n\">r</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n      <span class=\"n\">interval_cases</span> <span class=\"n\">r</span> <span class=\"bp\">;</span> <span class=\"n\">clear</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">add_zero</span> <span class=\"n\">at</span> <span class=\"n\">h3</span><span class=\"o\">}],</span>\n   <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">all_goals</span> <span class=\"err\">$</span> <span class=\"n\">do</span>\n      <span class=\"n\">h3e</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"bp\">`</span><span class=\"n\">h3</span><span class=\"o\">,</span>\n      <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">revert</span> <span class=\"n\">h3e</span><span class=\"o\">,</span>\n      <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">generalize</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n      <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">rintros</span> <span class=\"n\">k</span> <span class=\"n\">rfl</span><span class=\"o\">]</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">square_eq_zero_or_one_mod_four</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"n\">modulo_cases</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">),</span>\n    <span class=\"n\">left</span><span class=\"o\">,</span>\n    <span class=\"n\">ring</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n    <span class=\"n\">right</span><span class=\"o\">,</span>\n    <span class=\"n\">ring</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">left</span><span class=\"o\">,</span>\n    <span class=\"n\">ring</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n    <span class=\"n\">right</span><span class=\"o\">,</span>\n    <span class=\"n\">ring</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">pyth_triples</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"bp\">*</span><span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span><span class=\"bp\">*</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">gcd</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">gcd</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">gcd</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">even</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n<span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intro</span> <span class=\"n\">hz</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">square_eq_zero_or_one_mod_four</span> <span class=\"o\">(</span><span class=\"n\">z</span><span class=\"bp\">*</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">exists</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"n\">z</span> <span class=\"n\">rfl</span><span class=\"o\">),</span>\n<span class=\"n\">cases</span> <span class=\"n\">square_eq_zero_or_one_mod_four</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"bp\">*</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">exists</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"n\">y</span> <span class=\"n\">rfl</span><span class=\"o\">),</span>\n<span class=\"n\">cases</span> <span class=\"n\">square_eq_zero_or_one_mod_four</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">exists</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">rfl</span><span class=\"o\">),</span>\n<span class=\"n\">cases</span> <span class=\"n\">h_3</span> <span class=\"k\">with</span><span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"n\">h_2</span> <span class=\"k\">with</span><span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"n\">h_1</span> <span class=\"k\">with</span><span class=\"o\">,</span>\n<span class=\"o\">{</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span> <span class=\"c1\">-- contradiction gcd =/= 1</span>\n<span class=\"o\">{</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span> <span class=\"c1\">-- contradiction gcd =/= 1</span>\n<span class=\"o\">{</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span> <span class=\"c1\">-- contradiction gcd =/= 1</span>\n<span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">hz</span> <span class=\"k\">with</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hz_h</span> <span class=\"n\">at</span> <span class=\"n\">h_1</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span> <span class=\"o\">},</span> <span class=\"c1\">-- contradiction, 1 % 4 implies not even</span>\n<span class=\"o\">{</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span> <span class=\"c1\">-- contradiction gcd =/= 1</span>\n<span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">hz</span> <span class=\"k\">with</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hz_h</span> <span class=\"n\">at</span> <span class=\"n\">h_1</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span> <span class=\"o\">},</span> <span class=\"c1\">-- contradiction, 1 % 4 implies not even</span>\n<span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">h_1</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h_2</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h_3</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span> <span class=\"o\">},</span> <span class=\"c1\">-- contradiction 1 % 4 + 1 % 4 != 0 % 4</span>\n<span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">h_1</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h_2</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h_3</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span> <span class=\"o\">}</span>  <span class=\"c1\">-- contradiction 1 % 4 + 1 % 4 != 1 % 4</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 202846380,
        "sender_full_name": "Aniruddh Agarwal",
        "timestamp": 1593819548
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"294709\">@Aniruddh Agarwal</span> Often you can prove a helper lemma directly by <code>dec_trivial</code>... see for example here: <a href=\"https://github.com/leanprover-community/mathlib/blob/pythagorean_triples_jmc/src/number_theory/pythagorean_triples.lean#L123L126\">https://github.com/leanprover-community/mathlib/blob/pythagorean_triples_jmc/src/number_theory/pythagorean_triples.lean#L123L126</a></p>",
        "id": 202856501,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593838490
    },
    {
        "content": "<p>I hope you are aware that there is an ongoing PR on pythagorean triples. So please don't duplicate effort, unless this is all for fun.</p>",
        "id": 202856508,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593838520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Thanks, I'll check that out. I'm just doing this for fun, and don't intend to PR this into mathlib.</p>",
        "id": 202937793,
        "sender_full_name": "Aniruddh Agarwal",
        "timestamp": 1593982375
    }
]