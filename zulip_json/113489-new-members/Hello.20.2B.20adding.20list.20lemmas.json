[
    {
        "content": "<p>Hello! I'm new to Lean.  As part of a personal project, I've written a few more lemmas about properties of lists that weren't already in mathlib (as far as I could tell).  They all fit the general description of \"some property about combining 2 or more list methods\".  For example</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">head'_append</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">l₁</span> <span class=\"n\">l₂</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">l₁.head'</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">l₁</span> <span class=\"bp\">++</span> <span class=\"n\">l₂</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">head'</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>Would these sorts of contributions be welcomed in a PR?</p>",
        "id": 257929208,
        "sender_full_name": "Ethan Pronovost",
        "timestamp": 1634486626
    },
    {
        "content": "<p>Welcome! New lemmas that you needed for some project are almost always appreciated, so please make your PR! In fact, I'm not aware of any file where we claim the collection of lemmas is complete and quite a few where the opposite holds.</p>",
        "id": 258006362,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1634552507
    },
    {
        "content": "<p>Cool! Can I request to have write access to non-master branches of the mathlib repository as per the instructions <a href=\"https://leanprover-community.github.io/contribute/index.html\">here</a>?</p>",
        "id": 258315096,
        "sender_full_name": "Ethan Pronovost",
        "timestamp": 1634708285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"448251\">@Ethan Pronovost</span> what is your github username?</p>",
        "id": 258315249,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634708418
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> <code>EPronovost</code></p>",
        "id": 258485390,
        "sender_full_name": "Ethan Pronovost",
        "timestamp": 1634789931
    },
    {
        "content": "<p>Done!</p>",
        "id": 258485843,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634790342
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/9873\">https://github.com/leanprover-community/mathlib/pull/9873</a></p>",
        "id": 258659709,
        "sender_full_name": "Ethan Pronovost",
        "timestamp": 1634875639
    }
]