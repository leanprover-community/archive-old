[
    {
        "content": "<p>Hi there. I'm following Theorem_Proving_In_Lean_4, but am frustrated because I want to understand what is going on, basics up, even more than application down. I've been looking through data.nat and <a href=\"http://data.int\">data.int</a>, but I don't understand where int and nat are actually defined...for example inductively (eg Succ and Zero in some type theories)? Where is it and what am I missing?  Perhaps it is some sort of built in functionality? If so how does it work? Where can I get my hands on it properly? That is, where can I best get a real understanding of the most basic (ie most fundamental) aspects of Lean, in addition to the \"how to use tactics\"-style introductory documentation?</p>",
        "id": 270780171,
        "sender_full_name": "Robert Watson",
        "timestamp": 1644012813
    },
    {
        "content": "<p>Nat is in src/init/prelude. If you're using vscode, you should be able to right click on a declaration and click \"go to definition\".</p>",
        "id": 270780818,
        "sender_full_name": "Chris B",
        "timestamp": 1644013092
    },
    {
        "content": "<p>Have you played the natural number game? This will teach you some basic tactics, and then the definition of the naturals might make some more sense to you.</p>",
        "id": 270791288,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644020643
    },
    {
        "content": "<p>One way to jump to the definition of nat and int is to follow the links -&gt; <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat/src\">src#nat</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int/src\">src#int</a></p>",
        "id": 270796680,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644025603
    },
    {
        "content": "<p>Thanks to all.</p>",
        "id": 270829577,
        "sender_full_name": "Robert Watson",
        "timestamp": 1644071047
    }
]