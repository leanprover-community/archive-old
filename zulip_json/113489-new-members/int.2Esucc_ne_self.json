[
    {
        "content": "<p>Do we have<br>\n<code>lemma int.succ_ne_self {x : ℤ} : x + 1 ≠ x := ...</code><br>\n?</p>",
        "id": 171362228,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563696544
    },
    {
        "content": "<p>Hopefully there is something less hideous than</p>\n<div class=\"codehilite\"><pre><span></span>lemma int.succ_ne_self {x : ℤ} : x + 1 ≠ x :=\nbegin\n  intro h,\n  replace h := congr_arg (λ n : ℤ, n - x) h,\n  dsimp at h,\n  rw [add_assoc, add_comm, neg_add_cancel_right, add_right_neg] at h,\n  exact one_ne_zero h\nend\n</pre></div>",
        "id": 171363181,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563698367
    },
    {
        "content": "<p><code>(ne_of_lt (lt_add_one x)).symm</code></p>",
        "id": 171363443,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1563698803
    },
    {
        "content": "<p><code>ne_of_gt (lt_add_one x)</code></p>",
        "id": 171363571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563699042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> maybe you could expand library_search a bit ;-)</p>",
        "id": 171370290,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563711394
    },
    {
        "content": "<p>if you're feeling particularly lazy, <code>λ _, by omega</code></p>",
        "id": 171371564,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1563713649
    },
    {
        "content": "<p>Finally the correct answer :-)</p>",
        "id": 171372068,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563714589
    },
    {
        "content": "<p>Very nice</p>",
        "id": 171372070,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563714595
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">linarith</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">succ_ne_self</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≠</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">linarith</span>\n</pre></div>",
        "id": 171372117,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563714635
    },
    {
        "content": "<p>A new winner :-)</p>",
        "id": 171372687,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563715719
    },
    {
        "content": "<p>Oh no wait it's longer</p>",
        "id": 171372690,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563715733
    },
    {
        "content": "<p>clearly we need to rename <code>linarith</code> to <code>lia</code>then</p>",
        "id": 171389813,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563746967
    },
    {
        "content": "<p>We should just have a tactic \"schoolkid\" which tries them all one after the other, and then just tell people that the other tactics are deprecated</p>",
        "id": 171389861,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563747014
    },
    {
        "content": "<p>but then it should be called <code>sk</code> or else it won't win the golfing competitions</p>",
        "id": 171389885,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563747103
    },
    {
        "content": "<p>for single symbol names i propose <span aria-label=\"work in progress\" class=\"emoji emoji-1f6a7\" role=\"img\" title=\"work in progress\">:work_in_progress:</span> (\\construction) for \"will fix the bad perf of this later\" or <span aria-label=\"biohazard\" class=\"emoji emoji-2623\" role=\"img\" title=\"biohazard\">:biohazard:</span> (\\biohazard) for \"run lean at own risk and always place pc in spent fuel pool for cooling beforehand\"</p>",
        "id": 171391113,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1563749362
    },
    {
        "content": "<p>while in vietnam, floris and i came up with this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">local</span> <span class=\"kn\">notation</span> <span class=\"bp\">`⟨</span><span class=\"err\">╯°□°</span><span class=\"bp\">⟩</span><span class=\"err\">╯︵┻━┻</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 171392647,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1563752206
    }
]