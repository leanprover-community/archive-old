[
    {
        "content": "<p>Hello, I'm a new user and I don't think I have permission to merge master in GitHub, can someone please help? Thanks!</p>",
        "id": 289232380,
        "sender_full_name": "AM",
        "timestamp": 1657564679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"513625\">@AM</span> Hi! What exactly do you mean with merging master? Do you want push access for non-master branches? Can you also explain a bit what kind of project you are (planning) to work on?</p>",
        "id": 289235781,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657566370
    },
    {
        "content": "<p>Yes, I'd like push access for non-master branches. I'm currently working on a proof of Descartes' circle theorem for an REU I'm participating in. Thanks!</p>",
        "id": 289353883,
        "sender_full_name": "AM",
        "timestamp": 1657644724
    },
    {
        "content": "<p>You'll need to post your github userid I guess ;-)</p>",
        "id": 289370511,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657652398
    },
    {
        "content": "<p>Who are you doing the REU with? I think it's great to see some geometry like this in Lean. I would like to see a geometry IMO problem formalised in Lean, just to prove that we can do this sort of thing nowadays.</p>",
        "id": 289370675,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657652464
    },
    {
        "content": "<p>With the recently announced <code>polyrith</code> tactic, I would be interested to see if the Descartes theorem can be proved using that.</p>",
        "id": 289371558,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1657652854
    },
    {
        "content": "<p>My github userid is AAM246. I'm working with Professor Alex Kontorovich at Rutgers University!</p>",
        "id": 289373968,
        "sender_full_name": "Archana M",
        "timestamp": 1657654109
    },
    {
        "content": "<p>I had heard about the polyrith tactic but didn't realize it was fully developed yet. Do you know where I can find more information on this?</p>",
        "id": 289374176,
        "sender_full_name": "Archana M",
        "timestamp": 1657654203
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"513625\">Archana M</span> <a href=\"#narrow/stream/113489-new-members/topic/mathlib.20merge.20master/near/289374176\">said</a>:</p>\n<blockquote>\n<p>I had heard about the polyrith tactic but didn't realize it was fully developed yet. Do you know where I can find more information on this?</p>\n</blockquote>\n<p><a href=\"#narrow/stream/113488-general/topic/polyrith.3A.20a.20new.20tactic/near/289312457\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/polyrith.3A.20a.20new.20tactic/near/289312457</a></p>",
        "id": 289375053,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1657654627
    },
    {
        "content": "<p>Or the tutorial Heather just posted!</p>",
        "id": 289391926,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657663563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/mathlib.20merge.20master/near/289370675\">said</a>:</p>\n<blockquote>\n<p>Who are you doing the REU with? I think it's great to see some geometry like this in Lean. I would like to see a geometry IMO problem formalised in Lean, just to prove that we can do this sort of thing nowadays.</p>\n</blockquote>\n<p>Almost all recent IMO geometry problems can't yet be stated in an idiomatic way because of missing definitions (and associated API for those definitions) in mathlib. Most often betweenness / convexity and similar conditions (which might sometimes not actually be needed for the result to be true, but are included so contestants are less likely to need to deal with configuration-dependence), including variations such as referring to a particular arc of a circle, but also e.g. incenters, tangency, areas (i.e. linking geometry to the measure theory library, together with convexity).</p>\n<p>As I mentioned to <span class=\"user-mention\" data-user-id=\"130377\">@David Wärn</span> at IMO 2022, I'd like to get all six IMO 2019 problems into the mathlib archive, with problem 2 as an intermediate geometry goal, and what I have in mind for the convexity issues is to add definitions such as <code>affine_segment</code> in the affine space case and use those to build up the required definitions for betweenness, and then a future convexity / affine space refactor could replace such a definition by a more general <code>segment</code> for abstract affine combination spaces that works in both the semimodule and <code>add_torsor</code> contexts.</p>\n<p>If you want an IMO geometry problem that doesn't run into such missing mathlib API and so might be done without a large number of preparatory PRs adding API, IMO 2008 problem 1 seems to be the most recent such problem.</p>",
        "id": 289888028,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1658068549
    },
    {
        "content": "<p>I am still thinking about the convexity refactor btw. This would solve your <code>affine_segment</code> problem.</p>",
        "id": 289888118,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658068662
    }
]