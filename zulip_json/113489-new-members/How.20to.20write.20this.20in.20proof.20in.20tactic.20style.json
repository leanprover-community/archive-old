[
    {
        "content": "<p>Hi, I am trying to write the following proof completely in tactic mode. I don't know how to use tactics with the second <code>by_contradiction</code> statement. Even though the proof works as it written now, currently I am learning about tactic mode so I want to know how to do it even if it is not practical. Thanks.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">open</span> <span class=\"n\">classical</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">¬∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">hnA</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n   <span class=\"n\">intro</span> <span class=\"n\">hnE</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"k\">from</span>\n     <span class=\"k\">assume</span> <span class=\"n\">s</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n    <span class=\"n\">by_contradiction</span>\n        <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hs</span><span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n        <span class=\"k\">show</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hnE</span> <span class=\"bp\">⟨</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span> <span class=\"bp\">⟩</span><span class=\"o\">),</span>\n    <span class=\"k\">show</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">absurd</span> <span class=\"n\">this</span> <span class=\"n\">hnA</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 173320438,
        "sender_full_name": "Luis Berlioz",
        "timestamp": 1565899806
    },
    {
        "content": "<p>Copy+pasted your example, defined {α : Type*} {p : α → Prop}. It doesn't work. Do you have any <code>import</code>s?</p>",
        "id": 173321399,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565900589
    },
    {
        "content": "<p>He has the <code>classical</code> namespace open.</p>",
        "id": 173321488,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1565900660
    },
    {
        "content": "<p>One way to do it is this, which uses the <code>by_contradiction</code> tactic:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">¬∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">hnA</span><span class=\"o\">,</span>\n  <span class=\"n\">by_contradiction</span> <span class=\"n\">hne</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n    <span class=\"n\">by_contradiction</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hne</span> <span class=\"bp\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"bp\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"k\">show</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">absurd</span> <span class=\"n\">this</span> <span class=\"n\">hnA</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 173321504,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1565900675
    },
    {
        "content": "<p>added the import. Thanks!</p>",
        "id": 173321798,
        "sender_full_name": "Luis Berlioz",
        "timestamp": 1565900900
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">section</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">prop_decidable</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">¬∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">hnA</span><span class=\"o\">,</span>\n<span class=\"n\">by_contradiction</span> <span class=\"n\">hne</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">hnA</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n<span class=\"n\">by_contradiction</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">hne</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">end</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 173321812,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565900911
    },
    {
        "content": "<p>Another way to achieve the same goal.</p>",
        "id": 173321838,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565900938
    },
    {
        "content": "<p>Nice! Thanks.</p>",
        "id": 173322567,
        "sender_full_name": "Luis Berlioz",
        "timestamp": 1565901565
    }
]