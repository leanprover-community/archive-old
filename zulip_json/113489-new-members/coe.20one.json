[
    {
        "content": "<p>HI, <br>\nI want to apply <code>nat.mul_one</code> to an hypothesis involving pnats using rw, how can I somehow cast a pnat into a nat</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.pnat.basic</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">USAJMO_Problems_Problem_1</span> <span class=\"o\">:</span>\n  <span class=\"k\">forall</span> <span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">pnat</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">pnat</span><span class=\"o\">,</span>\n  <span class=\"o\">(</span><span class=\"k\">forall</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">pnat</span><span class=\"o\">),</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">/\\</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">))</span>\n  <span class=\"bp\">-&gt;</span> <span class=\"k\">forall</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span> <span class=\"n\">ab</span><span class=\"o\">,</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">f1</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f2</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">*</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"n\">exact</span> <span class=\"n\">and.elim_right</span> <span class=\"o\">(</span><span class=\"n\">ab</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"n\">nat.mul_one</span> <span class=\"n\">at</span> <span class=\"n\">f2</span><span class=\"o\">,</span>\n</code></pre></div>",
        "id": 246276369,
        "sender_full_name": "Maxime Darrin",
        "timestamp": 1626468370
    },
    {
        "content": "<p>you can just use the more general <code>mul_one</code>, which works for all groups</p>",
        "id": 246276607,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1626468503
    },
    {
        "content": "<p>(weaker, even!)</p>",
        "id": 246276680,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1626468546
    },
    {
        "content": "<p>Oh thx !</p>",
        "id": 246277135,
        "sender_full_name": "Maxime Darrin",
        "timestamp": 1626468806
    }
]