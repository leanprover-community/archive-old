[
    {
        "content": "<p>I have an instance of a class, with a name and all, and yet infer_instance/apply_instance can't find it</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">instance</span> <span class=\"n\">my_foo_category</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_hom_foo</span> <span class=\"o\">:</span> <span class=\"n\">has_hom</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n<span class=\"kn\">instance</span> <span class=\"n\">tac_str_foo</span> <span class=\"o\">:</span> <span class=\"n\">category_struct</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">categor_foo</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"n\">my_foo_category</span>\n\n<span class=\"bp\">#</span> <span class=\"n\">following</span> <span class=\"n\">line</span> <span class=\"n\">fails</span>\n<span class=\"bp\">#</span> <span class=\"kn\">instance</span> <span class=\"n\">categor_foo&#39;</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n</code></pre></div>\n\n\n<p>All lines but the last one succeed.</p>\n<p>Why can't <code>infer_instance</code> find an instance that is right there? What can I change to make it work?</p>",
        "id": 207205451,
        "sender_full_name": "Sebastián Galkin",
        "timestamp": 1597704157
    },
    {
        "content": "<p>Can you post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>? It's difficult for me to reproduce your error.</p>",
        "id": 207206058,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597704613
    },
    {
        "content": "<p>Without any information my guess would be that <code>Foo</code> really has some implicit arguments that cannot be inferred</p>",
        "id": 207206214,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597704744
    },
    {
        "content": "<p>though, now I'm confused why the second and third lines would work then</p>",
        "id": 207206249,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597704771
    },
    {
        "content": "<p>Here it is, not sure if it's very \"m\" but I'm trying to include every definition that could be relevant. I think you can ignore the <code>magma_homs</code> section, bun not sure.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">category</span>\n<span class=\"kn\">import</span> <span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">concrete_category</span><span class=\"bp\">.</span><span class=\"n\">bundled</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">magma</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"n\">class</span> <span class=\"n\">magma</span> <span class=\"o\">(</span><span class=\"n\">carrier</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">has_mul</span> <span class=\"n\">carrier</span>\n\n<span class=\"n\">def</span> <span class=\"n\">Magma</span> <span class=\"o\">:=</span> <span class=\"n\">bundled</span> <span class=\"n\">magma</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">mag_has_mul</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">Magma</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"n\">m</span><span class=\"bp\">.</span><span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span> <span class=\"n\">m</span><span class=\"bp\">.</span><span class=\"n\">str</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"bp\">⟩</span>\n\n\n<span class=\"kn\">section</span> <span class=\"n\">magma_homs</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">magma_hom</span> <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"o\">:</span> <span class=\"n\">Magma</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">Magma</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">to_fun</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"bp\">.</span><span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">preserves</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">to_fun</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">to_fun</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">to_fun</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n\n<span class=\"kn\">infixr</span> <span class=\"bp\">`</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"o\">:=</span> <span class=\"n\">magma_hom</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">:</span> <span class=\"n\">Magma</span><span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_fun</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">magma_hom</span><span class=\"bp\">.</span><span class=\"n\">to_fun</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">to_fun_eq_coe</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">to_fun</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">coe_mk</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"bp\">.</span><span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">pre</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"err\">⇑</span><span class=\"o\">(</span><span class=\"n\">magma_hom</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">f</span> <span class=\"n\">pre</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">coe_inj</span> <span class=\"o\">⦃</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">⦄</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"bp\">.</span><span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">cases</span> <span class=\"n\">f</span><span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"n\">g</span><span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">magma_hom_ext</span> <span class=\"o\">⦃</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">⦄</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"n\">coe_inj</span> <span class=\"o\">(</span><span class=\"n\">funext</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n\n\n<span class=\"n\">def</span> <span class=\"n\">magma_id</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simp</span><span class=\"bp\">⟩</span>\n\n<span class=\"n\">def</span> <span class=\"n\">magma_hom_comp</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">to_fun</span> <span class=\"err\">∘</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">to_fun</span><span class=\"o\">,</span>\n  <span class=\"n\">preserves</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"o\">{</span>\n      <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">preserves</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">preserves</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">magma_homs</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">magmas_has_hom</span><span class=\"o\">:</span> <span class=\"n\">has_hom</span> <span class=\"n\">Magma</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">hom</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"n\">m</span><span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">magmas_category_struct</span><span class=\"o\">:</span> <span class=\"n\">category_struct</span> <span class=\"n\">Magma</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">id</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">magma_id</span><span class=\"o\">,</span> <span class=\"n\">comp</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">magma_hom_comp</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">magmas_category_xxx</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"n\">Magma</span> <span class=\"o\">:=</span> <span class=\"o\">{}</span>\n\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_hom</span> <span class=\"n\">Magma</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">category_struct</span> <span class=\"n\">Magma</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"n\">Magma</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">magma</span>\n</code></pre></div>",
        "id": 207207086,
        "sender_full_name": "Sebastián Galkin",
        "timestamp": 1597705352
    },
    {
        "content": "<p>don't worry about a 72 line example. Yeah, I dunno. I am suprised that the instance ends up protected -- this may have something to do with it but I don't know why it's happening.</p>",
        "id": 207210817,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597708872
    },
    {
        "content": "<p>This is an interesting example. For some reason, the universe level in <code>magmas_category_xxx</code> gets inferred as <code>max u_1 u_2</code> (where <code>u_1</code> and <code>u_2</code> are universe level parameters of the instance) and this makes it unsuitable for matching.</p>",
        "id": 207216850,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597716083
    },
    {
        "content": "<p>The reliable way to fix it is to write <code>instance magmas_category_xxx : category Magma.{u} := {}</code> where <code>u</code> is a declared universe variable</p>",
        "id": 207216914,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597716131
    },
    {
        "content": "<p>I've seen behavior like this before, but never tracked down exactly why it was occurring.</p>",
        "id": 207216928,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597716157
    },
    {
        "content": "<p>Thank you so much! That definitely fixes it. Now I'll try to understand why, and what the <code>.{u}</code> syntax means.</p>",
        "id": 207217377,
        "sender_full_name": "Sebastián Galkin",
        "timestamp": 1597716772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"329777\">@Sebastián Galkin</span> It means \"hey Lean there are some \"universe <em>variables</em>\" in the definition of <code>Magma</code>... please make sure that the first one is set equal to <code>u</code> for this use case\"</p>",
        "id": 207220850,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597722454
    }
]