[
    {
        "content": "<p>What's wrong with a nonterminal simp? Is there a doc on this somewhere?</p>",
        "id": 213094966,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602544096
    },
    {
        "content": "<p>The problem with nonterminal <code>simp</code> is that if new lemmas that match the goal get annotated with <code>@[simp]</code> then the goal will be further reduced, possibly breaking the proof that followed.</p>",
        "id": 213095087,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1602544208
    },
    {
        "content": "<p>It's hard to maintain.</p>",
        "id": 213095089,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602544213
    },
    {
        "content": "<p>ahh i see</p>",
        "id": 213095101,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602544230
    },
    {
        "content": "<p>Terminal <code>simp</code> isn't a problem <code>@[simp]</code> tags getting removed from lemmas probably won't happen.</p>",
        "id": 213095109,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1602544244
    },
    {
        "content": "<p>what happens if a nonterminal simp is used and it breaks this way - would it get rejected by continuous integration?</p>",
        "id": 213095128,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602544265
    },
    {
        "content": "<p>I hope yes. A silent failure would be worse.</p>",
        "id": 213095430,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1602544615
    },
    {
        "content": "<p>Yes, it gets rejected by CI.</p>",
        "id": 213095771,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602545003
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/extras/simp.html#when-it-is-unadvisable-to-use-simp\">a page on <code>simp</code></a> on the community webiste with a section about why nonterminal simps are bad. We should probably add a line or two to the style guide too, though.</p>",
        "id": 213096996,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602546359
    },
    {
        "content": "<p>I see - yeah I googled for \"terminal simp\" and \"nonterminal simp\" but didn't find that doc because its terminology is a bit different</p>",
        "id": 213110270,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602562097
    },
    {
        "content": "<p>is there some vscode and/or emacs command to automatically replace a <code>simp</code> with its <code>simp only</code> form? or do people generally paste it in from some <code>squeeze_simp</code> output display?</p>",
        "id": 213110281,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602562143
    },
    {
        "content": "<p>In VS Code, the \"Try this:\" output from <code>squeeze_simp</code> becomes a link that can be clicked to replace <code>simp</code> with <code>simp only</code>.</p>",
        "id": 213110363,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602562268
    },
    {
        "content": "<p>ok. that is by default available in a hover in emacs - does any emacs user happen to know what the name of that buffer is, so it can be explicitly opened?</p>",
        "id": 213110409,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602562329
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/113489-new-members/topic/nonterminal.20simp/near/213110409\">said</a>:</p>\n<blockquote>\n<p>ok. that is by default available in a hover in emacs - does any emacs user happen to know what the name of that buffer is, so it can be explicitly opened?</p>\n</blockquote>\n<p>You first need to create the window with <code>C-c C-n</code> (Lean menu: \"Toggle next error display\").  Then it's called <code>*Lean Next Error*</code></p>",
        "id": 213112390,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1602565288
    }
]