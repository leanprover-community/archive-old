[
    {
        "content": "<p>What tactic can prove <code>2 * (2 ^ d - 1) + 1 = 2 ^ d.succ - 1</code> for me? <code>hint</code> is suggesting <code>ring</code>, but when I use it lean says it didn't make progress.</p>",
        "id": 218243956,
        "sender_full_name": "Julian Berman",
        "timestamp": 1606705119
    },
    {
        "content": "<p>The most tactical proof I can find is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">d.succ</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">zify</span> <span class=\"o\">[</span><span class=\"n\">nat.one_le_pow'</span><span class=\"o\">],</span>\n  <span class=\"n\">change</span> <span class=\"n\">d.succ</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">ring_exp</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 218244284,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1606705670
    },
    {
        "content": "<p>The problem, as always <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>, is nat subtraction so we need some user input to find the lemma <code>one_le_pow'</code> here I guess.</p>",
        "id": 218244337,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1606705736
    },
    {
        "content": "<p>hm, thanks, I found both zify and ring_exp but figured there'd be something more sledgehammery</p>",
        "id": 218244339,
        "sender_full_name": "Julian Berman",
        "timestamp": 1606705740
    },
    {
        "content": "<p>I just made <a href=\"https://github.com/leanprover-community/mathlib/issues/5157\">#5157</a>  because i noticed <code>ring</code> works as a finisher here without the middle line, but ring_exp doesnt</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">d.succ</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">zify</span> <span class=\"o\">[</span><span class=\"n\">nat.one_le_pow'</span><span class=\"o\">],</span>\n<span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 218361451,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1606779209
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> has some ideas <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>?</p>",
        "id": 218361627,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1606779312
    },
    {
        "content": "<p>Created <a href=\"https://github.com/leanprover-community/mathlib/issues/5166\">#5166</a> to rewrite <code>nat.succ d</code> to <code>d + 1</code> automatically, thanks for reporting! <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 218401134,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606817112
    }
]