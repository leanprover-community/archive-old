[
    {
        "content": "<p>I'm not sure the issue is actually with <code>interval_cases</code>. After doing the following</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"err\">%</span> <span class=\"mi\">5</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">by_contradiction</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">interval_cases</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>the goal state looks like this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mi\">3</span> <span class=\"n\">goals</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"err\">%</span> <span class=\"mi\">5</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n<span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span>\n<span class=\"err\">⊢</span> <span class=\"n\">false</span>\n\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"err\">%</span> <span class=\"mi\">5</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n<span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span>\n<span class=\"err\">⊢</span> <span class=\"n\">false</span>\n\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"err\">%</span> <span class=\"mi\">5</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n<span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span>\n<span class=\"err\">⊢</span> <span class=\"n\">false</span>\n</code></pre></div>\n\n\n<p>I think <code>tauto</code> should be able to take care of all three goals. But this</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"err\">%</span> <span class=\"mi\">5</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">by_contradiction</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">interval_cases</span> <span class=\"n\">n</span><span class=\"bp\">;</span>\n    <span class=\"n\">tauto</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>results in this goal state</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">done</span> <span class=\"n\">tactic</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">there</span> <span class=\"n\">are</span> <span class=\"n\">unsolved</span> <span class=\"n\">goals</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"err\">%</span> <span class=\"mi\">5</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n<span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span>\n<span class=\"err\">⊢</span> <span class=\"n\">false</span>\n</code></pre></div>\n\n\n<p>Using <code>finish</code> in place of <code>tauto</code> has the same effect. And the same thing happens if I use <code>tauto</code> on each goal separately.</p>\n<p>Why is this happening? Why would <code>tauto</code> work on the first and third goals but not the second goal? They all look pretty much the same to me.</p>",
        "id": 203428541,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1594322830
    },
    {
        "content": "<p>It doesn't work on the third goal</p>",
        "id": 203429023,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594323104
    },
    {
        "content": "<p><code>tauto</code> would not occur to me. Try <code>norm_num at h</code>.</p>",
        "id": 203429050,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594323120
    },
    {
        "content": "<p>Or <code>cases h</code></p>",
        "id": 203429254,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594323212
    },
    {
        "content": "<p>Oh, I think I just got confused by the message in the goal state</p>",
        "id": 203429294,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1594323234
    },
    {
        "content": "<p>I just tried <code>tauto</code> because <code>hint</code>suggested it</p>",
        "id": 203429358,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1594323250
    },
    {
        "content": "<p>Okay, thanks for the advice. I do know how to prove this kind of thing but I was just confused that I thought <code>tauto</code> worked on the first and third goals but not the second. Now I see it only works on the first, which makes much more sense</p>",
        "id": 203429513,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1594323342
    }
]