[
    {
        "content": "<p>Hi everyone,</p>\n<p>I'm not understanding:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>from:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">PP</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">PP</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>Is it saying \"there exists an x in A\"? If so isn't it redundant? Personally, I don't think it's provable because from my interpretation, it's saying \"there exists x : A such that if PP x, then for all A, PP\", which isn't a tautology.</p>",
        "id": 259439865,
        "sender_full_name": "Jia Xuan Ng",
        "timestamp": 1635449320
    },
    {
        "content": "<p>Yes, the first hypothesis is redundant given the second one.</p>\n<p>Without knowing what <code>PP</code> is, this statement is not provable.</p>",
        "id": 259442033,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635450378
    },
    {
        "content": "<p>For example, if <code>PP x</code> were \"for all (y : A), x = y\" then it would be provable.</p>",
        "id": 259442136,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635450421
    },
    {
        "content": "<p>and if <code>A = nat</code> and <code>PP x</code> means <code>x = 0</code>, then the statement is false.</p>",
        "id": 259442226,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635450467
    },
    {
        "content": "<p>Is this an exercise from somewhere? Now if it had said <code>(∃ x : A, true) → (∀ x : A, PP x) → ∃ x:A, PP x</code>, that would make sense</p>",
        "id": 259444984,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1635451686
    },
    {
        "content": "<p>I think it is supposed to be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">PP</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">PP</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 259446365,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635452354
    },
    {
        "content": "<p>oh it's \"there's someone in the bar who is drinking iff everyone in the bar is drinking\"</p>",
        "id": 259446521,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635452419
    },
    {
        "content": "<p>It's too late here for that kind of logic puzzle, but at least I convinced lean of it :)</p>",
        "id": 259447180,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1635452749
    },
    {
        "content": "<p>Is your proof constructive?</p>",
        "id": 259447255,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635452772
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/.28.E2.88.83.20x.20.3A.20A.2C.20true.29.20.E2.86.92.20.28.E2.88.83.20x.3AA.2C.20PP.20x.29.20.E2.86.92.20.E2.88.80.20x.20.3A.20A.2C.20PP.20x.20.3A.3D/near/259444984\">said</a>:</p>\n<blockquote>\n<p>Is this an exercise from somewhere? Now if it had said <code>(∃ x : A, true) → (∀ x : A, PP x) → ∃ x:A, PP x</code>, that would make sense</p>\n</blockquote>\n<p>Erm, we got given this as lab work, we either have to say if it can be proven constructively, classically or not provable at all.</p>",
        "id": 259448000,
        "sender_full_name": "Jia Xuan Ng",
        "timestamp": 1635453186
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/113489-new-members/topic/.28.E2.88.83.20x.20.3A.20A.2C.20true.29.20.E2.86.92.20.28.E2.88.83.20x.3AA.2C.20PP.20x.29.20.E2.86.92.20.E2.88.80.20x.20.3A.20A.2C.20PP.20x.20.3A.3D/near/259446365\">said</a>:</p>\n<blockquote>\n<p>I think it is supposed to be</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">PP</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">PP</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Not too sure, but it was given to me as I posted it in the original.</p>",
        "id": 259448075,
        "sender_full_name": "Jia Xuan Ng",
        "timestamp": 1635453239
    },
    {
        "content": "<p>I only have a vague idea what's constructive, but I guess <code>by_cases</code> isn't it</p>",
        "id": 259448281,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1635453317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/.28.E2.88.83.20x.20.3A.20A.2C.20true.29.20.E2.86.92.20.28.E2.88.83.20x.3AA.2C.20PP.20x.29.20.E2.86.92.20.E2.88.80.20x.20.3A.20A.2C.20PP.20x.20.3A.3D/near/259448281\">said</a>:</p>\n<blockquote>\n<p>I only have a vague idea what's constructive, but I guess <code>by_cases</code> isn't it</p>\n</blockquote>\n<p>Ye, by_cases is classical if I remember correctly. We call constructive \"intuitionistic\" here I believe. I'm not too sure if they mean the same.</p>",
        "id": 259448508,
        "sender_full_name": "Jia Xuan Ng",
        "timestamp": 1635453437
    },
    {
        "content": "<p>they are mostly synonymous, certainly in this context they are talking about the same thing</p>",
        "id": 259448813,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1635453586
    },
    {
        "content": "<p><code>by_cases</code> tries to be constructive if it can, but won't make any noise if it decides to use choice instead</p>",
        "id": 259449001,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635453661
    },
    {
        "content": "<p>in these examples though, it's pretty much always going to be classical because the things to case on are all uninterpreted predicates</p>",
        "id": 259449079,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1635453709
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/.28.E2.88.83.20x.20.3A.20A.2C.20true.29.20.E2.86.92.20.28.E2.88.83.20x.3AA.2C.20PP.20x.29.20.E2.86.92.20.E2.88.80.20x.20.3A.20A.2C.20PP.20x.20.3A.3D/near/259449001\">said</a>:</p>\n<blockquote>\n<p><code>by_cases</code> tries to be constructive if it can, but won't make any noise if it decides to use choice instead</p>\n</blockquote>\n<p>Oh, I see. The lean document was going on about it being \"decidable\".</p>",
        "id": 259452886,
        "sender_full_name": "Jia Xuan Ng",
        "timestamp": 1635455540
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/.28.E2.88.83.20x.20.3A.20A.2C.20true.29.20.E2.86.92.20.28.E2.88.83.20x.3AA.2C.20PP.20x.29.20.E2.86.92.20.E2.88.80.20x.20.3A.20A.2C.20PP.20x.20.3A.3D/near/259447255\">said</a>:</p>\n<blockquote>\n<p>Is your proof constructive?</p>\n</blockquote>\n<p>Classical is allowed if required.</p>",
        "id": 259452943,
        "sender_full_name": "Jia Xuan Ng",
        "timestamp": 1635455589
    }
]