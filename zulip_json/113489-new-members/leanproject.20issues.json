[
    {
        "content": "<p>Hello,</p>\n<p>I'm trying to use \"leanproject get &lt;github repo&gt;\" to pull a project from github, but I'm getting this error:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">...</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">GitHub</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Info</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">github</span> <span class=\"kn\">section</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"err\">&#39;</span><span class=\"n\">git</span> <span class=\"n\">config&#39;</span><span class=\"o\">,</span> <span class=\"n\">we</span> <span class=\"n\">will</span> <span class=\"n\">use</span> <span class=\"n\">GitHub</span> <span class=\"k\">with</span> <span class=\"n\">no</span> <span class=\"n\">authentication</span>\n<span class=\"mi\">403</span> <span class=\"o\">{</span><span class=\"s2\">&quot;message&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;API rate limit exceeded for 73.144.197.24. (But here&#39;s the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;documentation_url&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;https://developer.github.com/v3/#rate-limiting&quot;</span><span class=\"o\">}</span>\n</pre></div>\n\n\n<p>Can someone help me fix this? BTW I use SSH to normally communicate with Github.</p>",
        "id": 195133663,
        "sender_full_name": "Aniruddh Agarwal",
        "timestamp": 1587686260
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/cache-olean.20and.20authentication/near/188797478\" title=\"#narrow/stream/113488-general/topic/cache-olean.20and.20authentication/near/188797478\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/cache-olean.20and.20authentication/near/188797478</a></p>",
        "id": 195133856,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1587686411
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 195134046,
        "sender_full_name": "Aniruddh Agarwal",
        "timestamp": 1587686546
    },
    {
        "content": "<p>I just run  </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">leanproject</span> <span class=\"n\">up</span>\n</code></pre></div>\n\n\n<p>and now I suddenly have 23 errors in my code.</p>\n<p>Any help is appreciated. Thank you!</p>",
        "id": 201727144,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1592919867
    },
    {
        "content": "<p>I suggest trying to fix the first error, then rebuilding and repeating until there are no more errors!</p>",
        "id": 201727965,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592920222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> That's probably because Kevin refactored PID's</p>",
        "id": 201728352,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592920411
    },
    {
        "content": "<p>I hope that things will actually be easier now</p>",
        "id": 201728373,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592920425
    },
    {
        "content": "<p>Ah I see. The code is unchanged : </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideals</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">principal_ideal_domain</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">localization</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n</code></pre></div>\n\n\n<p>The first two errors are </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">Test</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">51</span><span class=\"o\">:</span> <span class=\"n\">error</span>\n<span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"err\">&#39;</span><span class=\"n\">principal_ideal_domain&#39;</span>\n<span class=\"n\">Test</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">51</span><span class=\"o\">:</span> <span class=\"n\">error</span>\n<span class=\"n\">invalid</span> <span class=\"err\">&#39;</span><span class=\"kn\">structure</span><span class=\"err\">&#39;</span><span class=\"o\">,</span> <span class=\"n\">expression</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"err\">&#39;</span><span class=\"n\">parent&#39;</span> <span class=\"kn\">structure</span>\n</code></pre></div>\n\n\n<p>How do I call things that are  not parent structures?</p>",
        "id": 201728894,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1592920624
    },
    {
        "content": "<p>The super-cool way to do this sort of thing would be to update mathlib on a branch. This sort of breakage is inevitable because I am messing with code which you're using.</p>\n<p>That line now should look something like<br>\n<code>class discrete_valuation_ring (R : Type u) [integral_domain R] [is_principal_ideal_domain R] :=</code></p>",
        "id": 201729348,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592920820
    },
    {
        "content": "<p>Ashvni, this is expected. mathlib is moving very fast and lot of refactoring happens. <code>leanproject up</code>  is not only about getting new toys, you need to be prepared for breakage from times to times.</p>",
        "id": 201729790,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592921041
    },
    {
        "content": "<p>Yes, I understand. Hopefully I will get used to it soon!</p>",
        "id": 201730471,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1592921369
    }
]