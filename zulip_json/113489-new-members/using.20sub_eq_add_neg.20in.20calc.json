[
    {
        "content": "<p>Hello everyone,</p>\n<p>I'm just getting started with Lean by proving 0x = 0 for any real x. Here's the code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">prop1a</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">eq.symm</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">sub_self</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">sub_eq_add_neg</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">x</span>  <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">add_zero</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">right_distrib</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">add_assoc</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">sub_self</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I do not understand why<br>\n<code>rw sub_eq_add_neg</code><br>\nreturns two different states: <code>0 * x + -(0 * x) = 0 * x + -0 * x</code> and <code>0 = 0 * x</code></p>\n<p>What's going on here?</p>\n<p>Thank you</p>",
        "id": 273366704,
        "sender_full_name": "Pradana Aumars",
        "timestamp": 1645914612
    },
    {
        "content": "<p>Does realizing <code>-0 * x</code> is interpreted as <code>(-0)*x</code> help?</p>",
        "id": 273367702,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645915976
    },
    {
        "content": "<p>I got it now, thanks!</p>",
        "id": 273368480,
        "sender_full_name": "Pradana Aumars",
        "timestamp": 1645916804
    }
]