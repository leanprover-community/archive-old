[
    {
        "content": "<p>Is there a way to search for items by type?</p>",
        "id": 172822789,
        "sender_full_name": "Nathan Ringo",
        "timestamp": 1565322202
    },
    {
        "content": "<p>There is the tactic <code>library_search</code> to search for anything matching the current goal, and also <code>#find</code>, e.g. <code>#find (_ : nat) + _ = _ + _</code></p>",
        "id": 172822929,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565322457
    },
    {
        "content": "<p>okay, thanks!</p>",
        "id": 172822993,
        "sender_full_name": "Nathan Ringo",
        "timestamp": 1565322556
    },
    {
        "content": "<p>er, do I need to do anything special for <code>#find</code>? I get <code>error: command expected</code></p>",
        "id": 172823052,
        "sender_full_name": "Nathan Ringo",
        "timestamp": 1565322628
    },
    {
        "content": "<p>One of the examples from hoogle is finding the map function, here is the equivalent with library search</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">what_is_this</span>  <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">list</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">list</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">library_search</span> <span class=\"c1\">-- output: exact list.map</span>\n</pre></div>",
        "id": 172823130,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565322781
    },
    {
        "content": "<p>er, I'm getting <code>unknown identifier 'library_search'</code> -- are we using different versions of Lean? (I'm at 3.4.2)</p>",
        "id": 172823220,
        "sender_full_name": "Nathan Ringo",
        "timestamp": 1565322946
    },
    {
        "content": "<p>Its a mathlib function sorry, you will need to install mathlib (if you havent already) and import it into your lean file.</p>",
        "id": 172823299,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565323055
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib\">https://github.com/leanprover-community/mathlib</a></p>",
        "id": 172823301,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565323067
    },
    {
        "content": "<p>Importing library search is then <code>import tactic.library_search</code></p>",
        "id": 172823346,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565323098
    },
    {
        "content": "<p>okay, looks like that worked; thanks!</p>",
        "id": 172823521,
        "sender_full_name": "Nathan Ringo",
        "timestamp": 1565323401
    },
    {
        "content": "<p>You can also set <code>set_option trace.library_search true</code> to see a list of all possible results, but then you get quite a few more than you want then.</p>",
        "id": 172823892,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565323945
    },
    {
        "content": "<p><code>#find</code> is also part of mathlib, so you have to import <code>tactic.find</code> for that to work.</p>",
        "id": 172824416,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1565324785
    }
]