[
    {
        "content": "<p>Hi, how do I <code>rw[mul_comm]</code> on an inner expression? <code>rw[mul_comm] at (b*c)</code> doesn't work (understandably from the docs), and <code>rw[mul_comm]</code> by itself only handles the outer expression. An example lemma would be the following,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">testing</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"n\">â„•</span><span class=\"o\">):</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Of course in the above example I can solve it by <code>cc</code>, but how can <code>rw</code> be used here? I'm stuck on another proof where I want to commute a product which is an inner expression.</p>",
        "id": 245671181,
        "sender_full_name": "Kritixi Lithos",
        "timestamp": 1626087628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246570\">@Kritixi Lithos</span> You can use <code>rw [mul_comm c b]</code>.</p>",
        "id": 245671244,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1626087694
    },
    {
        "content": "<p>And you can even replace either of them by <code>_</code>, if it happens that one of them is a longer expression.</p>",
        "id": 245671304,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1626087725
    },
    {
        "content": "<p>Another option is <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#nth_rewrite\">tactic#nth_rewrite</a></p>",
        "id": 245671327,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1626087752
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/a*.28c*b.29.3Da*.28b*c.29/near/245671244\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"246570\">Kritixi Lithos</span> You can use <code>rw [mul_comm c b]</code>.</p>\n</blockquote>\n<p>Thanks! That works perfectly</p>",
        "id": 245671468,
        "sender_full_name": "Kritixi Lithos",
        "timestamp": 1626087851
    },
    {
        "content": "<p>doesn't quite work here because of bracketing, but I find that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_right_comm\">docs#mul_right_comm</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_left_comm\">docs#mul_left_comm</a> aren't as used as they really should be</p>",
        "id": 245694950,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1626100700
    }
]