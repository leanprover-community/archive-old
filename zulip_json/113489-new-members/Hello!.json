[
    {
        "content": "<p>Heya, I'm Abhishek Cherath, I'm a 3rd year at Stony Brook University. I just finished the natural number game, and it was fun. I'm going to attempt to do my continuity homework using lean next, any advice?</p>",
        "id": 215816583,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604651033
    },
    {
        "content": "<p>Did you followed <a href=\"https://leanprover-community.github.io/get_started.html#get-started-with-lean\">installation instructions</a>? Then my advice is to go through the <a href=\"https://github.com/leanprover-community/tutorials\">tutorials project</a> which contains lots of elementary continuity stuff.</p>",
        "id": 215816728,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604651134
    },
    {
        "content": "<p>Don't unfold anything, use the interface.</p>",
        "id": 215816996,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1604651346
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Hello!/near/215816728\">said</a>:</p>\n<blockquote>\n<p>Did you followed <a href=\"https://leanprover-community.github.io/get_started.html#get-started-with-lean\">installation instructions</a>? Then my advice is to go through the <a href=\"https://github.com/leanprover-community/tutorials\">tutorials project</a> which contains lots of elementary continuity stuff.</p>\n</blockquote>\n<p>yep just got it running (had some weird pipx issues, but deleting and reinstalling seemed to fix it), and that seems like exactly what I need to look at, thank you!</p>",
        "id": 215817476,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604651757
    },
    {
        "content": "<p>Note that the installation instructions directed you to <a href=\"https://leanprover-community.github.io/install/project.html\">https://leanprover-community.github.io/install/project.html</a> which contains instructions to install the tutorials project without pain.</p>",
        "id": 215817569,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604651817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Hello!/near/215817569\">said</a>:</p>\n<blockquote>\n<p>Note that the installation instructions directed you to <a href=\"https://leanprover-community.github.io/install/project.html\">https://leanprover-community.github.io/install/project.html</a> which contains instructions to install the tutorials project without pain.</p>\n</blockquote>\n<p>yep! got it up. also, just to make sure, there's no lean repl ala ipython or something right? I ask because I mostly only use vim, and while I don't mind vscode I wouldn't mind NOT using it either.</p>",
        "id": 215817983,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604652163
    },
    {
        "content": "<p>No repl.</p>",
        "id": 215818010,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604652182
    },
    {
        "content": "<p>And, very sadly, using anything but VSCode is asking for a lot of pain, and would make it much harder to get help here.</p>",
        "id": 215818035,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604652210
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Hello!/near/215818035\">said</a>:</p>\n<blockquote>\n<p>And, very sadly, using anything but VSCode is asking for a lot of pain, and would make it much harder to get help here.</p>\n</blockquote>\n<p>yea I figured. Like I said, no issue (But a potential future contribution from me, hopefully.)</p>",
        "id": 215818063,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604652241
    },
    {
        "content": "<p>Note that VSCode has several extension pretending to bring vim emulation, and many people here (including me) use them. But they are definitely buggy.</p>",
        "id": 215818083,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604652243
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Hello!/near/215818083\">said</a>:</p>\n<blockquote>\n<p>Note that VSCode has several extension pretending to bring vim emulation, and many people here (including me) use them. But they are definitely buggy.</p>\n</blockquote>\n<p><a href=\"https://github.com/asvetliakov/vscode-neovim\">https://github.com/asvetliakov/vscode-neovim</a> this is what I use</p>",
        "id": 215818163,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604652295
    },
    {
        "content": "<p>when I have to use vscode</p>",
        "id": 215818167,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604652301
    },
    {
        "content": "<p>The main big bug is unpredictable undo. VSCode undo list and vim plugin undo list live separate lives and fight each other.</p>",
        "id": 215818171,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604652303
    },
    {
        "content": "<p>Basic advice is to never use vim plugin undo.</p>",
        "id": 215818194,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604652318
    },
    {
        "content": "<p>alright I'll be sleeping now (345 AM here hehe), but I'll get started tom, thanks for the help!</p>",
        "id": 215818241,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604652357
    },
    {
        "content": "<p>Have a good night!</p>",
        "id": 215818289,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1604652367
    },
    {
        "content": "<p>gn</p>",
        "id": 215818293,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604652370
    },
    {
        "content": "<p>Hi, just wanted to introduce myself quickly: I'm Thomas Powell and I lecture computer science at Bath, though my research interests are primarily mathematical and centered around applications of proof theory in mathematics (also known as \"proof mining\").</p>\n<p>I've been meaning to try my hand at formalisation for a while now, and there's a ton of stuff from my area which would probably make for interesting formalisation projects, including things like proof interpretations, higher-order computability theory and relevant stuff from computable analysis, like rates of convergence.</p>\n<p>I also have an ulterior motive, which is to experience the theorem prover learning curve myself, with an eye on getting my future students interested, and potentially setting them up with undergraduate projects based the formalisation of topics from computer science. But before any of that happens, I'm going to need to ask a ton of stupid questions myself!</p>",
        "id": 225051533,
        "sender_full_name": "Thomas Powell",
        "timestamp": 1612373980
    },
    {
        "content": "<p>Hello everyone, my name is Paul and I am currently writing my Master's thesis in Karlsruhe, Germany, in the field of convex geometry. I'm currently trying to formalize a subtle chapter using Lean, sorrying classical results from Brunn-Minkowski theory that are still missing in mathlib, but I plan to implement and contribute some of them later to mathlib. I must say that the library is pretty impressive and usable at this point.</p>",
        "id": 292324481,
        "sender_full_name": "Paul Reichert",
        "timestamp": 1659885026
    },
    {
        "content": "<p>Welcome! There may be more Brunn-Minkowski stuff buried in old pull-requests. Maybe ask <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span></p>",
        "id": 292324502,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1659885082
    },
    {
        "content": "<p>I don't think I ever worked on Brunn-Minkowski, only Minkowskis convex body theorem, of course that theorem or some of it's lemmas may also be useful in places, and I know <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> and I have been thinking about modernizing that work recently.</p>",
        "id": 292330629,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1659893951
    },
    {
        "content": "<p>Hey! Indeed <a href=\"https://github.com/leanprover-community/mathlib/pull/2819\">#2819</a> is being bumped and cleaned up (slowly, because I do not yet know my way around measure theory library). And incidentally I will be working on Brunn-Minkowski once my summer internship is over.</p>",
        "id": 292330820,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1659894212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Maybe you should start maintaining a public list of all Lean projects... you seem to be working on <em>everything</em> <span aria-label=\"open mouth\" class=\"emoji emoji-1f62e\" role=\"img\" title=\"open mouth\">:open_mouth:</span> <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 292358917,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1659931931
    },
    {
        "content": "<p>(Also, it would help check whether you are blocking others from working on certain topics if something you've started working on slipped down your priority queue.)</p>",
        "id": 292358986,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1659932076
    },
    {
        "content": "<p>Yeah, you reopened <a href=\"https://github.com/leanprover-community/mathlib/pull/4956\">#4956</a> nearly a year ago and it's clogging up my \"view all PRs\" page ;-) (not that I actually care)</p>",
        "id": 292400002,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1659964661
    },
    {
        "content": "<p>Sorry Kevin! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 292466591,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1659979037
    },
    {
        "content": "<p>Yeah, feel free to do Brunn-Minkowski if you have time before I do (namely, october).</p>",
        "id": 292466621,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1659979060
    },
    {
        "content": "<p>Fine. I plan to try as soon as I have verified my proof and get back to you all when or if I start, <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span></p>",
        "id": 293446892,
        "sender_full_name": "Paul Reichert",
        "timestamp": 1660516493
    },
    {
        "content": "<p>Hello, I'm a Concordia University (Montreal) Pure &amp; Applied Mathematics undergraduate student. I've played and completed the Natural Number Game and I've also done the tutorial as well. I wanted to try my shot at the theorem that all groups of order p^2, where p is a prime, are commutative, but the task seems daunting at the moment. </p>\n<p>I've given a look at the Contributing section (<a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a>) but I can't seem to get over the hump, I just need a nudge in the right direction!</p>\n<p>Any help would be appreciated, preferably something step-by-step.</p>",
        "id": 293607178,
        "sender_full_name": "Brendon James Thomson",
        "timestamp": 1660591600
    },
    {
        "content": "<p>Just to let you know, this was recently PRed to mathlib. I'm not clear what you're asking. You want to know how to prove the theorem or how to get something into mathlib?</p>",
        "id": 293607447,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1660591709
    },
    {
        "content": "<p>Does that mean the theorem was already contributed? I would like to know how to get something into mathlib (:</p>",
        "id": 293607856,
        "sender_full_name": "Brendon James Thomson",
        "timestamp": 1660591859
    },
    {
        "content": "<p>The theorem has already been contributed: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_p_group.comm_group_of_card_eq_prime_sq\">docs#is_p_group.comm_group_of_card_eq_prime_sq</a><br>\nThe first step to contributing is <code>leanproject get -b mathlib:my_branch_name</code> in the terminal. And then you can start editing mathlib files.</p>",
        "id": 293608421,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1660592107
    },
    {
        "content": "<p>The docstrings seem swapped, by the way</p>",
        "id": 293608610,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1660592169
    },
    {
        "content": "<p>Yeah, just noticed. I'm making a PR to fix it right now :)</p>",
        "id": 293608647,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1660592183
    },
    {
        "content": "<p>\"The theorem has already been contributed\" - not a problem (:</p>",
        "id": 293608998,
        "sender_full_name": "Brendon James Thomson",
        "timestamp": 1660592315
    }
]