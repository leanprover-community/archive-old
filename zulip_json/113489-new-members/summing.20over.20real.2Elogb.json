[
    {
        "content": "<p>This theorem :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">why</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">),</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset.Icc</span> <span class=\"mi\">2</span> <span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">real.logb</span> <span class=\"n\">i</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>creates the problem: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"kd\">class</span> <span class=\"kd\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">locally_finite_order</span> <span class=\"n\">ℝ</span>\n</code></pre></div>\n<p>this doesn't happen if I change the sum term to be <code>(real.logb 2 2)</code> so I don't know what the issue is here, any hints?</p>",
        "id": 272976599,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1645635303
    },
    {
        "content": "<p><code>finset.Icc 2 100</code> has to be finite by definiion, and there are more than finitely many real numbers in the interval <code>[2, 100]</code></p>",
        "id": 272978464,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645635978
    },
    {
        "content": "<p>Do you instead want to sum over the integers in that range?</p>",
        "id": 272978551,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645636020
    },
    {
        "content": "<p>You probably want</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">here_is_why</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset.Icc</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">real.logb</span> <span class=\"n\">i</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 272979271,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645636308
    },
    {
        "content": "<p>Oh yeah I did want to sum over the integers in that range, it always had, but this time for some reason it hadn't...</p>",
        "id": 272991608,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1645640846
    },
    {
        "content": "<p>Thanks for the tips!</p>",
        "id": 272991619,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1645640850
    },
    {
        "content": "<p>Lean can infer that i must be a real and you didn't specify the types of 2 and 100 so it went with the path of least resistance. If you don't give it any clues at all it guesses nat but you gave it a clue with <code>real.logb</code></p>",
        "id": 272998707,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645644180
    }
]