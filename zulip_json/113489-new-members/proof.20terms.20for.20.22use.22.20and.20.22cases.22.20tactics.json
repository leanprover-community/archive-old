[
    {
        "content": "<p>Hello! I'm halfway through chapter 3 of mathematics_in_lean and was wondering how prove something like the example below in proof term mode. It is straightforward with tactics but I don't think the tutorials teaches you the proof term alternatives for these two tactics.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n    <span class=\"n\">linarith</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 204356155,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1595172882
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">ha</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"k\">in</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">linarith</span><span class=\"bp\">⟩</span>\n</code></pre></div>",
        "id": 204356236,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1595173001
    },
    {
        "content": "<p>Thank you so much!</p>",
        "id": 204356252,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1595173060
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"316806\">Jia Ming Lim</span> <a href=\"#narrow/stream/113489-new-members/topic/proof.20terms.20for.20.22use.22.20and.20.22cases.22.20tactics/near/204356155\">said</a>:</p>\n<blockquote>\n<p>but I don't think the tutorials teaches you the proof term alternatives for these two tactics.</p>\n</blockquote>\n<p>Note that this is <em>by design</em>.</p>",
        "id": 204356386,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595173302
    },
    {
        "content": "<p>ahh right, thanks</p>",
        "id": 204356767,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1595173840
    },
    {
        "content": "<p>There's no term mode equivalent for <code>linarith</code>, it does hard work in general. You might well be able to find the lemma saying that if d isn't 0 then a/d*d=a using <code>library_search</code> and then you could use that -- but the whole <code>linarith</code> philosophy is that this gets pretty boring very quickly</p>",
        "id": 204356961,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595174069
    },
    {
        "content": "<p>yeah hahah it's fun to search for the lemmas at first but then linarith starts to look too good to avoid</p>",
        "id": 204357403,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1595174522
    },
    {
        "content": "<p>For <code>cases</code>, 7.6 of <a href=\"https://leanprover.github.io/theorem_proving_in_lean/\">#tpil</a> gives a decent explanation of what's going on. (If you find yourself wondering how things work under the hood, TPIL is a good place to start looking).</p>",
        "id": 204357709,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595174788
    },
    {
        "content": "<p>Coool now I have something to look forward to in that book. Thank you!</p>",
        "id": 204357956,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1595175080
    }
]