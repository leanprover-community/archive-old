[
    {
        "content": "<p>Hey! Given <code>x : A</code>, I expected <code>trivial : x \\in univ</code>, since <code>x \\in univ</code> is definitionally equal to <code>true</code>, or so I thought. Why isn't it the case?</p>",
        "id": 270504725,
        "sender_full_name": "bottine",
        "timestamp": 1643868096
    },
    {
        "content": "<p>In some tests, it seems like if you don't say what type <code>univ</code> is supposed to have, then there are metavariables, and perhaps these cause it to fail.</p>\n<p>If you specify the type of <code>univ</code>, then it works. Written as an <code>example</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">set.univ</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n</code></pre></div>",
        "id": 270507423,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1643870921
    }
]