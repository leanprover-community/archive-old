[
    {
        "content": "<p>Hi, I&rsquo;m newbie about <code>lean</code> and <code>mathlib</code> also. And I&rsquo;m trying to set up <code>mathlib</code> facilities on my environment, mac m1. To do so, I&rsquo;ve followed the instructions for quick start, that is, <code>leanproject get tutorials</code>. Launched <code>00_first_proofs.lean</code>, and wait for a while for <code>lean</code> to correctly load the dependencies and compile.</p>\n<p>It seemed to work for a while, but seems with some noticeable lags, and eventually spitted an error message saying</p>\n<blockquote>\n<p>error: excessive memory consumption detected at &rsquo;replace&rsquo; (potential solution: increase memory consumption threshold)</p>\n</blockquote>\n<p>To inspect what&rsquo;s going on, first, I opened Activity Monitor, and confirmed <code>lean</code> itself consumes too much memory:<br>\n<a href=\"/user_uploads/3121/xMc1tQ0pPGpjLJsvleT0sNW4/Screen-Shot-2021-05-06-at-12.03.19-PM.png\">Screen-Shot-2021-05-06-at-12.03.19-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/xMc1tQ0pPGpjLJsvleT0sNW4/Screen-Shot-2021-05-06-at-12.03.19-PM.png\" title=\"Screen-Shot-2021-05-06-at-12.03.19-PM.png\"><img src=\"/user_uploads/3121/xMc1tQ0pPGpjLJsvleT0sNW4/Screen-Shot-2021-05-06-at-12.03.19-PM.png\"></a></div><p>Thanks for all your hard work! </p>\n<p>Best regards,<br>\n-- <strong>Hyunggyu Jang</strong></p>",
        "id": 237599111,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620270993
    },
    {
        "content": "<p>Did you open the tutorials directory in VS Code, or just the file <code>00_first_proofs.lean</code>?</p>",
        "id": 237599280,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620271193
    },
    {
        "content": "<p>Thanks for your quick reply!</p>\n<p>I&rsquo;ve launched <code>00_first_proofs.lean</code> at Emacs directly.</p>",
        "id": 237599419,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620271283
    },
    {
        "content": "<p>Oh, I see. I'm not sure if the same is true for the emacs mode, but at least for VS Code you have to open the directory, not just a single file.</p>",
        "id": 237599535,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620271367
    },
    {
        "content": "<p>At least, to me, there&rsquo;s no way to trigger lean server by opening the enclosing directory, not the file itself.</p>\n<p>I really <em>love</em> Emacs, so I want to avoid to use VS Code.</p>\n<p>Thanks!</p>",
        "id": 237599688,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620271496
    },
    {
        "content": "<p>If you navigate to your tutorials directory in the console and run <code>ls _target/deps/mathlib/src/algebra</code> do you see any files with a <code>.olean</code> extension? If so, that means that <code>leanproject</code> did at least get the compiled files which should make Lean load quickly.</p>",
        "id": 237599705,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620271511
    },
    {
        "content": "<p>Yes, I can confirm it compiled to <code>*.olean</code> along with its source file, <code>*.lean</code></p>",
        "id": 237599777,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620271567
    },
    {
        "content": "<p>Furthermore, even after I met such an error from <code>lean</code> server, I still can interact as normal. The only problem seems to be the fact that I consumes too much memory. It affects my OS&rsquo;s behavior noticeably.</p>",
        "id": 237599889,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620271685
    },
    {
        "content": "<p>Well, the reason Lean is using so many resources is because it's recompiling the <code>.lean</code> files. What version of Lean are you using?</p>",
        "id": 237599904,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620271717
    },
    {
        "content": "<p>We don't have an official M1 release, so just to be sure, are you using the x86 version coming from <code>elan</code>?</p>",
        "id": 237599946,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620271774
    },
    {
        "content": "<p>The latest one, 3.30c. But it seems like the tutorial wants 3.28 version.</p>\n<p>Oh, <code>elan</code> seems to have <code>gmp</code> <a href=\"https://github.com/leanprover/elan/issues/20\">path problem</a>, and even I set it properly by</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>install_name_tool -change /usr/local/opt/gmp/lib/libgmp.10.dylib /opt/homebrew/lib/libgmp.10.dylib ~/.elan/toolchains/leanprover-community--lean---3.28.0/bin/lean\n</code></pre></div>\n<p>As my <code>gmp</code> is <code>arm64</code> version, it conflicted with <code>lean</code> executable.</p>\n<p>So I&rsquo;ve gone with <code>brew</code>&rsquo;s <code>lean</code>, which supports <code>arm64</code> architecture, plus, it supports <code>HEAD</code> option, which presumably builds <code>lean</code> from github repository, I guess.</p>",
        "id": 237600282,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620272041
    },
    {
        "content": "<p>Since <code>lean</code> doesn&rsquo;t support m1 officially, then maybe I should use Rosetta 2 for emulating intel architecture?</p>",
        "id": 237600405,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620272125
    },
    {
        "content": "<p>Yes, I think Rosetta + elan is still the recommended way to go. </p>\n<p>We don't recommend using homebrew, as that only installs a single version of Lean and you may find yourself looking at projects which require different versions of Lean, e.g. the tutorials which are on 3.28 and mathlib which is currently on 3.30.</p>",
        "id": 237600493,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620272204
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> has been using Lean on an M1 Mac; he might have some more advice.</p>",
        "id": 237600536,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620272249
    },
    {
        "content": "<p>Thanks for redirecting! I hope I can get some insight how to setup <code>lean</code> in M1.</p>\n<p>For the Rosetta + elan combination, I guess should install Rosetta version homebrew.</p>\n<p>Thanks for your sincere advice! At least, I think, I found what caused the excessive memory consumption from <code>lean</code> server side!</p>",
        "id": 237600757,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620272437
    },
    {
        "content": "<p>For anyone who reached this discussion, if one scarifies version managing facilities from <code>elan</code>, that is, if you are okay with a single version of <code>lean</code>, you can do it as following, at least for the tutorials:</p>\n<ol>\n<li>Install the latest <code>lean</code> via either from source or homebrew. For example, I&rsquo;ve installed with the command:</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>brew install lean --HEAD\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>At the time of writing, it should match with the version supported by `mathlib`.\n</code></pre></div>\n\n<ol start=\"2\">\n<li>Build tutorials with <code>leanpackage get tutorials</code>. It is for getting the source files from <code>tutorials</code> rather than building <code>mathlib</code> dependencies, which are to be done via the following step.</li>\n<li>Build <code>mathlib</code> dependency with <code>leanpackage new</code>. Note that this should be issued other than the <code>tutorials</code> directory to avoid meta configuration file conflicts. You shouldn&rsquo;t get any error messages in this step.</li>\n<li>Move the source codes from <code>tutorials</code> to the newly built project. Might need to adjust <code>leanpkg.toml</code> or <code>leanpkg.path</code>.</li>\n</ol>\n<p>Result?<br>\n<a href=\"/user_uploads/3121/6PeIcQ2fYLvtJ9_wrGyveFPT/Screen-Shot-2021-05-06-at-1.36.17-PM.png\">Screen-Shot-2021-05-06-at-1.36.17-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/6PeIcQ2fYLvtJ9_wrGyveFPT/Screen-Shot-2021-05-06-at-1.36.17-PM.png\" title=\"Screen-Shot-2021-05-06-at-1.36.17-PM.png\"><img src=\"/user_uploads/3121/6PeIcQ2fYLvtJ9_wrGyveFPT/Screen-Shot-2021-05-06-at-1.36.17-PM.png\"></a></div><p>All I needed was to taste and experiment with <code>lean</code>, thus, felt a single version of <code>lean</code> is more than sufficient to me.<br>\nThanks for guiding me, <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>!!</p>",
        "id": 237604534,
        "sender_full_name": "Hyunggyu Jang",
        "timestamp": 1620275973
    },
    {
        "content": "<p>I'm getting the same error in VS Code on Macbook Air M1 with 16GB RAM: \"excessive memory consumption detected at 'replace' (potential solution: increase memory consumption threshold)\" only when importing from mathlib it seems.</p>",
        "id": 237920841,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1620444982
    },
    {
        "content": "<p>Do you have a fully compiled mathlib on your system? If not then that error is not unexpected</p>",
        "id": 237936128,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620460850
    },
    {
        "content": "<p>I fixed it somehow. I had the folder syncing with Dropbox, so I disabled that in case dropbox was messing with things. I also deleting the project and all the files and then did a fresh <code>leanproject new</code> and now it's so far not giving me that error.</p>",
        "id": 238003971,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1620530395
    },
    {
        "content": "<p>Switching back to lean3 from lean4, I am having the same issue with Emacs getting up an running:<br>\n<code>Lean (version 3.30.0, commit a5822ea47ebc, Release)</code><br>\nUsed leanproject to get mathlib, where I have oleans<br>\n<code>mathlib = {git = \"https://github.com/leanprover-community/mathlib\", rev = \"ea0043ca0f7c83de3103c0a5b87b7b39717cb837\"}</code><br>\nVSCode runs <code>import topology.basic</code> without issues, and an otherwise responsive Emacs lean-mode will spin up several threads and hang. Looks like it may be unable to find/use the oleans, and is trying to rebuild mathlib.</p>",
        "id": 238084410,
        "sender_full_name": "Scott Viteri",
        "timestamp": 1620619544
    }
]