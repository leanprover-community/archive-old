[
    {
        "content": "<p>Hi,<br>\nI'm trying to work through <a href=\"https://leanprover.github.io/theorem_proving_in_lean/index.html\">Theorem Proving in Lean</a>, but running into an issue in Chapter 4. There's a <a href=\"https://leanprover-community.github.io/lean-web-editor/#code=namespace%20hidden%0A%0Adef%20divides%20%28m%20n%20%3A%20%E2%84%95%29%20%3A%20Prop%20%3A%3D%20%E2%88%83%20k%2C%20m%20*%20k%20%3D%20n%0A%0Ainstance%20%3A%20has_dvd%20nat%20%3A%3D%20%E2%9F%A8divides%E2%9F%A9%0A%0Adef%20even%20%28n%20%3A%20%E2%84%95%29%20%3A%20Prop%20%3A%3D%202%20%E2%88%A3%20n%20--%20You%20can%20enter%20the%20'%E2%88%A3'%20character%20by%20typing%20%5Cmid%0A%0Asection%0A%20%20variables%20m%20n%20%3A%20%E2%84%95%0A%0A%20%20%23check%20m%20%E2%88%A3%20n%0A%20%20%23check%20m%5En%0A%20%20%23check%20even%20%28m%5En%20%2B3%29%0Aend%0A%0Aend%20hidden\">snippet</a> of code involving some #checks of powers of natural numbers which fails with the error \"failed to synthesize type class instance for m n : ℕ ⊢ has_pow ℕ ℕ\". Is there any way to fix this? I'm guessing I have to somehow teach Lean what it means to take powers of natural numbers in the same way that the snippet teaches Lean what it means for one natural to divide another?<br>\nThanks for any help!<br>\nBen Fayyazuddin Ljungberg</p>",
        "id": 209997176,
        "sender_full_name": "Benjamin FL",
        "timestamp": 1600086656
    },
    {
        "content": "<p>There used to be a definition of pow for natural numbers built into Lean, but there was quite a few issues with it, so it was removed from Lean. The definition of <code>has_pow ℕ ℕ</code> is now in mathlib, so if you add <code>import data.nat.basic</code> to the top of the file Lean should be able to find the instance.</p>",
        "id": 209998733,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1600087605
    },
    {
        "content": "<p>Note that this change is like 3 days old. So the authors haven't caught up with it...</p>",
        "id": 209998826,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600087648
    },
    {
        "content": "<p>Oh, we're sorry about that. Nobody thought about checking that TPIL wasn't impacted byt this change. <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span></p>",
        "id": 209998845,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600087659
    },
    {
        "content": "<p>Thanks for the quick responses, really appreciate it!</p>",
        "id": 209999324,
        "sender_full_name": "Benjamin FL",
        "timestamp": 1600087886
    },
    {
        "content": "<p>I'm on it -- I'll fix it soon.</p>",
        "id": 210002135,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1600089238
    }
]