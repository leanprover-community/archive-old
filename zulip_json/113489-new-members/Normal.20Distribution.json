[
    {
        "content": "<p>Hi, I am new to lean and trying to prove properties of normal distribution, does anyone have any idea about I could represent the mean and variance in lean. Thanks for any help.</p>",
        "id": 318158656,
        "sender_full_name": "Joshua Banks",
        "timestamp": 1672174761
    },
    {
        "content": "<p>A couple of students at Imperial have been working on the Gaussian, although they didn't push anything since October. Their work is <a href=\"https://github.com/leanprover-community/mathlib/blob/b16836e66100a6d8eaae86c395b2480655c8e891/src/probability/gaussian.lean\">here</a>.</p>",
        "id": 318168289,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672180775
    },
    {
        "content": "<p>There are ways of talking about the mean (expected value) and variance of a real random variable in Lean, but unfortunately Gaussian distributions are not yet in mathlib (at least not with enough API to make them usable without a lot of work). (Kevin's link above contains work on such topics that is not yet in mathlib.)</p>\n<p>Some possible spellings of such things in Lean are in the following. (Although I would prefer more direct statements about probability measures on <code>ℝ</code> instead of indirect statements about the laws of <code>ℝ</code>-valued random variables, but Gaussians are not yet in mathlib in either form...)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">probability.moments</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">measure_theory</span>\n\n<span class=\"c1\">-- Let (Ω, F, ℙ) be a probability space.</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">measurable_space</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">ℙ</span> <span class=\"o\">:</span> <span class=\"n\">measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_probability_measure</span> <span class=\"n\">ℙ</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- Let Z be a real-valued random variable on this probability space.</span>\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Z_mble</span> <span class=\"o\">:</span> <span class=\"n\">measurable</span> <span class=\"n\">Z</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- The distribution of the random variable Z (a probability measure on ℝ) under ℙ is spelled `ℙ.map Z`:</span>\n<span class=\"k\">#check</span> <span class=\"n\">ℙ.map</span> <span class=\"n\">Z</span>\n\n<span class=\"c1\">-- I doubt that gaussian distributions have been defined in Lean's mathlib yet, so</span>\n<span class=\"c1\">-- at this point you should probably make further assumptions on the distribution of Z.</span>\n<span class=\"c1\">-- For example using the repo that Kevin linked to, one could write:</span>\n<span class=\"c1\">-- `variables m s : ℝ`</span>\n<span class=\"c1\">-- `variables measure.real_gaussian (ℙ.map Z) m s`</span>\n\n<span class=\"c1\">-- In any case, towards the spelling of the expected value and the variance...</span>\n\n<span class=\"c1\">-- The expected value of Z is its integral w.r.t. ℙ, which can be expressed in Lean as `∫ ω, Z ω ∂ℙ`:</span>\n<span class=\"k\">#check</span> <span class=\"bp\">∫</span> <span class=\"n\">ω</span><span class=\"o\">,</span> <span class=\"n\">Z</span> <span class=\"n\">ω</span> <span class=\"bp\">∂</span><span class=\"n\">ℙ</span>\n<span class=\"c1\">-- (For Z ∉ L¹(ℙ) this yields a junk value, as the expected value is ill-defined.)</span>\n<span class=\"c1\">-- Another spelling of the same thing is:</span>\n<span class=\"k\">#check</span> <span class=\"n\">probability_theory.moment</span> <span class=\"n\">Z</span> <span class=\"mi\">1</span> <span class=\"n\">ℙ</span>\n\n<span class=\"c1\">-- The variance of Z can be expressed in Lean as:</span>\n<span class=\"k\">#check</span> <span class=\"n\">probability_theory.variance</span> <span class=\"n\">Z</span> <span class=\"n\">ℙ</span>\n<span class=\"c1\">-- (For Z ∉ L²(ℙ) this yields a junk value. `probability_theory.evariance Z ℙ` is</span>\n<span class=\"c1\">-- a safer but possibly less convenient [0, +∞] -valued alternative.)</span>\n<span class=\"c1\">-- Another spelling of the same thing is:</span>\n<span class=\"k\">#check</span> <span class=\"n\">probability_theory.central_moment</span> <span class=\"n\">Z</span> <span class=\"mi\">2</span> <span class=\"n\">ℙ</span>\n</code></pre></div>",
        "id": 318170002,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1672181810
    },
    {
        "content": "<p>Thanks a lot for your comments that's very helpful and clarifies my issues currently</p>",
        "id": 318265085,
        "sender_full_name": "Joshua Banks",
        "timestamp": 1672237474
    }
]