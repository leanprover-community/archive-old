[
    {
        "content": "<p>Could someone help me troubleshoot this?  I haven't used <code>local attribute [instance]</code> before, but I had thought the intended use case was precisely getting the below <code>apply_instance</code> to work.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">intervals</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">densely_ordered</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">set</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">def</span> <span class=\"n\">Ioo_inhabited</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"o\">(</span><span class=\"n\">Ioo</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">choice</span> <span class=\"o\">(</span><span class=\"n\">nonempty</span><span class=\"bp\">.</span><span class=\"n\">to_subtype</span> <span class=\"o\">(</span><span class=\"n\">dense</span> <span class=\"n\">h</span><span class=\"o\">))</span><span class=\"bp\">⟩</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">,</span> <span class=\"n\">priority</span> <span class=\"mi\">5000</span><span class=\"o\">]</span> <span class=\"n\">Ioo_inhabited</span>\n\n<span class=\"c1\">--fails</span>\n<span class=\"n\">noncomputable</span> <span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"o\">(</span><span class=\"n\">Ioo</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span>\n\n<span class=\"c1\">--fails</span>\n<span class=\"n\">noncomputable</span> <span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"o\">(</span><span class=\"n\">Ioo</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">library_search</span>\n\n<span class=\"c1\">--works</span>\n<span class=\"n\">noncomputable</span> <span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"o\">(</span><span class=\"n\">Ioo</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Ioo_inhabited</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 208923038,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1599111710
    },
    {
        "content": "<p>there are two problems with your code:</p>\n<ol>\n<li><code>a &lt; b</code> is not a class, so Lean can't infer it</li>\n<li>also you didn't <code>include h</code> so <code>h</code> isn't even in the context (try putting your cursor after <code>by</code> to see the context)</li>\n</ol>",
        "id": 208923204,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1599111908
    },
    {
        "content": "<p>only unnamed instances are automatically included in the context</p>",
        "id": 208923213,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1599111929
    },
    {
        "content": "<p>Thanks!  So how can I fix this?  Do I want a local instance of <code>fact</code> with <code>a &lt; b</code>?</p>",
        "id": 208923492,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1599112288
    },
    {
        "content": "<p>Yes. That's the way it's done in <code>real_instances.lean</code>.</p>",
        "id": 208923846,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1599112709
    },
    {
        "content": "<p>That's a great usage model.  Thanks!</p>",
        "id": 208923964,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1599112854
    }
]