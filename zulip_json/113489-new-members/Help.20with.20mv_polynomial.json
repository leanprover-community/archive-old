[
    {
        "content": "<p>I'm having trouble using the new <code>mv_polynomial.prod_X_add_C_coeff</code>. What would I have to use instead of the last <code>rw</code> in this mwe?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.polynomial.vieta</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">polynomial.prod_X_sub_C_coeff</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>  <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hm</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">finprod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">polynomial.X</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">k</span><span class=\"o\">))))</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">m</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">finset.powerset_len</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"n\">finset.univ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"n\">t.prod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">sub_eq_add_neg</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">polynomial.C_neg</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">pi.neg_apply</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finprod_eq_prod_of_fintype</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mv_polynomial.prod_X_add_C_coeff</span><span class=\"o\">,</span> <span class=\"c1\">-- now fails because the LHS of this lemma has changed</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 297637695,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1662572108
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/mv_polynomial.prod_X_add_C_coeff\">docs#mv_polynomial.prod_X_add_C_coeff</a></p>",
        "id": 297660872,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1662579586
    },
    {
        "content": "<p>It seems like the goal at that point is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">finset.univ.prod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"bp\">⇑</span><span class=\"n\">C</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">m</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">finset.powerset_len</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"n\">finset.univ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"n\">x.prod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>and the LHS doesn't match the LHS of the lemma because of the <code>-b</code> (as opposed to <code>mv_polynomial.X</code>). <br>\nAm I just confused?</p>",
        "id": 297661005,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1662579642
    },
    {
        "content": "<p>Yes, that's what's going on - the old <code>prod_X_add_C_coeff</code>, which was modified to <code>mv_polynomial.prod_X_add_C_coeff</code> in <a href=\"https://github.com/leanprover-community/mathlib/pull/15008\">#15008</a>, was</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">prod_X_add_C_coeff</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">card</span> <span class=\"n\">σ</span><span class=\"o\">):</span>\n  <span class=\"n\">polynomial.coeff</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">polynomial.X</span><span class=\"o\">))</span> <span class=\"n\">k</span> <span class=\"bp\">=</span>\n  <span class=\"bp\">∑</span> <span class=\"n\">t</span> <span class=\"k\">in</span> <span class=\"n\">powerset_len</span> <span class=\"o\">(</span><span class=\"n\">card</span> <span class=\"n\">σ</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">univ</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">σ</span><span class=\"o\">),</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">i</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>The new version seems more general, but I can't figure out how to apply it to prove the goal above.</p>",
        "id": 297662973,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1662580452
    },
    {
        "content": "<p>For this kind of situation, you might want to use the new <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.prod_X_sub_C_coeff\">docs#multiset.prod_X_sub_C_coeff</a> which is more flexible.</p>",
        "id": 297665497,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1662581488
    },
    {
        "content": "<p>Ok, I'll check it out. Thanks!</p>",
        "id": 297666128,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1662581731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> You can prove it this way:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.polynomial.vieta</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">finset.esymm_map_val</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">s.val.map</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">esymm</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">s.powerset_len</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">t.prod</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">multiset.esymm</span><span class=\"o\">,</span> <span class=\"n\">multiset.powerset_len_map</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">finset.map_val_val_powerset_len</span><span class=\"o\">],</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">multiset.map_map</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">polynomial.prod_X_sub_C_coeff</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>  <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hm</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">finprod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">polynomial.X</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">k</span><span class=\"o\">))))</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">m</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">finset.powerset_len</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"n\">finset.univ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"n\">t.prod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">sub_eq_add_neg</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">polynomial.C_neg</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">pi.neg_apply</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finprod_eq_prod_of_fintype</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset.prod_eq_multiset_prod</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">multiset.map_map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">),</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">finset.univ.val.map</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">multiset.card_map</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">finset.card_fin</span> <span class=\"n\">n</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">multiset.prod_X_add_C_coeff</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">finset.esymm_map_val</span><span class=\"o\">,</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">hm</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 297702031,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1662606926
    },
    {
        "content": "<p>I've PR'd the lemma <code>finset.esymm_map_val</code> and use it to golf an existing proof: <a href=\"https://github.com/leanprover-community/mathlib/pull/16424\">#16424</a></p>",
        "id": 297702044,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1662606951
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 297730191,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1662625797
    }
]