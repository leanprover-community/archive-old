[
    {
        "content": "<p>Hiya, some of you probably know me from mathoverflow.  I was curious how things are going in here.</p>",
        "id": 147443337,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541874915
    },
    {
        "content": "<p>Hey, welcome! Good to see you.</p>",
        "id": 147443347,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541874946
    },
    {
        "content": "<p>Things are going pretty good here (-;</p>",
        "id": 147443353,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541874957
    },
    {
        "content": "<p>I'm a complete noob on the whole theorem proving thing, but I feel like it's something worth learning</p>",
        "id": 147443394,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541874984
    },
    {
        "content": "<p>One of our biggest problems is lack of (wo)man-power</p>",
        "id": 147443395,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875001
    },
    {
        "content": "<p>I'd like to eventually work on the library for simplicial sets, but I'm completely worthless at programming</p>",
        "id": 147443397,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875018
    },
    {
        "content": "<p>Right. The first thing you need to learn is that you should ask lots of questions here <span class=\"emoji emoji-1f606\" title=\"lol\">:lol:</span></p>",
        "id": 147443404,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875040
    },
    {
        "content": "<p>You don't need that much programming experience. Coincidentally, I did some stuff on simplicial sets a couple of months ago.</p>",
        "id": 147443406,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875067
    },
    {
        "content": "<p>In the mean time, Scott wrote a very <em>very</em> nice category library.</p>",
        "id": 147443409,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875082
    },
    {
        "content": "<p>Does it have Grothendieck constructions</p>",
        "id": 147443451,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875094
    },
    {
        "content": "<p>I've been meaning to update my stuff, but haven't done so yet.</p>",
        "id": 147443452,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875094
    },
    {
        "content": "<p>It only has the basics so far. We are in the process of adding limits and colimits.</p>",
        "id": 147443456,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875120
    },
    {
        "content": "<p>If it does, maybe it's already time to introduce the Theta construction that I use in my research</p>",
        "id": 147443457,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875121
    },
    {
        "content": "<p>Ah, ok!</p>",
        "id": 147443460,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875136
    },
    {
        "content": "<p>For example: we don't have abelian categories yet.</p>",
        "id": 147443467,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875151
    },
    {
        "content": "<p>If there's a simplicial library and a category theory library, you might be able to use simplicial objects in Cat to get monoidal categories</p>",
        "id": 147443472,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875162
    },
    {
        "content": "<p>No fundamental obstructions. Just that there are only 3 people working on this in their spare time.</p>",
        "id": 147443477,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875173
    },
    {
        "content": "<p>via Segal's observation</p>",
        "id": 147443481,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875182
    },
    {
        "content": "<p>Also, are Abelian categories really that fundamental for theorem proving?</p>",
        "id": 147443483,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875199
    },
    {
        "content": "<p>Practice seems to show that theorem provers need a delicate balance between hands-on constructions and big theoretical hammers.</p>",
        "id": 147443531,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875222
    },
    {
        "content": "<p>Not for theorem proving, but they are for applying theorem provers to (some, eg my) mathematical research.</p>",
        "id": 147443537,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875255
    },
    {
        "content": "<p>mhm, do you know where I can get bootstrapped with experience to start contributing?</p>",
        "id": 147443539,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875260
    },
    {
        "content": "<p>First you need to install a Lean environment.</p>",
        "id": 147443547,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875276
    },
    {
        "content": "<p>What editor do you use to type LaTeX and the likes?</p>",
        "id": 147443550,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875287
    },
    {
        "content": "<p>vscode</p>",
        "id": 147443552,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875295
    },
    {
        "content": "<p>Great!</p>",
        "id": 147443554,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875301
    },
    {
        "content": "<p>There is a Lean extension for VScode</p>",
        "id": 147443556,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875309
    },
    {
        "content": "<p>Is the Windows lean environment crippled?</p>",
        "id": 147443599,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875325
    },
    {
        "content": "<p>Install it, and open an empty Lean file. It will then ask if you want it to install Lean for you.</p>",
        "id": 147443603,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875330
    },
    {
        "content": "<p>oh, that's neat!</p>",
        "id": 147443607,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875342
    },
    {
        "content": "<p>I think it was fixed. I am not sure. I haven't touched Windows in 10 years.</p>",
        "id": 147443608,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875351
    },
    {
        "content": "<p>If you like textbooks I would recommend Theorem Proving in Lean</p>",
        "id": 147443611,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541875365
    },
    {
        "content": "<p>Maybe it is about to be fixed.</p>",
        "id": 147443612,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875366
    },
    {
        "content": "<p>If it's not working, I have the Win10 Linux emulator installed</p>",
        "id": 147443621,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875386
    },
    {
        "content": "<p>that's why I'm asking</p>",
        "id": 147443623,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875391
    },
    {
        "content": "<p>Lean on Windows works great</p>",
        "id": 147443628,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541875427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137844\">@Harry Gindi</span>  <a href=\"https://gist.github.com/kckennylau/611cc453c67df074ad492b4939ddd356\" target=\"_blank\" title=\"https://gist.github.com/kckennylau/611cc453c67df074ad492b4939ddd356\">here</a> is my (controversal) instructions on how to get Lean on windows</p>",
        "id": 147443676,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541875445
    },
    {
        "content": "<p>There are some issues with setting $PATH correctly. However, if you are the kind of person to have WSL installed, I'm sure you'll be able to fix it</p>",
        "id": 147443677,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541875446
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 147443688,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875515
    },
    {
        "content": "<p>oh wait, you said you're working in Linux, never mind then</p>",
        "id": 147443694,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541875542
    },
    {
        "content": "<p>Both work, Kenny.  WSL is slow though</p>",
        "id": 147443695,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875559
    },
    {
        "content": "<p>Disk I/O is extremely bad</p>",
        "id": 147443736,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875576
    },
    {
        "content": "<p>then again, so is mingw64 =D</p>",
        "id": 147443738,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875584
    },
    {
        "content": "<p>what do you mean?</p>",
        "id": 147443739,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541875605
    },
    {
        "content": "<p>iirc disk i/o on cygwin and msys is benchmarked just as slow as WSL</p>",
        "id": 147443745,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875642
    },
    {
        "content": "<p>it's the main reason why things are so slow.</p>",
        "id": 147443746,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875660
    },
    {
        "content": "<p>I was really active on the WSL github for like two years, and performance is on-par with linux now except for disk i/o</p>",
        "id": 147443785,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875727
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137844\">@Harry Gindi</span> Once you have Lean installed, you will want to fork <a href=\"https://github.com/leanprover-community/mathlib/\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/\">https://github.com/leanprover-community/mathlib/</a><br>\nThen you need to run <code>leanpkg build</code> in that directory. After that, get yourself some tea. Your computer will be warming your room for about an hour.</p>",
        "id": 147443792,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541875749
    },
    {
        "content": "<p>but I also used msys2 before, and it was even slower</p>",
        "id": 147443793,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875751
    },
    {
        "content": "<p>then what's the best one?</p>",
        "id": 147443794,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541875752
    },
    {
        "content": "<p>Kenny Lau, meh, nothing's great.  The best thing you could do probably is run a VM</p>",
        "id": 147443797,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875776
    },
    {
        "content": "<p>if you're concerned about performance</p>",
        "id": 147443798,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875786
    },
    {
        "content": "<p>Thanks Johan!</p>",
        "id": 147443800,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875798
    },
    {
        "content": "<p>I compile Lean with MSYS2, disk i/o is far from the limiting factor when it comes to performance</p>",
        "id": 147443841,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541875819
    },
    {
        "content": "<p>and you need to rewarm your room for an hour every time you update mathlib, isn't Lean wonderful!</p>",
        "id": 147443842,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541875834
    },
    {
        "content": "<p>Andrew Ashworth, then maybe performance on WSL is better than msys2 on everything but disk I/O</p>",
        "id": 147443854,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137844\">@Harry Gindi</span> ping</p>",
        "id": 147443857,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541875888
    },
    {
        "content": "<p>hello!</p>",
        "id": 147443858,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875892
    },
    {
        "content": "<p>Harry Gindi, not ping</p>",
        "id": 147443860,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541875899
    },
    {
        "content": "<p>I'm aware, I'm just using the web UI</p>",
        "id": 147443862,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875909
    },
    {
        "content": "<p>is it now? I can't imagine there being a huge difference</p>",
        "id": 147443863,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541875919
    },
    {
        "content": "<p>Andrew, they did benchmarks on phoronix, and on cpu-only tasks, WSL performs at 95-100% of native</p>",
        "id": 147443904,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875960
    },
    {
        "content": "<p>once it hits disk i/o, it crashes to like 20%</p>",
        "id": 147443905,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541875974
    },
    {
        "content": "<p>it has to do with the fact that NTFS doesn't use inodes and therefore can't cache them effectively</p>",
        "id": 147443914,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876025
    },
    {
        "content": "<p>also, windows defender, and a bunch of other things just kill it on disk i/o</p>",
        "id": 147443957,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876047
    },
    {
        "content": "<p>anyway, going to get this lean system installed</p>",
        "id": 147443960,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876081
    },
    {
        "content": "<p>does arch have a lean-git AUR package?</p>",
        "id": 147443962,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876098
    },
    {
        "content": "<p>Looks like it does</p>",
        "id": 147443971,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876115
    },
    {
        "content": "<p>ah, I was aware of that. I think you can compile Lean with visual studio and get a totally native binary, if i recall correctly</p>",
        "id": 147443975,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541876127
    },
    {
        "content": "<p>i've never investigated it though, so ymmv</p>",
        "id": 147443980,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541876142
    },
    {
        "content": "<p>blech, I have an arch installation on this pc</p>",
        "id": 147443981,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876155
    },
    {
        "content": "<p>disk access is not an issue at 20% or 100% anyway</p>",
        "id": 147443982,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1541876160
    },
    {
        "content": "<p>but every time I decide to jump into linux, I get sidetracked</p>",
        "id": 147444022,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876170
    },
    {
        "content": "<p>I end up staying up all night messing around with it, it's unhealthy for me</p>",
        "id": 147444030,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876194
    },
    {
        "content": "<p>Don't use that arch thing.</p>",
        "id": 147444034,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541876202
    },
    {
        "content": "<p>oh, it's bad?</p>",
        "id": 147444035,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876208
    },
    {
        "content": "<p>or are you saying don't use arch in general :D</p>",
        "id": 147444040,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876224
    },
    {
        "content": "<p>The VScode Lean extension is better. It sets up a useful wrapper called <code>elan</code>.</p>",
        "id": 147444043,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541876226
    },
    {
        "content": "<p>No, I run arch as OS <span class=\"emoji emoji-1f606\" title=\"lol\">:lol:</span> So that's fine.</p>",
        "id": 147444045,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541876241
    },
    {
        "content": "<p>the arch thing is just a lean system, I thought</p>",
        "id": 147444046,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876248
    },
    {
        "content": "<p>anyway gonna work on this tomorrow morning</p>",
        "id": 147444093,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876332
    },
    {
        "content": "<p>cheers all</p>",
        "id": 147444094,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541876335
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> I think <a href=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\">https://github.com/leanprover/mathlib/blob/master/docs/elan.md</a> is a better place to direct computer-savvy Windows users to than your link</p>",
        "id": 147446031,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541880026
    },
    {
        "content": "<p>fair</p>",
        "id": 147446253,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541880513
    },
    {
        "content": "<p>Yes --- please, please, everyone should now be using elan, no messing around with $PATH, no installing complicated things like msys2 or WSL, just go with the bare minimum provided by \"git bash\" and its installer, then work entirely inside VS Code.</p>",
        "id": 147448670,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541885400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137844\">@Harry Gindi</span> ^^ that</p>",
        "id": 147448715,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885446
    },
    {
        "content": "<p>Also, welcome <span class=\"user-mention\" data-user-id=\"137844\">@Harry Gindi</span>. :-)</p>",
        "id": 147448772,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541885603
    },
    {
        "content": "<p>Got it, thanks!</p>",
        "id": 147448775,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885623
    },
    {
        "content": "<p>Also hello, Kevin and Scott, it's been a while since I saw you on MO</p>",
        "id": 147448814,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885660
    },
    {
        "content": "<p>Here is a roadmap to getting started. First read through all of Theorem Proving In Lean and do all the exercises. Then choose a project to work on, and work on it.</p>",
        "id": 147448815,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885661
    },
    {
        "content": "<p>The projects I chose were: (1) do all the exercises in the undergraduate class I was teaching at the time and then (2) define schemes and prove that an affine scheme is a scheme.</p>",
        "id": 147448817,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885696
    },
    {
        "content": "<p>Do not underestimate how difficult all of this is at this point.</p>",
        "id": 147448822,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885703
    },
    {
        "content": "<p>It seems like it'll be really annoying, don't worry =)</p>",
        "id": 147448825,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885720
    },
    {
        "content": "<p>I think maybe a good project to work on would be weak factorization systems once I learn stuff</p>",
        "id": 147448877,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885800
    },
    {
        "content": "<p>Working with isomorphisms is difficult. Working with categories is even more difficult, for several reasons -- some associated with dependent type theory (it is difficult to transport structure along isomorphisms at this point, although things will change one day), some associated with universe issues (mathematicians being sloppy about universes, basically) and other things too</p>",
        "id": 147448878,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885805
    },
    {
        "content": "<p>But there is no better recommendation than \"start on something and whenever you get stuck, ask here\"</p>",
        "id": 147448886,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885837
    },
    {
        "content": "<p>The first thing you will probably have to ask is a question of the form \"here's a link to a pdf, I want to make definition 2.3 of that paper in Lean, where do I even start?\". There will be an answer.</p>",
        "id": 147448888,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885876
    },
    {
        "content": "<p>WFS would be useful if anyone wants to go full bore and do model categories, and it can be done with monads for algebraic weak factorization systems</p>",
        "id": 147448928,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885888
    },
    {
        "content": "<p>I'm guessing that monads work well?</p>",
        "id": 147448930,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885899
    },
    {
        "content": "<p>Listen, honestly, categories are really like jumping in at the deep end</p>",
        "id": 147448931,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885902
    },
    {
        "content": "<p>ah</p>",
        "id": 147448932,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885906
    },
    {
        "content": "<p>groups work well</p>",
        "id": 147448933,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885907
    },
    {
        "content": "<p>but it is not impossible, and you have to jump in somewhere</p>",
        "id": 147448936,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885924
    },
    {
        "content": "<p>I mean, my research is in category theory</p>",
        "id": 147448937,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885941
    },
    {
        "content": "<p>but I'll see how hard it is</p>",
        "id": 147448942,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541885956
    },
    {
        "content": "<p>well, when I arrived here a year ago people were already talking about formalising categories, and one year later they still haven't managed to do adjoint functors.</p>",
        "id": 147448943,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885976
    },
    {
        "content": "<p>This is basically for two reasons: (1) universes make this harder than you think and (2) lack of manpower or personpower or whatever it should be called nowadays</p>",
        "id": 147448987,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886011
    },
    {
        "content": "<p>I would have assumed that monads might be easier than adjunctions, but maybe this is a mistake</p>",
        "id": 147448992,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886050
    },
    {
        "content": "<p>I'm also exaggerating a little. But dependent type theory is perhaps not set up with category theory in mind</p>",
        "id": 147448994,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886052
    },
    {
        "content": "<p>On the other hand, \"difficult\" is certainly not the same as \"impossible\"</p>",
        "id": 147449005,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886074
    },
    {
        "content": "<p>Do presheaves of sets make sense?</p>",
        "id": 147449009,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886104
    },
    {
        "content": "<p>and there is no actual obstruction to doing adjoints and a whole bunch more. It's just that people really like (a) working in the maximal generality and (b) writing automation as they go</p>",
        "id": 147449010,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886105
    },
    {
        "content": "<p>they call them presheaves of types here</p>",
        "id": 147449012,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886115
    },
    {
        "content": "<p>but I defined these in a hands-on way when doing schemes, no problem</p>",
        "id": 147449051,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886130
    },
    {
        "content": "<p>Neat, I'll have to look at what you've done already before I try to jump in</p>",
        "id": 147449053,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886158
    },
    {
        "content": "<p>I did not use the category theory machinery though, I just wrote down the axioms for a functor in that specific case rather than relying on a general theory (which at that time was not there anyway)</p>",
        "id": 147449054,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886162
    },
    {
        "content": "<p>My code sucks though</p>",
        "id": 147449056,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886172
    },
    {
        "content": "<p>because it was the code I wrote to learn how to do mathematics in dependent type theory</p>",
        "id": 147449062,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886185
    },
    {
        "content": "<p>I am currently refactoring all of it with an MSc student</p>",
        "id": 147449064,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886196
    },
    {
        "content": "<p>so when you defined schemes, did you follow e.g. Toën?</p>",
        "id": 147449069,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886213
    },
    {
        "content": "<p>working with functors of points the whole way?</p>",
        "id": 147449110,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886245
    },
    {
        "content": "<p>or is that exactly the kind of non-kosher thing that implicitly uses universes</p>",
        "id": 147449120,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886266
    },
    {
        "content": "<p>I followed the stacks project</p>",
        "id": 147449121,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886266
    },
    {
        "content": "<p><a href=\"https://github.com/kbuzzard/lean-stacks-project/blob/master/src/tag009I.lean\" target=\"_blank\" title=\"https://github.com/kbuzzard/lean-stacks-project/blob/master/src/tag009I.lean\">https://github.com/kbuzzard/lean-stacks-project/blob/master/src/tag009I.lean</a></p>",
        "id": 147449123,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886271
    },
    {
        "content": "<p>there's presheaves of types on a basis of open sets of a top space</p>",
        "id": 147449124,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886279
    },
    {
        "content": "<p>But nowadays we would not write it like that</p>",
        "id": 147449125,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886284
    },
    {
        "content": "<p>we'd use the category theory machinery, which seems to be just about ready to do that sort of thing.</p>",
        "id": 147449126,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886300
    },
    {
        "content": "<p>As of about last week</p>",
        "id": 147449130,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886303
    },
    {
        "content": "<p>neat!</p>",
        "id": 147449135,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886338
    },
    {
        "content": "<p>I heard that some simplicial set machinery was developed up-thread</p>",
        "id": 147449139,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886359
    },
    {
        "content": "<p>was this done entirely without model structures using e.g. Ex^∞?</p>",
        "id": 147449180,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886388
    },
    {
        "content": "<p>In that code I linked to, I am literally saying that a presheaf of types is a function F which takes a basis element to a type, plus a restriction F(U)-&gt;F(V), plus the axioms that res from U to U is id and res of res is res. So I am avoiding explicit usage of any category theory formalism.</p>",
        "id": 147449189,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886427
    },
    {
        "content": "<p>You'll have to ask <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> where he put his simplicial set stuff. That was also written before categories were available, I believe.</p>",
        "id": 147449192,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886449
    },
    {
        "content": "<p>mhm</p>",
        "id": 147449194,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886461
    },
    {
        "content": "<p>alright let's not but the cart before the horse, I've gotta do the exercises and stuff</p>",
        "id": 147449195,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886479
    },
    {
        "content": "<p>cheers, this seems exciting</p>",
        "id": 147449234,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886487
    },
    {
        "content": "<p>it's the future</p>",
        "id": 147449235,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886492
    },
    {
        "content": "<p>but I might have died before it becomes really important</p>",
        "id": 147449236,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886504
    },
    {
        "content": "<p>I have no idea of the time frame before it becomes (a) useful (b) powerful (c) better than us</p>",
        "id": 147449237,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886518
    },
    {
        "content": "<p>ascended to robothood</p>",
        "id": 147449238,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886520
    },
    {
        "content": "<p>but currently we are still a long way from (a)</p>",
        "id": 147449242,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886531
    },
    {
        "content": "<p>\"proof assistants\" currently do nothing but make mathematician's lives harder, for the most part.</p>",
        "id": 147449247,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886550
    },
    {
        "content": "<p>like any assistant they must be trained =p</p>",
        "id": 147449250,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886570
    },
    {
        "content": "<p>otherwise all they do is spill coffee on you</p>",
        "id": 147449251,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886581
    },
    {
        "content": "<p>right. And my view (and I do say this firmly with my tongue in my cheek and slightly provocatively, but there is a grain of truth in it) is that currently the main problem is that for the most part they are being trained to do mathematics by computer scientists, which is in my opinion not driving development in the right directions.</p>",
        "id": 147449303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886650
    },
    {
        "content": "<p>I'm going to try to get my friend in the US involved on this</p>",
        "id": 147449313,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886694
    },
    {
        "content": "<p>There are a few mathematicians here who are trying to change all this, mostly by saying things such as \"mathematicians will not be able to use your software unless you make stuff like (x+y)^3=x^3+3x^2y+3xy^2+y^3 easy to do\"</p>",
        "id": 147449314,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886701
    },
    {
        "content": "<p>he did a math undergrad and he's doing a CS Ph.D., but he hates CS</p>",
        "id": 147449316,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886713
    },
    {
        "content": "<p>this might be a nice change of pace for him</p>",
        "id": 147449355,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886724
    },
    {
        "content": "<p><a href=\"https://xenaproject.wordpress.com/2018/06/13/ab3/\" target=\"_blank\" title=\"https://xenaproject.wordpress.com/2018/06/13/ab3/\">https://xenaproject.wordpress.com/2018/06/13/ab3/</a></p>",
        "id": 147449356,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886724
    },
    {
        "content": "<p>is anyone doing analysis-related stuff?</p>",
        "id": 147449361,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886736
    },
    {
        "content": "<p>Yes, but it's happening very slowly</p>",
        "id": 147449365,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886748
    },
    {
        "content": "<p>because he always liked analysis</p>",
        "id": 147449366,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886750
    },
    {
        "content": "<p>alright, I'll try to cajole him into helping =)</p>",
        "id": 147449369,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886767
    },
    {
        "content": "<p>and in my opinion there is a problem with the development plan we have</p>",
        "id": 147449370,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886783
    },
    {
        "content": "<p>In fact Harry to be honest basic freshman one variable analysis would be a perfect project to learn Lean with</p>",
        "id": 147449377,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886815
    },
    {
        "content": "<p>because the maths is basically very well known and well understood, and putting it into a theorem prover would be a formidable challenge for a beginner, however there would be plenty of people around to help</p>",
        "id": 147449381,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886839
    },
    {
        "content": "<p>The problem is that the general position here is \"do everything in the correct generality\" which means \"the maximal generality\"</p>",
        "id": 147449422,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886859
    },
    {
        "content": "<p>break out a copy of Bourbaki's 'analysis in one real variable' haha</p>",
        "id": 147449423,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886878
    },
    {
        "content": "<p>so instead of developing a basic theory of analysis of functions of one real variable, everyone wants to do stuff on normed spaces and Banach spaces etc etc and then prove all the single-variable theorems in one fell swoop by specialising to this case</p>",
        "id": 147449426,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886900
    },
    {
        "content": "<p>Is that even possible?</p>",
        "id": 147449432,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886914
    },
    {
        "content": "<p>In my mind a good analogy here is what happened with polynomials</p>",
        "id": 147449434,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886919
    },
    {
        "content": "<p>A computer scientist developed a fabulous library of polynomials in an arbitrary number of variables (in fact for an arbitrary set of variables)</p>",
        "id": 147449442,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886953
    },
    {
        "content": "<p>but when mathematicians wanted to actually use it to prove basic stuff like quadratic reciprocity or finite fields or whatever</p>",
        "id": 147449485,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886986
    },
    {
        "content": "<p>For example, defining C^\\infty functions requires you do have partial derivatives, which come from the 1-dimensional case, if I remember correctly (I haven't done analysis in around 8 years =\\)</p>",
        "id": 147449486,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541886991
    },
    {
        "content": "<p>they found they really just wanted a much deeper theory of polynomials in one variable</p>",
        "id": 147449487,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541886999
    },
    {
        "content": "<p>so at the end of the day an undergraduate here at Imperial, Chris Hughes, just wrote the theory of polynomials in one variable anyway.</p>",
        "id": 147449494,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887025
    },
    {
        "content": "<p>And I kind of suspect that the same might happen for differentiable functions.</p>",
        "id": 147449499,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887047
    },
    {
        "content": "<p>Eventually we'll have them on Banach manifolds or something</p>",
        "id": 147449502,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887058
    },
    {
        "content": "<p>oh, you're saying that you agree that the 1-variable case is separate and important</p>",
        "id": 147449503,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887060
    },
    {
        "content": "<p>but then when someone wants to prove that the derivative of sin is cos (which we do not have at this point)</p>",
        "id": 147449504,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887074
    },
    {
        "content": "<p>they will not want to work on a Banach manifold</p>",
        "id": 147449544,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887086
    },
    {
        "content": "<p>it's not even meaningful on a banach manifold</p>",
        "id": 147449545,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887097
    },
    {
        "content": "<p>the derivative of a map of manifolds is a map on tangent bundles</p>",
        "id": 147449546,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887123
    },
    {
        "content": "<p>I know, I'm just saying that if you write general functions which work in some big generality then you will just end up constantly having to tell these functions to specialise to the case of the real numbers</p>",
        "id": 147449547,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887128
    },
    {
        "content": "<p>sure, yes</p>",
        "id": 147449557,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887148
    },
    {
        "content": "<blockquote>\n<p>the derivative of a map of manifolds is a map on tangent bundles</p>\n</blockquote>\n<p>right, and you'll then have to identify the tangent space of the reals with the reals etc</p>",
        "id": 147449558,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887153
    },
    {
        "content": "<p>What I am saying is that in my opinion there is a need for a theory of functions in one real variable</p>",
        "id": 147449561,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887177
    },
    {
        "content": "<p>and that identification is not obvious without additional structure</p>",
        "id": 147449563,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887188
    },
    {
        "content": "<p>I believe that there is a little about functions in one complex variable, somewhere in the modular forms work</p>",
        "id": 147449564,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541887190
    },
    {
        "content": "<p>I get ya!</p>",
        "id": 147449565,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887191
    },
    {
        "content": "<p>I fully agree with this</p>",
        "id": 147449644,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887220
    },
    {
        "content": "<p>there's almost always a distinguished most important 1-dimensional case of whatever</p>",
        "id": 147449651,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887263
    },
    {
        "content": "<p>imagine if people tried to write the categories library starting with 2-categories</p>",
        "id": 147449657,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887274
    },
    {
        "content": "<p>It's also why e.g. Lawvere's ETCC was dead on arrival</p>",
        "id": 147449666,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887312
    },
    {
        "content": "<p>anyway, I'm going to give some of this a shot tomorrow morning</p>",
        "id": 147449710,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887353
    },
    {
        "content": "<p>cheers!</p>",
        "id": 147449712,
        "sender_full_name": "Harry Gindi",
        "timestamp": 1541887355
    },
    {
        "content": "<p>I am a software developer and longtime aficionado of computerized deduction, taking a scenic excursion from building a web GUI proof assistant \"for beginners\" (<a href=\"https://prooftoys.org/\">https://prooftoys.org/</a>) to the modern world of Lean.</p>",
        "id": 276130495,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1647908436
    }
]