[
    {
        "content": "<p>As a newbie trying to learn Lean I tried proving the 'Contrapositive' using<br>\nexample : (P Q : Prop) : (P → Q) -&gt; (¬Q → ¬P) :=<br>\nthe result was a bunch of errors; what is wrong here ?</p>",
        "id": 282895954,
        "sender_full_name": "ndroock1",
        "timestamp": 1652948352
    },
    {
        "content": "<p>STOP: I just saw an error. :-(</p>",
        "id": 282896181,
        "sender_full_name": "ndroock1",
        "timestamp": 1652948459
    },
    {
        "content": "<p>Changed it to : <br>\nexample : (P Q : Prop) : (P → Q) ↔  (¬Q → ¬P) :=<br>\nbut still errors ...</p>",
        "id": 282896430,
        "sender_full_name": "ndroock1",
        "timestamp": 1652948580
    },
    {
        "content": "<p>You have too many <code>:</code>, there doesn't need to be one after <code>example</code> only after the arguments.</p>",
        "id": 282896469,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1652948605
    },
    {
        "content": "<p>Thx. Will try.</p>",
        "id": 282896499,
        "sender_full_name": "ndroock1",
        "timestamp": 1652948630
    },
    {
        "content": "<p>I.e.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">¬</span><span class=\"n\">Q</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span><span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 282896505,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1652948635
    },
    {
        "content": "<p>(Also, <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>)</p>",
        "id": 282902243,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652952024
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths/topic/contrapositive\">#maths &gt; contrapositive</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 282902283,
        "sender_full_name": "Notification Bot",
        "timestamp": 1652952044
    }
]