[
    {
        "content": "<p>More noob questions. Please help to make this work? (tried library_search, simp, hint, cc, suggest...) Thank you!</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"o\">:</span><span class=\"bp\">ℕ→</span><span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">G</span><span class=\"o\">:</span><span class=\"bp\">ℕ→</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fg</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">G</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">=</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"n\">i</span><span class=\"o\">))</span>\n<span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">=</span> <span class=\"n\">G</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span>\n<span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">intros</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n</pre></div>",
        "id": 193955715,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1586897595
    },
    {
        "content": "<p>Try <code>symmetry</code> and then <code>convert fg (k+1) using 1</code></p>",
        "id": 193956329,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586897913
    },
    {
        "content": "<p>Or maybe better <code>symmetry</code>, <code>rw show k + nat.succ i = (k+1) + i</code>,</p>",
        "id": 193956448,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586897968
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n<span class=\"o\">{</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n<span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n<span class=\"n\">symmetry</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">fg</span>\n</pre></div>",
        "id": 193956601,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586898027
    },
    {
        "content": "<p>Why suffices?</p>",
        "id": 193956691,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586898084
    },
    {
        "content": "<p>Don't you mean have?</p>",
        "id": 193956701,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586898090
    },
    {
        "content": "<p>And probably <code>rw fg</code> can replace the last two lines.</p>",
        "id": 193956725,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586898111
    },
    {
        "content": "<p>I say <code>λ k, by rw [show k + nat.succ i = (k+1) + i, by ring, fg]</code></p>",
        "id": 193956848,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586898167
    },
    {
        "content": "<p>(But I can see comma haters coming)</p>",
        "id": 193956889,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586898199
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">G</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">G</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">fg</span><span class=\"bp\">;</span> <span class=\"n\">congr&#39;</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">omega</span>\n</pre></div>",
        "id": 193956996,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586898256
    },
    {
        "content": "<p>The new mathlib style is</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">fg</span><span class=\"o\">,</span> <span class=\"n\">congr&#39;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">omega</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 193957086,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1586898316
    },
    {
        "content": "<p>oh I didn't know that</p>",
        "id": 193957095,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586898326
    },
    {
        "content": "<p>Kenny cheated by moving <code>k</code> left of the colon</p>",
        "id": 193957137,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586898345
    },
    {
        "content": "<p>And <code>ring</code> is shorter than <code>omega</code>, I'm very disappointed by Kenny's golf.</p>",
        "id": 193957244,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586898398
    },
    {
        "content": "<p>That's great to hear that that's the new mathlib style, I had independently come up with it, I know it costs some extra bytes with the brackets but it was getting silly with all the semicolons</p>",
        "id": 193966088,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586904187
    },
    {
        "content": "<p>At least they're not some unicode brackets, so they only cost 1 byte each.</p>",
        "id": 193966184,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586904277
    }
]