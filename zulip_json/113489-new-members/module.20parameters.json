[
    {
        "content": "<p>Is there anything like module parameters (or section parameters) in Lean? I want to assume that a relation is a decidable partial order without prefixing even construction with this assumption. While I can use <code>variables</code> to abstract over the relation this obviously doesn't work for the properties. because they show only up in the proofs.</p>",
        "id": 215244930,
        "sender_full_name": "Thorsten Altenkirch",
        "timestamp": 1604238412
    },
    {
        "content": "<blockquote>\n<p>this obviously doesn't work for the properties</p>\n</blockquote>\n<p>But it does work for properties</p>",
        "id": 215245061,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1604238660
    },
    {
        "content": "<p>in particular, for typeclass assumptions you can have <code>variables (R : A -&gt; A -&gt; Prop) [decidable_rel R]</code> and it will work as you expect</p>",
        "id": 215245066,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1604238697
    },
    {
        "content": "<p>For other kinds of hypotheses, that are not typeclasses like <code>variables (R : A -&gt; A -&gt; Prop) (hr : \\all x, R x x)</code>, you may have to use <code>include hr</code> to include the assumption even in definitions that don't require it (although this may cause a linting warning since it's an unused argument)</p>",
        "id": 215245118,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1604238789
    },
    {
        "content": "<p>Thank you. So where do I say \"include hr\" when I want to use it in a proof?</p>",
        "id": 215245175,
        "sender_full_name": "Thorsten Altenkirch",
        "timestamp": 1604238860
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">section</span>\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">A</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"bp\">\\</span><span class=\"n\">all</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">x</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">uses_hr</span> <span class=\"o\">:</span> <span class=\"bp\">\\</span><span class=\"n\">all</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">x</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">hr</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">doesnt_use_hr</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">hr</span> <span class=\"c1\">-- fail</span>\n<span class=\"kn\">include</span> <span class=\"n\">hr</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">uses_hr</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">hr</span><span class=\"bp\">;</span> <span class=\"n\">trivial</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 215245260,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1604239048
    },
    {
        "content": "<p><code>include</code> is scoped like <code>variable</code></p>",
        "id": 215245263,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1604239066
    },
    {
        "content": "<p>you can also undo <code>include</code> using <code>omit</code></p>",
        "id": 215245264,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1604239078
    }
]