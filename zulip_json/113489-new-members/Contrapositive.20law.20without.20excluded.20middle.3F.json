[
    {
        "content": "<p>Hi, I am trying to solve the following exercise:<br>\nexample : (p → q) → (¬q → ¬p) := sorry<br>\nI have a working proof using em, but the exercise is listed as working without classical.<br>\nI don't see a way of getting to \\not q without arguing that p being true would lead to absurd (needs em to make an or-elim).<br>\nIs ther a way to do this without em?</p>",
        "id": 197061641,
        "sender_full_name": "Golol",
        "timestamp": 1589124619
    },
    {
        "content": "<p>hint: (not p) is defined to be (p -&gt; false)</p>",
        "id": 197061680,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589124721
    },
    {
        "content": "<p>Yes, you have to <code>intro</code> or <code>lam</code> until the goal is <code>false</code>.</p>",
        "id": 197061817,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589124836
    },
    {
        "content": "<p>and then put together what you have to make a proof of <code>false</code> from your contradictory assumptions.</p>",
        "id": 197061873,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589124857
    },
    {
        "content": "<p>aah thanks, perfect!<br>\nNot wanting to open a new thread, there was something else I wondered about.<br>\nThe tutorial in section 3 (Propositional logic) does such a nice job of showing you how beautifully you can dobasically everything with \"-&gt;\", but then hits you with things like add.elim, or.intro etc. which seem clunky at first and a bit \"artificial\" (but they probably make more sense later).<br>\nI thinkthat basically:<br>\nvariables p q r: Prop<br>\n#constant and.intro : p-&gt;q-&gt;p and q<br>\n#constant and.elim_left : p and q -&gt; p<br>\n#constant or.intro_left: p-&gt;p or q<br>\n#constant or.elim (p or q) -&gt; (p-&gt;r) -&gt; (q -&gt; r) -&gt; r<br>\netc.<br>\nshould achieve exactly the same, at least in this specific section about Propositional logic?</p>",
        "id": 197062298,
        "sender_full_name": "Golol",
        "timestamp": 1589125308
    },
    {
        "content": "<p>Section 3 of what?</p>",
        "id": 197062354,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589125351
    },
    {
        "content": "<p><a href=\"https://leanprover.github.io/theorem_proving_in_lean/propositions_and_proofs.html#exercises\" title=\"https://leanprover.github.io/theorem_proving_in_lean/propositions_and_proofs.html#exercises\">https://leanprover.github.io/theorem_proving_in_lean/propositions_and_proofs.html#exercises</a></p>",
        "id": 197062372,
        "sender_full_name": "Golol",
        "timestamp": 1589125399
    },
    {
        "content": "<p>These things are essentially constants anyway, they are basically defined when you create the types</p>",
        "id": 197062377,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589125411
    },
    {
        "content": "<p>For a tactic-based take on it, try Proposition World in the natural number game.</p>",
        "id": 197062450,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589125499
    },
    {
        "content": "<p>Im only at quantifiers, idk tactics yet :D. But I think this stuff is super cool.</p>",
        "id": 197062534,
        "sender_full_name": "Golol",
        "timestamp": 1589125588
    },
    {
        "content": "<p>I wanna learn this, get up to date with the state of the art of analysis/pde in the database and get going</p>",
        "id": 197062563,
        "sender_full_name": "Golol",
        "timestamp": 1589125658
    },
    {
        "content": "<p>If you start with the natural number game then you go straight into tactics and you don't have to learn all this #constant and and.elim stuff. I agree that they're artificial, they're not the way a mathematician thinks about how to manipulate these things.</p>",
        "id": 197062614,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589125705
    },
    {
        "content": "<p>Tactic mode is a much better model for a mathematician</p>",
        "id": 197062617,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589125718
    },
    {
        "content": "<p>Then Ill do that. After I read the inductive types chapter though. Thanks!</p>",
        "id": 197062703,
        "sender_full_name": "Golol",
        "timestamp": 1589125847
    },
    {
        "content": "<p>(Im still living in the undergrad fantasy world where you should linearily understand all preceding mathematics to be allowed to use something)</p>",
        "id": 197062772,
        "sender_full_name": "Golol",
        "timestamp": 1589125972
    },
    {
        "content": "<p>The natural number game is basically an argument that Theorem Proving In Lean is written in the wrong order for mathematicians.</p>",
        "id": 197062975,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589126261
    },
    {
        "content": "<p>Our forthcoming book Mathematics in Lean will be developing the theory in an order more appropriate for mathematicians, and there will certainly be tactics before <code>and.intro</code>.</p>",
        "id": 197063033,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589126301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243838\">Golol</span> <a href=\"#narrow/stream/113489-new-members/topic/Contrapositive.20law.20without.20excluded.20middle.3F/near/197062772\" title=\"#narrow/stream/113489-new-members/topic/Contrapositive.20law.20without.20excluded.20middle.3F/near/197062772\">said</a>:</p>\n<blockquote>\n<p>(Im still living in the undergrad fantasy world where you should linearily understand all preceding mathematics to be allowed to use something)</p>\n</blockquote>\n<p>The nice thing about formalized mathematics is that this is actually a viable strategy</p>",
        "id": 197066140,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589130184
    }
]