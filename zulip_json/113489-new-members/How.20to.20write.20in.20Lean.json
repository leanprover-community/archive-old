[
    {
        "content": "<p>I´d like to prove <code>a * 0 = 0</code>  by  proving  if  <code>a + ( a  *  0 ) = a</code> then  <code>a * 0 = 0 </code> , how can I end this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ZA_AnR</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n\n    <span class=\"k\">calc</span>\n    <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int.mul_one</span> <span class=\"n\">a</span><span class=\"o\">]</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">)</span>     <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">int.distrib_left</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span>           <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">int.add_zero</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>               <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">int.mul_one</span><span class=\"o\">,</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 282509924,
        "sender_full_name": "Ipojucã Moraes da Cruz",
        "timestamp": 1652713952
    },
    {
        "content": "<p>Maybe with this substep:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ZA_AnR</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n\n    <span class=\"k\">calc</span>\n    <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int.mul_one</span> <span class=\"n\">a</span><span class=\"o\">]</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">)</span>     <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">int.distrib_left</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span>           <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">int.add_zero</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>               <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">int.mul_one</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h'</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">add_left_cancel</span> <span class=\"n\">h'</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 282512850,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1652715264
    },
    {
        "content": "<p>I've wanted <code>a + b = b -&gt; a = 0</code> as a lemma periodically, so we might just add it.</p>",
        "id": 282513512,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652715558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_left_eq_self\">docs#add_left_eq_self</a>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">add_left_eq_self.mp</span>\n</code></pre></div>",
        "id": 282515410,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652716362
    },
    {
        "content": "<p>Looked for that, but I needed kyle_search, clearly :)</p>",
        "id": 282515564,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1652716431
    },
    {
        "content": "<p>Ah right. It's not missing but it's misnamed.</p>",
        "id": 282515580,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652716436
    },
    {
        "content": "<p>Each time I look for <code>add_eq_right</code>, <code>add_eq_right_iff</code>...</p>",
        "id": 282515718,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652716495
    }
]