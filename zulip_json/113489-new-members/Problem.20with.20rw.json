[
    {
        "content": "<p>Dear all, I have a problem with the following code: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.fourier</span>\n<span class=\"kn\">import</span> <span class=\"n\">measure_theory.integral.interval_integral</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.integrals</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">split_tsum</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">summable</span> <span class=\"n\">f</span><span class=\"o\">):</span> <span class=\"bp\">∑'</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span>\n  <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">fourier_coeff</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">real.pi</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"bp\">-</span><span class=\"n\">real.pi</span> <span class=\"bp\">..</span> <span class=\"n\">real.pi</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">complex.I</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lhs</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)(</span><span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)(</span><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">ℤ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hg</span><span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">fourier_coeff</span> <span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">):</span>\n<span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">split_tsum</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hg</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>And I think it's because the rw tactic is trying to replace only for the occurrence of n and not of any integer. Am I correct? And, in any case, how do I fix this issue?</p>",
        "id": 292912856,
        "sender_full_name": "Julia Ramos Alves",
        "timestamp": 1660218139
    },
    {
        "content": "<p>Yes that sounds right: your lemma right now says that n is some integer and that g(n)=|fhat(n)|^2. If that's not what you want to say then the fix it to say what you want to say. What do you want to say? Here's a suggestion but I don't know if it's what you want.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">lhs</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)(</span><span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">ℤ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hg</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">complex.abs</span> <span class=\"o\">(</span><span class=\"n\">fourier_coeff</span> <span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">):</span>\n<span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">split_tsum</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hg</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 292913780,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1660218579
    },
    {
        "content": "<p>That suggestion actually fits my intention perfectly, thank you.</p>",
        "id": 292914392,
        "sender_full_name": "Julia Ramos Alves",
        "timestamp": 1660218830
    }
]