[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n<span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">,</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">x</span><span class=\"o\">)]</span>\n<span class=\"n\">include</span> <span class=\"n\">c</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">β</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">≈</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">sorry</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">,</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"n\">ι</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 167512475,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1559848083
    },
    {
        "content": "<p>Is it possible to have a sensible quotient on the product?</p>",
        "id": 167512519,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1559848097
    },
    {
        "content": "<p>If the relation is <code>true</code> then this is almost choice, so I guess you have to use choice.</p>",
        "id": 167512957,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1559848329
    },
    {
        "content": "<p>Is this <code>quotient.choice</code>?</p>",
        "id": 167513005,
        "sender_full_name": "Reid Barton",
        "timestamp": 1559848365
    },
    {
        "content": "<p><a href=\"#narrow/stream/116395-maths/topic/quotients.20and.20lifts.20for.20functions.20of.20arbitrary.20arity/near/150709555\" title=\"#narrow/stream/116395-maths/topic/quotients.20and.20lifts.20for.20functions.20of.20arbitrary.20arity/near/150709555\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/quotients.20and.20lifts.20for.20functions.20of.20arbitrary.20arity/near/150709555</a></p>",
        "id": 167513204,
        "sender_full_name": "Reid Barton",
        "timestamp": 1559848504
    },
    {
        "content": "<p>oh thanks</p>",
        "id": 167513235,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1559848536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> Does this mean we should always construct quotient of a product when we can, since it is intuitively stronger?</p>",
        "id": 167554861,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1559893076
    }
]