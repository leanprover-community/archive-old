[
    {
        "content": "<p>I am defining a finset like: <code>{e ∈ finset.range n | 2 ∣ e }</code>, and I want to show that it is a subset of  <code>finset.range</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"bp\">∈</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span> <span class=\"bp\">|</span> <span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">e</span> <span class=\"o\">})</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">⊆</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I tried simp, dsimp, hint, library_search, suggest. Nothing worked.<br>\nI tried defining M using <code>finset.filter</code> as follows, to then apply <code>finset.filter_subset</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">finset.filter</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">M</span> <span class=\"bp\">⊆</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>But this is giving me an error, asking for <code>⊢ decidable_pred p</code>.<br>\nCould someone please point me in the right direction?</p>",
        "id": 234429053,
        "sender_full_name": "Manuel Candales",
        "timestamp": 1618364944
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"bp\">λ</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"n\">p</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"n\">finset.filter</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">M</span> <span class=\"bp\">⊆</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hM</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">finset.filter_subset</span> <span class=\"n\">p</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 234429759,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1618365541
    },
    {
        "content": "<p>Or write <code>open_locale classical</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"bp\">λ</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"n\">finset.filter</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">M</span> <span class=\"bp\">⊆</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hM</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">finset.filter_subset</span> <span class=\"n\">p</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 234429778,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1618365566
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"n\">finset.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">M</span> <span class=\"bp\">⊆</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">hM</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">finset.filter_subset</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 234429883,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1618365617
    },
    {
        "content": "<p>When you say what <code>p</code> is equal to in a separate hypothesis, that doesn't let the <code>finset.filter</code> in the body of the lemma/example statement know that it is decidable.</p>",
        "id": 234429952,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1618365670
    },
    {
        "content": "<p>Thank you! <code>open_locale classical</code> helped!</p>",
        "id": 234431208,
        "sender_full_name": "Manuel Candales",
        "timestamp": 1618366747
    }
]