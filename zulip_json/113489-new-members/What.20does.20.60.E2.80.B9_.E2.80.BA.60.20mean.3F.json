[
    {
        "content": "<p>(Where <code>‹_›</code> is not to be confused with <code>&lt;_&gt;</code> or <code>⟨_⟩</code>)</p>\n<p>Mathlib uses this in a few places: <a href=\"https://github.com/leanprover-community/mathlib/search?q=%E2%80%B9_%E2%80%BA\">https://github.com/leanprover-community/mathlib/search?q=%E2%80%B9_%E2%80%BA</a></p>\n<p>Figured I'd ask on zulip so that at least someone can search for this in future (assuming zulip search supports these characters).</p>",
        "id": 212065688,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1601640834
    },
    {
        "content": "<p><code>‹t›</code> means something like<code>show t, by assumption</code> and so <code>‹_›</code> basically means <code>by assumption</code>.</p>",
        "id": 212066266,
        "sender_full_name": "Reid Barton",
        "timestamp": 1601641200
    },
    {
        "content": "<p>In general, <code>‹X›</code> is the same as <code>(by assumption : X)</code>.</p>",
        "id": 212066311,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1601641208
    },
    {
        "content": "<p>Where does this notation come from?</p>",
        "id": 212066948,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1601641663
    },
    {
        "content": "<p>Is it part of the language itself, or a <code>notation</code> somewhere I can't find?</p>",
        "id": 212067056,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1601641704
    },
    {
        "content": "<p>I think it's baked into the C++.</p>",
        "id": 212067099,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1601641732
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/blob/master/library/init/meta/tactic.lean#L1024\">https://github.com/leanprover-community/lean/blob/master/library/init/meta/tactic.lean#L1024</a></p>",
        "id": 212067320,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601641868
    }
]