[
    {
        "content": "<p>Is there any game theory formalized in mathlib?? If not, why is that?</p>",
        "id": 260602962,
        "sender_full_name": "Lucas Teixeira",
        "timestamp": 1636329064
    },
    {
        "content": "<p>There are combinatorial games in the sense of Conway, but I think nothing else, presumably because no one has done any yet. :-)</p>",
        "id": 260603150,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636329253
    },
    {
        "content": "<p>\"Game Theory\" means at least two different things :-/</p>",
        "id": 260603178,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636329323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"366882\">@Andrew  Souther</span> might be the person to ask -- see his repo on social choice theory.  One basic problem is that we don't have many fixed point theorems yet, although I belive <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> and other are working on this.</p>",
        "id": 260604493,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1636331147
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Game.20Theory/near/260603178\">said</a>:</p>\n<blockquote>\n<p>\"Game Theory\" means at least two different things :-/</p>\n</blockquote>\n<p>Such as??</p>\n<p>Originally I had the theories covered in a text like this in mind<br>\n<a href=\"https://www.amazon.com/Game-Theory-Analysis-Roger-Myerson/dp/0674341163/\">https://www.amazon.com/Game-Theory-Analysis-Roger-Myerson/dp/0674341163/</a></p>",
        "id": 260604625,
        "sender_full_name": "Lucas Teixeira",
        "timestamp": 1636331352
    },
    {
        "content": "<p>In mathematics it means <a href=\"https://en.wikipedia.org/wiki/Game_theory\">this</a> and <a href=\"https://en.wikipedia.org/wiki/Combinatorial_game_theory\">this</a>. Looks like you mean the former. Scott was talking about the latter.</p>",
        "id": 260604690,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636331451
    },
    {
        "content": "<p>I did recently start a small library of <a href=\"https://github.com/asouther4/lean-social-choice\">social choice theory in Lean</a>, which I think of as adjacent to game theory. I would be interested in working on game theory, but I sense we need Brouwer's fixed point theorem from topology before I could prove the existence of Nash Equilibrium. Some game theory proofs may also require sophisticated probability theory (??)</p>",
        "id": 260604765,
        "sender_full_name": "Andrew  Souther",
        "timestamp": 1636331607
    },
    {
        "content": "<p>Are you going to PR it?</p>",
        "id": 260607932,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1636336468
    },
    {
        "content": "<p>Oh yeah, we're working towards Brouwer's fixed point theorem on <a href=\"https://github.com/leanprover-community/mathlib/tree/sperner-again\">branch#sperner-again</a>, although not at the moment. Bhavik and I will probably get back to it in a month or so now that we're done Szemerédi's regularity lemma.</p>",
        "id": 260626466,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636360321
    },
    {
        "content": "<p>PR my social choice theory work? <br>\nTbh, I am still having fun just adding lemmas and building the repo. But I would love to PR soon.  <br>\nBefore the end of the year, I hope to start a conversation on Zulip about what a social choice PR may look like.</p>",
        "id": 260650704,
        "sender_full_name": "Andrew  Souther",
        "timestamp": 1636374966
    },
    {
        "content": "<p>If you just prove Arrow's theorem and don't PR it, then all that will happen will be that someone else shows up and asks if we have Arrow's theorem, and someone else might say \"it doesn't seem like we do\" and then someone else will duplicate the work.</p>",
        "id": 260656504,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636378275
    },
    {
        "content": "<p>the other thing of course is that in 1 year's time your work won't compile with mathlib master because mathlib master constantly gets refactored and changed to make it better, and repos which don't keep up end up rotting.</p>",
        "id": 260656553,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636378311
    },
    {
        "content": "<p>And your beautiful work will rot in the limbs of the Internet wilderness.</p>",
        "id": 260656573,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636378321
    },
    {
        "content": "<p>We also have <a href=\"https://leanprover-community.github.io/lean_projects.html\">this page</a> which tracks external Lean projects (there's even a table which shows which Lean versions they're compatible with). This doesn't really solve the problem of rot outside of mathlib, but at least people can find your project there. The instructions at the <a href=\"https://github.com/leanprover-contrib/leanprover-contrib\">leanprover-contrib</a> repo even link to some CI scripts which can try to automatically update your project to work with the latest version of Lean / mathlib.</p>",
        "id": 260660488,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1636380325
    },
    {
        "content": "<p>I do have the CI scripts set up, and I've been playing <code>upgrade_lean</code> whack-a-mole since the summer... Glad to hear there is such interest in the PR, and I will prioritize it before end of year.</p>",
        "id": 260661930,
        "sender_full_name": "Andrew  Souther",
        "timestamp": 1636381007
    },
    {
        "content": "<p>that is a game with no end, unless you PR :D</p>",
        "id": 260662009,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636381038
    },
    {
        "content": "<p>It probably ends after the lean3 flag day, since I suspect that tool won't be running mathport automatically any time soon</p>",
        "id": 260667427,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636383384
    },
    {
        "content": "<p>it could.. I hope mathport to be useful also for third party projects, not just mathlib</p>",
        "id": 260695174,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1636394493
    },
    {
        "content": "<p>Daniel had <code>lean-liquid</code> as part of the pipeline for running <code>mathport</code> until I came along. :-) Hopefully once things are a bit more stable we can put it (and other projects?) back in.</p>",
        "id": 260718482,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636405341
    }
]