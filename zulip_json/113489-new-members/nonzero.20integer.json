[
    {
        "content": "<p>how do i get an element from a set of nonzero integers? i tried <code>def nat_plus_0 := ℕ ∪ {0} </code> and get the errors <code>failed to synthesize type class instance for has_union</code> and <code>has_singleton</code></p>",
        "id": 250432557,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629767773
    },
    {
        "content": "<p>nat already has a zero</p>",
        "id": 250432603,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1629767836
    },
    {
        "content": "<p>if you want to add another one though you should use <code>with_zero nat</code></p>",
        "id": 250432617,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1629767859
    },
    {
        "content": "<p>types are not sets, they have different operators for combining them</p>",
        "id": 250432686,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1629767896
    },
    {
        "content": "<p>ok</p>",
        "id": 250432827,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629768075
    },
    {
        "content": "<p>Why are you asking for <strong>non</strong>-zero <strong>integers</strong> yet trying to spell \"the naturals including zero\"?</p>",
        "id": 250449420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629788974
    },
    {
        "content": "<p>oops i think i actually meant <code>ℤ \\ {0}</code></p>",
        "id": 250507292,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629821132
    },
    {
        "content": "<p>so i think this is what i'm trying to do: <code>def nonzero := ℤ \\ {0} </code> and i get <code>failed to synthesize type class instance for has_sdiff</code> and <code>has_singleton</code></p>",
        "id": 250508262,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629821538
    },
    {
        "content": "<p>again, ℤ is a type, \\ is an operation on sets</p>",
        "id": 250509592,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1629822154
    },
    {
        "content": "<p>usually you'd do something like <code>(n : ℤ) (h : n ≠ 0)</code></p>",
        "id": 250509642,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1629822177
    },
    {
        "content": "<p>but you could go for <code>(n : { x : ℤ // x ≠ 0})</code> too, but I'd advice against it</p>",
        "id": 250509726,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1629822217
    },
    {
        "content": "<p>whoops sorry</p>",
        "id": 250514034,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629824067
    },
    {
        "content": "<p>thanks!</p>",
        "id": 250514052,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629824072
    }
]