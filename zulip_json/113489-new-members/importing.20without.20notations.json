[
    {
        "content": "<p>I have defined the following structure:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">iso</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">to</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">fro</span> <span class=\"o\">:</span> <span class=\"n\">Y</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">to_fro</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Y</span><span class=\"o\">),</span> <span class=\"n\">to</span> <span class=\"o\">(</span><span class=\"n\">fro</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">fro_to</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">),</span> <span class=\"n\">fro</span> <span class=\"o\">(</span><span class=\"n\">to</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>This works fine, but when I add <code>import tactic</code> to the top of the file, suddenly on the second Iine I get the error <code>invalid field, identifier expected</code>.  I assume that this means that <code>tactic</code> or some file it imports has declared <code>to</code> as part of some kind of notation, making it invalid for use as a field name.  Can I import <code>tactic</code> without importing that notation, so that I don't have to rename <code>to</code> throughout my file?  E.g. the equivalent of Agda <a href=\"https://agda.readthedocs.io/en/v2.6.2.2/language/module-system.html#name-modifiers\">import ... hiding</a>?</p>",
        "id": 307636739,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1667433017
    },
    {
        "content": "<p>Are you avoiding using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv\">docs#equiv</a> ?</p>",
        "id": 307638663,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667434396
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/reserved_notation.lean#L45\">https://github.com/leanprover-community/mathlib/blob/master/src/tactic/reserved_notation.lean#L45</a> is the offending line btw</p>",
        "id": 307639792,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1667435237
    },
    {
        "content": "<p>I don't think there is a way to hide imported notation.<br>\nYou can use <code>«to»</code> instead (<code>\\f&lt;&lt;</code> and <code>\\f&gt;&gt;</code>) when they appear on its own, and after that <code>iso.to</code> (and <code>f.to</code> for <code>f : iso X Y</code>) should work without problems.</p>",
        "id": 307639863,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1667435287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439483\">Andrew Yang</span> <a href=\"#narrow/stream/113489-new-members/topic/importing.20without.20notations/near/307639863\">said</a>:</p>\n<blockquote>\n<p>You can use <code>«to»</code> instead (<code>\\f&lt;&lt;</code> and <code>\\f&gt;&gt;</code>) when they appear on its own, and after that <code>iso.to</code> (and <code>f.to</code> for <code>f : iso X Y</code>) should work without problems.</p>\n</blockquote>\n<p>Thanks!  Where can I read more about what <code>«...»</code> means?</p>",
        "id": 307643406,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1667438387
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/importing.20without.20notations/near/307638663\">said</a>:</p>\n<blockquote>\n<p>Are you avoiding using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv\">docs#equiv</a> ?</p>\n</blockquote>\n<p>Yes.  (-:O</p>\n<p>In general, prefer my students to see the definitions of the structures they're working with right there in the file, rather than having to look them up in a library.  And up until now I've also been avoiding using mathlab entirely, for this and other reasons.</p>",
        "id": 307643484,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1667438458
    },
    {
        "content": "<p>It's just a way of escaping names which allows you to put dots or spaces or all sorts of  other weird things into your identifiers.<br>\nSearching \"french double quotes\" is the keyword and this is in the reference manual <a href=\"https://leanprover.github.io/reference/lexical_structure.html#identifiers\">https://leanprover.github.io/reference/lexical_structure.html#identifiers</a>, but probably most people learn about it on zulip</p>",
        "id": 307645922,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1667440668
    }
]