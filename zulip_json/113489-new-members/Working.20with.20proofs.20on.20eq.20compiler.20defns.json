[
    {
        "content": "<p>What's the way to simplify the <code>_match</code> statement in the proof below? The <code>#reduce</code> gives basically the right answer modulo some cancellations, so I wonder what the hang-up is.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">matrix</span> <span class=\"n\">big_operators</span>\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n\n<span class=\"n\">def</span> <span class=\"n\">det&#39;</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">},</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">R</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">R</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"n\">i</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">i</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span>  <span class=\"o\">:=</span> <span class=\"err\">∑</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">+</span> <span class=\"n\">j</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">det&#39;</span> <span class=\"o\">(</span><span class=\"n\">minor</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"err\">∑</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">+</span> <span class=\"n\">j</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">det&#39;</span> <span class=\"o\">(</span><span class=\"n\">minor</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n      <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">add_lt_add_iff_right</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span>\n      <span class=\"o\">)</span>\n  <span class=\"kn\">end</span>\n\n<span class=\"c1\">-- this seems to work</span>\n<span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"o\">]]</span> <span class=\"mi\">0</span>\n<span class=\"c1\">-- field.add (field.mul (field.mul a field.one) d)</span>\n<span class=\"c1\">-- (field.add (field.mul (field.mul b (field.mul (field.neg field.one) field.one)) c) field.zero)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"o\">]]</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">det&#39;</span><span class=\"o\">,</span> <span class=\"n\">minor</span><span class=\"o\">,</span> <span class=\"n\">vec_cons</span><span class=\"o\">],</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">example {R : Type ?} {n&#39; : ℕ}</span>\n<span class=\"cm\">  [field R]</span>\n<span class=\"cm\">  {a b c d : R} :</span>\n<span class=\"cm\">  det&#39;._match_1 0</span>\n<span class=\"cm\">      (fin.cons (fin.cons a (fin.cons b vec_empty))</span>\n<span class=\"cm\">         (fin.cons (fin.cons c (fin.cons d vec_empty)) vec_empty))</span>\n<span class=\"cm\">      0</span>\n<span class=\"cm\">      (λ (h : 0 &lt; 0 + 2) (j : fin (0 + 2)),</span>\n<span class=\"cm\">         fin.cons (fin.cons a (fin.cons b vec_empty))</span>\n<span class=\"cm\">           (fin.cons (fin.cons c (fin.cons d vec_empty)) vec_empty)</span>\n<span class=\"cm\">           (0.succ_above 0)</span>\n<span class=\"cm\">           (j.succ_above 0))</span>\n<span class=\"cm\">      (λ (k : ℕ) (hk : k + 1 &lt; 0 + 2) (j : fin (0 + 2)),</span>\n<span class=\"cm\">         fin.cons (fin.cons a (fin.cons b vec_empty))</span>\n<span class=\"cm\">           (fin.cons (fin.cons c (fin.cons d vec_empty)) vec_empty)</span>\n<span class=\"cm\">           (0.succ_above ⟨k, _⟩)</span>\n<span class=\"cm\">           (j.succ_above ⟨k, _⟩))</span>\n<span class=\"cm\">      0 =</span>\n<span class=\"cm\">    a * d - b * c :=</span>\n<span class=\"cm\">begin</span>\n<span class=\"cm\">  admit</span>\n<span class=\"cm\">end</span>\n<span class=\"cm\">--/</span>\n</code></pre></div>",
        "id": 204124934,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1594924846
    },
    {
        "content": "<p>Can you not just put <code>| (n + 2) M ⟨0, h⟩ := ... | (n + 2) M ⟨k + 1, hk⟩ := ...</code> in the definition, and avoid <code>match</code>? Just a guess.</p>",
        "id": 204142617,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594933403
    },
    {
        "content": "<p>Okay, this works. But how is<code>#reduce</code> able to reduce through the sum, but I have to go through the <code>calc, rw</code> step?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">matrix</span> <span class=\"n\">big_operators</span>\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n\n<span class=\"n\">def</span> <span class=\"n\">det&#39;</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">},</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">R</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">R</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"n\">i</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">M</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"err\">∑</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">det&#39;</span> <span class=\"o\">(</span><span class=\"n\">minor</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">M</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"err\">∑</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">j</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">det&#39;</span> <span class=\"o\">(</span><span class=\"n\">minor</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n      <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">add_lt_add_iff_right</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span>\n      <span class=\"o\">)</span>\n\n<span class=\"c1\">-- this seems to work</span>\n<span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"o\">]]</span> <span class=\"mi\">0</span>\n<span class=\"c1\">-- field.add (field.mul (field.mul a field.one) d)</span>\n<span class=\"c1\">-- (field.add (field.mul (field.mul b (field.mul (field.neg field.one) field.one)) c) field.zero)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"o\">]]</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">dunfold</span> <span class=\"n\">det&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">+</span> <span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">...</span>                   <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 204150733,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1594938069
    },
    {
        "content": "<p>Maybe you can <code>show</code> what #reduce is printing out (there seem to be some negs and ones in there) and go on from there?</p>",
        "id": 204151696,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594938805
    },
    {
        "content": "<p>There's a <code>unfold_aux</code> tactic which is sometimes helpful in these situations.</p>",
        "id": 204163851,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594950654
    },
    {
        "content": "<p>I'm not sure where you would place the <code>unfold_aux</code> tactic. (Also, it's not listed in the docs at <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html\">https://leanprover-community.github.io/mathlib_docs/tactics.html</a>). I thought I would be able to also show the equivalent result for 3 dimensional matrices, but something is up with the arrangement of terms. The <code>#reduce</code> line for 3 dimensions seems like it works still.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">matrix</span> <span class=\"n\">big_operators</span>\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n\n<span class=\"n\">def</span> <span class=\"n\">det&#39;</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">},</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">R</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">R</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"n\">M</span> <span class=\"n\">i</span> <span class=\"n\">i</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">M</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"err\">∑</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">det&#39;</span> <span class=\"o\">(</span><span class=\"n\">minor</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">M</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"err\">∑</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">j</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">det&#39;</span> <span class=\"o\">(</span><span class=\"n\">minor</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n      <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">add_lt_add_iff_right</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span>\n      <span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"o\">]]</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">dunfold</span> <span class=\"n\">det&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">+</span> <span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">...</span>                   <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n\n<span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">]]</span> <span class=\"mi\">0</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">]]</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span>\n  <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">dunfold</span> <span class=\"n\">det&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f3</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">+</span> <span class=\"bp\">_</span><span class=\"o\">:</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">...</span>                   <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">f3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">+</span> <span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">...</span>                   <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">f2</span><span class=\"o\">,</span>\n  <span class=\"n\">abel</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 204165279,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1594952770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> I don't actually know this --- what do we need to do to make core tactics appear in the mathlib documentation?</p>",
        "id": 204165517,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594953134
    },
    {
        "content": "<p>What if you add lots of lemmas like </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n\n\n<p>Then <code>dsimp [minor], dsimp [foo]</code> makes some further progress.</p>",
        "id": 204166139,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594954249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> We've been putting tactic doc entries for core tactics in <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/lean_core_docs.lean\"><code>tactic.lean_core_docs</code></a> (Thanks to <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> for adding these!).</p>",
        "id": 204166630,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1594955232
    },
    {
        "content": "<p>I couldn't get the rewriting of the <code>0.succ_above 0</code> deep in the statement to work, so I just used local notation on the <code>#reduce</code> statement to help generate this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">]]</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span>\n  <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"k\">calc</span> <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">]]</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"bp\">+</span>\n  <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"bp\">+</span>\n     <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 204513004,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595308488
    },
    {
        "content": "<p>Ah, just needed a lot more of these intermediate rfl lemmas:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">det&#39;</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">],</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">]]</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span>\n  <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">dunfold</span> <span class=\"n\">det&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f3</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">+</span> <span class=\"bp\">_</span><span class=\"o\">:</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">...</span>                   <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">f3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"err\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">+</span> <span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">...</span>                   <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">f2</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"n\">l00</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l00&#39;</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l10&#39;</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l10</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l11</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l20</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l21</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l01&#39;</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l0</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l0&#39;</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">l1&#39;</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ_above</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hv</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span> <span class=\"n\">l</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">intros</span><span class=\"o\">,</span> <span class=\"n\">simpa</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">k</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">intros</span><span class=\"o\">,</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">},</span>\n  <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">minor</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">l00</span><span class=\"o\">,</span> <span class=\"n\">l00&#39;</span><span class=\"o\">,</span> <span class=\"n\">l01&#39;</span><span class=\"o\">,</span> <span class=\"n\">l0</span><span class=\"o\">,</span> <span class=\"n\">l0&#39;</span><span class=\"o\">,</span> <span class=\"n\">l1&#39;</span><span class=\"o\">,</span> <span class=\"n\">l10</span><span class=\"o\">,</span> <span class=\"n\">l11</span><span class=\"o\">,</span> <span class=\"n\">l20</span><span class=\"o\">,</span> <span class=\"n\">l21</span><span class=\"o\">,</span> <span class=\"n\">l10&#39;</span><span class=\"o\">,</span> <span class=\"n\">hv</span><span class=\"o\">,</span> <span class=\"n\">hc</span><span class=\"o\">],</span>\n  <span class=\"n\">ring</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 204514367,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595310797
    },
    {
        "content": "<p>Not sure why simp isn't firing on a lot of those <code>rfl</code> lemmas. I couldn't find a place to use <code>unfold_aux</code>.</p>",
        "id": 204514441,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595310875
    },
    {
        "content": "<p>Can you write some <code>simp</code> lemmas in terms of <code>bit0</code> and <code>bit1</code>?</p>",
        "id": 204515874,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595313108
    },
    {
        "content": "<p>Seems unlikely.</p>",
        "id": 204516122,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595313475
    },
    {
        "content": "<p>There'd have to be some <code>ite</code> going on in those lemmas. Maybe.</p>",
        "id": 204516211,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595313584
    },
    {
        "content": "<p>Something like this?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">bit0</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">=</span> <span class=\"n\">bit0</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"err\">%</span> <span class=\"n\">n</span>\n<span class=\"bp\">|</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 204517999,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595315976
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">bit0_val</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">bit0</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">=</span> <span class=\"n\">bit0</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"err\">%</span> <span class=\"n\">n</span>\n<span class=\"bp\">|</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">bit1_val</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">bit1</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">bit1</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">))</span> <span class=\"err\">%</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">bit1</span><span class=\"o\">,</span> <span class=\"n\">bit0</span><span class=\"o\">,</span> <span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">add_def</span><span class=\"o\">,</span> <span class=\"n\">fin</span><span class=\"bp\">.</span><span class=\"n\">one_val</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 204519062,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595317002
    },
    {
        "content": "<p>Not sure how those help with the <code>succ_above</code>.</p>",
        "id": 204519160,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595317092
    }
]