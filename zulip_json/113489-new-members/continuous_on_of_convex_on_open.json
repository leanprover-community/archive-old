[
    {
        "content": "<p>I've started working on proving that a convex function is continuous (if the domain is open):</p>\n<p>Here is my work so far:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.convex.basic</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">convex_on.slope_mono_adjacent</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span>\n  <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hz</span><span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyz</span><span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">convex_on</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₁</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₂</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₃</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n\n  <span class=\"k\">suffices</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">),</span>\n    <span class=\"kd\">begin</span> <span class=\"n\">ring</span> <span class=\"n\">at</span> <span class=\"n\">this</span> <span class=\"bp\">⊢</span><span class=\"o\">,</span> <span class=\"n\">linarith</span> <span class=\"kd\">end</span><span class=\"o\">,</span>\n\n  <span class=\"n\">set</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n  <span class=\"n\">set</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">h₄</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n    <span class=\"kd\">begin</span> <span class=\"n\">field_simp</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">div_eq_iff</span><span class=\"bp\">;</span> <span class=\"o\">[</span><span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">]</span> <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₅</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">•</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">•</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n    <span class=\"kd\">begin</span> <span class=\"n\">field_simp</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">div_eq_iff</span><span class=\"bp\">;</span> <span class=\"o\">[</span><span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">]</span> <span class=\"kd\">end</span><span class=\"o\">,</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">key</span> <span class=\"o\">:=</span>\n    <span class=\"n\">hf.2</span> <span class=\"n\">hx</span> <span class=\"n\">hz</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">div_nonneg</span><span class=\"bp\">;</span> <span class=\"n\">linarith</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">div_nonneg</span><span class=\"bp\">;</span> <span class=\"n\">linarith</span><span class=\"o\">)</span> <span class=\"n\">h₄</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h₅</span> <span class=\"n\">at</span> <span class=\"n\">key</span><span class=\"o\">,</span>\n  <span class=\"n\">replace</span> <span class=\"n\">key</span> <span class=\"o\">:=</span> <span class=\"n\">mul_le_mul_of_nonneg_left</span> <span class=\"n\">key</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">h₃</span><span class=\"o\">),</span>\n\n  <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">ne_of_gt</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">ne_of_gt</span> <span class=\"n\">h₂</span><span class=\"o\">,</span> <span class=\"n\">ne_of_gt</span> <span class=\"n\">h₃</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">key</span> <span class=\"bp\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">div_le_div_right</span><span class=\"bp\">;</span> <span class=\"n\">nlinarith</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n\n<p>Is this a good start to prove that for a convex function from R to R?</p>",
        "id": 211520127,
        "sender_full_name": "Malo Jaffré",
        "timestamp": 1601312620
    },
    {
        "content": "<p>I don't know anything about convex functions but that's pretty neat Lean code. You've made clever use of the resources we have -- it's a bit of an arcane art using them.</p>",
        "id": 211522899,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601313885
    },
    {
        "content": "<p>Thanks, I'll PR this then!</p>",
        "id": 211525900,
        "sender_full_name": "Malo Jaffré",
        "timestamp": 1601315397
    },
    {
        "content": "<p>This one is already in mathlib as it turns out: <code>convex_on_real_of_slope_mono_adjacent</code> in <code>analysis/convex/basic.lean</code>. But I don't think that the main result you're after is there -- that would indeed be a great addition!</p>",
        "id": 211526767,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1601315813
    },
    {
        "content": "<p>I think <code>convex_on_real_of_slope_mono_adjacent</code> is in the other direction though.</p>",
        "id": 211527407,
        "sender_full_name": "Malo Jaffré",
        "timestamp": 1601316090
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/4307\">#4307</a></p>",
        "id": 211530541,
        "sender_full_name": "Malo Jaffré",
        "timestamp": 1601317672
    },
    {
        "content": "<p>Oh, right -- I misread that mathlib lemma!</p>",
        "id": 211530881,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1601317834
    },
    {
        "content": "<p>Malo, the PR process will be a lot easier for everyone if you have at look at <a href=\"https://leanprover-community.github.io/contribute/style.html#tactic-mode\">https://leanprover-community.github.io/contribute/style.html#tactic-mode</a> now. Coding syle conventions are mostly arbitrary, but uniformity really helps readers.</p>",
        "id": 211537268,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601320737
    },
    {
        "content": "<p>Can I please get an invite to mathlib to continue working on this?</p>",
        "id": 212175881,
        "sender_full_name": "Malo Jaffré",
        "timestamp": 1601737048
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203577\">@Malo Jaffré</span> I think I did this!</p>",
        "id": 212176955,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1601738784
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span>, it worked!</p>",
        "id": 212176963,
        "sender_full_name": "Malo Jaffré",
        "timestamp": 1601738809
    }
]