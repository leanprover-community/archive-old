[
    {
        "content": "<p>OK this feels really dumb but I got stuck on showing</p>\n<div class=\"codehilite\"><pre><span></span>lemma ss0 (a : vector ℝ 0): a.val.sum = 0 :=\n</pre></div>\n\n\n<p>where <code>vector α n</code> is defined as <code>{l : list α // length l = n}</code>.</p>",
        "id": 183589992,
        "sender_full_name": "YH",
        "timestamp": 1576530028
    },
    {
        "content": "<p>Are there lemmas about that mention <code>vector_zero</code>?</p>",
        "id": 183590829,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1576530517
    },
    {
        "content": "<p>You would want a lemma that says <code>a.val = []</code></p>",
        "id": 183590876,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1576530532
    },
    {
        "content": "<p>So...</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">begin</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">=</span> <span class=\"o\">[],</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"n\">library_search</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 183590926,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1576530577
    },
    {
        "content": "<p>Didn't find any. But I guess I can prove that  anyway.<br>\nNow if my goal is <code>length (a.val) = 0 → a.val = nil</code> how do I generalize it so that it is for all list <code>l</code>, <code>length (l) = 0 → l = nil</code>?</p>",
        "id": 183591223,
        "sender_full_name": "YH",
        "timestamp": 1576530754
    },
    {
        "content": "<p><code>length_eq_zero</code></p>",
        "id": 183591715,
        "sender_full_name": "Joe",
        "timestamp": 1576531034
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">length_eq_zero</span> <span class=\"o\">{</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">length</span> <span class=\"n\">l</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">l</span> <span class=\"bp\">=</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">eq_nil_of_length_eq_zero</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span>\n</pre></div>",
        "id": 183591753,
        "sender_full_name": "Joe",
        "timestamp": 1576531063
    },
    {
        "content": "<p>You can find this using <code>library_search</code></p>",
        "id": 183591777,
        "sender_full_name": "Joe",
        "timestamp": 1576531077
    },
    {
        "content": "<p>Though to actually prove this by hand, use induction on the list l.</p>",
        "id": 183591870,
        "sender_full_name": "Joe",
        "timestamp": 1576531129
    },
    {
        "content": "<p>That is, if <code>l</code> is <code>nil</code>, then nothing to prove; if <code>l</code> is <code>x :: xs</code>, then there is a contradiction.</p>",
        "id": 183591952,
        "sender_full_name": "Joe",
        "timestamp": 1576531192
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">length</span> <span class=\"n\">l</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">l</span> <span class=\"bp\">=</span> <span class=\"n\">nil</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"n\">induction</span> <span class=\"n\">l</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">contradiction</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 183592249,
        "sender_full_name": "Joe",
        "timestamp": 1576531377
    },
    {
        "content": "<p>Great thanks.</p>",
        "id": 183592267,
        "sender_full_name": "YH",
        "timestamp": 1576531387
    }
]