[
    {
        "content": "<p>hi can i get some help with a couple of lean problems?</p>",
        "id": 308310821,
        "sender_full_name": "Moetrash 2x",
        "timestamp": 1667781074
    },
    {
        "content": "<p>if anyone is willing to help me learn and understand please DM me. Thank you!</p>",
        "id": 308310883,
        "sender_full_name": "Moetrash 2x",
        "timestamp": 1667781135
    },
    {
        "content": "<p>feel free to ask in <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a>!</p>",
        "id": 308310934,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1667781223
    },
    {
        "content": "<p>got it thank you so much!</p>",
        "id": 308311060,
        "sender_full_name": "Moetrash 2x",
        "timestamp": 1667781361
    },
    {
        "content": "<p>Hi can someone please guide me step by step with this problem I have really been struggling with it?</p>",
        "id": 308311195,
        "sender_full_name": "Moetrash 2x",
        "timestamp": 1667781494
    },
    {
        "content": "<p>import data.set<br>\nopen set</p>\n<p>-- 1. Replace \"sorry\" in these examples.<br>\nsection<br>\n  variable {U : Type}<br>\n  variables A B C : set U</p>\n<p>example : ∀ x, x ∈ A ∩ C → x ∈ A ∪ B :=<br>\n  sorry</p>\n<p>example : ∀ x, x ∈ (A ∪ B)ᶜ → x ∈ Aᶜ :=<br>\n  sorry<br>\nend</p>",
        "id": 308311196,
        "sender_full_name": "Moetrash 2x",
        "timestamp": 1667781500
    },
    {
        "content": "<p>That problem looks the same as this homework question: <a href=\"https://www.chegg.com/homework-help/questions-and-answers/write-code-following-proofs-using-lean-theorem-prover-import-dataset-open-set-1-replace-so-q104337641\">https://www.chegg.com/homework-help/questions-and-answers/write-code-following-proofs-using-lean-theorem-prover-import-dataset-open-set-1-replace-so-q104337641</a>.</p>",
        "id": 308312022,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1667782407
    },
    {
        "content": "<p>4 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/Lean.20in.20the.20wild\">#general &gt; Lean in the wild</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 308312092,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667782463
    },
    {
        "content": "<p>3 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/How.20to.20check.20element.20is.20in.20set\">#new members &gt; How to check element is in set</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 308312098,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667782481
    },
    {
        "content": "<p>it is but no answer is provided :C</p>",
        "id": 308312289,
        "sender_full_name": "Moetrash 2x",
        "timestamp": 1667782699
    },
    {
        "content": "<p>Also <a href=\"https://ask.sagemath.org/question/50008/how-to-solve-logic-proofs/\">here</a> from two years ago</p>",
        "id": 308313702,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1667784295
    },
    {
        "content": "<p>Is this a problem from a course, or from a text\"book\" / lean tutorial?</p>",
        "id": 308313934,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1667784489
    },
    {
        "content": "<p>hey it is from lean textbook example problem</p>",
        "id": 308314409,
        "sender_full_name": "Moetrash 2x",
        "timestamp": 1667784937
    },
    {
        "content": "<p>On this one</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∪</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>a logical first step is to pull out the premises, which in tactics mode is done via</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∪</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n   <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n   <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>and in term is done</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∪</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n   <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The actual proving is going to go from the hypothesis (that <code>x ∈ A ∩ C</code>) and allow you to construct the conclusion. I'd highly recommend you look at  the docs for <code>data.set.basic</code>, particularly the theorems about intersections and unions. In general you want to use the the hypothesis to prove something the helps you construct the conclusion.</p>",
        "id": 308318384,
        "sender_full_name": "Arien Malec",
        "timestamp": 1667788904
    },
    {
        "content": "<p>I'm sure if you have a pen and pencil proof, or some sense for how you want the proof to go in Lean, and are struggling with syntax, you'd get plenty of help.</p>",
        "id": 308318455,
        "sender_full_name": "Arien Malec",
        "timestamp": 1667788978
    },
    {
        "content": "<p>I'm not sure that will help, <span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span>, those lemmas are almost all proved from lattice lemmas</p>",
        "id": 308344150,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1667810075
    },
    {
        "content": "<p>This is OP’s homework…</p>",
        "id": 308427578,
        "sender_full_name": "Arien Malec",
        "timestamp": 1667839337
    }
]