[
    {
        "content": "<p>So essentially, let's say I have any real value, r. I can call r.cauchy to get a member of a quotient (called Cauchy). I would like to get the (or, more acurrately, a/an) underlying rational sequence. I'm wondering if this is possible. Is there any way to retrieve <em>any</em> representative member of the fiber of the Cauchy value (I believe a term of type cau_seq)? I guess this is a question about quotients in general.</p>",
        "id": 244015857,
        "sender_full_name": "Andrew Elsey",
        "timestamp": 1624715088
    },
    {
        "content": "<p><code>x.cauchy.out</code></p>",
        "id": 244016241,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624715707
    },
    {
        "content": "<p>there may be a more API-ful way</p>",
        "id": 244016259,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624715760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113489-new-members/topic/Retrieving.20a.20Cauchy.20Sequence.20from.20a.20Real.3F/near/244016259\">said</a>:</p>\n<blockquote>\n<p>there may be a more API-ful way</p>\n</blockquote>\n<p>Thanks. Ah, I guess getting a computable sequence was be a pipe dream lol</p>",
        "id": 244019633,
        "sender_full_name": "Andrew Elsey",
        "timestamp": 1624720345
    },
    {
        "content": "<p>what sort of computable sequence are you hoping to get for, say, Chaitin's constant? :b</p>",
        "id": 244019817,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624720599
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113489-new-members/topic/Retrieving.20a.20Cauchy.20Sequence.20from.20a.20Real.3F/near/244019817\">said</a>:</p>\n<blockquote>\n<p>what sort of computable sequence are you hoping to get for, say, Chaitin's constant? :b</p>\n</blockquote>\n<p>Point taken. My aims were a lot less grand. Compute angles from rational vectors using the appropriate lean instances and convert sets of angles into rational bases. Can't have my pi and approximate it too :(</p>",
        "id": 244020598,
        "sender_full_name": "Andrew Elsey",
        "timestamp": 1624721669
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 244020780,
        "sender_full_name": "Andrew Elsey",
        "timestamp": 1624721963
    },
    {
        "content": "<p>I'm sure for pi  there'll be a series definition somewhere!</p>",
        "id": 244021928,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624723429
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.tendsto_prod_pi_div_two\">docs#real.tendsto_prod_pi_div_two</a> seems to establish the Wallis product</p>",
        "id": 244022123,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624723635
    },
    {
        "content": "<p>and Leibniz's series is somewhere slightly higher up the file</p>",
        "id": 244022130,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624723652
    },
    {
        "content": "<p>Note that if you use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient.lift\">docs#quotient.lift</a> you can still compute functions of a particular sequence as long as you show that the result doesn't depend on which sequence you used</p>",
        "id": 244032564,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624738814
    }
]