[
    {
        "content": "<p>Here is a proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">equality_of_powers</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">pow_add</span><span class=\"o\">,</span> <span class=\"n\">nat.sub_add_cancel</span><span class=\"o\">],</span>\n  <span class=\"n\">rwa</span> <span class=\"n\">not_lt</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>The lemma <code>cardinal.power_add</code> that you were trying to use is not useful here, because it only applies to <code>cardinal</code> arguments, which is not what you have.</p>",
        "id": 282554792,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1652732337
    },
    {
        "content": "<p>Thanks, I had tried searching power_add in mathlib but didn't think to try pow_add. Thanks for the help.</p>",
        "id": 282555092,
        "sender_full_name": "Matthew Honnor",
        "timestamp": 1652732499
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497516\">Matthew Honnor</span> has marked this topic as resolved.</p>",
        "id": 282555115,
        "sender_full_name": "Notification Bot",
        "timestamp": 1652732518
    },
    {
        "content": "<p>It's all about knowing the right names indeed. In vscode you can click on the <code>^</code> in the infoview and it will tell you that it is <code>pow</code></p>",
        "id": 282555416,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1652732665
    }
]