[
    {
        "content": "<p>I'm not sure how to lift results across a cast. For example, if I have <code>n : ℕ</code> and want to establish the goal <code>0 ≤ (n : ℝ)</code>, how can I prove it? I know <code>zero_le n : 0 ≤ n</code>, but I'm not sure how to establish this <code>0 ≤ ↑n</code>.</p>",
        "id": 226345940,
        "sender_full_name": "Eric Astor",
        "timestamp": 1613365849
    },
    {
        "content": "<p>There are a lot of <code>norm_num</code> type results that can do this.  In this case, <code>norm_num</code> works, but is a little slow, and <code>library_search</code> also works.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">nat_to_real_nonneg</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">--library_search finds this</span>\n  <span class=\"n\">exact</span> <span class=\"n\">nat.cast_nonneg</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 226346597,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1613366817
    },
    {
        "content": "<p>Another useful lemma is <code>norm_cast</code>. It will try to remove as many <code>\\u</code> up-arrows as it can.</p>",
        "id": 226347212,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613367625
    },
    {
        "content": "<p>I don't think <code>norm_num</code> knows anything about this, you are probably seeing the result of <code>simp</code></p>",
        "id": 226347481,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613368009
    },
    {
        "content": "<p>but this sort of thing is generally <code>norm_cast</code>'s job</p>",
        "id": 226347497,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613368026
    }
]