[
    {
        "content": "<p>Does lean have any equivalent of Haskell's operator sections?</p>",
        "id": 180626891,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1573652921
    },
    {
        "content": "<p>You can do</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">(</span><span class=\"bp\">×</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"n\">int</span> <span class=\"c1\">-- int × nat</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">(</span><span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"mi\">2</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">((</span><span class=\"bp\">×</span><span class=\"o\">)</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"n\">int</span> <span class=\"c1\">-- nat × int</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">((</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"mi\">2</span>\n</pre></div>\n\n\n<p>But <code>(3 +)</code> is a parse error.</p>",
        "id": 180639854,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1573660226
    },
    {
        "content": "<p>Ah so I can do sections only on one side - thanks!</p>",
        "id": 180640545,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1573660643
    }
]