[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">v</span>\n<span class=\"n\">odd</span><span class=\"o\">:</span> <span class=\"n\">path</span><span class=\"bp\">.</span><span class=\"n\">crossed</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">p_1</span><span class=\"bp\">.</span><span class=\"n\">cons</span> <span class=\"n\">e</span> <span class=\"n\">hs</span> <span class=\"n\">hv</span> <span class=\"n\">hsv</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">path</span><span class=\"bp\">.</span><span class=\"n\">crossed</span> <span class=\"n\">z</span> <span class=\"n\">p_1</span> <span class=\"bp\">+</span> <span class=\"n\">ite</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">v</span> <span class=\"bp\">∨</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">p_1</span><span class=\"bp\">.</span><span class=\"n\">head</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span>\n</code></pre></div>\n\n\n<p>I'm not super familiar with how to use ite, but I want to use <code>h</code> into <code>odd</code> to reduce the ite that i have</p>",
        "id": 207046911,
        "sender_full_name": "Michael Hahn",
        "timestamp": 1597538310
    },
    {
        "content": "<p>As you know the if is true you can use</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">rw</span> <span class=\"n\">if_pos</span> <span class=\"n\">at</span> <span class=\"n\">odd</span>\n</code></pre></div>\n\n\n<p>which will change the <code>ite</code> to be 1, and give you the goal to prove <code>z = v ∨ z = p_1.head</code> separately.</p>",
        "id": 207047379,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597539211
    },
    {
        "content": "<p><code>rw if_pos (or.inl h) at odd</code></p>",
        "id": 207064080,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597571446
    },
    {
        "content": "<p>maybe <code>simp [h]</code> would get you all the way to not have an <code>ite</code> any more. My model here is that first it will change <code>z = v</code> to <code>z  = z</code>, then change that to <code>true</code> then change <code>true \\or _</code> to <code>true</code> then change <code>ite true 1 _</code> to <code>1</code>.</p>",
        "id": 207091760,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597614765
    },
    {
        "content": "<p>I think if you know about <code>rw if_pos</code>, <code>rw if_neg</code>, and <code>split_ifs</code>, you should always be able to navigate through <code>ite</code>.</p>",
        "id": 207091815,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597614868
    },
    {
        "content": "<p>(and if it's a <code>dite</code>, the lemmas are called <code>dif_pos</code> and <code>dif_neg</code>)</p>",
        "id": 207091818,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597614890
    }
]