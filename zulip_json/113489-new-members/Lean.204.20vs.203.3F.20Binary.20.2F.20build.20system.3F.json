[
    {
        "content": "<p>I'm wondering about Lean 4 vs Lean 3 for a course starting in January (with a couple hundred students). It _seems_ like Lean 4 is still somewhat unstable (though maybe that's more just about std4/mathlib4? At least I haven't managed to get a version of those that builds), but on the other hand, the package / build system seems a bit more refined. Concretely, Mac ARM binaries are distributed for Lean 4, but not (as far as I can tell) for Lean3, so the official (again, as far as I can tell) instructions involve Rosetta complexity, which doesn't seem ideal. </p>\n<p>Assuming I don't need Mathlib (or much of it), is Lean4 stable enough at this point? Or will it be in a couple months? Or am I better off dealing with the (seemingly more clunky) build/setup for Lean 3?</p>",
        "id": 302689114,
        "sender_full_name": "Daniel Patterson",
        "timestamp": 1665072683
    },
    {
        "content": "<p>What is the course about? I think the answer will heavily depend on that!</p>",
        "id": 302690068,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1665072954
    },
    {
        "content": "<p>In any case, you may want to take a look at the <a class=\"stream\" data-stream-id=\"187764\" href=\"/#narrow/stream/187764-Lean-for-teaching\">#Lean for teaching</a> stream as well</p>",
        "id": 302690375,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1665073040
    },
    {
        "content": "<p>It's a course introducing formal specification and logic to lower-level (computer science) undergrads -- I certainly don't need math results! Re-implementing things from scratch is also pretty much okay. The only library code that I'd really love to include (though could probably re-implement / port, though it does appear in the mathlib4 source tree) is slim_check, since we'll start with property based testing in a functional language the students are familiar with before transitioning to Lean.</p>",
        "id": 302693607,
        "sender_full_name": "Daniel Patterson",
        "timestamp": 1665074009
    },
    {
        "content": "<p><a href=\"#narrow/stream/270676-lean4/topic/Anything.20like.20QuickCheck/near/295995057\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Anything.20like.20QuickCheck/near/295995057</a> and I think that in general Lean 4 is better for CS-related things. I don't know enough about Lean 4 to judge the stability - it feels rather stable, but I have only used a very small part.</p>",
        "id": 302838893,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1665145648
    }
]