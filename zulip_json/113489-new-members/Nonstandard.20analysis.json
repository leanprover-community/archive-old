[
    {
        "content": "<p>Hi all!</p>\n<p>I found this place by watching the YouTube video of Jeremy Avigad's talk at the Topos Institute, this looks like a wonderful community!</p>\n<p>I was thinking about what I could contribute, and was wondering if anyone either already has or would be interested in a nonstandard analysis library?</p>\n<p>Looking around mathlib, I see that both first-order languages and ultrafilters are already defined.  I suspect that the most straightforward approach would be the ultrapower approach, where you prove a \"transfer principle\" saying that the ultrapower of (say) R has the same first order properties as R (but also has infinitesimals).</p>\n<p>But in order to make that practically usable for other arguments in Lean, I think you'd need a tactic: something like \"use_transfer at h\" which would do something like: examine the type of some hypothesis (or goal) h to observe that it does have the form of a first-order statement over R and then transform it to a first-order statement over the ultrapower of R.  </p>\n<p>I think this would have to be a tactic rather than a theorem, since it depends on the structure of the type of h.  But I'm not 100% sure of that (or really anything else I'm saying).</p>\n<p>Does any of that sound reasonable/plausible?  (Also, I'm not sure if or how many Wikipedia links I should have provided for the things I said above; let me know if anything needs further clarification.)</p>\n<p>Thanks!</p>",
        "id": 260607562,
        "sender_full_name": "Michael OConnor",
        "timestamp": 1636335906
    },
    {
        "content": "<p>It was an undergrad at Imperial who started off with the ultraproducts and they were motivated by doing some non-standard analysis, but as you point out there was a missing tactic, and so he didn't take it any further. I have an MSc student <span class=\"user-mention\" data-user-id=\"133584\">@Joseph Hua</span> doing some model theory right now; he is working towards Ax-Grothendieck via model theory but we'll have a good time whether or not we get there.</p>",
        "id": 260607651,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636336054
    },
    {
        "content": "<p>I don't think anyone's working on nonstandard analysis right now though. It would be an interesting project! But quite a challenging one for a first project I guess.</p>",
        "id": 260607820,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636336294
    },
    {
        "content": "<p>Ah, thanks for the background!</p>\n<p>Yeah, I do agree it'd be a challenging first project.  That's why I was thinking to first prove a transfer theorem without adding a new tactic (unless it's implicit in the existing ultrafilter code; I haven't actually read it yet).  That seems a bit more manageable than jumping in with metaprogramming from the start.</p>",
        "id": 260608551,
        "sender_full_name": "Michael OConnor",
        "timestamp": 1636337333
    },
    {
        "content": "<p>Part of my <a href=\"https://github.com/rwbarton/lean-omin\">o-minimal structures</a> project is a tactic to prove that expressions are definable in a certain first-order structure--which is similar to but maybe not exactly the same as what you want</p>",
        "id": 260609096,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636338226
    },
    {
        "content": "<p>Because I just need to know whether a formula (typically in one free variable) is definable or not, not to translate it into a formula about another structure.</p>",
        "id": 260609225,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636338446
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 260816578,
        "sender_full_name": "Michael OConnor",
        "timestamp": 1636472792
    }
]