[
    {
        "content": "<p>Hello. I’ve been working to prove that for metric spaces, being separable is equivalent to being second countable. I am about halfway to proving that and would like feedback on my work so far. I created a lean project, so I believe you can download it by typing<br>\n<code> leanproject get carlosa95silva/project</code><br>\nor using the link<br>\n<a href=\"https://github.com/carlosa95silva/project\">https://github.com/carlosa95silva/project</a> .<br>\nGeneral structure: I defined a function that outputs a set of balls of the form ball x 1/(n+1) for all x in a given input set. This is a variant of a common construction for metric spaces, but I don’t think it has been given a name and worked with except for theorem  <code>metric.nhds_basis_ball_inv_nat_succ</code>.  I go on to prove that if you apply this construction on a dense set, you get a basis.</p>\n<p>Here are my questions.</p>\n<p>1) I don’t feel like I am making good use of implicit variables in my definitions. I find a lot of theorems won't work unless I use the <code>@</code>  command to spell out the inputs. Does this need fixing?</p>\n<p>2) The first two lemmas on lines 15 and 27 expresses trivial facts that I only wrote so I could refer to them in one line later. Was there an easier way?</p>\n<p>3) Are there certain code techniques that I am not taking advantage of? I had trouble using <code>simp</code> so I mostly avoided it. Would my code be much better with it?</p>\n<p>Thank you for your help.</p>",
        "id": 252935613,
        "sender_full_name": "Carlos Silva",
        "timestamp": 1631394489
    },
    {
        "content": "<p>What is your goal? Practice in Lean or formalize something that is not in mathlib yet?</p>",
        "id": 252938407,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631397629
    },
    {
        "content": "<p>We already have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/emetric.second_countable_of_separable\">docs#emetric.second_countable_of_separable</a> (with most of the work done in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_space.second_countable_of_separable\">docs#uniform_space.second_countable_of_separable</a>).</p>",
        "id": 252938524,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631397753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> My goal was to do both, but I have not looked through the topology folder thoroughly enough to know everything it contains. Thus I might not have written anything useful.</p>\n<p>But still for the purpose of practice, I have encountered problems 1,2,3 while writing my code and I don't think I am dealing with those properly. Those I still need advice on.</p>",
        "id": 252939119,
        "sender_full_name": "Carlos Silva",
        "timestamp": 1631398453
    },
    {
        "content": "<p><code>metric.nonempty_ball</code> is supposed to be used as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ball</span> <span class=\"n\">x</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span> <span class=\"o\">:=</span> <span class=\"n\">metric.nonempty_ball.mpr</span> <span class=\"n\">hr_pos</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>or</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ball</span> <span class=\"n\">x</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"n\">metric.nonempty_ball</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>or</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">metric.nonempty_ball</span> <span class=\"n\">at</span> <span class=\"n\">hr_pos</span><span class=\"o\">,</span>\n</code></pre></div>",
        "id": 252941471,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631401217
    },
    {
        "content": "<p>So, here is one of your proofs as a one-liner without <code>@...</code>s:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">metric</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">dense_set_int_balls</span> <span class=\"o\">[</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">pseudo_metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hD</span> <span class=\"o\">:</span> <span class=\"n\">dense</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span> <span class=\"n\">hr_pos</span> <span class=\"o\">:</span> <span class=\"n\">r</span><span class=\"bp\">&gt;</span><span class=\"mi\">0</span><span class=\"o\">):</span> <span class=\"n\">set.nonempty</span> <span class=\"o\">((</span><span class=\"n\">ball</span> <span class=\"n\">x</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">∩</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">hD.inter_open_nonempty</span> <span class=\"o\">(</span><span class=\"n\">metric.ball</span> <span class=\"n\">x</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">is_open_ball</span> <span class=\"o\">(</span><span class=\"n\">nonempty_ball.mpr</span> <span class=\"n\">hr_pos</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 252941617,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631401395
    },
    {
        "content": "<p>Another technique:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ball</span> <span class=\"n\">x</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span><span class=\"o\">,</span>\n</code></pre></div>",
        "id": 252941632,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631401430
    },
    {
        "content": "<p>Similarly, the first few lines of the next proof can be replaced with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">rw</span> <span class=\"n\">metric.is_open_iff</span> <span class=\"n\">at</span> <span class=\"n\">hU</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">hU</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">δ</span><span class=\"o\">,</span> <span class=\"n\">δ_pos</span><span class=\"o\">,</span> <span class=\"n\">hball</span><span class=\"o\">⟩,</span>\n</code></pre></div>\n<p>or even</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">rcases</span> <span class=\"n\">metric.is_open_iff.mp</span> <span class=\"n\">hU</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">δ</span><span class=\"o\">,</span> <span class=\"n\">δ_pos</span><span class=\"o\">,</span> <span class=\"n\">hball</span><span class=\"o\">⟩,</span>\n</code></pre></div>",
        "id": 252941809,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631401602
    }
]