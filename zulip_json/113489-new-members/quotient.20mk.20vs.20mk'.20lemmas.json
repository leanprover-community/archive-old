[
    {
        "content": "<p>Is there a reason we don't have these?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.quot</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">setoid</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">quotient.mk_eq_mk'</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">⟦</span><span class=\"n\">x</span><span class=\"bp\">⟧</span> <span class=\"bp\">=</span> <span class=\"n\">quotient.mk'</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">quotient.lift_on_mk'</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">⟦</span><span class=\"n\">x</span><span class=\"bp\">⟧.</span><span class=\"n\">lift_on'</span> <span class=\"n\">f</span> <span class=\"n\">h</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 272762528,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1645508547
    },
    {
        "content": "<p>I have a case where I use <code>\\[[]]</code> mk notation in a local instance section, and build API around equality of <code>mk</code>, to make the relation more explicit. But that means elsewhere, outside of the section,  I have to use <code>mk'</code> to construct terms in the quotient. Which doesn't use the API I've built. Should I just make a simp tagged API lemma simplifying goals about <code>setoid.r</code>? I've been trying to convert all of my <code>quotient.mk'</code> to <code>\\[[]]</code> so that my API simp lemmas can fire.</p>",
        "id": 272762606,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1645508671
    },
    {
        "content": "<p>I don't think there's any reason we don't have these.</p>",
        "id": 272764320,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1645510858
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12204\">#12204</a></p>",
        "id": 272768445,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1645515207
    },
    {
        "content": "<p>Is the first one an equation lemma for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient.mk'\">docs#quotient.mk'</a>?</p>",
        "id": 272779882,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645523058
    },
    {
        "content": "<p>Ah no, it unfolds to <code>quot.mk</code></p>",
        "id": 272779922,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645523081
    }
]