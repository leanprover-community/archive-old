[
    {
        "content": "<p>Has the already been in Lean?<br>\n<code> def aux (a b: ℕ): a % b.succ &lt; b.succ := sorry</code><br>\nHow can I prove it?</p>",
        "id": 244105069,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1624860595
    },
    {
        "content": "<p>Does <code>by library_search</code> prove it for you?</p>",
        "id": 244105116,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624860618
    },
    {
        "content": "<p>My guess is that it is called <code>nat.mod_lt_self</code> or something like that.</p>",
        "id": 244105127,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624860638
    },
    {
        "content": "<p>Maybe just <code>nat.mod_lt</code></p>",
        "id": 244105133,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624860654
    },
    {
        "content": "<p>library_search fails for this example</p>",
        "id": 244105154,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1624860696
    },
    {
        "content": "<p><code>def aux (a b: ℕ): a % b.succ &lt; b.succ := @nat.mod_lt a b.succ $ nat.succ_pos b</code></p>",
        "id": 244105240,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1624860824
    },
    {
        "content": "<p>Do you need the <code>@</code>?</p>",
        "id": 244105294,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624860859
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.mod_lt\">docs#nat.mod_lt</a></p>",
        "id": 244105303,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624860884
    },
    {
        "content": "<p>I think <code>a.mod_lt b.succ_pos</code> should maybe also work</p>",
        "id": 244105320,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624860908
    },
    {
        "content": "<p>Why doesn't <code>library search</code> work for this case?</p>",
        "id": 244105481,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1624861097
    },
    {
        "content": "<p>Because, well, it's dumb. You should use <code>gptf</code> instead. It's faster than <code>library_search</code>.</p>",
        "id": 244105527,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1624861170
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"408694\">Alex Zhang</span> <a href=\"#narrow/stream/113489-new-members/topic/mod/near/244105481\">said</a>:</p>\n<blockquote>\n<p>Why doesn't <code>library search</code> work for this case?</p>\n</blockquote>\n<p>It has to combine two lemmas from the library. It can only use 1 lemma + local hypotheses to close the goal.</p>",
        "id": 244105623,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624861308
    },
    {
        "content": "<p>I guess that <code>by { have := b.succ_pos, library_search }</code> should actually work.</p>",
        "id": 244105669,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624861333
    },
    {
        "content": "<p>gptf is library_search on steroids. It finds the proof instantly.<br>\n<a href=\"/user_uploads/3121/Unq_jHBSHM2zsQ7thVXHTF3_/Screenshot-from-2021-06-28-13.23.33.png\">Screenshot-from-2021-06-28-13.23.33.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Unq_jHBSHM2zsQ7thVXHTF3_/Screenshot-from-2021-06-28-13.23.33.png\" title=\"Screenshot-from-2021-06-28-13.23.33.png\"><img src=\"/user_uploads/3121/Unq_jHBSHM2zsQ7thVXHTF3_/Screenshot-from-2021-06-28-13.23.33.png\"></a></div>",
        "id": 244105779,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1624861469
    },
    {
        "content": "<p><a href=\"https://github.com/jesse-michael-han/lean-gptf\">https://github.com/jesse-michael-han/lean-gptf</a></p>",
        "id": 244105788,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1624861486
    },
    {
        "content": "<p>What file(s) do I need to import to use it?</p>",
        "id": 244105912,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1624861616
    },
    {
        "content": "<p>It is not part of mathlib. So you need to follow the instruction in that github repo</p>",
        "id": 244105937,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624861652
    },
    {
        "content": "<p>It would never have occurred to me to use gptf for this. Is this thing a useful tool for learners?</p>",
        "id": 244106825,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1624862638
    },
    {
        "content": "<p>Do I have to wait until I have received an API key to use gptf?</p>",
        "id": 244108288,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1624863931
    },
    {
        "content": "<p>I think so, yes</p>",
        "id": 244108389,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624864017
    },
    {
        "content": "<p>Kevin, I do not know if Johan's comment was an answer to your question, but for me, the success rate for <code>library_search</code> increased <em>a lot</em> once I had an expectation of what lemmas it might find.  For instance, I now know that with inequalities, if I have <code>&lt;</code> in context and the result follow for <code>\\le</code>, then <code>library_search</code> will likely work with <code>have : \\le := le_of_lt</code>, but probably not otherwise.</p>\n<p>A few months back, I would have simply said: \"oh well, <code>library_search</code> is not helping me\".</p>\n<p>However, I am still intimidated by how to use <code>gptf</code> and, even though I would like to use it, I am afraid of installing it and breaking what I think is a fragile equilibrium of git and lean working at the same time!  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 244109384,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1624864886
    },
    {
        "content": "<p>My \"yes\" was a reply to Alex</p>",
        "id": 244109499,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624864943
    },
    {
        "content": "<p>gptf can produce non-syntactically valid output (or syntactically valid but nonexistant lemma output), so I suspect it may confuse more than help for very new folks even though it is certainly super cool</p>",
        "id": 244110681,
        "sender_full_name": "Julian Berman",
        "timestamp": 1624865811
    },
    {
        "content": "<p>I can say though Damiano that I managed not to break anything by just putting it in a separate repository, it wants lean 3.26 anyhow IIRC, so that part at least I think is surmountable, it's definitely cool to play with</p>",
        "id": 244110752,
        "sender_full_name": "Julian Berman",
        "timestamp": 1624865867
    },
    {
        "content": "<p>Does anyone know how long  I usually need to wait to get an API key before starting trying this?</p>",
        "id": 244113951,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1624868134
    },
    {
        "content": "<p>I think mine took about a week to arrive, I wouldn't hold your breath :-)</p>",
        "id": 244114206,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1624868290
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"408694\">Alex Zhang</span> <a href=\"#narrow/stream/113489-new-members/topic/mod/near/244113951\">said</a>:</p>\n<blockquote>\n<p>Does anyone know how long  I usually need to wait to get an API key before starting trying this?</p>\n</blockquote>\n<p>a week and the email looks like this, initially i didn't even know that i received an api key lol because the email was... so vague<br>\nanyway if you see something like this it means you received an api key and you should follow the instructions <a href=\"/user_uploads/3121/Su5MPRfZSw2cbInN7VeJMlCI/Screenshot-from-2021-06-28-15.18.25.png\">Screenshot-from-2021-06-28-15.18.25.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Su5MPRfZSw2cbInN7VeJMlCI/Screenshot-from-2021-06-28-15.18.25.png\" title=\"Screenshot-from-2021-06-28-15.18.25.png\"><img src=\"/user_uploads/3121/Su5MPRfZSw2cbInN7VeJMlCI/Screenshot-from-2021-06-28-15.18.25.png\"></a></div>",
        "id": 244114366,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1624868402
    }
]