[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"478462\">@T.X. Xia</span> </p>\n<p>Here's one that's more compact, but I don't necessarily think there's a \"right way\", yours is fine. Some people prefer using tactic mode for these kinds of propositional shuffling exercises.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Iff.intro</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"n\">hpx</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hna</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Classical.byContradiction</span> <span class=\"bp\">$</span> <span class=\"k\">fun</span> <span class=\"n\">hne</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">hna</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">hpx</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">absurd</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">⟩</span> <span class=\"n\">hne</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>The doc generation stuff for lean 4 is still a wip, but there's a hosted instance of the prelude/std/mathlib docs on the leanprover-community site. The <code>Classical</code> section is here: <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/Classical.html\">https://leanprover-community.github.io/mathlib4_docs/Init/Classical.html</a></p>\n<p><code>Classical</code> is just a namespace which can be split up, so you can't directly go to def in vscode, but for specific definitions you should be able to right click and <code>go to definition</code>.</p>",
        "id": 273840692,
        "sender_full_name": "Chris B",
        "timestamp": 1646240815
    },
    {
        "content": "<p>There's also a lot of interplay between decidable and classical, so some declarations that might be of interest are probably in other sections like <code>Mathlib.Logic.Basic</code>.</p>",
        "id": 273841206,
        "sender_full_name": "Chris B",
        "timestamp": 1646240988
    }
]