[
    {
        "content": "<p>Hello,</p>\n<p>I have a goal that is essentially:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"n\">p</span>\n<span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≅</span> <span class=\"n\">p'</span>\n<span class=\"c1\">---</span>\n<span class=\"n\">foo</span> <span class=\"n\">p'</span>\n</code></pre></div>\n<p>I believe <code>p</code> and <code>p'</code> live at the same type, in fact I am able to introduce <code>eq_of_heq E : p = p'</code>, but I'm not sure how to use it to rewrite either my goal or my <code>H</code> hypothesis so that they agree.</p>",
        "id": 251074818,
        "sender_full_name": "Valentin Robert",
        "timestamp": 1630176722
    },
    {
        "content": "<p>Can you provide a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ?</p>",
        "id": 251075069,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1630176992
    },
    {
        "content": "<p>Is this lean 4?</p>",
        "id": 251075960,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630177930
    },
    {
        "content": "<p>In general I'm guessing this goal is not true, eg if <code>foo X</code> is <code>X = p</code></p>",
        "id": 251113642,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630222209
    },
    {
        "content": "<p>If you can prove <code>p = p'</code> then it should be true, and <code>rwa [&lt;- eq_of_heq E]</code> should be the proof, unless there is something funny going on with hidden dependent arguments</p>",
        "id": 251113713,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630222305
    },
    {
        "content": "<p>Oh, I was curious about the odd notation and it turns out that <code>HEq</code> has gone from having no notation to having two: <code>a ~= b</code> (which renders like <code>a ≃ b</code> in my programmer font) and <code>a ≅ b</code> both mean <code>HEq a b</code> now in lean 4</p>",
        "id": 251114088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630222738
    },
    {
        "content": "<p>or maybe I just missed it. git blame says it's been like that for 10 months</p>",
        "id": 251114205,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630222895
    }
]