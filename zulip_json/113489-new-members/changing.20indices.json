[
    {
        "content": "<p>Hi, I'm trying to change indices in summation:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">diff_sums</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"o\">:</span><span class=\"bp\">ℕ→</span><span class=\"err\">\\</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"bp\">≥</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">→</span>  <span class=\"o\">(</span>\n  <span class=\"o\">((</span><span class=\"n\">range</span> <span class=\"n\">j</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"o\">((</span><span class=\"n\">range</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"bp\">-</span><span class=\"n\">i</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">k</span> <span class=\"o\">,</span> <span class=\"n\">F</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"n\">i</span><span class=\"o\">))</span>\n  <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>\n\n\n<p>I see that this kind of thing has been done already, e.g., \"sum_range_def\" in:<br>\n<a href=\"https://github.com/leanprover/lean2/blob/master/library/data/nat/bigops.lean\" title=\"https://github.com/leanprover/lean2/blob/master/library/data/nat/bigops.lean\">https://github.com/leanprover/lean2/blob/master/library/data/nat/bigops.lean</a></p>\n<p>But I'm not able to call sum_range_def (though I am able to call \"sum_range_succ\" which I think is defined in the same file?)</p>\n<p>Help please? Thanks!</p>",
        "id": 194066809,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1586972651
    },
    {
        "content": "<p>That repo is from <code>lean2</code> (the old version of lean) so possibly that particular lemma is not in lean 3 (with the same name).<br>\nI think the lemma <code>sum_Ico_eq_sub</code> in algebra/big_operators.lean does half of what you want.</p>",
        "id": 194067768,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1586973076
    },
    {
        "content": "<p>So with some minor modifications to your statement this works</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">diff_sums</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">→</span>  <span class=\"o\">(</span>\n  <span class=\"o\">((</span><span class=\"n\">range</span> <span class=\"n\">j</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"o\">((</span><span class=\"n\">range</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"bp\">-</span><span class=\"n\">i</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">k</span> <span class=\"o\">,</span> <span class=\"n\">F</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"n\">k</span><span class=\"o\">))</span>\n  <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">sum_Ico_eq_sub</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">sum_Ico_eq_sum_range</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n  <span class=\"n\">assumption</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>I changed <code>j \\ge i</code>to be <code>i \\le j</code> as all lemmas in mathlib are stated with a less than rather than a greater than where possible (so it is best to basically never use greater than, and swap the sides in all statements). And I changed <code>k + i</code> to <code>i + k</code> to match the library version (not necessary but makes the proof one line shorter)</p>",
        "id": 194203933,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1586973442
    }
]