[
    {
        "content": "<p>Currently if I want to type <code>α₁</code> in VS Code, I type <code>\\a</code> then hit space, and then hit backspace before typing <code>\\1</code>+space again. Is there a way to do this without having to hit backspace all the time?</p>",
        "id": 132179797,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1534345337
    },
    {
        "content": "<p>You can type <code>\\a\\1 </code>, and <code>(\\a\\1: Type)</code> works as well.</p>",
        "id": 132180057,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534345666
    },
    {
        "content": "<ul>\n<li>Used to work, somehow it doesn't now.</li>\n</ul>",
        "id": 132180112,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534345704
    },
    {
        "content": "<p>This is why I tried to ask the same question a while ago. It's clearly the single most annoying thing in VScode</p>",
        "id": 132180357,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534345968
    },
    {
        "content": "<p>Do you use this when using the vim plugin?</p>",
        "id": 132180446,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534346050
    },
    {
        "content": "<blockquote>\n<p>Do you use this when using the vim plugin?</p>\n</blockquote>\n<p>Yep, and for me that would be harder to give up than dealing with this annoyance.</p>",
        "id": 132180667,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1534346305
    },
    {
        "content": "<p>I have this annoyance without the vim plugin</p>",
        "id": 132180678,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534346331
    },
    {
        "content": "<p>I once tried the vim plugin and decided it was unusable, but maybe I hesitate to give it another try. Since Gabriel didn't seem to know about this problem I suddenly hoped it wasn't there with the vim plugin</p>",
        "id": 132180709,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534346390
    },
    {
        "content": "<p>I only use the vim plugin and observe this problem as well.</p>",
        "id": 132180771,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534346430
    },
    {
        "content": "<p>An ideal solution for me would be some way to trigger the replacement without moving the cursor. I would like it if either \"space\" would not add a space when performing a replacement, or if there were some other keybinding that did precisely that.</p>",
        "id": 132180923,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1534346631
    },
    {
        "content": "<p>So, <code>\\alpha\\1\\2\\3</code> works again now.  I believe this was silently broken due to an upstream change in vscode.  Thanks for pointing it out!</p>",
        "id": 132181558,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534347268
    },
    {
        "content": "<blockquote>\n<p>An ideal solution for me would be some way to trigger the replacement without moving the cursor.</p>\n</blockquote>\n<p>I am reluctant to reuse space for this.  Ideas for other keybindings?</p>",
        "id": 132181588,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534347314
    },
    {
        "content": "<blockquote>\n<p>I am reluctant to reuse space for this.  Ideas for other keybindings?</p>\n</blockquote>\n<p>shift+space maybe?</p>",
        "id": 132181669,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1534347379
    },
    {
        "content": "<p>why not tab, like in shell completion?</p>",
        "id": 132181736,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534347460
    },
    {
        "content": "<p>shift+space is crazy enough that hopefully nobody uses it yet. I'll try to add it.</p>",
        "id": 132181741,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534347465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> tab already produces a... tab.</p>",
        "id": 132181753,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534347478
    },
    {
        "content": "<p>More seriously, it's hard to hijack a key just when the input mode is active.  I can add a global keybinding for tab, but this is probably not what you want.</p>",
        "id": 132181835,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534347583
    },
    {
        "content": "<p>I checked the default keybinds and shift+space seems to be unused. </p>\n<p>Tab would of course be nicer if you can somehow get it working. However, often the autocomplete menu is active as well, and that would eat the tab as well.  My guess is that in most situations, unicode input should win over autocomplete, but dealing with all this might be more trouble than it's worth.</p>",
        "id": 132182138,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1534347921
    },
    {
        "content": "<p>Gabriel, did you write anything about Lean+vim plugin, or do you simply activate both plugin and there is nothing more to know?</p>",
        "id": 132182306,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534348127
    },
    {
        "content": "<p>I just install both plugins separately.  No configuration required.</p>",
        "id": 132183068,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534349013
    },
    {
        "content": "<p>thanks</p>",
        "id": 132183084,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534349028
    },
    {
        "content": "<p>Since everybody loves tab so much, you get tab.  Apparently you can set any property on the vscode \"context\" and then make keybindings conditional on these properties.  The tab keybinding is now conditional on <code>lean.input.isActive</code>.  Hope this doesn't break anything...</p>",
        "id": 132183178,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534349095
    },
    {
        "content": "<p>I hope that pressing tab gives you a tab (equivalent) when the underline is not active</p>",
        "id": 132183317,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534349243
    },
    {
        "content": "<p>I'm not sure.  Can you check this?</p>",
        "id": 132183369,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534349294
    },
    {
        "content": "<p>I certainly use tab for indentation and block indentation currently</p>",
        "id": 132183375,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534349302
    },
    {
        "content": "<p>Yes, of course, it works.  Tab produces a tab when there's no underline (at least on Linux)</p>",
        "id": 132183387,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534349331
    },
    {
        "content": "<p>That was the whole point about the undocumented<code>setContext</code> command.</p>",
        "id": 132183416,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534349353
    },
    {
        "content": "<p>Thanks again Gabriel!</p>",
        "id": 132186642,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1534353157
    }
]