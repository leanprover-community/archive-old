[
    {
        "content": "<p>I have left as my goal:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hnp</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"n\">head</span><span class=\"o\">,</span>\n<span class=\"n\">hnq</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"n\">head</span>\n<span class=\"err\">⊢</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">head</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"n\">head</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>Is there a quick tactic-mode incantation to finish off?</p>",
        "id": 200940835,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1592252742
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#tautology\">tactic#tautology</a></p>",
        "id": 200941021,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592252841
    },
    {
        "content": "<p><code>tauto</code> by itself does not work</p>",
        "id": 200941080,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1592252874
    },
    {
        "content": "<p>Or maybe <code>tauto!</code></p>",
        "id": 200941118,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592252883
    },
    {
        "content": "<p><code>intro h, cases h, exact hnp h, exact hnq h</code> does but feels clumsy.</p>",
        "id": 200941145,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1592252887
    },
    {
        "content": "<p>If not <code>finish</code> should do it too</p>",
        "id": 200941174,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592252902
    },
    {
        "content": "<p><code>import tactic</code> being missing strikes again. <code>tauto</code> worked after all<br>\nThanks!</p>",
        "id": 200941265,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1592252949
    },
    {
        "content": "<p>Another goal I'm struggling to close quickly:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">p</span> <span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">q</span> <span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span><span class=\"o\">,</span>\n<span class=\"err\">⊢</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">p</span> <span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">filter</span> <span class=\"n\">q</span> <span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p><code>rw</code> doesn't seem to work here, and <code>finish</code> works in my installation but not the codewars one.</p>",
        "id": 200942300,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1592253398
    },
    {
        "content": "<p><code>linarith</code> should be smart enough for this one</p>",
        "id": 200942373,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592253444
    },
    {
        "content": "<p>Bingo, knew I'd seen this type of issue before.</p>",
        "id": 200942578,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1592253533
    }
]