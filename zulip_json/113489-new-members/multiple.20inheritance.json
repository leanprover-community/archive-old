[
    {
        "content": "<p>Is it recommended to set <code>set_option old_structure_cmd true</code> in order for easier multiple inheritance? For example, I'm trying to define a class with <code>extends A →ₗ[k] (V →ₗ[k] V), monoid_hom A (V →ₗ[k] V)</code>, so that it is both a linear map in regards to the module structure and a homomorphism in regards to the monoid structure. However, the <code>to_fun</code> field exists in both classes. Otherwise, I'd have to manually copy the fields of one of the two.</p>",
        "id": 241672909,
        "sender_full_name": "Winston Yin",
        "timestamp": 1622955378
    },
    {
        "content": "<p>If you check <code>monoid_hom</code>, you'll see that it extends two classes that both have <code>to_fun</code> also, and uses <code>old_structure</code>.</p>",
        "id": 241673396,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622956072
    },
    {
        "content": "<p>In your particular case you might be looking for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/alg_hom\">docs#alg_hom</a>?</p>",
        "id": 241677900,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622963830
    },
    {
        "content": "<p><code>A →ₐ[k] (V →ₗ[k] V)</code></p>",
        "id": 241677918,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622963877
    }
]