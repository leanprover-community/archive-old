[
    {
        "content": "<p>Hi Everyone, I am going through this pdf (<a href=\"https://people.maths.ox.ac.uk/flynn/genus2/sheets0405/grfnotes1011.pdf\" target=\"_blank\" title=\"https://people.maths.ox.ac.uk/flynn/genus2/sheets0405/grfnotes1011.pdf\">https://people.maths.ox.ac.uk/flynn/genus2/sheets0405/grfnotes1011.pdf</a>) and wrote some Lean code to encode these structures.  The definition of Field (in the page 13) has two definitions: 1) a commutative ring with identity and all the non zero elements in the field has a inverse,  2) it is a abelian group with respect to addition, and it is a abelian group with respect to multiplication (except zero).  I have encode the first one and type-checker is happy, but I am struggling to encode the second one,  mainly how to exclude zero from set A. I have encoded it as a sigma type(?)  {x : A | x ≠ zero} , but the type checker is not happy.  </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">/-</span><span class=\"cm\"> How write the second definition-/</span>\n<span class=\"n\">class</span> <span class=\"n\">field</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">zero</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Fadd</span> <span class=\"n\">Fsub</span> <span class=\"n\">Fmult</span> <span class=\"n\">Fdiv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fopp</span> <span class=\"n\">Finv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">[</span><span class=\"n\">Hdec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n <span class=\"o\">(</span><span class=\"n\">Hnz</span> <span class=\"o\">:</span> <span class=\"n\">zero</span> <span class=\"bp\">≠</span> <span class=\"n\">one</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Haddabel</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">abelian_group</span> <span class=\"n\">A</span> <span class=\"n\">zero</span> <span class=\"n\">Fadd</span> <span class=\"n\">Fopp</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hmulabel</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">abelian_group</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">zero</span><span class=\"o\">}</span> <span class=\"n\">one</span> <span class=\"n\">Fmult</span> <span class=\"n\">Finv</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Field_sub_def</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">Fsub</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">Fadd</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Fopp</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n <span class=\"o\">(</span><span class=\"n\">Field_div_def</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">Fdiv</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Finv</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n <span class=\"o\">(</span><span class=\"n\">Field_distr</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Fadd</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Fadd</span> <span class=\"o\">(</span><span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"n\">z</span><span class=\"o\">))</span>\n</pre></div>\n\n\n<p>Complete source code. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">namespace</span> <span class=\"n\">AlgStructures</span>\n\n<span class=\"n\">class</span> <span class=\"n\">monoid</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]:=</span>\n <span class=\"o\">(</span><span class=\"n\">Hassoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hidl</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">e</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hidr</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n\n\n<span class=\"n\">class</span> <span class=\"n\">group</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Hdec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n <span class=\"o\">(</span><span class=\"n\">Hmon</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">monoid</span> <span class=\"n\">A</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hinvl</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hinvr</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n\n\n<span class=\"n\">class</span> <span class=\"n\">abelian_group</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Hdec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n <span class=\"o\">(</span><span class=\"n\">Hg</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">group</span> <span class=\"n\">A</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">inv</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hcomm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> assuming a ring with identity -/</span>\n<span class=\"n\">class</span> <span class=\"n\">ring</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">zero</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Radd</span> <span class=\"n\">Rsub</span> <span class=\"n\">Rmult</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ropp</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">[</span><span class=\"n\">Hdec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n <span class=\"o\">(</span><span class=\"n\">Habel</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">abelian_group</span> <span class=\"n\">A</span> <span class=\"n\">zero</span> <span class=\"n\">Radd</span> <span class=\"n\">Ropp</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hmon</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">monoid</span> <span class=\"n\">A</span> <span class=\"n\">one</span> <span class=\"n\">Rmult</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Ring_distr_l</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">Rmult</span> <span class=\"o\">(</span><span class=\"n\">Radd</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">Radd</span> <span class=\"o\">(</span><span class=\"n\">Rmult</span> <span class=\"n\">x</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Rmult</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">))</span>\n <span class=\"o\">(</span><span class=\"n\">Ring_distr_r</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">Rmult</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">Radd</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Radd</span> <span class=\"o\">(</span><span class=\"n\">Rmult</span> <span class=\"n\">z</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Rmult</span> <span class=\"n\">z</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n <span class=\"o\">(</span><span class=\"n\">Ring_sub_def</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">Rsub</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">Radd</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Ropp</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n\n\n<span class=\"n\">class</span> <span class=\"n\">commutative_ring</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">zero</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Radd</span> <span class=\"n\">Rsub</span> <span class=\"n\">Rmult</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ropp</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">[</span><span class=\"n\">Hdec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n <span class=\"o\">(</span><span class=\"n\">Hring</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">ring</span> <span class=\"n\">A</span> <span class=\"n\">zero</span> <span class=\"n\">one</span> <span class=\"n\">Radd</span> <span class=\"n\">Rsub</span> <span class=\"n\">Rmult</span> <span class=\"n\">Ropp</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hinv</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">Rmult</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">Rmult</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> commutative Ring with inverse -/</span>\n<span class=\"n\">class</span> <span class=\"n\">field</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">zero</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Fadd</span> <span class=\"n\">Fsub</span> <span class=\"n\">Fmult</span> <span class=\"n\">Fdiv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fopp</span> <span class=\"n\">Finv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">[</span><span class=\"n\">Hdec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n <span class=\"o\">(</span><span class=\"n\">Hcring</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">commutative_ring</span> <span class=\"n\">A</span> <span class=\"n\">zero</span> <span class=\"n\">one</span> <span class=\"n\">Fadd</span> <span class=\"n\">Fsub</span> <span class=\"n\">Fmult</span>\n                <span class=\"n\">Fopp</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hfinvl</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">zero</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Fmult</span> <span class=\"o\">(</span><span class=\"n\">Finv</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">one</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hfinvr</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">zero</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Finv</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">one</span><span class=\"o\">)</span>\n\n\n\n<span class=\"c\">/-</span><span class=\"cm\"> How write the second definition ? -/</span>\n<span class=\"n\">class</span> <span class=\"n\">field</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">zero</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Fadd</span> <span class=\"n\">Fsub</span> <span class=\"n\">Fmult</span> <span class=\"n\">Fdiv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fopp</span> <span class=\"n\">Finv</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n <span class=\"o\">[</span><span class=\"n\">Hdec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n <span class=\"o\">(</span><span class=\"n\">Hnz</span> <span class=\"o\">:</span> <span class=\"n\">zero</span> <span class=\"bp\">≠</span> <span class=\"n\">one</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Haddabel</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">abelian_group</span> <span class=\"n\">A</span> <span class=\"n\">zero</span> <span class=\"n\">Fadd</span> <span class=\"n\">Fopp</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Hmulabel</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">abelian_group</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">zero</span><span class=\"o\">}</span> <span class=\"n\">one</span> <span class=\"n\">Fmult</span> <span class=\"n\">Finv</span> <span class=\"n\">Hdec</span><span class=\"o\">)</span>\n <span class=\"o\">(</span><span class=\"n\">Field_sub_def</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">Fsub</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">Fadd</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Fopp</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n <span class=\"o\">(</span><span class=\"n\">Field_div_def</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">Fdiv</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Finv</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n <span class=\"o\">(</span><span class=\"n\">Field_distr</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Fadd</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Fadd</span> <span class=\"o\">(</span><span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fmult</span> <span class=\"n\">x</span> <span class=\"n\">z</span><span class=\"o\">))</span>\n\n\n\n<span class=\"kn\">end</span> <span class=\"n\">AlgStructures</span>\n</pre></div>",
        "id": 191425241,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1584925782
    },
    {
        "content": "<p>So <code>field</code>s are already in lean core if you just want to use them you needn't define them yourself, and you can see how it is done there.<br>\nThe issue here is that in the line <code> @abelian_group {x : A | x ≠ zero} one Fmult Finv Hdec</code> the terms one and Fmult Finv Fdec are not terms of or functions on the type <code>{x : A | x ≠ zero} </code> so you'll need to add some things like <code>one  ≠ zero</code> and that <code>Fmult</code> takes a nonzero element and a nonzero element to a nonzero element as extra terms.</p>",
        "id": 191425805,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1584926878
    },
    {
        "content": "<p>Thanks Alex.</p>",
        "id": 191426077,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1584927417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239476\">@Mukesh Tiwari</span> That second definition is a bit sloppy (it doesn't say anything about distributivity).</p>",
        "id": 191441292,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584950542
    },
    {
        "content": "<p>I think that asserting that multiplication makes the non-zero elements an abelian group will be problematic to use in practice, because what you want to know is that multiplication is commutative and associative on the whole field, and your set-up doesn't show <code>a*(0*b)=(a*0)*b</code> for example.</p>",
        "id": 191443303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584952021
    },
    {
        "content": "<p>The power of notation in Lean means that you can set up these notations in a far more beautiful way. See for example the definition of a group in <a href=\"https://github.com/kbuzzard/group-theory-game/blob/master/src/group/definitions.lean\" target=\"_blank\" title=\"https://github.com/kbuzzard/group-theory-game/blob/master/src/group/definitions.lean\">the group theory game</a></p>",
        "id": 191443424,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584952093
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Encoding.20Field.20as.20Abelian.20Group/near/191441292\" title=\"#narrow/stream/113489-new-members/topic/Encoding.20Field.20as.20Abelian.20Group/near/191441292\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"239476\">Mukesh Tiwari</span> That second definition is a bit sloppy (it doesn't say anything about distributivity).</p>\n</blockquote>\n<p>You mean this one?  \"it is a abelian group with respect to addition, and it is a abelian group with respect to multiplication (except zero).\"</p>",
        "id": 193711874,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1586695892
    },
    {
        "content": "<p>Yup, that one</p>",
        "id": 193714204,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586699846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239476\">@Mukesh Tiwari</span> if you're still thinking about this, why not switch over to the standard Lean way of doing things where you can use notation instead of having to write all this <code>Fmult (Finv x) x = one</code> stuff?</p>",
        "id": 193714277,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586699976
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">class</span> <span class=\"n\">ring&#39;</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">monoid</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">add_mul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul_add</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 193714523,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586700324
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  Thank you very much.</p>",
        "id": 193732836,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1586730092
    },
    {
        "content": "<p>I looked at the pdf again, and It says, \"the distributive laws hold.\" (page 13).  I was sloppy when writing the axioms.  Thanks for the catch.</p>",
        "id": 193736978,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1586737643
    }
]