[
    {
        "content": "<p>After defining the following function:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">floor_root_helper</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">m</span> <span class=\"bp\">^</span> <span class=\"n\">e</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">∧</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">e</span>\n  <span class=\"k\">then</span> <span class=\"n\">m</span>\n  <span class=\"k\">else</span> <span class=\"n\">floor_root_helper</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"n\">using_well_founded</span> <span class=\"o\">{</span> <span class=\"n\">rel_tac</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">measure_wf</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">^</span> <span class=\"n\">e</span><span class=\"o\">⟩]</span><span class=\"bp\">`</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>Although Lean 3 gives me no errors, it seems that <code>floor_root_helper</code> is not added into the namespace after this definition.  <br>\nCan anyone see what's going wrong here?</p>\n<p>Thanks in advance!</p>",
        "id": 318188157,
        "sender_full_name": "Julian Sutherland",
        "timestamp": 1672196284
    },
    {
        "content": "<p>The last <code> ` </code> should not be there</p>",
        "id": 318209584,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672215061
    },
    {
        "content": "<p>You can't use <code>m</code> in the termination proof. Your indentation confuses you. <code>using_well_founded</code> applies to all cases.<br>\nIt should be like this (although I'm not sure this is what you want):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">floor_root_helper</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">^</span> <span class=\"n\">e</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">∧</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">e</span> <span class=\"k\">then</span> <span class=\"n\">m</span>\n  <span class=\"k\">else</span> <span class=\"k\">have</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">e</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">^</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n    <span class=\"n\">floor_root_helper</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">using_well_founded</span> <span class=\"o\">{</span> <span class=\"n\">rel_tac</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">measure_wf</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span> <span class=\"bp\">^</span> <span class=\"n\">e</span><span class=\"o\">⟩]</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 318210511,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1672215550
    }
]