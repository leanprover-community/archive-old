[
    {
        "content": "<p>I've declared the notation <code>notation '[' x 'ε' X ':' φ ']'  := spec φ X</code> (where I've just written <code> as ' to not mess with Zulip). Then when I write </code>[ x ε X : x sub X ]`, I get all kinds of errors. How should I do what I want to do?</p>\n<p>Edit: I get these errors:</p>\n<blockquote>\n<p>unknown identifier 'x'<br>\ninvalid expression starting at 50:19<br>\ncommand expected</p>\n</blockquote>",
        "id": 193745849,
        "sender_full_name": "Chris M",
        "timestamp": 1586754489
    },
    {
        "content": "<p>I don't know but you can use two backticks instead of one when you want to surround code containing a backtick.</p>",
        "id": 193748900,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586760119
    },
    {
        "content": "<p>Perhaps Lean doesn't like having <code>:</code> taken away from it?</p>",
        "id": 193748937,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586760129
    },
    {
        "content": "<p>I changed <code>:</code> to <code>|</code>, but that doesn't change the errors.</p>",
        "id": 193749298,
        "sender_full_name": "Chris M",
        "timestamp": 1586760679
    },
    {
        "content": "<p>MWE?</p>",
        "id": 193749309,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586760707
    },
    {
        "content": "<p>I googled \"MWE\", but the closest thing to this context is \"Managed Work Environment\", but I don't think that's what you meant.</p>",
        "id": 193749457,
        "sender_full_name": "Chris M",
        "timestamp": 1586760885
    },
    {
        "content": "<p>Oh yes, because <code>x</code> is not in scope</p>",
        "id": 193749475,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586760925
    },
    {
        "content": "<p>MWE = minimal working example</p>",
        "id": 193749484,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586760953
    },
    {
        "content": "<p>\"working\" is more important</p>",
        "id": 193749514,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586760962
    },
    {
        "content": "<p>Ok.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">definition</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">:=</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"n\">axiominfinity</span>\n<span class=\"kn\">definition</span> <span class=\"n\">myemptyset</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"n\">x</span> <span class=\"n\">ε</span> <span class=\"n\">N</span> <span class=\"bp\">|</span> <span class=\"bp\">¬</span><span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">x</span><span class=\"o\">]</span>\n</pre></div>",
        "id": 193749629,
        "sender_full_name": "Chris M",
        "timestamp": 1586761173
    },
    {
        "content": "<p>You're trying to make the first argument treated as a binder. But this kind of <code>notation</code> syntax means <code>x</code> is an expression.</p>",
        "id": 193749755,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586761342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> , sorry for the late reply. Corona disrupted my routine and I ended up only viewing this now.</p>\n<p>Does the fact that <code>x</code> is treated as an expression mean that I can't use it multiple times in this notation? i.e. I can't reuse it within \\phi? </p>\n<p>How would I go about defining this kind of notation correctly within Lean?</p>",
        "id": 200062441,
        "sender_full_name": "Chris M",
        "timestamp": 1591598208
    },
    {
        "content": "<p>There is some way of introducing binder notation in Lean 3 but it's a bit primitive. Look at the definition of notation like <code>\\Union</code> maybe for an example?</p>",
        "id": 200066774,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591602785
    }
]