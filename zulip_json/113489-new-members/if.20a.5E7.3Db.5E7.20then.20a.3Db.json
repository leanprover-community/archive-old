[
    {
        "content": "<p>This one will be a bit challenging to transcribe into Lean:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.ordered_ring</span>\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">ex_1_3_5</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n   <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">7</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Note: </p>\n<p><code>a=b</code> iff <code>(a-b)^7</code> equal 0.</p>\n<p>We want to prove that </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">7</span> <span class=\"bp\">=</span>\n<span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">7</span> <span class=\"bp\">-</span> <span class=\"mi\">7</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">21</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">5</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">35</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">4</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">35</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">4</span> <span class=\"bp\">-</span> <span class=\"mi\">21</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">5</span> <span class=\"bp\">+</span> <span class=\"mi\">7</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">6</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">7</span>\n<span class=\"bp\">=</span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>By assumption <code>a^7-b^7 = 0</code> so we want to prove that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"mi\">7</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">21</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">5</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">35</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">4</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">35</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">4</span> <span class=\"bp\">-</span> <span class=\"mi\">21</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">5</span> <span class=\"bp\">+</span> <span class=\"mi\">7</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">6</span> <span class=\"bp\">=</span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>This factors to </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">-</span><span class=\"mi\">7</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>This has solutions when <code>a=b=0</code> and when <code>a=b</code>.  The remaining case is to look at</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>This has solution when <code>a=b=0</code>. Otherwise we have to have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span>\n</code></pre></div>\n<p>But <code>(a-b)^2</code> is positive or 0.  When it is positive, the only solutions are when <code>a&lt;0, b&gt;0</code> or <code>a&gt;0,b&lt;0</code>.</p>\n<p>By calculus, the expression <code>f = (a-b)^2 + a*b = 0</code> will only have a 0 when <code>df/da = 0</code>.</p>\n<p>But <code>df/da = 2*(a-b) + b</code> which is 0 only when <code>a = b/2</code>. But then <code>sign(a) = sign(b)</code> which contradicts conditions a&lt;0, b&gt;0<code> or </code>a&gt;0,b&lt;`.</p>\n<p>So there are no additional solutions and the only solution is when <code>a=b</code>.</p>\n<p>In terms of translation difficulty, I know how to do the expression reductions.  I'm not sure how to do the calculus step.  That seems bigger than a breadbox.  I haven't tried to do anything with calculus yet.  I guess the relevant stuff will be in <code>analysis.calculus.fderiv</code>.</p>\n<p>`</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>\n</code></pre></div>",
        "id": 224514516,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1611944971
    },
    {
        "content": "<p>Why not just prove that if a&lt;b then a^7&lt;b^7? More generally why not prove that if a&lt;b then a^{2n+1}&lt;b^{2n+1}? This doesn't look too hard. I definitely wouldn't go through what you're sketching above, it looks like a nightmare. Probably you just do some case split on the signs of a and b and then it's all over.</p>",
        "id": 224514852,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611945125
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ex_1_3_5</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">7</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">strict_mono_pow_bit1</span> <span class=\"n\">α</span> <span class=\"n\">_</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>boom</p>",
        "id": 224516703,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946126
    },
    {
        "content": "<p>a similar proof also works for your earlier question about a^3&lt;b^3</p>",
        "id": 224516752,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946152
    },
    {
        "content": "<p>and indeed the proof of <code>strict_mono_pow_bit1</code> is just a case split on the signs of a and b.</p>",
        "id": 224516995,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611946264
    },
    {
        "content": "<p>The proof by expansion might conceivably be more general because you don't need a linear order, although I think you still need negation</p>",
        "id": 224517166,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946338
    },
    {
        "content": "<p>it's not true without some order assumption, e.g. it's not true in the complexes</p>",
        "id": 224517231,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611946371
    },
    {
        "content": "<p>well <code>strict_mono</code> itself doesn't typecheck on the complexes</p>",
        "id": 224517261,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946390
    },
    {
        "content": "<p>if you just want injectivity then it's false anyway on the complexes</p>",
        "id": 224517290,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946405
    },
    {
        "content": "<p>sure -- we're saying the same thing. I just didn't understand your comment about a proof by expansion. There are finite fields where it's false too, you need something.</p>",
        "id": 224517408,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611946456
    },
    {
        "content": "<p>but it might be true for an <code>ordered_ring</code> for example (not sure if there is a counterexample on <code>ordered_semiring</code> where it can still be stated)</p>",
        "id": 224517420,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946466
    },
    {
        "content": "<p>oh I see. Yeah maybe.</p>",
        "id": 224517443,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611946484
    },
    {
        "content": "<p>I'm talking about the version with an order, so finite fields are out</p>",
        "id": 224517460,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946491
    },
    {
        "content": "<p>but you just have a partial order</p>",
        "id": 224517476,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946503
    },
    {
        "content": "<p>so the case split proof doesn't work</p>",
        "id": 224517513,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611946516
    },
    {
        "content": "<p>I misinterpreted \"you don't need a linear order\" as \"you don't need an order\" :-)</p>",
        "id": 224517514,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611946517
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  and <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  for thinking about this.  Regarding \"Why not just prove that if a&lt;b then a^7&lt;b^7?\", that's not the direction Birkhoff and Mac Lane asked for:</p>\n<p><a href=\"/user_uploads/3121/gaIP4Rdr_JTNZS6xmiSsNK47/Screenshot-from-2021-02-01-23-43-33.png\">Screenshot-from-2021-02-01-23-43-33.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/gaIP4Rdr_JTNZS6xmiSsNK47/Screenshot-from-2021-02-01-23-43-33.png\" title=\"Screenshot-from-2021-02-01-23-43-33.png\"><img src=\"/user_uploads/3121/gaIP4Rdr_JTNZS6xmiSsNK47/Screenshot-from-2021-02-01-23-43-33.png\"></a></div><p>I will study Mario's one-line proof.  My long-winded sketch was inspired by <a href=\"https://www.quora.com/Does-a-3-b-3-always-imply-a-b-if-a-and-b-are-complex-numbers\">the Internets</a>.</p>",
        "id": 224828646,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1612241203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364351\">@Lars Ericson</span> The question doesn't ask it, but if you can prove <code>a &lt; b -&gt; A^7 &lt; b^7</code> then <code>a^7 = b^7 -&gt; a = b</code> follows, because if <code>a != b</code> then <code>a &lt; b</code> so <code>a^7 &lt; b^7</code> and if <code>b &lt; a</code> so <code>b^7 &lt; a^7</code>, so in either case <code>a^7 != b^7</code> and that's the contrapositive of the claim. This is one of the possible proof strategies to prove a function is injective</p>",
        "id": 224828912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612241586
    }
]