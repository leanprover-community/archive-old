[
    {
        "content": "<p>Hi,</p>\n<p>I'm trying to prove something for which I got (via some rewrites) the goal as an hypothesis <code>p</code>. When I tell Lean to close it with <code>exact  p</code>, it tells me it expects a function, but I don't understand why.  Does anyone have a clue what might be happening? A bit more concretely, my proof state looks something like: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">...</span>\n<span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">l₁</span> <span class=\"bp\">~</span> <span class=\"n\">l₂</span>\n<span class=\"bp\">...</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">l₁</span> <span class=\"bp\">~</span> <span class=\"n\">l₂</span>\n</code></pre></div>\n<p>And I get the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">p</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">l₁</span> <span class=\"bp\">~</span> <span class=\"n\">l₂</span>\n</code></pre></div>\n<p>Why does exact expect a function? I thought it should expect (a witness of) the proof of the goal, which is what I'm giving it.</p>\n<p>Just in case that matters, this is with Lean4 (version 4.0.0-m2, commit 26dda3f63d88, to use Mathlib4)</p>",
        "id": 247567115,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1627555310
    },
    {
        "content": "<p>Can you post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 247567364,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1627555471
    },
    {
        "content": "<p>(Not that I have a clue about lean4)</p>",
        "id": 247567382,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1627555485
    },
    {
        "content": "<p>There isn't anything left after the <code>exact p</code>? That sometimes catches me out in lean3</p>",
        "id": 247567438,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1627555532
    },
    {
        "content": "<p>What do you mean anything left? The <code>exact p</code> fails with that error. I'll try to construct a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 247567840,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1627555914
    },
    {
        "content": "<p>You could precede the theorem with <code>set_option pp.all true in</code> to get more info from the output, maybe there's a wrong implicit argument or type class instance in <code>p</code>.</p>",
        "id": 247568061,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1627556084
    },
    {
        "content": "<p>That seems like a useful tool for debugging, thanks :) It seems there isn't a wrong implicit argument there:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">List.perm.</span><span class=\"o\">{</span><span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"n\">α</span> <span class=\"n\">l₁</span> <span class=\"n\">l₂</span>\n<span class=\"bp\">...</span>\n<span class=\"bp\">⊢</span> <span class=\"bp\">@</span><span class=\"n\">List.perm.</span><span class=\"o\">{</span><span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"n\">α</span> <span class=\"n\">l₁</span> <span class=\"n\">l₂</span>\n</code></pre></div>",
        "id": 247568373,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1627556365
    },
    {
        "content": "<p>What does the line before the <code>exact p</code> look like?</p>",
        "id": 247568889,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1627556725
    },
    {
        "content": "<p>Hm, the problem somehow disappeared when trying to construct a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> and I don't know exactly why. I think Lean accepted my <code>exact</code> and was complaining about what is afterwards? Now it says <code>goals accomplished</code> and I have no idea what changed... Sorry for the confusion and thanks for the help!</p>",
        "id": 247568994,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1627556794
    },
    {
        "content": "<p>It was probably more something about the sequences of tactics, that confused the parser. Maybe indentation?</p>",
        "id": 247569053,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1627556850
    },
    {
        "content": "<p>Indentation matters in Lean? That sounds like a very plausible suspect! Do you know if how indentation works is documented somewhere?</p>",
        "id": 247569188,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1627556953
    },
    {
        "content": "<p>Yes, it does in Lean 4. Because we don't have tactic blocks scoped by <code>begin ... end</code> anymore</p>",
        "id": 247569394,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1627557128
    }
]