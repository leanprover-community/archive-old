[
    {
        "content": "<p>Hello! I'm working on some localized module proofs that I'd like to upstream into mathlib. In particular that a localized module is a tensor product, which I just finished.<br>\nHowever, I'm not sure if all of the dependencies of my proofs should be upstreamed. For example, I wrote this small lemma about certain tensor products (they also occur if <code>N</code> is a cyclic group) that I'm not sure would be useful to others. Should I try to inline it into my proof? or make it private somehow within the file?<br>\nThis is the lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">section</span> <span class=\"n\">tensor_product</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span>  <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">tensor_product.every_element_pure_if_absorbing_add</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">tensor_product</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">m₁</span> <span class=\"n\">m₂</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n₁</span> <span class=\"n\">n₂</span> <span class=\"o\">:</span> <span class=\"n\">N</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">m₁</span> <span class=\"bp\">⊗ₜ</span> <span class=\"n\">n₁</span> <span class=\"bp\">+</span> <span class=\"n\">m₂</span> <span class=\"bp\">⊗ₜ</span> <span class=\"n\">n₂</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">⊗ₜ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">⊗ₜ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n    <span class=\"n\">tensor_product.induction_on</span> <span class=\"n\">x</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">],</span>\n      <span class=\"n\">symmetry</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">tensor_product.zero_tmul</span> <span class=\"n\">M</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n    <span class=\"kd\">end</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"n\">intros</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n      <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"o\">],</span>\n    <span class=\"kd\">end</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"n\">rintros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">⟨</span><span class=\"n\">m₁</span><span class=\"o\">,</span> <span class=\"n\">n₁</span><span class=\"o\">,</span> <span class=\"n\">h₁</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">m₂</span><span class=\"o\">,</span> <span class=\"n\">n₂</span><span class=\"o\">,</span> <span class=\"n\">h₂</span><span class=\"o\">⟩,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">h₂</span><span class=\"o\">],</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h</span> <span class=\"n\">m₁</span> <span class=\"n\">m₂</span> <span class=\"n\">n₁</span> <span class=\"n\">n₂</span><span class=\"o\">,</span>\n    <span class=\"kd\">end</span>\n<span class=\"kd\">end</span> <span class=\"n\">tensor_product</span>\n</code></pre></div>",
        "id": 316413960,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1671263047
    },
    {
        "content": "<p>More smaller proofs is always better than fewer larger ones, surely!</p>",
        "id": 316421019,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671268061
    },
    {
        "content": "<p>That proof looks so golfable :-)</p>",
        "id": 316421178,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671268150
    }
]