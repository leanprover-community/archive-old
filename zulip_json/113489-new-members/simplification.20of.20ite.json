[
    {
        "content": "<p>How do I complete the following theorem:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">th</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"bp\">=</span><span class=\"n\">b</span> <span class=\"k\">then</span> <span class=\"mi\">5</span> <span class=\"k\">else</span> <span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"mi\">3</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span> <span class=\"bp\">...</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 131967259,
        "sender_full_name": "Ken Roe",
        "timestamp": 1534018169
    },
    {
        "content": "<p><code>simp *</code></p>",
        "id": 131967372,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534018377
    },
    {
        "content": "<p>Also <code>rw if_neg h</code> if <code>h</code> is your proof of <code>a \\ne b</code></p>",
        "id": 131967501,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1534018569
    },
    {
        "content": "<p>For <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> 's solution, you might make it clearer as <code>introv h, rw if_neg h</code>. As a habit, you should avoid referring to auto generated variable names.</p>",
        "id": 131967526,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534018650
    },
    {
        "content": "<p>why <code>introv</code> instead of <code>intro</code> or <code>intros</code>?</p>",
        "id": 131967584,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534018781
    },
    {
        "content": "<p>I would have done <code>intros a b h</code></p>",
        "id": 131967631,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534018828
    },
    {
        "content": "<p>Because the two natural numbers already have a name and we can just keep them. The assumption however is anonymous in the statement and you should rely on the name given under the hood. Additionally, we don't refer to <code>a</code> and <code>b</code> in the proof so renaming them is not very useful.</p>",
        "id": 131967640,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534018886
    },
    {
        "content": "<p>I didn't know that tactic!</p>",
        "id": 131967645,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534018921
    },
    {
        "content": "<p>Pretty neat eh? :)</p>",
        "id": 131967693,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534018951
    },
    {
        "content": "<p>what does the v stand for?</p>",
        "id": 131967704,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534018987
    },
    {
        "content": "<p>Btw <span class=\"user-mention\" data-user-id=\"121306\">@Ken Roe</span>, feel free to migrate your questioning to the <code>general</code> stream of Zulip. <code>new members</code> is more for introductions I believe.</p>",
        "id": 131967708,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534019010
    }
]