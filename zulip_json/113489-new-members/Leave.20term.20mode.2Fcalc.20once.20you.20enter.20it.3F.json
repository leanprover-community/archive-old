[
    {
        "content": "<p>Part of my proof involved calc, but now I want to return to tactic mode to complete my proof. How do I do this?</p>",
        "id": 135604247,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1539260573
    },
    {
        "content": "<p>The way I've done this in the past is to do the term mode in a separate lemma.</p>",
        "id": 135604263,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1539260597
    },
    {
        "content": "<p>just type <code>begin</code> <code>end</code> again</p>",
        "id": 135604665,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1539261053
    },
    {
        "content": "<p>depends on how you have set it up. You could have the calc block inside tactic mode, or you could have a tactic block in one of the steps of a calc block</p>",
        "id": 135604690,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539261085
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">show</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"k\">calc</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">simp</span>\n        <span class=\"bp\">...</span>        <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">simp</span>\n        <span class=\"bp\">...</span>        <span class=\"bp\">=</span> <span class=\"mi\">5</span>     <span class=\"o\">:</span> <span class=\"k\">begin</span>\n             <span class=\"k\">show</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span><span class=\"o\">,</span>\n             <span class=\"c1\">-- I&#39;m not getting anywhere</span>\n             <span class=\"n\">sorry</span>\n        <span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p><span class=\"user-mention\" data-user-id=\"130500\">@Abhimanyu Pallavi Sudhir</span>  -- post a MWE if what I said doesn't help.</p>",
        "id": 135605855,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539262447
    },
    {
        "content": "<p>Here's the code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">norm_num</span>\n<span class=\"kn\">definition</span> <span class=\"n\">cong_mod_37</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"mi\">37</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">cong_mod_37_equiv_reln</span> <span class=\"o\">:</span> <span class=\"n\">equivalence</span> <span class=\"n\">cong_mod_37</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">reflexive</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">cong_mod_37</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">sub_self</span><span class=\"o\">,</span>\n    <span class=\"n\">fapply</span> <span class=\"n\">exists</span><span class=\"bp\">.</span><span class=\"n\">intro</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">symmetric</span><span class=\"o\">,</span>\n    <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">HXY</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">cong_mod_37</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">cong_mod_37</span> <span class=\"n\">at</span> <span class=\"n\">HXY</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">HXY</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">Hn</span><span class=\"o\">,</span>\n    <span class=\"n\">fapply</span> <span class=\"n\">exists</span><span class=\"bp\">.</span><span class=\"n\">intro</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"bp\">-</span><span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"mi\">37</span> <span class=\"bp\">*</span> <span class=\"bp\">-</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"k\">calc</span> <span class=\"mi\">37</span> <span class=\"bp\">*</span> <span class=\"bp\">-</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"mi\">37</span><span class=\"bp\">*</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"err\">←</span><span class=\"n\">neg_mul_eq_mul_neg</span>\n          <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">Hn</span>\n          <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">neg_sub</span>\n<span class=\"c1\">--split,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">transitive</span><span class=\"o\">,</span>\n\n    <span class=\"kn\">end</span>\n</pre></div>",
        "id": 135607561,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1539264190
    },
    {
        "content": "<p>I did what you said, but that doesn't work.</p>",
        "id": 135607593,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1539264225
    },
    {
        "content": "<p>You need a comma at the end of the <code>calc</code>.</p>",
        "id": 135607681,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1539264278
    },
    {
        "content": "<p>Oh... thanks. Yep, now it's working.</p>",
        "id": 135607719,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1539264313
    }
]