[
    {
        "content": "<p>I just found this in mathlib (modulo notation which I removed to make a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>)</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">theorem</span> <span class=\"n\">cons_ne_nil</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">cons</span> <span class=\"n\">a</span> <span class=\"n\">l</span> <span class=\"bp\">≠</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">nil</span><span class=\"bp\">.</span>\n</code></pre></div>\n\n\n<p>What does <code>.</code> mean?</p>",
        "id": 205115763,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1595856112
    },
    {
        "content": "<p>it means nothing, it just ends the definition. The actual proof is an empty pattern match</p>",
        "id": 205116330,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595856425
    },
    {
        "content": "<p>An empty pattern match in that there are zero instances of <code>false</code> to match against?</p>",
        "id": 205116785,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1595856677
    },
    {
        "content": "<p>I'm puzzled because it seems there is something to match against:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">cons</span> <span class=\"n\">a</span> <span class=\"n\">l</span> <span class=\"bp\">≠</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">nil</span>\n<span class=\"bp\">|</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 205117980,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1595857270
    },
    {
        "content": "<p>It's matching on the equality, and the only constructor for equality, <code>rfl</code>, is not type correct, so no match arms are needed</p>",
        "id": 205118660,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595857643
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">cons</span> <span class=\"n\">a</span> <span class=\"n\">l</span> <span class=\"bp\">≠</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">nil</span>\n<span class=\"bp\">|</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">cases</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 205118709,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595857671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Check out <a href=\"#narrow/stream/240192-Berkeley-Lean.20Seminar/topic/Periods.20at.20the.20end.20of.20statements\">https://leanprover.zulipchat.com/#narrow/stream/240192-Berkeley-Lean.20Seminar/topic/Periods.20at.20the.20end.20of.20statements</a></p>",
        "id": 205119410,
        "sender_full_name": "Utensil Song",
        "timestamp": 1595858018
    }
]