[
    {
        "content": "<p>Hi all,  I am unsure how to have something like (a)^n to denote a<em>...</em>a n times in lean where a is an element of a group and n is an natural number, </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.group.basic</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>  <span class=\"o\">[</span><span class=\"n\">comm_group</span> <span class=\"n\">α</span> <span class=\"o\">]</span>\n\n<span class=\"c1\">-- Prove that if G is an abelian group, then for all a, b ∈ G</span>\n<span class=\"c1\">-- and all natural numbers  n, (a ⬝ b)^n = a^n ⬝ b^n</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">ex2_3_2</span> <span class=\"o\">:</span>\n <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">)</span>  <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>What I ended up doing was writing a function that performs  group element exponentiation, I wanted to know is that if there is something like that in the library so I don't have to reprove any lemmas?</p>",
        "id": 224248863,
        "sender_full_name": "Saif Ghobash",
        "timestamp": 1611782305
    },
    {
        "content": "<p><code>import algebra.group_power</code> is what you're missing. There's plenty of API in there too.</p>",
        "id": 224248968,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611782365
    },
    {
        "content": "<p>I think the reason it's not there is that perhaps Lean uses groups to define the naturals or something? This trips a lot of people up.</p>",
        "id": 224249013,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611782394
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Oh perfect that's exactly what I needed, thank you!</p>",
        "id": 224249142,
        "sender_full_name": "Saif Ghobash",
        "timestamp": 1611782438
    }
]