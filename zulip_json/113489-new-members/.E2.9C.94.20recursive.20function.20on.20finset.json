[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"366882\">@Andrew  Souther</span> I tried writing this function directly.  With the way I wrote it, I wouldn't be very excited to prove properties about the function, but maybe it's somehow workable.</p>\n<p>I added enough of the decidable instances to make this computable, so in theory you can <code>#eval</code> it with some concrete examples and see what it outputs.</p>\n<p>I suspect that the best way to work with this definition would be to write lemmas that characterize what it does and then try to forget about its implementation as soon as possible.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.set.finite</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">election_profile</span> <span class=\"o\">(</span><span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">candidates</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">χ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">cpos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">candidates.card</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">voters</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">υ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">ballots</span> <span class=\"o\">:</span> <span class=\"n\">υ</span> <span class=\"bp\">→</span> <span class=\"n\">χ</span> <span class=\"bp\">→</span> <span class=\"n\">χ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">decidable</span> <span class=\"n\">s.nonempty</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">finset.card_pos</span><span class=\"o\">,</span>\n  <span class=\"n\">apply_instance</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">simple_stable_voting'</span> <span class=\"o\">{</span><span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">voters</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">υ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ballots</span> <span class=\"o\">:</span> <span class=\"n\">υ</span> <span class=\"bp\">→</span> <span class=\"n\">χ</span> <span class=\"bp\">→</span> <span class=\"n\">χ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">χ</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">decidable_rel</span> <span class=\"o\">(</span><span class=\"n\">ballots</span> <span class=\"n\">v</span><span class=\"o\">)]</span> <span class=\"o\">:</span>\n  <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">candidates</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">candidates.card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cpos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">finset</span> <span class=\"n\">χ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">cpos</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">nat.not_lt_zero</span> <span class=\"n\">_</span> <span class=\"n\">cpos</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">elim</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"n\">candidates</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">candidates</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">cands</span> <span class=\"n\">hn</span> <span class=\"n\">cpos</span> <span class=\"o\">:=</span>\n<span class=\"k\">let</span>\n  <span class=\"c1\">-- whether c wins when candidate rem is removed</span>\n  <span class=\"n\">still_wins</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">rem</span> <span class=\"o\">:</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">rem_prop</span> <span class=\"o\">:</span> <span class=\"n\">rem</span> <span class=\"bp\">∈</span> <span class=\"n\">cands</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n    <span class=\"n\">c</span> <span class=\"bp\">∈</span> <span class=\"n\">simple_stable_voting'</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cands.erase</span> <span class=\"n\">rem</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finset.card_erase_of_mem</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">rem_prop</span><span class=\"o\">],</span> <span class=\"o\">})</span>\n          <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">omega</span><span class=\"o\">),</span>\n  <span class=\"c1\">-- the margin for candidate c vs c'</span>\n  <span class=\"n\">margin</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">c'</span> <span class=\"o\">:</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">voters.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">ballots</span> <span class=\"n\">v</span> <span class=\"n\">c</span> <span class=\"n\">c'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">voters.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">ballots</span> <span class=\"n\">v</span> <span class=\"n\">c'</span> <span class=\"n\">c</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- the set of pairs (c, c') of candidates such that when c' is removed, c is a winner.</span>\n  <span class=\"n\">viable</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">χ</span> <span class=\"bp\">×</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">finset.image</span> <span class=\"n\">coe</span> <span class=\"bp\">$</span>\n    <span class=\"o\">(</span><span class=\"n\">cands.product</span> <span class=\"n\">cands</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">attach.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">cands.product</span> <span class=\"n\">cands</span><span class=\"o\">),</span>\n      <span class=\"n\">still_wins</span> <span class=\"n\">p.1.1</span> <span class=\"n\">p.1.2</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">p_property</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">p_property.2</span><span class=\"o\">,</span> <span class=\"o\">})),</span>\n  <span class=\"c1\">-- find the maximal margin (using 0 if viable is somehow empty)</span>\n  <span class=\"n\">best_margin</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">viable.nonempty</span> <span class=\"k\">then</span> <span class=\"n\">viable.sup'</span> <span class=\"n\">hn</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">margin</span> <span class=\"n\">p.1</span> <span class=\"n\">p.2</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n<span class=\"k\">in</span> <span class=\"n\">finset.image</span> <span class=\"n\">prod.fst</span> <span class=\"bp\">$</span> <span class=\"n\">viable.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">margin</span> <span class=\"n\">p.1</span> <span class=\"n\">p.2</span> <span class=\"bp\">=</span> <span class=\"n\">best_margin</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">simple_stable_voting</span> <span class=\"o\">{</span><span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">prof</span> <span class=\"o\">:</span> <span class=\"n\">election_profile</span> <span class=\"n\">χ</span> <span class=\"n\">υ</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">χ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">decidable_rel</span> <span class=\"o\">(</span><span class=\"n\">prof.ballots</span> <span class=\"n\">v</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">χ</span> <span class=\"o\">:=</span>\n<span class=\"n\">simple_stable_voting'</span> <span class=\"n\">prof.voters</span> <span class=\"n\">prof.ballots</span> <span class=\"n\">prof.candidates.card</span> <span class=\"n\">prof.candidates</span> <span class=\"n\">rfl</span> <span class=\"n\">prof.cpos</span>\n</code></pre></div>",
        "id": 262255805,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1637522435
    },
    {
        "content": "<p>I was a few steps away from a working definition, but it looks like you solved some problems I was facing <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> . <br>\nThanks Kyle, I'll study this code and work towards a definition that may be more convenient for proving theorems.</p>",
        "id": 262256402,
        "sender_full_name": "Andrew  Souther",
        "timestamp": 1637523257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"366882\">Andrew  Souther</span> has marked this topic as resolved.</p>",
        "id": 262256403,
        "sender_full_name": "Notification Bot",
        "timestamp": 1637523263
    }
]