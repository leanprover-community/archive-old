[
    {
        "content": "<p>Whoops!  I missed that, and you're right!  This works now:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">tactic.interactive.label</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">ident</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">texpr</span><span class=\"o\">)</span>\n    <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">e</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.i_to_expr</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.pose</span> <span class=\"n\">s</span> <span class=\"n\">none</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n  <span class=\"n\">s</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.get_local</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"n\">t</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.i_to_expr</span> <span class=\"bp\">```</span><span class=\"o\">(</span><span class=\"bp\">%%</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"bp\">%%</span><span class=\"n\">s</span><span class=\"o\">),</span>\n  <span class=\"n\">h</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.assert</span> <span class=\"bp\">`</span><span class=\"n\">h</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.reflexivity'</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.rewrite_target</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.clear</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 289784011,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1657919563
    },
    {
        "content": "<p>Does that seem like roughly the right amount of code, or are there obvious simplifications I could make?</p>",
        "id": 289784073,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1657919619
    },
    {
        "content": "<p>Are you aware of the built-in <code>generalize</code> tactic?</p>",
        "id": 289784289,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657919749
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.generalize\">docs#tactic.interactive.generalize</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.generalize\">docs#tactic.generalize</a></p>",
        "id": 289784390,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657919792
    },
    {
        "content": "<p>Ah, nice, that roughly does the whole thing.  Is there a version that rewrites the hypotheses too?</p>",
        "id": 289784652,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1657919979
    },
    {
        "content": "<p>I guess I can generalize to do the target, and then rewrite each hypothesis (except the new one) with the new one.</p>",
        "id": 289784830,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1657920111
    },
    {
        "content": "<p>I found <a href=\"https://leanprover-community.github.io/mathlib_docs/tactic/interactive.html#tactic.interactive.generalize_hyp\">generalize_hyp</a>, so I'm all set.  Thank you!</p>",
        "id": 289787397,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1657921695
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"514145\">Geoffrey Irving</span> has marked this topic as resolved.</p>",
        "id": 289787414,
        "sender_full_name": "Notification Bot",
        "timestamp": 1657921713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"514145\">@Geoffrey Irving</span> are you aware of the <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#set\">set</a> tactic, btw? it seems like exactly what you were looking for in the first place</p>",
        "id": 289796157,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1657928756
    },
    {
        "content": "<p>A small golf:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">h</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.assert</span> <span class=\"bp\">`</span><span class=\"n\">h</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.reflexivity'</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.rewrite_target</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.clear</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>can be replaced by</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.solve_aux</span> <span class=\"n\">t</span> <span class=\"n\">tactic.reflexivity'</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.rewrite_target</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>Since you only want the expression for the proof term of <code>h</code>, you do not need to introduce the statement to local context, rewrite and then clear: <code>solve_aux statement proof</code> gives you a pair whose second element is the proof.</p>",
        "id": 289809431,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1657948518
    },
    {
        "content": "<p>Indeed, set is exactly what I want.  Thank you!</p>",
        "id": 289822610,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1657969400
    }
]