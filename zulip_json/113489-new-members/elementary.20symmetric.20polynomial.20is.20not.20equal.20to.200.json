[
    {
        "content": "<p>Are there any tools in mathlib that can help with this? This tiny detail is surprising resilient to anything I throw at it.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.polynomial.symmetric</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">fintype</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mv_polynomial</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">σ</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">nontrivial</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">add_monoid_algebra.nontrivial</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">esymm_ne_zero</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">card</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">esymm</span> <span class=\"n\">σ</span> <span class=\"n\">R</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">mv_polynomial</span>\n</code></pre></div>",
        "id": 230290814,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1615779254
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"355764\">@Hanting Zhang</span> Can you prove something about <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mv_polynomial.degrees\">docs#mv_polynomial.degrees</a> of <code>esymm</code>?</p>",
        "id": 230291691,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615780271
    },
    {
        "content": "<p>In particular there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mv_polynomial.degrees_add_of_disjoint\">docs#mv_polynomial.degrees_add_of_disjoint</a> which might be relevant (although there doesn't seem to be a version for <code>finset.sum</code> yet)</p>",
        "id": 230291777,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615780350
    },
    {
        "content": "<p>Basically, I guess it might make sense to first show that the polynomials are homogeneous of degree <code>n</code>, and proceed from there</p>",
        "id": 230291811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615780416
    },
    {
        "content": "<p>Ah. I think I can build something out of this. Your suggestions sound much better than the plan I had inside my head. <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span> Thanks!</p>",
        "id": 230293825,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1615782494
    }
]