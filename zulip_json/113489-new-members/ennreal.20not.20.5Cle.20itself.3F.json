[
    {
        "content": "<p>Hello everyone. I am new to lean and a small problem is currently puzzling me:  I cannot find how to complete the following goal,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ennreal</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n\n<p>Replacing sorry by refl or by simp fails, and I don't understand why.<br>\nThanks!</p>",
        "id": 212601374,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1602096108
    },
    {
        "content": "<p>Hmm, both should work</p>",
        "id": 212601507,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602096162
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.ennreal</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ennreal</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">exact</span> <span class=\"n\">le_refl</span> <span class=\"n\">x</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n\n<p>this works...</p>",
        "id": 212601929,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602096372
    },
    {
        "content": "<p>But I can't replace the <code>exact le_refl x</code> by <code>apply le_refl</code></p>",
        "id": 212601956,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602096389
    },
    {
        "content": "<p>very strange</p>",
        "id": 212601963,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602096392
    },
    {
        "content": "<p>Thank you. At least I can get the other parts of my code to work. But it is indeed very strange.</p>",
        "id": 212602262,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1602096550
    },
    {
        "content": "<p>Presumably the apply bug. Does <code>refl</code> use <code>apply</code> perhaps?</p>",
        "id": 212602385,
        "sender_full_name": "Reid Barton",
        "timestamp": 1602096609
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ennreal</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refl'</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 212602516,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602096699
    },
    {
        "content": "<p>Nice work Rémy, you (re)discovered an annoying bug which is surprisingly hard to fix :-) Fortunately we have workarounds</p>",
        "id": 212622373,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1602106568
    }
]