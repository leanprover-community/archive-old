[
    {
        "content": "<p>Based on a discussion in <a href=\"#narrow/stream/113489-new-members/topic/Starting.20to.20contribute.20to.20mathlib\">this \"starting to contribute to mathlib\" thread</a>, I wanna try to prove the Hilbert Projection Theorem in Lean. <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> </p>\n<p>however I can't actually find the definition of a hilbert space.<br>\nThere is a definition of an inner product space in <code>analysis/normed_space/real_inner_product</code>, but I can't find any <code>hilbert_space</code></p>\n<p>What should I do? ( note this is my first attempt at contributing to mathlib)</p>",
        "id": 207053826,
        "sender_full_name": "Chris M",
        "timestamp": 1597551203
    },
    {
        "content": "<p>What about this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">normed_space</span><span class=\"bp\">.</span><span class=\"n\">real_inner_product</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">uniform_space</span><span class=\"bp\">.</span><span class=\"n\">cauchy</span>\n\n<span class=\"n\">class</span> <span class=\"n\">hilbert_space</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">inner_product_space</span> <span class=\"n\">T</span><span class=\"o\">:=</span>\n<span class=\"n\">compl</span> <span class=\"o\">:</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>where sorry formalizes that the distance metric w.r.t. the inner product is complete.</p>",
        "id": 207054586,
        "sender_full_name": "Chris M",
        "timestamp": 1597552599
    },
    {
        "content": "<p>(Btw, what is the difference between <code>Type*</code> and <code>Type u</code>?)</p>",
        "id": 207054594,
        "sender_full_name": "Chris M",
        "timestamp": 1597552627
    },
    {
        "content": "<p>I think there are some discussions about how to define hilbert spaces in suitable generality. See <a href=\"#narrow/stream/116395-maths/topic/Complex.20inner.20product\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Complex.20inner.20product</a></p>",
        "id": 207054665,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597552783
    },
    {
        "content": "<p><code>Type*</code> is the same as <code>Type _</code>, that is, it infers a suitable universe or universe variable to put there. You should prefer it over <code>Type u</code> if you can use it, since it doesn't require declaring a universe variable <code>u</code>. But they have the same effect in the end</p>",
        "id": 207054712,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597552850
    },
    {
        "content": "<p>Does it make sense for me to just work on a real hilbert space, and have it refactor later? Or should I wait with this project entirely until there is actually a general definition of a Hilbert space?</p>",
        "id": 207055503,
        "sender_full_name": "Chris M",
        "timestamp": 1597554375
    },
    {
        "content": "<p>If you have theorems you want to prove, then do what you can. It will serve as a guide for the next iteration, so it won't be wasted work even if there is a major refactor later</p>",
        "id": 207057922,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597559107
    },
    {
        "content": "<p>I had in mind just to do it for real Hilbert spaces, yes.  Similarly, Hahn-Banach was initially done only for real Banach spaces, although <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> has been <a href=\"#narrow/stream/144837-PR-reviews/topic/.233658.20extend.20Hahn-Banach.20from.20.E2.84.9D.20to.20.E2.84.82\">looking at</a> how to extend it to complex Banach spaces.</p>",
        "id": 207074165,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597588845
    },
    {
        "content": "<p>Actually, I'm really sorry <span class=\"user-mention\" data-user-id=\"284606\">@Chris M</span> , it seems like the Hilbert projection theorem in this setting already exists in mathlib!  <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exists_norm_eq_infi_of_complete_subspace\">docs#exists_norm_eq_infi_of_complete_subspace</a>, <a href=\"https://github.com/leanprover-community/mathlib/issues/1248\">#1248</a>.  The undergrad math list needs to be updated here.</p>",
        "id": 207074526,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597589534
    },
    {
        "content": "<p>As does orthogonal projection.  The good news is that that means that everything is in place to do the <a href=\"https://en.wikipedia.org/wiki/Riesz_representation_theorem\">Riesz representation theorem</a>, the next thing on the list.</p>",
        "id": 207074741,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597589965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> could you please edit <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/blob/newsite/data/overview.yaml\">https://github.com/leanprover-community/leanprover-community.github.io/blob/newsite/data/overview.yaml</a> and <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/blob/newsite/data/undergrad.yaml\">https://github.com/leanprover-community/leanprover-community.github.io/blob/newsite/data/undergrad.yaml</a> You don't even need to use git, you can do it online entirely (there is an edit button in the upper right corner). I don't mind doing it but I would prefer more people realize  this is easy and they can do it.</p>",
        "id": 207077099,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597593732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113489-new-members/topic/Hilbert.20Projection.20Theorem/near/207074741\">said</a>:</p>\n<blockquote>\n<p>As does orthogonal projection.  The good news is that that means that everything is in place to do the <a href=\"https://en.wikipedia.org/wiki/Riesz_representation_theorem\">Riesz representation theorem</a>, the next thing on the list.</p>\n</blockquote>\n<p>I'm somewhat concerned that the Riesz representation theorem is a bit hard. It's not totally out of reach but it relies on some abstractions that aren't intuitive to me. I could do it, but I predict it'll be a bit inefficient as a first project (I'd have to spend some more time studying Hilbert spaces, as opposed to focusing on the formalization).</p>\n<p>I'd still be willing to do it if there aren't better options. (see my <a href=\"#narrow/stream/113489-new-members/topic/Starting.20to.20contribute.20to.20mathlib\">Starting to contribute to mathlib</a> thread)</p>",
        "id": 207102968,
        "sender_full_name": "Chris M",
        "timestamp": 1597633944
    },
    {
        "content": "<p>OK, a few more ideas: (1) the double dual of a finite-dimensional normed space is itself (should be fairly easy using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map.continuous_of_finite_dimensional\">docs#linear_map.continuous_of_finite_dimensional</a>), (2) Stone-Weierstrass theorem (mathlib has the Banach algebra <code>C(X)</code>, you'd need to define \"separates points\"), (3) Mertens' theorem on the product of two series, (4) Riemann's theorem on rearranging series.  If you wanted something more geometric, <span class=\"user-mention\" data-user-id=\"266253\">@Joseph Myers</span>  might have some ideas (my first thought would be the theorem that a distance-preserving self-map of the plane is determined by its values at 3 points, but I don't know whether the preliminaries exist yet).</p>",
        "id": 207106012,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597638440
    },
    {
        "content": "<p>For Stone-Weierstrass, the proofs I know fall into two camps:</p>\n<ol>\n<li>prove the Weierstrass theorem first (e.g. develop Bernstein polynomials)</li>\n<li>avoid it somehow, but not trivially. e.g. there's a direct proof in Pedersen's \"Analysis Now\", but from memory it requires knowing about uniform convergence of a Taylor series.</li>\n</ol>",
        "id": 207106335,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1597638905
    },
    {
        "content": "<p>The proof I was first taught involved an explicit approximation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|x|</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span> by a sequence of polynomials.</p>",
        "id": 207106589,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597639291
    },
    {
        "content": "<p>But yes, I think there is some meat hidden behind the bland statement :)</p>",
        "id": 207106635,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597639330
    },
    {
        "content": "<p>(mixed metaphors alert! ...)</p>",
        "id": 207106723,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597639503
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> , I'll look into those, (I don't know the theorem statements), but I don't have time right now, so let me just ask this question: Does it make sense for me to go through a couple of textbooks, and list quite a few theorems from them myself, and post them here as suggestions? Is this a reasonable thing to do, or is there already so much formalized regarding Linear algebra, etc, that this wouldn't generate anything useful? (e.g. maybe mathlib is only intersted in \"important\" theorems, or something)</p>",
        "id": 207110920,
        "sender_full_name": "Chris M",
        "timestamp": 1597646177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284606\">Chris M</span> <a href=\"#narrow/stream/113489-new-members/topic/Hilbert.20Projection.20Theorem/near/207110920\">said</a>:</p>\n<blockquote>\n<p>is there already so much formalized regarding Linear algebra, etc, that this wouldn't generate anything useful? </p>\n</blockquote>\n<p>Yes, this is pretty much my concern.  But feel free to try it!  I will repeat Scott and Kevin's advice, that the ideal is a theorem for which all the definitions already exist.</p>\n<blockquote>\n<p>(e.g. maybe mathlib is only intersted in \"important\" theorems, or something)</p>\n</blockquote>\n<p>This, not at all.</p>",
        "id": 207111143,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597646498
    },
    {
        "content": "<p>The thing I'm concerned about with some of the more complex theorems is that I'll end up being slowed down a lot by not yet knowing how mathlib structures things. Does it make sense for me to be very hacky about it, even introducing definitions  that would not be library-quality definitions, with the expectation of later cleaning it up with help on zulip?</p>",
        "id": 207111462,
        "sender_full_name": "Chris M",
        "timestamp": 1597646971
    },
    {
        "content": "<p>Well, this is what I mean about avoiding theorems which involve new definitions.  The examples I and others mentioned would (mostly, hopefully) not require them.</p>",
        "id": 207111562,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597647071
    },
    {
        "content": "<p>I think \"a distance-preserving self-map of the plane is determined by its values at 3 points\" (those points need to be affinely independent) splits into a few pieces, some present in mathlib and some not.</p>\n<ol>\n<li>\n<p>An isometry of Euclidean spaces is an affine map. If surjective, we have <code>analysis/normed_space/mazur_ulam</code>. So either (a) state in a form requiring surjectivity, (b) prove surjectivity for any isometry from a finite-dimensional Euclidean space to one of the same dimension (or some such statement in a more general context) or (c) prove that isometries of Euclidean spaces are affine maps whether or not surjective. (I have (c), but haven't PRed it because it was pointed out that it should be done in a more general context, for any affine spaces over normed spaces with strictly convex balls, rather than relying on the inner product.)</p>\n</li>\n<li>\n<p>Affine maps interact with affine combinations as expected (not present, but should be easy). Thus given the values of an affine map on some points, its values on all points in their affine span are determined.</p>\n</li>\n<li>\n<p>Any affinely independent spanning set (in an affine space over a vector space) has cardinality one more than the dimension, and in the finite-dimensional case any affinely independent set with cardinality one more than the dimension spans the whole space. (See the recent discussions with Patrick; these results should be derived from the corresponding results for vector spaces.)</p>\n</li>\n</ol>",
        "id": 207309969,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1597781557
    },
    {
        "content": "<p>Also note that nothing is specific to dimension 2 here (except that \"3 independent points\"  should be replaced by \"dim + 1 independent points\".</p>",
        "id": 207318555,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597785926
    },
    {
        "content": "<p>My routine was disrupted by travel but I should be back  on this now. My current favorite is \"the double dual of a finite-dimensional normed space is itself\". Though I presume you mean \"is isomorphic to itself\"?</p>\n<p>Also, would the \"permutation group\" stuff in \"undergrad math missing from Lean\" be doable? The topics listed there are : decomposition into transpositions, decomposition into cycles with disjoint support, alternating group.</p>",
        "id": 207599226,
        "sender_full_name": "Chris M",
        "timestamp": 1597983363
    },
    {
        "content": "<p>By the way, I've noticed that it seems the majority of topics listed on that page are definitions not theorems, is that right?</p>\n<p>For example, in linear algebra, </p>\n<ul>\n<li>Fundamentals: direct sum </li>\n<li>Duality: transpose of a linear map, orthogonality</li>\n<li>Finite-dimensional vector spaces : rank of a set of vectors, rank of a system of linear equations,</li>\n</ul>",
        "id": 207599262,
        "sender_full_name": "Chris M",
        "timestamp": 1597983454
    },
    {
        "content": "<p>I can't really comment on this other than to point you toward <code>group_theory.perm.cycles</code>, which contains <code>equiv.perm.cycle_factors</code>, and <code>group_theory.perm.sign</code>, which contains <code>equiv.perm.swap_factors</code>.  I don't know what's entailed for doing symmetric groups.</p>",
        "id": 207599818,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597984233
    },
    {
        "content": "<p>I think that means the symmetric group stuff is basically done, but the alternating group of permutations of a given set could be defined as the kernel of the sign map, then its cardinality computed (when finite), and results like \"the alternating group is generated by 3-cycles\" would be great to have.</p>",
        "id": 207599972,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597984558
    },
    {
        "content": "<p>The way that missing undergrad math page was made was a translation of a french syllabus if i remember correctly, so while the things listed are definitions they are really topic titles I think, so if one makes these definitions I think its implied that we should eventually have all \"undergraduate level\" theorems about those definitions.</p>",
        "id": 207600068,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597984683
    },
    {
        "content": "<p>Found the group instance: it's <code>equiv.perm.perm_group</code> in <code>data.equiv.basic</code>.  I wonder if the permutation representation of a group (Cayley's theorem) is already in mathlib somewhere, or the characterization of conjugacy classes of a symmetric group as partitions of n.</p>",
        "id": 207600148,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597984919
    },
    {
        "content": "<p>I don't think we have either (but I could be wrong about the first one). We have partitions of sets and compositions of natural numbers, but not partitions of natural numbers.</p>",
        "id": 207600321,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1597985215
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/Hilbert.20Projection.20Theorem/near/207600068\">said</a>:</p>\n<blockquote>\n<p>The way that missing undergrad math page was made was a translation of a french syllabus if i remember correctly, so while the things listed are definitions they are really topic titles I think, so if one makes these definitions I think its implied that we should eventually have all \"undergraduate level\" theorems about those definitions.</p>\n</blockquote>\n<p>Yes, but I've been advised against starting out with topics that require creating new definitions, hence I stated that.</p>",
        "id": 207600918,
        "sender_full_name": "Chris M",
        "timestamp": 1597986317
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> was addressing was this question of yours:</p>\n<blockquote>\n<p>By the way, I've noticed that it seems the majority of topics listed on that page are definitions not theorems, is that right?</p>\n</blockquote>\n<p>The list might be definitions, but I guess the intent is to fill in all of the associated theorems.  For example, the definitions of symmetric groups, cycles, and signs of permutations exist, but mathlib could probably stand to have a lot more textbook theorems about them.</p>",
        "id": 207601186,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597986814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> , yes that's how I interpreted it. sorry for being unclear, what I meant to say is: I've been advised against picking topics that require new definitions, and I'm assuming that these topics do require them?<br>\nOr are you saying that the fact that the topic says e.g. \"transpose of a linear map\", doesn't mean that the transpose of a linear map isn't defined? You're saying it could still be the case that these things are defined despite being stated in the list?</p>",
        "id": 207612194,
        "sender_full_name": "Chris M",
        "timestamp": 1598000122
    },
    {
        "content": "<p>I'd like to do Cayley's theorem or \"characterization of conjugacy classes of a symmetric group as partitions of n\". I've searched mathlib for \"Cayley\" and Cayley's theorem doesn't seem to be there. Can I just start doing this?</p>",
        "id": 207706321,
        "sender_full_name": "Chris M",
        "timestamp": 1598069260
    },
    {
        "content": "<p>If I search \"symmetric group\" nothing comes up.</p>",
        "id": 207706589,
        "sender_full_name": "Chris M",
        "timestamp": 1598069817
    },
    {
        "content": "<p>All I know is that <code>perm X</code> has a group instance (I mention where it is a few messages up).  The group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> would be <code>perm (fin n)</code>.  I'd say just go ahead and try to formalize these things and check in as you go.  (You might try things generally for <code>X : Type*</code> with <code>[fintype X]</code> as needed.  Cayley's theorem can be stated as there being an injective homomorphism <code>G -&gt; perm G</code>, which is true even if <code>G</code> is infinite.  For conjugacy classes, you'll need the <code>fintype</code>.)</p>",
        "id": 207709003,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598074567
    }
]