[
    {
        "content": "<p>I want to use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mv_polynomial.prod_X_add_C_coeff\">docs#mv_polynomial.prod_X_add_C_coeff</a> that computes the expression of the coefficients of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Π</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Pi_i (X + r_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> in terms of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">r_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">mv_polynomial.prod_X_add_C_coeff</span>  <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span>  <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">)</span>  <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">σ</span><span class=\"o\">]</span>  <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span>  <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">fintype.card</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"o\">(</span><span class=\"n\">finset.univ.prod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">),</span> <span class=\"n\">polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">polynomial.X</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">finset.powerset_len</span> <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"n\">σ</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"n\">finset.univ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">σ</span><span class=\"o\">),</span> <span class=\"n\">t.prod</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">),</span> <span class=\"n\">r</span> <span class=\"n\">i</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>I want to use this with the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">r_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>'s being the roots (with multiplicity) of  some fixed polynomial <code>p</code>. This is given as a <code>multiset</code> by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.roots\">docs#polynomial.roots</a>.  Thus I need to construct a <code>fintype σ</code> and a map <code>r : σ → R</code> that enumerates the element of the  multiset <code>R :=  polynomial.roots p</code>. So far, I have been unsuccessful so any hint is welcome.</p>",
        "id": 286717908,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1655656018
    },
    {
        "content": "<p>Maybe you want <code>{x // x ∈ p.roots}</code> (if you're not familiar, <code>p.roots</code> is short for <code>polynomial.roots p</code>). There's a fintype instance for this (<a href=\"https://leanprover-community.github.io/mathlib_docs/data/fintype/basic.html#multiset.subtype.fintype\">https://leanprover-community.github.io/mathlib_docs/data/fintype/basic.html#multiset.subtype.fintype</a>) and the <code>r</code> map would be <code>coe</code> when the types are clear (and it'll be defeq to <code>subtype.val</code>).</p>",
        "id": 286719366,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1655658160
    },
    {
        "content": "<p>Yes, that seems to work. Thanks a lot!</p>",
        "id": 286719519,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1655658434
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"488648\">Xavier Roblot</span> has marked this topic as resolved.</p>",
        "id": 286719525,
        "sender_full_name": "Notification Bot",
        "timestamp": 1655658441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"488648\">Xavier Roblot</span> has marked this topic as resolved.</p>",
        "id": 287184602,
        "sender_full_name": "Notification Bot",
        "timestamp": 1655988783
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> <span class=\"user-mention\" data-user-id=\"488648\">@Xavier Roblot</span> Here's a PR for enumerating multisets: <a href=\"https://github.com/leanprover-community/mathlib/pull/15094\">#15094</a></p>\n<p>I'd appreciate it if someone took it over, but if not I'll oversee getting it into mathlib.</p>",
        "id": 288284967,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1656788431
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> <span class=\"user-mention\" data-user-id=\"488648\">@Xavier Roblot</span> Just in case you want it, <a href=\"https://github.com/leanprover-community/mathlib/pull/15094\">#15094</a> has been merged.</p>",
        "id": 290050371,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658201853
    },
    {
        "content": "<p>Thanks for that, but now I don't know what we should do... Should we use one of the existing PR of  Junyan  <a href=\"https://github.com/leanprover-community/mathlib/pull/14908\">#14908</a> or mine <a href=\"https://github.com/leanprover-community/mathlib/pull/15008\">#15008</a> for the proof  of  the <code>multiset</code> version of <code>prod_X_add_C_eq_sum_esymm</code> ? Or should we use your PR to do a new proof from the existing proof for <code>fintype</code>...</p>",
        "id": 290090908,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1658233696
    },
    {
        "content": "<p>There's plenty of good stuff in <a href=\"https://github.com/leanprover-community/mathlib/pull/15008\">#15008</a> we should get in whatever we decide</p>",
        "id": 290100249,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658238153
    }
]