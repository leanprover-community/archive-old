[
    {
        "content": "<p>I was looking at the Yatima compiler this afternoon because it looked neat (<a href=\"https://github.com/yatima-inc/yatima-lang\">https://github.com/yatima-inc/yatima-lang</a>). The main script is here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.Cid</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.Univ</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.Expr</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.Const</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.Env</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.FromLean</span>\n\n  <span class=\"c1\">-- forcing compilation:</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.Ipld.DagCbor</span>\n  <span class=\"kn\">import</span> <span class=\"n\">Yatima.YatimaSpec</span>\n\n  <span class=\"kn\">open</span> <span class=\"n\">Yatima.Compiler.FromLean</span>\n\n  <span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span> <span class=\"bp\">→</span> <span class=\"n\">IO</span> <span class=\"n\">UInt32</span>\n    <span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"s2\">\"build\"</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"k\">let</span> <span class=\"n\">input</span> <span class=\"bp\">←</span> <span class=\"n\">IO.FS.readFile</span> <span class=\"o\">⟨</span><span class=\"n\">f</span><span class=\"o\">⟩</span>\n      <span class=\"n\">IO.println</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"Input: {input}\"</span>\n      <span class=\"n\">Lean.initSearchPath</span> <span class=\"bp\">$</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.findSysroot</span>\n      <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">env</span><span class=\"o\">,</span> <span class=\"n\">ok</span><span class=\"o\">)</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.Elab.runFrontend</span> <span class=\"n\">input</span> <span class=\"bp\">.</span><span class=\"n\">empty</span> <span class=\"n\">f</span> <span class=\"bp\">`</span><span class=\"n\">main</span>\n      <span class=\"k\">if</span> <span class=\"n\">ok</span> <span class=\"k\">then</span>\n        <span class=\"k\">match</span> <span class=\"n\">extractEnv</span> <span class=\"n\">env.constants</span> <span class=\"k\">with</span>\n        <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">ok</span> <span class=\"n\">env</span> <span class=\"bp\">=&gt;</span> <span class=\"c1\">--todo</span>\n          <span class=\"n\">return</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">error</span> <span class=\"n\">e</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"n\">IO.println</span> <span class=\"n\">e</span>\n          <span class=\"n\">return</span> <span class=\"mi\">1</span>\n      <span class=\"k\">else</span>\n        <span class=\"n\">IO.eprintln</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"Lean frontend failed on file {f}\"</span>\n        <span class=\"n\">return</span> <span class=\"mi\">1</span>\n    <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">return</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>I've made a one-line change, namely adding the <code>IO.println</code> call to dump the input file path. It builds fine, but when I try to compile the example <code>Foo.lean</code> file with <code>./build/bin/yatima Foo.lean</code>, there is no output whatsoever. This seems very strange to me, I don't see how the <code>println</code> call is being skipped.</p>",
        "id": 284385971,
        "sender_full_name": "Malcolm Langfield",
        "timestamp": 1653927253
    },
    {
        "content": "<p>Using <code>main</code> branch of linked library, commit <code>8e4ffd919bda9f2e7d8fea789db8a0d79ae9a656</code>.</p>",
        "id": 284386027,
        "sender_full_name": "Malcolm Langfield",
        "timestamp": 1653927300
    }
]