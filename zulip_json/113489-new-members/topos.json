[
    {
        "content": "<p>Hello everyone! I'm trying out the Zulip chat for the first time, and trying to build my first lean project. I wanted to do something involving toposes, and so have tried Mehta's topos build found here: <a href=\"https://github.com/b-mehta/topos\">https://github.com/b-mehta/topos</a></p>\n<p>I'm getting a lot of \"failed to synthesize type class\" errors, though. Is this code obsolete (e.g. written for Lean 2?) or are toposes best sought elsewhere? Thanks, in advance!</p>\n<p>I see here that evidently sites are already in mathlib...</p>",
        "id": 265634751,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640047933
    },
    {
        "content": "<p>It's definitely not lean 2 code, but lean 3 moves pretty fast so bitrot would not surprise me</p>",
        "id": 265635410,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1640048432
    },
    {
        "content": "<p>cc: <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span></p>",
        "id": 265635441,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1640048460
    },
    {
        "content": "<p>I haven't kept up to date with maintaining this, sorry! It could still build on an earlier version of Lean, it last worked on 3.23.0. Sites are already in mathlib, and I'm pretty sure that's one of the things causing the build errors.</p>",
        "id": 265635615,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1640048629
    },
    {
        "content": "<p>The word topos has two different definitions in mathematics -- which one are you interested in?</p>",
        "id": 265637461,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640050427
    },
    {
        "content": "<p>To clarify: the two options are elementary toposes (finite limits, cartesian closed, subobject classifier) or Grothendieck/sheaf toposes (sheaves on a site), with the latter being a special case of the former. Bhavik's <code>topos.lean</code> takes the first definition.</p>",
        "id": 265769147,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1640152661
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265637461\">said</a>:</p>\n<blockquote>\n<p>The word topos has two different definitions in mathematics -- which one are you interested in?</p>\n</blockquote>\n<p>Sorry everyone! Still slow on the uptake with the chat. I'm interested in Grothendieck toposes (so I may not need the 'topos' file that hasn't been updated.) Thank you all for the warm welcome.</p>\n<p>I'm very new to Lean (I've completed natural number game and most of the real analysis \"game\" and have watched quite a few videos over the past month) and am going to try to formalize a certain topos to continue getting experience with the system. I hope to attend LFTCM at ICERM in July...but hopefully by then will know a bit more. Right now, my code is awful...</p>",
        "id": 265807002,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640181109
    },
    {
        "content": "<p>Yeah by far the best way to learn how to use Lean is just to dive in and try and make an object which you understand very well mathematically</p>",
        "id": 265824111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640190711
    },
    {
        "content": "<p>For example, can you make the function which takes as input a topological space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and spits out the type of all sheaves of types on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>?</p>",
        "id": 265824225,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640190764
    },
    {
        "content": "<p>AKA the class of all sheaves of sets on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span></p>",
        "id": 265824303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640190820
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265824111\">said</a>:</p>\n<blockquote>\n<p>Yeah by far the best way to learn how to use Lean is just to dive in and try and make an object which you understand very well mathematically</p>\n</blockquote>\n<p>Thanks! I'm happy to know that I'm not being too reckless by trying to dive in like this! I will try  your suggested exercise. Presently I'm doing something that is perhaps even more lowbrow: I'm trying to construct a category consisting of a single object and whose morphisms are given by the multiplicative semigroup of natural numbers. I'm hoping to gain some proficiency with Lean by stepping this up gradually in order to formalize the Connes-Consani Arithmetic Site. I am wondering if geometric morphisms appear anywhere here, yet? I'm particularly looking forward to trying to formalize the points of the associated topos.</p>\n<p>(Getting experience using \"punit\" <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> )</p>\n<p>Thank you again for the exercise...</p>",
        "id": 265826965,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640192306
    },
    {
        "content": "<p>We'll have adeles soon enough -- I have a post-doc <span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> working on them. <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> is working on tropical geometry. I don't know if we have the completed zeta function but I don't see any obstruction to having it -- I believe we can now do the integrals to define the Gamma function. <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> how far away are we from a holomorphic Gamma function and zeta function on Re(s)&gt;1? We can get categories from partially ordered sets and we have functors. A lot of the stuff is there or pending.</p>",
        "id": 265829271,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640193521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265829271\">said</a>:</p>\n<blockquote>\n<p>We'll have adeles soon enough -- I have a post-doc <span class=\"user-mention silent\" data-user-id=\"406490\">María Inés de Frutos Fernández</span> working on them. <span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> is working on tropical geometry. I don't know if we have the completed zeta function but I don't see any obstruction to having it -- I believe we can now do the integrals to define the Gamma function. <span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> how far away are we from a holomorphic Gamma function and zeta function on Re(s)&gt;1? We can get categories from partially ordered sets and we have functors. A lot of the stuff is there or pending.</p>\n</blockquote>\n<p>Very exciting! So this might be even closer than I had hoped to realizing the identification of the points with the Adèle class space. Great!</p>",
        "id": 265829445,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640193603
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265829271\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> how far away are we from a holomorphic Gamma function and zeta function on Re(s)&gt;1?</p>\n</blockquote>\n<p>The main technical gap (apart from complex analysis) is showing that the compact open topology on a compact space is the same as the sup-norm topology, I think <a href=\"https://github.com/leanprover-community/mathlib/pull/10967\">#10967</a> nearly does this.</p>",
        "id": 265831193,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1640194528
    },
    {
        "content": "<p>We can already define zeta as a bare function on Re(s)&gt;1, and presumably we can do this for Gamma too? Then the questions are proving continuity and holomorphicity.</p>",
        "id": 265831348,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640194606
    },
    {
        "content": "<p>The point I mentioned is what's needed for continuity.</p>",
        "id": 265831381,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1640194635
    },
    {
        "content": "<p>And, once Yury's stuff is in, it will also be all that's needed for holomorphicity too.</p>",
        "id": 265831419,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1640194657
    },
    {
        "content": "<p>Nice :-)</p>",
        "id": 265831443,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640194668
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462733\">@Jon Bannon</span> formalizing the definition of Connes-Consani's arithmetic site should be a very doable project. Mathlib has the category of sheaves on a site (taking values in any category), so you can get the associated topos. We don't yet have the characterization of Grothendieck topoi, or anything about geometric morphisms, unfortunately.</p>",
        "id": 265843861,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640201877
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265843861\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"462733\">Jon Bannon</span> formalizing the definition of Connes-Consani's arithmetic site should be a very doable project. Mathlib has the category of sheaves on a site (taking values in any category), so you can get the associated topos. We don't yet have the characterization of Grothendieck topoi, or anything about geometric morphisms, unfortunately.</p>\n</blockquote>\n<p>Yes this is really not so bad, my above category problem was easily solved using  'single_obj'. I don't think I'm going to be able to go back to non-Lean mathematics after knowing what this thing can do...how much fun is this?</p>",
        "id": 265847388,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640203824
    },
    {
        "content": "<p>Careful... lean will very quickly change how you think about math.</p>",
        "id": 265847709,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640204063
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265847709\">said</a>:</p>\n<blockquote>\n<p>Careful... lean will very quickly change how you think about math.</p>\n</blockquote>\n<p>This really feels like some kind of paradigm shift about to happen...</p>",
        "id": 265848614,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640204648
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265847709\">said</a>:</p>\n<blockquote>\n<p>Careful... lean will very quickly change how you think about math.</p>\n</blockquote>\n<p>Do you mean Lean in particular or formalized mathematics?</p>",
        "id": 265848779,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1640204759
    },
    {
        "content": "<p>Lean is like cocaine: very addictive and it will \"very quickly change how you think about math\"</p>",
        "id": 265848977,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640204857
    },
    {
        "content": "<p>I felt just the same thing in 2018, I felt like I wanted to rewrite my maths research papers in this language instead of writing any more new ones</p>",
        "id": 265865415,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640215075
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265865415\">said</a>:</p>\n<blockquote>\n<p>I felt just the same thing in 2018, I felt like I wanted to rewrite my maths research papers in this language instead of writing any more new ones</p>\n</blockquote>\n<p>Exactly!!! I'm in operator algebras...there is a huge amount to do here in order to just get started formalizing my old papers...</p>",
        "id": 265873290,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640221879
    },
    {
        "content": "<p>There's a huge amount to do before we can even state the theorems of most of my papers but part of the project right now is to get things like modular forms and automorphic representations defined</p>",
        "id": 265886842,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640239757
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/topos/near/265843861\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"462733\">Jon Bannon</span> formalizing the definition of Connes-Consani's arithmetic site should be a very doable project. Mathlib has the category of sheaves on a site (taking values in any category), so you can get the associated topos. We don't yet have the characterization of Grothendieck topoi, or anything about geometric morphisms, unfortunately.</p>\n</blockquote>\n<p>So @Adam Topaz, it seems that we can easily get the associated topos as you say by something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">J</span> <span class=\"o\">:=</span> <span class=\"n\">grothendieck_topology.trivial</span> <span class=\"o\">(</span><span class=\"n\">single_obj</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span>  <span class=\"n\">hatNx</span> <span class=\"o\">:=</span> <span class=\"n\">Sheaf</span> <span class=\"n\">J</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span>\n</code></pre></div>\n<p>(I'm new to this type theory approach...so my last line might be very wrong...Connes-Consani want to consider sheaves of sets, but I imagine here that this translates into general types? I'm inferring this from the definition of concrete category in Lean.) So this can definitely at least get started. It looks like we need to develop the ability to talk about structures internal to a topos, is this right? (We have something like the tropical semiring here, but I don't know how to make it internal to the topos.)</p>",
        "id": 265916279,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640266149
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462733\">@Jon Bannon</span> Yes, those defs look right to me.</p>",
        "id": 265916849,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640266593
    },
    {
        "content": "<p>Note that you can format code on Zulip by using <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> (← that's a link)</p>",
        "id": 265916863,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640266607
    },
    {
        "content": "<p>We don't have much about stuff internal to a topos at the moment. But Adam has developed a bunch about abelian sheaves recently.</p>",
        "id": 265916906,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640266652
    },
    {
        "content": "<p>It's been a while since I read Connes-Consani, so I'm not up to speed about what would be needed for that.</p>",
        "id": 265916929,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640266672
    },
    {
        "content": "<p>I don't think it's too important but Connes-Consani use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">N</mi><mo>×</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}^\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">×</span></span></span></span></span></span></span></span></span></span></span> (as a multiplicative monoid) and you use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> (again as a multiplicative monoid)..</p>",
        "id": 265921603,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640269954
    },
    {
        "content": "<p>This might be important, actually. I don't think we want a zero. Do you happen to know where I might find \\N^x?</p>\n<p>Also, maybe next it would be worth trying to go and repair some of <a href=\"https://github.com/b-mehta/topos/blob/master/src/internal_category.lean\">https://github.com/b-mehta/topos/blob/master/src/internal_category.lean</a>?</p>",
        "id": 265921742,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640270048
    },
    {
        "content": "<p>To define the structure sheaf, for now you could define it as a sheaf of rings -- we still don't have anything about internal ring objects in a topos</p>",
        "id": 265921743,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640270050
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/pnat\">docs#pnat</a></p>",
        "id": 265921753,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640270057
    },
    {
        "content": "<p>I think (hope) <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pnat\">docs#pnat</a> should have a monoid structure..</p>",
        "id": 265921780,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640270087
    },
    {
        "content": "<p>Great! 'pnat' worked.</p>\n<p>I'll try to define the structure sheaf as a sheaf of rings. Thanks!</p>",
        "id": 265921961,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1640270222
    }
]