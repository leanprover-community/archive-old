[
    {
        "content": "<p>Is there an easier way to define a subtype for a particular inductive constructor than <code>{o : option Î± // option.is_some o}</code>?</p>",
        "id": 197819225,
        "sender_full_name": "James G",
        "timestamp": 1589669807
    },
    {
        "content": "<p>(using options as an example, but say if i've got a bunch more variants)</p>",
        "id": 197819274,
        "sender_full_name": "James G",
        "timestamp": 1589669895
    },
    {
        "content": "<p>Do you need a <code>subtype</code> or a type isomorphic to this subtype?</p>",
        "id": 197819408,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589670124
    },
    {
        "content": "<p>How do you want to use this type?</p>",
        "id": 197819420,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589670191
    },
    {
        "content": "<p>I really only need a type isomorphic to it i suppose</p>",
        "id": 197819484,
        "sender_full_name": "James G",
        "timestamp": 1589670266
    },
    {
        "content": "<p>i'd like to build a second inductive and require that some of its arguments are particular variants of the first inductive</p>",
        "id": 197819556,
        "sender_full_name": "James G",
        "timestamp": 1589670385
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> please</p>",
        "id": 197819557,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589670390
    },
    {
        "content": "<p>oh cool, will do</p>",
        "id": 197819559,
        "sender_full_name": "James G",
        "timestamp": 1589670409
    },
    {
        "content": "<p>Why not make the second inductive take arguments of these constructors and apply the constructors as needed?</p>",
        "id": 197819624,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589670512
    }
]