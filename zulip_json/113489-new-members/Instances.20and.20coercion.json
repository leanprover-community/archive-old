[
    {
        "content": "<p>Suppose I have to structures, <code>foo</code> and <code>bar</code>, such that <code>foo</code> extends <code>bar</code> and there is a coercion from <code>foo</code> to <code>bar</code>. If there's an instance of e.g. <code>comm_group bar</code>, what is the easiest and quickest way to transfer it to <code>foo</code>?</p>",
        "id": 207783834,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1598204980
    },
    {
        "content": "<p><code>instance : comm_group foo := { ..bar.comm_group}</code> maybe</p>",
        "id": 207793631,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598220645
    },
    {
        "content": "<p>I'm not sure your question makes sense. There's content: you need to know that the product of two <code>bar</code>s which came from <code>foo</code>s can be given the additional structure of a <code>foo</code>.</p>",
        "id": 207796217,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598224964
    },
    {
        "content": "<p>Yes you are right but the whole proof of this is in the <code>has_mul</code> instance. Is there not a way to do the rest in like one line? In any case this was the wrong example, I wrote a random class but I was thinking more of classes like <code>partial_order</code>  where you have an induced order and you do not need to prove anything for it.</p>",
        "id": 207838474,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1598273237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"267205\">Nicolò Cavalleri</span> <a href=\"#narrow/stream/113489-new-members/topic/Instances.20and.20coercion/near/207838474\">said</a>:</p>\n<blockquote>\n<p>Yes you are right but the whole proof of this is in the <code>has_mul</code> instance.</p>\n</blockquote>\n<p>Well, no--you have to prove the new function is associative, and that the identity is a <code>foo</code>, and so on. (From the rest of your message I'm guessing <code>foo</code> extends <code>bar</code> with extra <em>properties</em> only and not extra data, but you didn't mention this.)</p>\n<blockquote>\n<p>Is there not a way to do the rest in like one line? In any case this was the wrong example, I wrote a random class but I was thinking more of classes like <code>partial_order</code>  where you have an induced order and you do not need to prove anything for it.</p>\n</blockquote>\n<p>For a partial order, you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/partial_order.lift\">docs#partial_order.lift</a> if you have an injection <code>foo -&gt; bar</code>.<br>\nIn general, this procedure depends on the nature of the class (<code>partial_order</code> here).</p>",
        "id": 207838911,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598273553
    },
    {
        "content": "<p>What about lifting instances through equivalences? Is there a general way to do it under possibly some additional hypotheses or should I manually define a lift for the structures I'm intrested in?</p>",
        "id": 207855946,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1598282164
    },
    {
        "content": "<p>(Are lifts through equivalences generally defined?)</p>",
        "id": 207856028,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1598282206
    }
]