[
    {
        "content": "<p>Hello,</p>\n<p>Is there an easy way to convert a number of type <code>fin n</code> to <code>fin (n+1)</code>. I tried <code>library_search</code> and got <code>fin.succ</code> but this obviously increases the number by one which is not what I want. I just want to cast/coerse/lift the number to a larger fin type.</p>\n<p>I'd prefer a solution that looks very short and doesn't confuse the reader of the code. Something like <code>↑n</code> or <code>n.xxx</code>.</p>\n<p>Thanks,<br>\nTage</p>",
        "id": 307456921,
        "sender_full_name": "Tage Johansson",
        "timestamp": 1667370041
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.cast_le\">docs#fin.cast_le</a> should do.</p>",
        "id": 307457383,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1667370382
    },
    {
        "content": "<p>In fact, both of the following work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">fin.cast_le</span> <span class=\"n\">n.le_succ</span> <span class=\"n\">a</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">fin.of_nat</span> <span class=\"n\">a</span>\n</code></pre></div>",
        "id": 307457801,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1667370663
    },
    {
        "content": "<p>I'd advise for the former. The latter is actually <code>a % succ n</code>, which could cause problems later on.</p>",
        "id": 307457977,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1667370816
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.cast_succ\">docs#fin.cast_succ</a></p>",
        "id": 307458747,
        "sender_full_name": "Reid Barton",
        "timestamp": 1667371429
    }
]