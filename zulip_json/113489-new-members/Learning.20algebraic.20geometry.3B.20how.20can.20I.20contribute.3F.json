[
    {
        "content": "<p>Hi everyone! A friend sent me a link to <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>'s answer on the \"What are perfectoid spaces?\" MO question, which is how I got here. I'm learning algebraic geometry right now. More to the point, I have some experience using Agda and Idris (but not Lean).</p>\n<p>I would enjoy helping to formalise material related to what I'm learning; how can I help?</p>",
        "id": 133214542,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535893006
    },
    {
        "content": "<p>Well, someone needs to prove that the integral closure of a subring is a subring :-)</p>",
        "id": 133214551,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893059
    },
    {
        "content": "<p>what the hell, <span class=\"user-mention\" data-user-id=\"128083\">@Soham Chowdhury</span></p>",
        "id": 133214554,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535893077
    },
    {
        "content": "<p>Here are some projects which the community thinks are accessible:  <a href=\"https://github.com/leanprover-community/mathlib/wiki/Potential-projects\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/wiki/Potential-projects\">https://github.com/leanprover-community/mathlib/wiki/Potential-projects</a></p>",
        "id": 133214594,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> is it ... possible I know you?</p>",
        "id": 133214597,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535893140
    },
    {
        "content": "<p>guess who sent you that link</p>",
        "id": 133214604,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535893148
    },
    {
        "content": "<p>Oh haha</p>\n<blockquote>\n<p>Well, someone needs to prove that the integral closure of a subring is a subring :-)</p>\n</blockquote>\n<p>That sounds like something I can do!</p>",
        "id": 133214651,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535893226
    },
    {
        "content": "<p>Here is a challenging project which would teach you a bunch about Lean: prove that Hom(X,Spec(R)) = Hom(R,O_X(X)).</p>",
        "id": 133214652,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893230
    },
    {
        "content": "<blockquote>\n<p>Here is a challenging project which would teach you a bunch about Lean: prove that Hom(X,Spec(R)) = Hom(R,O_X(X)).</p>\n</blockquote>\n<p>yeah, that...</p>",
        "id": 133214656,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535893245
    },
    {
        "content": "<p>Anthony Bordg also sent me an email saying he might be interested in doing this. As I'm sure you'll know from Idris, there's a big difference between learning alg geom from a book and actually telling Lean about it.</p>",
        "id": 133214665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893286
    },
    {
        "content": "<p>What exactly are you learning?</p>",
        "id": 133214666,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893302
    },
    {
        "content": "<p>Chapter 5 of Vakil's FOAG right now, so I don't know all that much :)</p>",
        "id": 133214761,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535893473
    },
    {
        "content": "<p>But basic commutative algebra sounds like something I could get started on.</p>",
        "id": 133214762,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535893475
    },
    {
        "content": "<p>Several people have been asking what they could work on. Of course embarking on a project like proving a standard algebra theorem with a new theorem prover (and then asking a gazillion questions here) is a really good way to learn how to use the theorem prover, but I am currently slightly worried that whenever someone who knows any algebra asks what they could do, I reply with basically the same reply.</p>",
        "id": 133214812,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893569
    },
    {
        "content": "<p>As far as comm alg goes, we have localisation of rings, a PR for tensor products, a definition of Noetherian rings and modules but 0 theorems (other than the fact that the two usual definitions are equivalent), and enough group theory to make doing basic commutative algebra feasible.</p>",
        "id": 133214820,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893653
    },
    {
        "content": "<p>I guess even if someone \"beats me to\" one of these problems, I'm sure the payoff from becoming comfortable with Lean will make it that much easier to work on harder things like, e.g. the Hom(X, Spec R) theorem you mentioned.</p>",
        "id": 133214872,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535893798
    },
    {
        "content": "<p>Lean has affine schemes but not projective schemes, so you're a little ahead ;-)</p>",
        "id": 133214874,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893801
    },
    {
        "content": "<p>However they're not in mathlib, they're in a stacks project repo on my github <a href=\"https://github.com/kbuzzard/lean-stacks-project\" target=\"_blank\" title=\"https://github.com/kbuzzard/lean-stacks-project\">https://github.com/kbuzzard/lean-stacks-project</a> which I wrote to learn Lean, so this code sometimes leaves some things to be desired...</p>",
        "id": 133214921,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535893864
    },
    {
        "content": "<p>Is the definition of Noetherian modules in mathlib <code>master</code>? I can't seem to find it there.</p>",
        "id": 133214971,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535893982
    },
    {
        "content": "<p>I watched it be born but I don't know where it is. It was only created on Wednesday.</p>",
        "id": 133214978,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535894029
    },
    {
        "content": "<p>it is in a branch on the community fork</p>",
        "id": 133215018,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535894055
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/search?q=noetherian&amp;unscoped_q=noetherian\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/search?q=noetherian&amp;unscoped_q=noetherian\">https://github.com/leanprover-community/mathlib/search?q=noetherian&amp;unscoped_q=noetherian</a> doesn't find it</p>",
        "id": 133215023,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535894102
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/commit/ef5c110626b0197118299071a98ed98e1aead287\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/commit/ef5c110626b0197118299071a98ed98e1aead287\">https://github.com/leanprover-community/mathlib/commit/ef5c110626b0197118299071a98ed98e1aead287</a></p>",
        "id": 133215031,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535894124
    },
    {
        "content": "<p>I believe GitHub search only looks in <code>master</code>.</p>",
        "id": 133215039,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535894142
    },
    {
        "content": "<p>I believe that too, now. We next need that submodules and quotient modules of Noetherian modules are Noetherian. This should be easy if we have some basic facts about there being a natural injection from the submodules of <code>M/N</code> to the submodules of <code>M</code> -- is this in mathlib? <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> Is this something like Proposition 1.1 of A-M?</p>",
        "id": 133215098,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535894249
    },
    {
        "content": "<p>oh, that's only for rings. OK so here's a concrete thing we need: order-preserving bijection between submodules of M/N and submodules of M containing N.</p>",
        "id": 133215139,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535894307
    },
    {
        "content": "<p>Is that there already? Does anyone know? I don't remember seeing it.</p>",
        "id": 133215140,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535894324
    },
    {
        "content": "<p>looks like a Galois correspondence to me</p>",
        "id": 133215344,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535894766
    },
    {
        "content": "<p>I'm going to check back here if (rather, when) I have questions. Thanks for the pointers.</p>",
        "id": 133218718,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535901653
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128083\">@Soham Chowdhury</span> do you know where to start? (hint: the answer is <a href=\"https://leanprover.github.io/theorem_proving_in_lean/\" target=\"_blank\" title=\"https://leanprover.github.io/theorem_proving_in_lean/\">https://leanprover.github.io/theorem_proving_in_lean/</a>).</p>",
        "id": 133219598,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535903597
    },
    {
        "content": "<p>Also see this thread in Zulip: <a href=\"#narrow/stream/116395-maths/subject/noetherian.20modules\" title=\"#narrow/stream/116395-maths/subject/noetherian.20modules\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/subject/noetherian.20modules</a> (You might need to enable the \"maths\" stream somewhere in your settings; but I thought this was done by default nowadays.)</p>",
        "id": 133239139,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535946763
    }
]