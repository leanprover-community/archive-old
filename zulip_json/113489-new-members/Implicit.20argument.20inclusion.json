[
    {
        "content": "<p>I'm trying to write the following lemma:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">nondiscrete_normed_field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">ℝ</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_R_or_C</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">inner_product_space</span> <span class=\"n\">K</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">parallelogram_law_with_norm</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"err\">∥</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"err\">∥</span> <span class=\"bp\">*</span> <span class=\"err\">∥</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"err\">∥</span> <span class=\"bp\">+</span> <span class=\"err\">∥</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"err\">∥</span> <span class=\"bp\">*</span> <span class=\"err\">∥</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"err\">∥</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"err\">∥</span><span class=\"n\">x</span><span class=\"err\">∥</span> <span class=\"bp\">*</span> <span class=\"err\">∥</span><span class=\"n\">x</span><span class=\"err\">∥</span> <span class=\"bp\">+</span> <span class=\"err\">∥</span><span class=\"n\">y</span><span class=\"err\">∥</span> <span class=\"bp\">*</span> <span class=\"err\">∥</span><span class=\"n\">y</span><span class=\"err\">∥</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>The problem is that the norm comes from the inner product, but <code>K</code> never shows up in the lemma statement, which means that Lean never finds the relevant <code>has_norm</code> instance. Is there any way to feed that information in manually?</p>",
        "id": 209103222,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1599231473
    },
    {
        "content": "<p>The reason I'm hoping there's a way to do this without just recopying all the implicit arguments manually is that I have also defined lots of notation for that inner product that I would like to be available here.</p>",
        "id": 209104650,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1599232075
    },
    {
        "content": "<p>Is this what <code>include K</code> is for?</p>",
        "id": 209109061,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1599233998
    },
    {
        "content": "<p>yes</p>",
        "id": 209109453,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1599234195
    },
    {
        "content": "<p>Thanks! Is there also a way to also stop the inclusion after this lemma?</p>",
        "id": 209111416,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1599235212
    },
    {
        "content": "<p><code>omit K</code></p>",
        "id": 209111709,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599235349
    },
    {
        "content": "<p>Alternatively, you can just embed the <code>include</code> within a <code>section ... end</code>; it only lasts for that scope. This has the added bonus that sections are helpful for the reader anyway, while <code>omit</code> adds a burden of keeping track of more things.</p>",
        "id": 209155753,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599270735
    }
]