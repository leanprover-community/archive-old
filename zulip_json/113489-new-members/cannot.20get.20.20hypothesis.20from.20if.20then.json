[
    {
        "content": "<p>Hi I am trying to define a from_list function for vectors. What I have is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">from_list</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">option</span> <span class=\"o\">(</span><span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">l</span>     <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">l.length</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"k\">then</span> <span class=\"n\">some</span> <span class=\"o\">⟨</span><span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">sorry</span><span class=\"o\">⟩</span> <span class=\"k\">else</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>within the 'by sorry' i need the hypothesis that <code>l.length=n</code>, which is obviously true due to the if but does not appear in the proof checker.<br>\nHow would I write this correctly? thanks</p>",
        "id": 218731751,
        "sender_full_name": "Jem Bishop",
        "timestamp": 1607018581
    },
    {
        "content": "<p>The length of the vector is built into the type itself.</p>",
        "id": 218731885,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607018639
    },
    {
        "content": "<p><code>if h : l.length = n</code></p>",
        "id": 218732022,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607018690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span>  Thanks! no idea you could do that!</p>",
        "id": 218732106,
        "sender_full_name": "Jem Bishop",
        "timestamp": 1607018733
    },
    {
        "content": "<p>Oh I see what's happening.</p>",
        "id": 218732107,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607018733
    },
    {
        "content": "<p>Is it clear that this function will be useful? How would you actually tell lean about the length of a given list?</p>",
        "id": 218732338,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607018843
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">from_list</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">l.length</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">l</span><span class=\"o\">,</span><span class=\"n\">rfl</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 218732349,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607018848
    },
    {
        "content": "<p>i just have it as a constant</p>",
        "id": 218732475,
        "sender_full_name": "Jem Bishop",
        "timestamp": 1607018905
    },
    {
        "content": "<p>my use case is parsing some fixed width string to a vector of characters</p>",
        "id": 218732606,
        "sender_full_name": "Jem Bishop",
        "timestamp": 1607018993
    },
    {
        "content": "<p>I see.</p>",
        "id": 218732942,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607019151
    },
    {
        "content": "<p>One can supply the proof of a length of a list for an explicitly given list just by <code>dec_trivial</code></p>",
        "id": 218733370,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1607019377
    },
    {
        "content": "<p>Yeah... the code with <code>if then else</code> works because it's decidable :) </p>\n<p>Being a mathematician, I still don't think of lean as a programming language</p>",
        "id": 218733532,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607019459
    }
]