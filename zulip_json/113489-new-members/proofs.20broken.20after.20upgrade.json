[
    {
        "content": "<p>I upgraded to the latest version of lean.   Now I get these messages:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">inf</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span>\n<span class=\"n\">file</span> <span class=\"err\">&#39;</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">char_zero&#39;</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">search</span> <span class=\"n\">path</span>\n<span class=\"n\">Use</span> <span class=\"err\">&#39;</span><span class=\"n\">lean</span> <span class=\"c1\">--path&#39; to see where lean is looking, or https://leanprover-community.github.io/file-not-found.html for more</span>\n<span class=\"n\">inf</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"mi\">0</span>\n<span class=\"n\">invalid</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">resolve</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">inf</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">152</span><span class=\"o\">:</span><span class=\"mi\">4</span>\n<span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"err\">&#39;</span><span class=\"n\">simp_rw&#39;</span>\n</code></pre></div>\n\n\n<p>At the top of my file I have </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">finish</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n</code></pre></div>\n\n\n<p>I can't remember why I wanted data.real.basic,  but I definitely need simp_rw.</p>",
        "id": 209885055,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599923232
    },
    {
        "content": "<p><code>import tactic.basic</code> will import all the generally useful tactics such as <code>finish</code> and <code>simp_rw</code>.</p>",
        "id": 209885219,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599923438
    },
    {
        "content": "<p>Thanks.   Now I have \"no messages\",  which is good.  I guess data.real.basic is irrelevant.</p>",
        "id": 209885243,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599923517
    },
    {
        "content": "<p>But now:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">iMac</span><span class=\"o\">:</span><span class=\"n\">inf</span> <span class=\"n\">beeson</span><span class=\"err\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">build</span>\n<span class=\"n\">Building</span> <span class=\"n\">project</span> <span class=\"n\">inf</span>\n<span class=\"n\">Cmd</span><span class=\"o\">(</span><span class=\"err\">&#39;</span><span class=\"n\">git&#39;</span><span class=\"o\">)</span> <span class=\"n\">failed</span> <span class=\"n\">due</span> <span class=\"n\">to</span><span class=\"o\">:</span> <span class=\"kn\">exit</span> <span class=\"n\">code</span><span class=\"o\">(</span><span class=\"mi\">128</span><span class=\"o\">)</span>\n  <span class=\"n\">cmdline</span><span class=\"o\">:</span> <span class=\"n\">git</span> <span class=\"n\">reset</span> <span class=\"c1\">--hard HEAD --</span>\n  <span class=\"n\">stderr</span><span class=\"o\">:</span> <span class=\"err\">&#39;</span><span class=\"n\">fatal</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">parse</span> <span class=\"n\">object</span> <span class=\"err\">&#39;</span><span class=\"n\">HEAD&#39;</span><span class=\"bp\">.</span><span class=\"err\">&#39;</span>\n<span class=\"n\">iMac</span><span class=\"o\">:</span><span class=\"n\">inf</span> <span class=\"n\">beeson</span><span class=\"err\">$</span>\n</code></pre></div>",
        "id": 209885325,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599923634
    },
    {
        "content": "<p>(I am by no means a lean expert) but that error is coming from git basically saying some commit you're on \"doesn't exist\" really</p>",
        "id": 209885573,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599924028
    },
    {
        "content": "<p>It could presumably be either the repo for your <code>inf</code> project itself, or for a dependency (say mathlib) which <code>leanproject</code> manages on your behalf</p>",
        "id": 209885578,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599924049
    },
    {
        "content": "<p>Is your <code>inf</code> directory a git repo itself? If so possibly try <code>git fetch</code></p>",
        "id": 209885604,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599924109
    },
    {
        "content": "<p>Can you output the result of <code>ls</code> in the directory where you are doing the commands?</p>",
        "id": 209885650,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599924141
    },
    {
        "content": "<p>I mean, where you're doing leanproject commands</p>",
        "id": 209885661,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599924175
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">iMac</span><span class=\"o\">:</span><span class=\"n\">inf</span> <span class=\"n\">beeson</span><span class=\"err\">$</span> <span class=\"n\">ls</span>\n<span class=\"n\">Junk</span>        <span class=\"bp\">_</span><span class=\"n\">target</span>     <span class=\"n\">leanpkg</span><span class=\"bp\">.</span><span class=\"n\">path</span>    <span class=\"n\">leanpkg</span><span class=\"bp\">.</span><span class=\"n\">toml</span>    <span class=\"n\">src</span>\n<span class=\"n\">iMac</span><span class=\"o\">:</span><span class=\"n\">inf</span> <span class=\"n\">beeson</span><span class=\"err\">$</span>\n</code></pre></div>",
        "id": 209885662,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599924178
    },
    {
        "content": "<p>That looks lovely.</p>",
        "id": 209885668,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599924190
    },
    {
        "content": "<p>Is it a git repo?</p>",
        "id": 209885678,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599924215
    },
    {
        "content": "<p>what's the output of <code>ls -al</code>?</p>",
        "id": 209885683,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599924229
    },
    {
        "content": "<p>Do you know how git works?</p>",
        "id": 209885691,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599924242
    },
    {
        "content": "<p>That's not the error message you'd get if it wasn't</p>",
        "id": 209885727,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599924246
    },
    {
        "content": "<p>OK then I give in :-)</p>",
        "id": 209885732,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599924263
    },
    {
        "content": "<p>that said, the error message is still baffling</p>",
        "id": 209885738,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599924269
    },
    {
        "content": "<p>I assume leanproject is running this in the mathlib directory? surely it's not going to <code>git reset --hard HEAD</code> your project itself??</p>",
        "id": 209885750,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599924300
    },
    {
        "content": "<p>I didn't make it a git repo but maybe  Lean does that automatically.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">iMac</span><span class=\"o\">:</span><span class=\"n\">inf</span> <span class=\"n\">beeson</span><span class=\"err\">$</span> <span class=\"n\">ls</span> <span class=\"bp\">-</span><span class=\"n\">al</span>\n<span class=\"n\">total</span> <span class=\"mi\">40</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">@</span> <span class=\"mi\">10</span> <span class=\"n\">beeson</span>  <span class=\"n\">staff</span>   <span class=\"mi\">320</span> <span class=\"n\">Sep</span> <span class=\"mi\">11</span> <span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"mi\">27</span> <span class=\"bp\">.</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">@</span> <span class=\"mi\">11</span> <span class=\"n\">beeson</span>  <span class=\"n\">staff</span>   <span class=\"mi\">352</span> <span class=\"n\">Sep</span>  <span class=\"mi\">5</span> <span class=\"mi\">20</span><span class=\"o\">:</span><span class=\"mi\">26</span> <span class=\"bp\">..</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--@  1 beeson  staff  6148 Sep 11 10:15 .DS_Store</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">@</span>  <span class=\"mi\">9</span> <span class=\"n\">beeson</span>  <span class=\"n\">staff</span>   <span class=\"mi\">288</span> <span class=\"n\">Jun</span> <span class=\"mi\">12</span> <span class=\"mi\">23</span><span class=\"o\">:</span><span class=\"mi\">19</span> <span class=\"bp\">.</span><span class=\"n\">git</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--@  1 beeson  staff    31 Jun 12 23:17 .gitignore</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">@</span>  <span class=\"mi\">6</span> <span class=\"n\">beeson</span>  <span class=\"n\">staff</span>   <span class=\"mi\">192</span> <span class=\"n\">Sep</span> <span class=\"mi\">11</span> <span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">16</span> <span class=\"n\">Junk</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">@</span>  <span class=\"mi\">3</span> <span class=\"n\">beeson</span>  <span class=\"n\">staff</span>    <span class=\"mi\">96</span> <span class=\"n\">Jun</span> <span class=\"mi\">12</span> <span class=\"mi\">23</span><span class=\"o\">:</span><span class=\"mi\">17</span> <span class=\"bp\">_</span><span class=\"n\">target</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--@  1 beeson  staff    54 Sep 12 07:09 leanpkg.path</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--@  1 beeson  staff   236 Sep 12 07:08 leanpkg.toml</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">@</span> <span class=\"mi\">11</span> <span class=\"n\">beeson</span>  <span class=\"n\">staff</span>   <span class=\"mi\">352</span> <span class=\"n\">Sep</span> <span class=\"mi\">12</span> <span class=\"mi\">07</span><span class=\"o\">:</span><span class=\"mi\">46</span> <span class=\"n\">src</span>\n<span class=\"n\">iMac</span><span class=\"o\">:</span><span class=\"n\">inf</span> <span class=\"n\">beeson</span><span class=\"err\">$</span>\n</code></pre></div>\n\n\n<p>No,  I only know epsilon about git.</p>",
        "id": 209885761,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599924313
    },
    {
        "content": "<p>What does <code>git status</code> tell you?</p>",
        "id": 209885773,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599924350
    },
    {
        "content": "<p>I guess I caused this problem by keeping my project under my Dropbox folder so it would sync to my laptop.   Normally I keep <br>\nall my work  in directories that start with Users/beeson/Dropbox  so they sync to the laptop.   And,  I upgraded both machines<br>\nto the Aug. 2020 version of Lean.   Before that they were in sync.   Now, however,   leanproject build seems to work on the laptop<br>\nbut not on the desktop.</p>",
        "id": 209885859,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599924474
    },
    {
        "content": "<p>So  the \"leanproject build\" command on the laptop left files in dropbox that are not correct on the desktop??</p>",
        "id": 209885937,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599924565
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">iMac</span><span class=\"o\">:</span><span class=\"n\">inf</span> <span class=\"n\">beeson</span><span class=\"err\">$</span> <span class=\"n\">git</span> <span class=\"n\">status</span>\n<span class=\"n\">On</span> <span class=\"n\">branch</span> <span class=\"n\">master</span>\n\n<span class=\"n\">No</span> <span class=\"n\">commits</span> <span class=\"n\">yet</span>\n\n<span class=\"n\">Untracked</span> <span class=\"n\">files</span><span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"s2\">&quot;git add &lt;file&gt;...&quot;</span> <span class=\"n\">to</span> <span class=\"n\">include</span> <span class=\"k\">in</span> <span class=\"n\">what</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">committed</span><span class=\"o\">)</span>\n\n    <span class=\"bp\">.</span><span class=\"n\">DS_Store</span>\n    <span class=\"bp\">.</span><span class=\"n\">gitignore</span>\n    <span class=\"n\">Junk</span><span class=\"bp\">/</span>\n    <span class=\"n\">leanpkg</span><span class=\"bp\">.</span><span class=\"n\">toml</span>\n    <span class=\"n\">src</span><span class=\"bp\">/</span>\n\n<span class=\"n\">nothing</span> <span class=\"n\">added</span> <span class=\"n\">to</span> <span class=\"n\">commit</span> <span class=\"n\">but</span> <span class=\"n\">untracked</span> <span class=\"n\">files</span> <span class=\"n\">present</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"s2\">&quot;git add&quot;</span> <span class=\"n\">to</span> <span class=\"n\">track</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 209885994,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599924625
    },
    {
        "content": "<p>OK, well that's good, since yeah it's almost certainly then coming from leanproject running that on mathlib, which <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> mentioned (and which I see does indeed happen here: <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/bf53aa4268452fbfbfd48e519ef847cae7e0053c/mathlibtools/lib.py#L592\">https://github.com/leanprover-community/mathlib-tools/blob/bf53aa4268452fbfbfd48e519ef847cae7e0053c/mathlibtools/lib.py#L592</a>)</p>",
        "id": 209886035,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599924713
    },
    {
        "content": "<p>I don't know if there's a leanproject(-or-lean-specific) way to fix this but I'd assume if you delete mathlib in the target directory that you'll get back a working clone. But probably would wait for one of the above experts to chime in :)</p>",
        "id": 209886089,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599924767
    },
    {
        "content": "<p>so I did \"leanproject up\"  again.    Output includes</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach c3a6a6990d620c3fadf11631038b38dd7fd50b39    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"n\">c3a6a6990</span> <span class=\"n\">doc</span><span class=\"o\">(</span><span class=\"n\">group_theory</span><span class=\"bp\">/</span><span class=\"n\">subgroup</span><span class=\"o\">):</span> <span class=\"n\">fix</span> <span class=\"n\">links</span> <span class=\"k\">in</span> <span class=\"n\">module</span> <span class=\"n\">doc</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">4115</span><span class=\"o\">)</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Found</span> <span class=\"n\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n</code></pre></div>\n\n\n<p>After that,  leanproject build works again normally.</p>",
        "id": 209886277,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599925064
    },
    {
        "content": "<p>Cool, looks like you found the leanproject-specific solution, so well done :)</p>",
        "id": 209886334,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599925136
    },
    {
        "content": "<p>And also works on the laptop.  So I guess the problem is solved.   But I have no idea what the problem actually was or what caused it.</p>",
        "id": 209886341,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599925146
    },
    {
        "content": "<p>Did you update on one machine or the other very recently? If so maybe dropbox was behind and only partially copied the <code>.git</code> directory over from one to the other, which yeah will confuse git.</p>",
        "id": 209886367,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599925187
    },
    {
        "content": "<p>That's a good theory!   I'll bet you're right about that.  Dropbox is usually virtually instant,  but I guess there may be a lot of big <br>\nfiles involved in upgrading lean.</p>",
        "id": 209886449,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599925255
    },
    {
        "content": "<p>Thanks very much to all of you.   It is really wonderful that all you geniuses are willing to help a bumbling newcomer,  and at all hours and rapidly. <br>\nIt's nice to feel that someone has my back.</p>",
        "id": 209886537,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599925369
    },
    {
        "content": "<p>Yeah, overall I think what you're doing is fine (letting dropbox save you from having to learn too much git for your own machines), you just will run into this kind of thing if you switch from one to the other mid-sync.</p>",
        "id": 209886538,
        "sender_full_name": "Julian Berman",
        "timestamp": 1599925369
    },
    {
        "content": "<p>Using Dropbox in this context is really really asking for trouble, but I'm glad you managed to get out of trouble.</p>",
        "id": 209891367,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1599931844
    }
]