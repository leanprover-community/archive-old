[
    {
        "content": "<p>Sometimes when working on mathlib I need to add just a few lemmas to a really basic file (say <code>data/set/intervals/basic</code>) and then to work on a higher level file, e.g <code>analysis/calculus/...</code>. Usually, I just run <code>leanproject build</code> after modifying basic files, but the problem is this also compiles files I don't care, e.g category theory. Is there a command that would compile only files that 1) depend on a file that has been changed, which is what <code>leanproject build</code> does, and 2) are dependencies of a certain file, which is what the vscode extension does ?</p>\n<p>In case you were wondering, here's why I can't just wait for VSCode to compile all necessary files : I'm on a laptop that doesn't have a lot of ram, and when coding I usually have quite a few or other tasks running, so I modified the allowed ram in vscode extension settings. But then lean can't handle compiling whole mathlib. On the other hand, when I do recompile it, I usually cut everything else, so I can run lean in CLI without any problems. This is a bit dirty but it should get better with more recent Linux kernels</p>",
        "id": 205745960,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1596405742
    },
    {
        "content": "<p><code>lean --make certainfile.lean</code></p>",
        "id": 205746149,
        "sender_full_name": "Reid Barton",
        "timestamp": 1596406190
    },
    {
        "content": "<p>I totally should have tried that, but it turns out I'm dumb. Thanks !</p>",
        "id": 205746203,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1596406269
    },
    {
        "content": "<p>Another option when working with limited computing resources is just to push your work to a non-master branch of the <code>leanprover-community</code> repo, and then use <code>leanproject</code> to retrieve the compiled olean files once they've been built by our continuous integration setup. It's not instant, but sometimes is a helpful solution.</p>",
        "id": 205755680,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596423093
    },
    {
        "content": "<p>Yep I do that sometimes too</p>",
        "id": 205784033,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1596454611
    }
]