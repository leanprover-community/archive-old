[
    {
        "content": "<p>Hey, so when I start a new Lean project it works fine. But when I open a file in mathlib (using emacs + lean mode), it uses a lot of cpu for a while and then shows errors everywhere, saying \"excessive memory consumption\" on fairly innocent lines like \"import tactic.ring\". Is this a known issue of some sort?</p>",
        "id": 211520181,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601312642
    },
    {
        "content": "<p>This indicates that your editor is forcing a recompile of mathlib, meaning that the oleans you have are out of date or out of sync with the Lean / mathlib version you're trying to use. It should be fixable by running <code>leanproject get-mathlib-cache</code> (if you're working on a project depending on mathlib) or <code>leanproject get-cache</code> (if you're working on mathlib itself).</p>",
        "id": 211521152,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601313090
    },
    {
        "content": "<p>$ leanproject get-cache<br>\nLooking for local mathlib oleans<br>\nLooking for remote mathlib oleans<br>\nTrying to download <a href=\"https://oleanstorage.azureedge.net/mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.xz\">https://oleanstorage.azureedge.net/mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.xz</a> to /home/lacker/.mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.xz<br>\nTrying to download <a href=\"https://oleanstorage.azureedge.net/mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.gz\">https://oleanstorage.azureedge.net/mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.gz</a> to /home/lacker/.mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.gz<br>\nTrying to download <a href=\"https://oleanstorage.azureedge.net/mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.bz2\">https://oleanstorage.azureedge.net/mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.bz2</a> to /home/lacker/.mathlib/106f3b54f790242fc8367d8337c371cfe70e73fe.tar.bz2<br>\nLooking for GitHub mathlib oleans<br>\nInfo: No github section found in 'git config', we will use GitHub with no authentication<br>\nFailed to fetch mathlib oleans</p>",
        "id": 211521337,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313161
    },
    {
        "content": "<p>is this related to that branch thing? i forked mathlib and made a change in my own branch</p>",
        "id": 211521421,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313200
    },
    {
        "content": "<p>does that break the build tooling</p>",
        "id": 211521438,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313206
    },
    {
        "content": "<p>Ah, I see. That's a commit for your PR <a href=\"https://github.com/leanprover-community/mathlib/issues/4261\">#4261</a>. If you'd opened this PR from a branch inside mathlib then the CI would have created olean files that you could download with <code>leanproject get-cache</code>.</p>\n<p>You might try <code>leanproject build</code>, but be warned this may take a while (30+ mins).</p>",
        "id": 211521646,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601313280
    },
    {
        "content": "<p>leanproject build it is</p>",
        "id": 211521711,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313314
    },
    {
        "content": "<p>A quicker way is to switch to current <code>master</code>, run <code>leanproject get-cache</code>, then rebase your branch on top of <code>master</code>.</p>",
        "id": 211521887,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601313382
    },
    {
        "content": "<p>what would the rebase be doing there</p>",
        "id": 211522069,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313468
    },
    {
        "content": "<p>i mean, it's already on master, just the master branch of the fork</p>",
        "id": 211522225,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313534
    },
    {
        "content": "<p>are the cached oleans based on git hash?</p>",
        "id": 211522258,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313552
    },
    {
        "content": "<p>Yes, they are.</p>",
        "id": 211522281,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601313561
    },
    {
        "content": "<p>is there one generated for every master git hash or jsut every once in a while</p>",
        "id": 211522318,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313582
    },
    {
        "content": "<p>One for every commit to every branch in the mathlib repo.</p>",
        "id": 211522481,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601313656
    },
    {
        "content": "<p>Although caches for non-head commits on non-master branches are removed after 3 days I think.</p>",
        "id": 211522518,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601313677
    },
    {
        "content": "<p>ok then hopefully i should be able to checkout a previous hash, <code>get-cache</code>, and go back to the fork's master without altering the git tree</p>",
        "id": 211522789,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313841
    },
    {
        "content": "<p>Yes, hopefully that should work too.</p>",
        "id": 211522865,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601313865
    },
    {
        "content": "<p>looks like it works, thanks for the help!</p>",
        "id": 211522896,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313884
    },
    {
        "content": "<p>for subsequent mathlib PR's i'll use a branch on the mathlib repo itself</p>",
        "id": 211522941,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601313905
    }
]