[
    {
        "content": "<p>Does someone know what tactic to use to prove the following:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">nonethm</span> <span class=\"o\">{</span><span class=\"n\">t</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">none</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">none</span><span class=\"o\">)</span><span class=\"bp\">=@</span><span class=\"n\">none</span> <span class=\"n\">t</span><span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"bp\">...</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 133185891,
        "sender_full_name": "Ken Roe",
        "timestamp": 1535825347
    },
    {
        "content": "<p><code>theorem nonethm {t} : (none &lt;|&gt; none)=@none t:= rfl</code></p>",
        "id": 133186005,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1535825585
    },
    {
        "content": "<p>lol. <code>by simp</code> also works if you have <code>import data.option</code></p>",
        "id": 133186270,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535826214
    },
    {
        "content": "<p>Chris, you lose: Ken asked for a tactic. The best answer was <code>refl</code> <span class=\"emoji emoji-1f60b\" title=\"yum\">:yum:</span></p>",
        "id": 133188061,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535830025
    },
    {
        "content": "<p>A slightly more serious answer: I think stating the result as <code>theorem nonethm {t} : (none &lt;|&gt; none)= (none : option t)</code> makes it easier to read. I mention this because it's a general trick: you can often avoid using <code>@</code> by adding a type ascription.</p>",
        "id": 133188364,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535830620
    },
    {
        "content": "<p>Thanks.  A couple more questions:<br>\n1) I found data/option.lean in mathlib.  Where should I place the mathlib repository with respect to the Lean repository?  How do I configure VSCode so that it starts Lean with the appropriate search path?</p>\n<p>2) Next, how do I prove the theorem:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">nonethm</span> <span class=\"o\">{</span><span class=\"n\">t</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">option</span> <span class=\"n\">t</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">none</span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"n\">x</span><span class=\"o\">:=</span> <span class=\"k\">begin</span>\n    <span class=\"bp\">...</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 133189198,
        "sender_full_name": "Ken Roe",
        "timestamp": 1535832294
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">nonethm</span> <span class=\"o\">{</span><span class=\"n\">t</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">t</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">none</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">refl</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 133189244,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535832420
    },
    {
        "content": "<p>For question 1 I recommend using leanpkg. The advice on the <a href=\"https://xenaproject.wordpress.com/2017/12/02/how-to-install-mathlib-and-keep-it-up-to-date/\" target=\"_blank\" title=\"https://xenaproject.wordpress.com/2017/12/02/how-to-install-mathlib-and-keep-it-up-to-date/\">xena blog</a> is a little old but still worked for me a month or so ago.</p>",
        "id": 133189359,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1535832629
    }
]