[
    {
        "content": "<p>Just learned to use <code>begin ... end</code> <code>{ ... }</code> to structure tactics.  The first <code>begin ... end</code> block focuses on the first goal.  Is it possible to work on the second goal first bypassing the the first goal?</p>",
        "id": 191972277,
        "sender_full_name": "Jiekai",
        "timestamp": 1585277793
    },
    {
        "content": "<p>You could use sorry to move to the next goal</p>",
        "id": 191972344,
        "sender_full_name": "Alastair Horn",
        "timestamp": 1585277921
    },
    {
        "content": "<p>You can also use <code>show</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">bool</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"k\">show</span> <span class=\"n\">bool</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">tt</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"mi\">1</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>or if you are using mathlib, <code>swap</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">bool</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"n\">swap</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">tt</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"mi\">1</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 191972423,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1585278060
    },
    {
        "content": "<p>There's also <code>work_on_goal n { ... }</code>.</p>",
        "id": 191978045,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585286891
    },
    {
        "content": "<p>(This requires that you finish the goal by the end of the <code>{ ... }</code> block.)</p>",
        "id": 191978048,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585286908
    },
    {
        "content": "<p>As well as <code>swap n</code> which swaps the 1st and nth goals, there's <code>rotate n</code> which rotates (left) n times.</p>",
        "id": 191978057,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585286942
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/focusing.20goals/near/191978048\" title=\"#narrow/stream/113489-new-members/topic/focusing.20goals/near/191978048\">said</a>:</p>\n<blockquote>\n<p>(This requires that you finish the goal by the end of the <code>{ ... }</code> block.)</p>\n</blockquote>\n<p>Oooh, I thought it didn't... <span aria-label=\"bulb\" class=\"emoji emoji-1f4a1\" role=\"img\" title=\"bulb\">:bulb:</span></p>",
        "id": 191979131,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1585288530
    },
    {
        "content": "<p>That actually sounds like a misfeature. If you are going to close the goal, you can just use <code>swap n, { ... }</code></p>",
        "id": 191979750,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585289338
    },
    {
        "content": "<p>Sorry, my mistake, <code>work_on_goal</code> does what everyone thought: you're allowed to make partial progress.</p>",
        "id": 192014464,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585314872
    },
    {
        "content": "<p>Pretty prescient of its author (-;</p>",
        "id": 192014626,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1585314940
    },
    {
        "content": "<p>That guy is a genius!</p>",
        "id": 192014654,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1585314957
    }
]