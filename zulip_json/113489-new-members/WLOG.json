[
    {
        "content": "<p>I'm trying to get more efficient in my proofs, so I want to learn about the wlog tactic, but I didn't understand the comments where the tactic was written. Are there any examples I can read (preferably about something I could understand)?</p>",
        "id": 132101162,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534240101
    },
    {
        "content": "<p>Not to derail your question entirely, but I also recently had issues trying to understand the comments. In particular, it started with the <a href=\"https://github.com/leanprover-community/mathlib/blob/57194fa57e76721a517d6969ee88a6007f0722b3/tactic/wlog.lean#L111\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/57194fa57e76721a517d6969ee88a6007f0722b3/tactic/wlog.lean#L111\">summary</a>:</p>\n<blockquote>\n<p>Without loss of generality: reduces to one goal under variables permutations</p>\n</blockquote>\n<p>What does “reduces to one goal under variables permutations” mean?</p>",
        "id": 132101277,
        "sender_full_name": "Sean Leather",
        "timestamp": 1534240274
    },
    {
        "content": "<p><code>wlog</code> applies when the goal is symmetric under permutation of some variables, and there is a \"symmetry breaking\" relation that holds when disjoined over all permutations</p>",
        "id": 132101345,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534240378
    },
    {
        "content": "<p>i.e. you want to prove <code>x * y &lt;= 1</code>, then wlog you can assume <code>x &lt;= y</code></p>",
        "id": 132101353,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534240406
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">wlog</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">wlog</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- x ≤ y ⊢ x * y ≤ 1</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 132101420,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534240531
    },
    {
        "content": "<p>I agree the wording is not very good. I invite suggestions for rewording</p>",
        "id": 132101472,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534240567
    },
    {
        "content": "<p>The wlog I want to do is a little more complicated, for example I have <code>( p(a) \\or p(b) )</code>, where <code>p</code> is a pseudo-order relation.  I also have stuff like <code>h1 : p(a) → c</code> and <code>h2 : p(b) → d</code>, so I want to include these in my wlog.</p>",
        "id": 132101818,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534241086
    },
    {
        "content": "<p>What's the goal?</p>",
        "id": 132101891,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534241163
    },
    {
        "content": "<p>what do you mean by pseudo order relation? <code>wlog</code> is very general, so I'm sure it will apply, but you have to figure out how to get it in a form it can accept</p>",
        "id": 132101933,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534241226
    },
    {
        "content": "<p>I want to wlog over <code>a b c d</code> where I have <code>p a b c d \\or p c d a b</code>, I just tried <code>wlog h : p a b c d</code> and it asked me for a proof of <code>p a b c d \\or p c d a b</code>, which was very surprising. Sometimes Lean is a lot smarter than I expect.</p>",
        "id": 132102577,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534242171
    },
    {
        "content": "<p>So I started the wlog proof, and I finished the first case. Now for the second case it wants a proof of <code>h1 : p(b) → c</code> and <code>h1 : p(a) → d</code>, but those aren't true. How would I tell Lean to add <code>c</code> and <code>d</code> to the wlog, so they swap as well for the second case?</p>",
        "id": 132103235,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534243179
    },
    {
        "content": "<p>Ali -- can you formalise a MWE of what you're asking? i.e. abstract the situation and post a problem of the form <code>example (alpha : type) (p : alpha -&gt; alpha -&gt; alpha -&gt; alpha -&gt; Prop) (h1 : blah -&gt; blah) (h2 : blah) ... : goal := sorry</code> and set it as a WLOG challenge.</p>",
        "id": 132104067,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1534244331
    },
    {
        "content": "<p>I was fearing this, I'll see what I can do.</p>",
        "id": 132104185,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534244507
    },
    {
        "content": "<p>Here's a MWE: </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">wlog</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">S</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">S</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">B</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">B</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">flip</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">d</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">t1</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"bp\">∨</span> <span class=\"n\">D</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">t2</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">D</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">t3</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">B</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">t4</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">B</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"c1\">-- Had to name it a₁ because Lean didn&#39;t let me use a on line 39?</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">S</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">h</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n<span class=\"n\">wlog</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t1</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h5</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">p</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t2</span> <span class=\"n\">h4</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t3</span> <span class=\"n\">h</span> <span class=\"n\">h4</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h7</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t3</span> <span class=\"n\">h1</span> <span class=\"n\">h5</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">t4</span> <span class=\"n\">h6</span> <span class=\"n\">h7</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">S</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">S</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"c1\">-- This is what I would expect the WLOG to give me to use as &quot;this&quot;,</span>\n<span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"n\">q</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">h1</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">h3</span> <span class=\"n\">h2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">flip</span>\n<span class=\"kn\">end</span>\n\n<span class=\"c1\">--A way around this is to change the statement, but that isn&#39;t ideal</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">S</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">wlog</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t1</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"n\">introv</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h5</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">p</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t2</span> <span class=\"n\">h4</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t3</span> <span class=\"n\">h</span> <span class=\"n\">h4</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h7</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t3</span> <span class=\"n\">h1</span> <span class=\"n\">h5</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">t4</span> <span class=\"n\">h6</span> <span class=\"n\">h7</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">this</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">a_2</span> <span class=\"n\">a_1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">flip</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 132106746,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534248548
    },
    {
        "content": "<p>I'd also like to know how to name everything WLOG gives me, and why I had to use <code>a₁</code> instead of <code>a</code>.</p>",
        "id": 132106758,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534248598
    },
    {
        "content": "<p>You should never try to name anything <code>a</code> in Lean. That's a name Lean uses, and trying to also use it can only lead to cryptic error messages</p>",
        "id": 132108487,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534250942
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"c1\">-- your example, upgraded to theorem t5</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">t5</span> <span class=\"o\">{</span><span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">S</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">wlog</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t1</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"n\">introv</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h5</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">p</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t2</span> <span class=\"n\">h4</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t3</span> <span class=\"n\">h</span> <span class=\"n\">h4</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h7</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">t3</span> <span class=\"n\">h1</span> <span class=\"n\">h5</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">t4</span> <span class=\"n\">h6</span> <span class=\"n\">h7</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">this</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"n\">q</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">a_2</span> <span class=\"n\">a_1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">flip</span>\n<span class=\"kn\">end</span>\n\n<span class=\"c1\">-- what you wanted</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">S</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">b</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">a₁</span> <span class=\"n\">c</span> <span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">revert</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">t5</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 132108966,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1534251494
    },
    {
        "content": "<p>The <code>a</code> thing is a bug in the parser, which won't be fixed until Lean 4.</p>",
        "id": 132109024,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1534251580
    },
    {
        "content": "<p>Ok thanks, I was hoping wlog could revert for me,</p>",
        "id": 132109241,
        "sender_full_name": "Ali Sever",
        "timestamp": 1534251765
    }
]