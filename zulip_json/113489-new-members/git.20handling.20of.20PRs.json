[
    {
        "content": "<p>Can you recommend a good (git-wise) workflow in the following situation: besides the <code>exp_char</code> PR <a href=\"https://github.com/leanprover-community/mathlib/issues/6671\">#6671</a> (which is currently under review, and which (eventually, possibly) introduces a new file to mathlib) I am working on a separate file in which I apply the newly minted <code>exp_char</code> in order to define and treat the separable degree of a polynomial. I want to make that second file part of another PR. Currently I have my own \"private\" git repo, and copy things over to the two PR-ready copies of mathlib, but this setup gets annoying ...</p>\n<p>So, can one handle multiple PR's in the same git repo? Thanks!</p>",
        "id": 230757652,
        "sender_full_name": "Jakob Scholbach",
        "timestamp": 1616011564
    },
    {
        "content": "<p>Yes, this is what \"dependent PRs\" are for (mentioned in the PR template)</p>",
        "id": 230757750,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616011604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247154\">@Jakob Scholbach</span> Yes, just create new branches.</p>",
        "id": 230757824,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616011638
    },
    {
        "content": "<p>The second branch should start from the branch of the first PR</p>",
        "id": 230757840,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616011650
    },
    {
        "content": "<p>I would suggest checking out the branch which you PR'd and then doing <code>git checkout -b my_derivative_branch</code>. Then make commits in that branch. If, in the PR process, you have to make edits to your PR, you checkout <code>git checkout PR_branch</code>, make commits, then to update your derivative branch you do <code>git checkout my_derivative_branch; git merge PR_branch</code>.</p>",
        "id": 230757942,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616011689
    },
    {
        "content": "<p>We should probably document this somewhere as a tiny tutorial \"How do I git multiple dependent PRs to mathlib?\"</p>",
        "id": 230758142,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616011774
    },
    {
        "content": "<p>Note, if one has a long complex chain (not a <code>long chain complex</code>) of branches, then merging in master as the PRs get approved can get a little hairy, if the derivative branches used some feature that is now gone/edited away. It is hairy because you have to be careful not to accidentally bring it back.</p>",
        "id": 230758425,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616011875
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113489-new-members/topic/git.20handling.20of.20PRs/near/230758425\">said</a>:</p>\n<blockquote>\n<p>a long complex chain (not a <code>long chain complex</code>)</p>\n</blockquote>\n<p><span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 230761281,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616013087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/git.20handling.20of.20PRs/near/230758142\">said</a>:</p>\n<blockquote>\n<p>We should probably document this somewhere as a tiny tutorial \"How do I git multiple dependent PRs to mathlib?\"</p>\n</blockquote>\n<p>I could use a tiny tutorial. I'm still using a separate mathlib folder for each PR, which is a bit painful.</p>",
        "id": 230764869,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1616014511
    },
    {
        "content": "<p>I'll see if I can find some time to write something this week</p>",
        "id": 230768845,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616015982
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253861\">Thomas Browning</span> <a href=\"#narrow/stream/113489-new-members/topic/git.20handling.20of.20PRs/near/230764869\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/git.20handling.20of.20PRs/near/230758142\">said</a>:</p>\n<blockquote>\n<p>We should probably document this somewhere as a tiny tutorial \"How do I git multiple dependent PRs to mathlib?\"</p>\n</blockquote>\n<p>I could use a tiny tutorial. I'm still using a separate mathlib folder for each PR, which is a bit painful.</p>\n</blockquote>\n<p>There's possibly a related not-so-widely-known git trick that maybe one of you will find useful for mathlib development, which is <code>git worktree</code> -- it's not a thing I use often because compiling things in Python is not so useful, it's more useful in languages like JS where there's an annoying <code>node_modules</code> directory for you to manage -- but basically git worktree lets you have separate branches checked out at the same time into separate folders but the repo is \"aware\" of the other directories (so you can list them, delete them, etc.) -- <a href=\"https://www.youtube.com/watch?v=cRunWRC8ye0\">https://www.youtube.com/watch?v=cRunWRC8ye0</a> is a good short video tutorial</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"cRunWRC8ye0\" href=\"https://www.youtube.com/watch?v=cRunWRC8ye0\"><img src=\"https://i.ytimg.com/vi/cRunWRC8ye0/default.jpg\"></a></div>",
        "id": 230773911,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616018277
    },
    {
        "content": "<p>I use git worktree all the time. I have <code>mathlib</code> for quick and dirty visits to branches, and then <code>mathlib-X</code>, <code>mathlib-Y</code> all set up using <code>git worktree</code>, and so on for branches that hold my attention for more than a day.</p>",
        "id": 230780485,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616020283
    }
]