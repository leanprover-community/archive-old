[
    {
        "content": "<p>Just to note, since you mentioned cryptography, you can’t prove anything about a nondeterministic <code>meta</code> function in Lean.  And this makes sense since you can’t even prove <code>my_random_nat = my_random_nat</code>.  (Now you could prove something about a deterministic random number generator which say takes a key and returns both a psuedo-random value and a new key.)</p>",
        "id": 294351757,
        "sender_full_name": "Jason Rute",
        "timestamp": 1660938374
    },
    {
        "content": "<p>Oh, it looks like Lean does have deterministic pseudo-randomness which you can use inside pure functions.  See the discussion in  <a class=\"stream-topic\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F/topic/random.20number.20generator\">#Is there code for X? &gt; random number generator</a></p>",
        "id": 294352874,
        "sender_full_name": "Jason Rute",
        "timestamp": 1660938873
    },
    {
        "content": "<p>that is almost exactly what i was looking for, thank you very much :)</p>",
        "id": 294354575,
        "sender_full_name": "Alfredo Garcia",
        "timestamp": 1660939505
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"476482\">Alfredo Garcia</span> has marked this topic as resolved.</p>",
        "id": 294354600,
        "sender_full_name": "Notification Bot",
        "timestamp": 1660939516
    },
    {
        "content": "<p>The way you use it is that you first make a generator using a seed.  The every time you need a random number you use, say, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/rand_nat\">docs#rand_nat</a> giving it the generator as an input.  You get a new generator as an output.  And you should only ever use a generator once.  Every function you write which has a random effect, should take an input generator and return a new generator.</p>",
        "id": 294354735,
        "sender_full_name": "Jason Rute",
        "timestamp": 1660939563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> has marked this topic as resolved.</p>",
        "id": 294354954,
        "sender_full_name": "Notification Bot",
        "timestamp": 1660939648
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20random.20number.20generator/near/294334295\">said</a>:</p>\n<blockquote>\n<p>I think in Lean 3  (this is Lean 3, right?), that <code>#eval</code> only runs deterministic pure code, so you can’t have a function which is random in there. </p>\n</blockquote>\n<p>I believe you can run <code>tactic A</code> and <code>io A</code> actions in lean 3 <code>#eval</code> just fine</p>",
        "id": 294400988,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660978629
    }
]