[
    {
        "content": "<p>How to deal with computations on finite sets?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">big_operators</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">ennreal</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"n\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"err\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">refl</span> <span class=\"c1\">-- or `simp only [finset.sum_empty, finset.range_zero]`</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"err\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_singleton</span><span class=\"o\">]</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"err\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"err\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>I think the examples above motivate the question quite well. Its pretty easy to deal with summations on the empty set or singleton sets thanks to the lemmas <code>sum_empty</code> and <code>sum_singleton</code>, however I am unable to proof anything past 2.</p>",
        "id": 200831526,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592165360
    },
    {
        "content": "<p>It should be possible to be able to proof the last example by induction on <code>n</code>, I believe.</p>",
        "id": 200831537,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592165381
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/big_operators.html#finset.sum_range_succ\">https://leanprover-community.github.io/mathlib_docs/algebra/big_operators.html#finset.sum_range_succ</a></p>",
        "id": 200831593,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592165469
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/big_operators.html#finset.sum_range_induction\">https://leanprover-community.github.io/mathlib_docs/algebra/big_operators.html#finset.sum_range_induction</a></p>",
        "id": 200831597,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592165485
    },
    {
        "content": "<p>Hmm, it was on <code>algebra</code>. I looked for this on <code>finset</code>. <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span></p>",
        "id": 200832121,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592166313
    },
    {
        "content": "<p>I think a few people have been caught out by this (myself included), I wonder if it's a good idea to put a note somewhere in <code>finset</code> saying that these lemmas are in <code>algebra</code> not in <code>finset</code></p>",
        "id": 200833557,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592168684
    },
    {
        "content": "<p><code>data.finset</code> is missing a ton of documentation. A PR would be greatly appreciated!</p>",
        "id": 200833646,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1592168872
    },
    {
        "content": "<p>if you want to not be caught out like this in the future, use the \"right click -&gt; go to definition\" and \"right click -&gt; peek definition\" in VSCode</p>",
        "id": 200833711,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592168984
    },
    {
        "content": "<p>or search the name of a lemma (like <code>finset.sum_singleton</code>) in the mathlib docs</p>",
        "id": 200833757,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592169011
    },
    {
        "content": "<p>Docstring PR's are really easy to make and teach you a lot about the library. I needed to learn about multivariable polynomials so I wrote the module docstring for the relevant Lean file. You just have to isolate the definitions and explain them at the top, and follow the style guide which is in the docs directory of mathlib.</p>",
        "id": 200833764,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592169040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/Computing.20finset.20(range).20sums/near/200833711\">said</a>:</p>\n<blockquote>\n<p>if you want to not be caught out like this in the future, use the \"right click -&gt; go to definition\" and \"right click -&gt; peek definition\" in VSCode</p>\n</blockquote>\n<p>I don't think this helps in this case, since the lemmas are defined in algebra and not referenced anywhere in finset, so if you're in finset you wouldn't be able to chase definitions to algebra.big_ops</p>",
        "id": 200833828,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592169153
    },
    {
        "content": "<p>i thought the problem is \"i know about <code>finset.sum_singleton</code> but not about other lemmas in big_operators\"?</p>",
        "id": 200833887,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592169247
    },
    {
        "content": "<p>Oh, my mistake, you're right!</p>",
        "id": 200833924,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592169361
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/Computing.20finset.20(range).20sums/near/200833887\">said</a>:</p>\n<blockquote>\n<p>i thought the problem is \"i know about <code>finset.sum_singleton</code> but not about other lemmas in big_operators\"?</p>\n</blockquote>\n<p>I've been jumping to definitions all the time in VSCode and honestly didn't even notice <code>finset.sum_singleton</code> was in algebra.</p>",
        "id": 200835455,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592171771
    },
    {
        "content": "<p>I guess I could have payed more attention. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 200835463,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592171805
    },
    {
        "content": "<p>without knowing the name of the file, if your goal is \"find functions like finset.sum_singleton\", then the tactic \"look nearby in the file defining finset.sum_singleton\" makes significant progress</p>",
        "id": 200835579,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592171980
    }
]