[
    {
        "content": "<p><code>map_top' : to_fun 0 = 1</code> looks wrong...</p>",
        "id": 199927668,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591387598
    },
    {
        "content": "<p>You could decide to map <code>0</code> to something (I would choose <code>0</code>, if you don't add infinity to <code>Z</code>). But then you need to exclude it in <code>map_add_leq'</code>.</p>",
        "id": 199927748,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591387643
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> Where do you get your errors? Could you edit your message, to add a comment in the code saying <code>-- error here</code>?</p>",
        "id": 199927843,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591387687
    },
    {
        "content": "<p><code>max_ideal</code> is not known, because the full name is <code>discrete_valuation_ring.max_ideal</code>.<br>\nYou could write <code>open discrete_valuation_ring</code> if you want to get access to it.</p>",
        "id": 199927908,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591387736
    },
    {
        "content": "<p>when I try to run your code block, I get <code>unknown identifier 'principal_ideal_domain'</code> is there a missing <code>open namespace</code>?</p>",
        "id": 199927925,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1591387745
    },
    {
        "content": "<p>Alternative: extend <code>local_ring R</code> as well... and then you only need <code>uniq_prime_ideal</code></p>",
        "id": 199927955,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591387761
    },
    {
        "content": "<p>For the other error, my guess is that you need <code>ideal.span ({\\pi} : set R)</code></p>",
        "id": 199928060,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591387809
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">discrete_valuation_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">open</span> <span class=\"n\">discrete_valuation_ring</span>\n<span class=\"n\">def</span> <span class=\"n\">uniformizers</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">π</span> <span class=\"bp\">|</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">({</span><span class=\"n\">π</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">max_ideal</span> <span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>will probably help</p>",
        "id": 199928093,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591387835
    },
    {
        "content": "<p>The <code>({π} : set R) </code> is a shame, this is Lean 3 elaborator not being smart enough. The rest is on you.</p>",
        "id": 199928165,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591387888
    },
    {
        "content": "<p>And you probably want to define a version of max_ideal where R is explicit.</p>",
        "id": 199928272,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591387937
    },
    {
        "content": "<p>But that's up to you.</p>",
        "id": 199928286,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591387949
    },
    {
        "content": "<p>Well, you don't want it to conflict with <code>local_ring</code>. So you should reuse that.</p>",
        "id": 199928325,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591387982
    },
    {
        "content": "<p>Also, could you please edit your first message above to change the topic to something more useful? The whole stream is for noob questions so your simply repeating information instead of having your own cosy little topic.</p>",
        "id": 199928446,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591388053
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> You need <code> ` </code> (next to the <code>1</code> on qwerty keyboards).</p>",
        "id": 199928963,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591388345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> Anyway, I should say that it's cool to see you attacking DVRs</p>",
        "id": 199929021,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591388389
    },
    {
        "content": "<p>Thank you all! It is now showing me the error</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">{</span><span class=\"n\">π</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"n\">max_ideal</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">max_ideal</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"err\">?</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"n\">R</span><span class=\"o\">],</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"err\">?</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">ideal</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n</code></pre></div>\n\n\n<p>I don't see why this type mismatch occurs, because both are in ideals in R..</p>",
        "id": 199947696,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591403131
    },
    {
        "content": "<p>The first type <code>Π (R : Type ?) [c : discrete_valuation_ring R], ideal R : Type (?+1)</code> cannot be unified with the second type <code>ideal R : Type u</code>. Do you see why?</p>",
        "id": 199947758,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591403198
    },
    {
        "content": "<p>I suspect <code>max_ideal</code> is missing an argument.</p>",
        "id": 199947789,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591403245
    },
    {
        "content": "<p>I am guessing I should explicitly define the type of max_ideal?</p>",
        "id": 199947847,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591403309
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideals</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">principal_ideal_domain</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">localization</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">max_ideal</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">maximal</span> <span class=\"o\">:</span> <span class=\"n\">max_ideal</span><span class=\"bp\">.</span><span class=\"n\">is_maximal</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">unique_prime_ideal</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">is_prime</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"err\">⊥</span> <span class=\"bp\">∨</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"n\">max_ideal</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- this doesn&#39;t work for me because `fraction_ring` was removed in a recent commit to mathlib:</span>\n<span class=\"c1\">-- https://github.com/leanprover-community/mathlib/commit/80ad9edc9a6d6d2971dd044f6079cc770e755020</span>\n<span class=\"c1\">-- structure discrete_valuation_ring.discrete_valuation (R : Type u) [discrete_valuation_ring R] extends localization.fraction_ring R →* ℤ :=</span>\n<span class=\"c1\">-- (map_top&#39; : to_fun 0 = 1)</span>\n<span class=\"c1\">-- (map_add_leq&#39; : ∀ x y, to_fun (x + y) ≤ max (to_fun x) (to_fun y))</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">discrete_valuation_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">open</span> <span class=\"n\">discrete_valuation_ring</span>\n<span class=\"n\">def</span> <span class=\"n\">uniformizers</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">π</span> <span class=\"bp\">|</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">({</span><span class=\"n\">π</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">max_ideal</span> <span class=\"o\">}</span>  <span class=\"c1\">-- fixed</span>\n</code></pre></div>",
        "id": 199948261,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591403950
    },
    {
        "content": "<p>You don't have to give <code>R</code> as a parameter to <code>discrete_valuation_ring.max_ideal</code>. The <code>discrete_valuation_ring</code> structure on <code>R</code> is found via type class inference.</p>",
        "id": 199948332,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591404065
    },
    {
        "content": "<p>Sorry, I'm not sure I understand. How do I define max_ideal without saying that it is an ideal of R? Perhaps I misunderstood.</p>",
        "id": 200029578,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591544949
    },
    {
        "content": "<p>Can you restate the problem, if there is still a problem?</p>",
        "id": 200029646,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591545044
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideals</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">principal_ideal_domain</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">localization</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">max_ideal</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">maximal</span> <span class=\"o\">:</span> <span class=\"n\">max_ideal</span><span class=\"bp\">.</span><span class=\"n\">is_maximal</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">unique_prime_ideal</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">is_prime</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"err\">⊥</span> <span class=\"bp\">∨</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"n\">max_ideal</span><span class=\"o\">)</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">discrete_valuation_ring</span><span class=\"bp\">.</span><span class=\"n\">discrete_valuation</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">discrete_valuation_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"kn\">extends</span> <span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">fraction_ring</span> <span class=\"n\">α</span> <span class=\"bp\">→*</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span>\n\n<span class=\"o\">(</span><span class=\"n\">map_top&#39;</span> <span class=\"o\">:</span> <span class=\"n\">to_fun</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"o\">(</span><span class=\"n\">map_add_leq&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">to_fun</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">to_fun</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">to_fun</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">discrete_valuation_ring</span> <span class=\"n\">α</span> <span class=\"o\">]</span>\n<span class=\"kn\">open</span> <span class=\"n\">discrete_valuation_ring</span>\n<span class=\"n\">def</span> <span class=\"n\">uniformizers</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">π</span> <span class=\"bp\">|</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">({</span><span class=\"n\">π</span><span class=\"o\">}</span> <span class=\"o\">:</span><span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">max_ideal</span> <span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>The last line gives me an error : </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">{</span><span class=\"n\">π</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"n\">max_ideal</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">max_ideal</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"err\">?</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">ideal</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"err\">?</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">ideal</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n</code></pre></div>",
        "id": 200029707,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591545128
    },
    {
        "content": "<p><code>max_ideal</code> is a function which eats two things, first R and second a proof that R is a DVR, and spits out the max ideal of R. Because R is in round brackets the user has to supply it themselves. Because the DVR parameter is in square brackets, Lean will supply it automatically.</p>",
        "id": 200029711,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591545147
    },
    {
        "content": "<p>wait, the error is elsewhere</p>",
        "id": 200029792,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591545296
    },
    {
        "content": "<p>Ashvni can you update your Lean to the current version? I don't get an error with the max_ideal, perhaps because I am a bit more up to date.</p>",
        "id": 200029856,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591545389
    },
    {
        "content": "<p><code>leanproject up</code> should do it (then close and open VS Code, it should restore all the files you had open etc)</p>",
        "id": 200029864,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591545419
    },
    {
        "content": "<p>(You can also restart Lean without restarting VS Code by hitting ctrl+shift+P and searching for the \"Lean: restart\" command.)</p>",
        "id": 200029925,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591545486
    },
    {
        "content": "<p>Still shows me the same error</p>",
        "id": 200030026,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591545678
    },
    {
        "content": "<p>That is strange. What does your <code>leanpkg.toml</code> say?</p>",
        "id": 200030273,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591546033
    },
    {
        "content": "<p>Did you update Lean and mathlib with <code>leanproject up</code>?</p>",
        "id": 200030282,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591546059
    },
    {
        "content": "<p>No, I did Lean : restart. That did not work. Sorry, how do I update Lean using  leanproject up?</p>",
        "id": 200030562,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591546483
    },
    {
        "content": "<p><code>leanproject up</code> is a command you need to enter at the command line.</p>",
        "id": 200030579,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591546526
    },
    {
        "content": "<p>It should work if you followed the recommended directions at <a href=\"https://leanprover-community.github.io/get_started.html#regular-install\">https://leanprover-community.github.io/get_started.html#regular-install</a></p>",
        "id": 200030624,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591546566
    },
    {
        "content": "<p>You have to run it in the directory of the project. It's the only trick you have to know about from the command line. It keeps your Lean and mathlib up to date so you have the latest tactics</p>",
        "id": 200030639,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591546610
    },
    {
        "content": "<p>As I've said before, I think you should extend <code>local_ring R</code>.</p>",
        "id": 200030719,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591546717
    },
    {
        "content": "<p>Can we just extend <code>local_ring R</code> and <code>principal_ideal_domain R</code>? That would then be the full definition, right? With old structure command true?</p>",
        "id": 200030837,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591546891
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideals</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">principal_ideal_domain</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">localization</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n  <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">local_ring</span> <span class=\"n\">R</span><span class=\"bp\">.</span>\n</code></pre></div>",
        "id": 200030896,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591546957
    },
    {
        "content": "<p>wait, that includes fields which are probably not DVRs</p>",
        "id": 200030917,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591547000
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n  <span class=\"kn\">extends</span> <span class=\"n\">principal_ideal_domain</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">local_ring</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">non_field</span> <span class=\"o\">:</span> <span class=\"n\">local_ring</span><span class=\"bp\">.</span><span class=\"n\">nonunits_ideal</span> <span class=\"n\">R</span> <span class=\"bp\">≠</span> <span class=\"err\">⊥</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>? What should the structure field be called?</p>",
        "id": 200031031,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591547127
    },
    {
        "content": "<p>There's no <code>local_ring.maximal_ideal</code>?</p>",
        "id": 200031111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591547232
    },
    {
        "content": "<p>I think <code>local_ring.max_ideal</code> should be an alias for <code>nonunits_ideal</code></p>",
        "id": 200031121,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591547256
    },
    {
        "content": "<p>Or the latter should simply be renamed</p>",
        "id": 200031129,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591547265
    },
    {
        "content": "<p>I tried to update with leanproject up, says command not found. Also, Lean is taking a really long time to check goals, and is now showing me 1001 errors. Maybe I should just reinstall Lean?</p>",
        "id": 200038016,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591557343
    },
    {
        "content": "<p>That shouldn't be necessary</p>",
        "id": 200038139,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591557537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> do you have <code>elan</code> installed?</p>",
        "id": 200038143,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591557547
    },
    {
        "content": "<p>How did you install Lean? The recommended instructions are at this link: <a href=\"https://leanprover-community.github.io/get_started.html#regular-install\">#install</a></p>",
        "id": 200038148,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591557558
    },
    {
        "content": "<p>I installed Lean a while ago, I am quite sure I followed the instructions. I don't think I have installed elan</p>",
        "id": 200038272,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591557743
    },
    {
        "content": "<p>The instructions include installing <code>elan</code> as one of the steps (and have for more than a year). Try going through the directions corresponding to the operating system you're using in the link above.</p>",
        "id": 200038475,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591558110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> In a terminal, could you run the command <code>which lean</code>?</p>",
        "id": 200038494,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591558181
    },
    {
        "content": "<p>If it says something that ends in <code>.elan/bin/lean</code>, then you have <code>elan</code> installed</p>",
        "id": 200038539,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591558206
    },
    {
        "content": "<p>Yes, I do have elan installed.</p>",
        "id": 200038548,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591558249
    },
    {
        "content": "<p>Did you install lean when you did that project with Lambert about six months ago?</p>",
        "id": 200038568,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591558286
    },
    {
        "content": "<p>Yes</p>",
        "id": 200038574,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591558298
    },
    {
        "content": "<p>If you have <code>elan</code>, then <code>leanproject up</code> should not cause problems</p>",
        "id": 200038587,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591558316
    },
    {
        "content": "<p>She might not have leanproject</p>",
        "id": 200038629,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591558326
    },
    {
        "content": "<p>She might have followed the instructions exactly as they were before leanproject appeared</p>",
        "id": 200038639,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591558343
    },
    {
        "content": "<p>Aah, I see. <span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> <code>leanproject</code> is a really useful tool. It will automatically download the latest version of mathlib, with precompiled binaries. So it exactly solves the problem of lean being very slow, and all those errors, etc...</p>",
        "id": 200038673,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591558412
    },
    {
        "content": "<p>I see. I will try to install it.</p>",
        "id": 200038798,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591558583
    },
    {
        "content": "<p>Installing leanproject didn't work out too well. The Lean checker was taking too long and was showing 1001 errors. So I uninstalled and reinstalled Lean. But the same thing continues. Also, when I try to use leanproject, I get : </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">WinError</span> <span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"n\">Access</span> <span class=\"n\">is</span> <span class=\"n\">denied</span><span class=\"o\">:</span> <span class=\"err\">&#39;</span><span class=\"n\">C</span><span class=\"o\">:</span><span class=\"err\">\\\\</span><span class=\"n\">Users</span><span class=\"err\">\\\\</span><span class=\"n\">ashvn</span><span class=\"err\">\\\\</span><span class=\"n\">my_project</span><span class=\"err\">\\\\</span><span class=\"bp\">_</span><span class=\"n\">target</span><span class=\"err\">\\\\</span><span class=\"n\">deps</span><span class=\"err\">\\\\</span><span class=\"n\">mathlib</span><span class=\"err\">\\\\</span><span class=\"bp\">.</span><span class=\"n\">git</span><span class=\"err\">\\\\</span><span class=\"n\">objects</span><span class=\"err\">\\\\</span><span class=\"mi\">04</span><span class=\"err\">\\\\</span><span class=\"mi\">7707</span><span class=\"n\">d4b8ad5af2062cd42ae6ea954fa9fdda62&#39;</span>\n</code></pre></div>",
        "id": 200087007,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591617414
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> Didn't you have similar issues at some point?</p>",
        "id": 200087508,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591617730
    },
    {
        "content": "<p>What do you get if you type <code>leanproject --version</code>?</p>",
        "id": 200091006,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591619926
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> yeah and then Patrick fixed it</p>",
        "id": 200096051,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1591622454
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">leanproject</span><span class=\"o\">,</span> <span class=\"n\">version</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8</span>\n</code></pre></div>",
        "id": 200119672,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591632146
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> aargh</p>",
        "id": 200133812,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591639138
    },
    {
        "content": "<p>That's a new error, not the same as Kenny's.</p>",
        "id": 200134407,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591639377
    },
    {
        "content": "<p>Well, it's sort of the same error: a Windows user</p>",
        "id": 200134437,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591639391
    },
    {
        "content": "<p>So what's the workaround?</p>",
        "id": 200134469,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591639410
    },
    {
        "content": "<p>Installing Linux?</p>",
        "id": 200134493,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591639423
    },
    {
        "content": "<p>Is there anything which takes up fewer gigabytes of memory?</p>",
        "id": 200134602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591639455
    },
    {
        "content": "<p>Before that maybe try with current leanproject master, since I changed stuff this morning.</p>",
        "id": 200134623,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591639468
    },
    {
        "content": "<p>I remember having to delete <code>_target</code> in an old Lean package on my Windows machine when I started using <code>leanproject</code> there. Maybe that will help?</p>",
        "id": 200135408,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591639833
    },
    {
        "content": "<p>This is worth trying.</p>",
        "id": 200136004,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591640115
    },
    {
        "content": "<p>This morning I was testing video conference with people that I'll interview for a job on Thursday. The first one couldn't hear what I was saying. After twenty minutes trying various stuff, he wrote he was using Windows. Not only he was using Windows, but he wasn't knowing the basics of using Windows. I had to write he should try rebooting his computer. And then it worked.</p>",
        "id": 200136304,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591640275
    },
    {
        "content": "<p>If only one could prove theorems this way</p>",
        "id": 200137310,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591640867
    },
    {
        "content": "<p>Did you ever try it?</p>",
        "id": 200137426,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591640916
    },
    {
        "content": "<p>I'm not on Windows so I tend not to reboot my computer</p>",
        "id": 200137465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591640947
    },
    {
        "content": "<p>This is the kind of stories that tell me from time to time that nothing changed since I stopped using Windows in 1999.</p>",
        "id": 200137786,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591641117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> try removing the subdirectory <code>_target</code> from the root directory of your project, and then running <code>leanproject up</code> again</p>",
        "id": 200138366,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591641326
    },
    {
        "content": "<p>It is finally working! Turns out my file was in the wrong location. Apologies for the bother!</p>",
        "id": 200144986,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591644632
    },
    {
        "content": "<p>Next time you want to talk about DVRs, start a chat in #maths because not everyone looks here</p>",
        "id": 200145052,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591644667
    },
    {
        "content": "<p>Congrats! It's a real pain, getting the setup right. But now you can finally start doing maths again...</p>",
        "id": 200145059,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591644673
    },
    {
        "content": "<p>Thanks for all the help!</p>",
        "id": 200145209,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591644757
    },
    {
        "content": "<p>If you understand what you were doing wrong and have suggestions to improve the documentation then we're  interested.</p>",
        "id": 200145288,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591644820
    },
    {
        "content": "<p>The problem is back : </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">localization</span>\n</code></pre></div>\n\n\n<p>gives the error</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">localization</span>\n<span class=\"n\">excessive</span> <span class=\"n\">memory</span> <span class=\"n\">consumption</span> <span class=\"n\">detected</span> <span class=\"n\">at</span> <span class=\"err\">&#39;</span><span class=\"n\">expression</span> <span class=\"n\">traversal&#39;</span> <span class=\"o\">(</span><span class=\"n\">potential</span> <span class=\"n\">solution</span><span class=\"o\">:</span> <span class=\"n\">increase</span> <span class=\"n\">memory</span> <span class=\"n\">consumption</span> <span class=\"n\">threshold</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>Also,  </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">leanproject</span> <span class=\"n\">up</span>\n</code></pre></div>\n\n\n<p>still does not work. This time, this is the error:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">WinError</span> <span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"n\">Access</span> <span class=\"n\">is</span> <span class=\"n\">denied</span><span class=\"o\">:</span> <span class=\"err\">&#39;</span><span class=\"n\">C</span><span class=\"o\">:</span><span class=\"err\">\\\\</span><span class=\"n\">Users</span><span class=\"err\">\\\\</span><span class=\"n\">ashvn</span><span class=\"err\">\\\\</span><span class=\"n\">my_project</span><span class=\"err\">\\\\</span><span class=\"bp\">_</span><span class=\"n\">target</span><span class=\"err\">\\\\</span><span class=\"n\">deps</span><span class=\"err\">\\\\</span><span class=\"n\">mathlib</span><span class=\"err\">\\\\</span><span class=\"bp\">.</span><span class=\"n\">git</span><span class=\"err\">\\\\</span><span class=\"n\">objects</span><span class=\"err\">\\\\</span><span class=\"mi\">04</span><span class=\"err\">\\\\</span><span class=\"mi\">7707</span><span class=\"n\">d4b8ad5af2062cd42ae6ea954fa9fdda62&#39;</span>\n</code></pre></div>\n\n\n<p>I am totally clueless now.</p>",
        "id": 200150119,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591647152
    },
    {
        "content": "<p>Did you try closing VS Code and re-opening?</p>",
        "id": 200150432,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591647328
    },
    {
        "content": "<p>Sometimes things run out of memory, and restarting can fix it. The leanproject error is a different issue.</p>",
        "id": 200150518,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591647364
    },
    {
        "content": "<p>I have restarted it a few times.</p>",
        "id": 200150570,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591647397
    },
    {
        "content": "<p>Can you send a screenshot? Did you \"open folder\" and open your project folder (if you just open a file, imports won't work)</p>",
        "id": 200150693,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591647466
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/1zNbF-Nim0HFELvw3Di6FNZM/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/1zNbF-Nim0HFELvw3Di6FNZM/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/1zNbF-Nim0HFELvw3Di6FNZM/image.png\"></a></div><p>I restarted and tried again, got a different error.</p>",
        "id": 200151064,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591647667
    },
    {
        "content": "<p>You don't have any errors there, you have an orange bar.</p>",
        "id": 200151768,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648041
    },
    {
        "content": "<p>The error is reporting what happened before you'd finished typing. Your problem is that you don't have a compiled mathlib. Please remove _target, upgrade <code>leanproject</code> and run <code>leanproject up</code> in the root directory of the project. And close VS Code, it's just making your computer hot.</p>",
        "id": 200151927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648119
    },
    {
        "content": "<p>In general, I've found <code>leanproject up</code> breaks my directories. You can try editing your <code>leanpkg.toml</code> to a more recent lean and mathlib dependencies, and then running <del>leanpkg get-cache</del> <code>leanproject get-cache</code></p>",
        "id": 200151960,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1591648140
    },
    {
        "content": "<p>Don't do this, it's not supported and for a beginner it will make matters worse</p>",
        "id": 200152016,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648181
    },
    {
        "content": "<p>An expert can perhaps try this approach</p>",
        "id": 200152028,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648189
    },
    {
        "content": "<p>Also, I think you mean <code>leanproject get-cache</code>, not <code>leanpkg get-cache</code>.</p>",
        "id": 200152121,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591648218
    },
    {
        "content": "<p><code>leanproject up</code> shouldn't break anything, and if it's breaking something then rather than working around it you should file an issue. Who knows what Yakov means but we are trying to get a new user with little experience in the command line up and running, and starting to use deprecated commands is, for this user, a step in the wrong direction. I totally appreciate that there are other ways to do this.</p>",
        "id": 200152255,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> if on the command line, in the directory called <code>my_project</code>, what happens if you type <code>lean --make DVR.lean</code>? Do you get an error? Does the command succeed, or just sit there doing nothing?</p>",
        "id": 200152587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648459
    },
    {
        "content": "<p>It does not show an error, I don't know if it is successful, some parsing seems to be happening</p>",
        "id": 200153390,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591648883
    },
    {
        "content": "<p>I think your problem is that you don't have a compiled Lean. Can you try updating <code>leanproject</code> to 0.0.9?</p>",
        "id": 200153438,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648919
    },
    {
        "content": "<p>Just do what you did to install it -- it got updated today.</p>",
        "id": 200153488,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591648931
    },
    {
        "content": "<p>Then try, in your project, <code>rm -rf _target</code> and then <code>leanproject up</code> again. Do all of these with the command line in root directory of your project folder. You can check to see if the <code>rm</code> command worked by typing <code>ls</code> before and after -- before, <code>ls</code> should show a directory called <code>_target</code> but afterwards it should be gone</p>",
        "id": 200153607,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591649008
    },
    {
        "content": "<p>I don't think 0.0.9 has been released yet: <a href=\"https://pypi.org/project/mathlibtools/\">https://pypi.org/project/mathlibtools/</a></p>",
        "id": 200153637,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591649032
    },
    {
        "content": "<p>Thanks Bryan. In that case, just try removing _target and seeing what happens.</p>",
        "id": 200153726,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591649071
    },
    {
        "content": "<p>If you get the same error about access is denied, I'll have to leave you in the hands of someone who understands Windows. <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> can you suggest anything less drastic than editing leanpkg.toml? I really want this to be a last resort because it will be hard to explain</p>",
        "id": 200153810,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591649139
    },
    {
        "content": "<p>I would remove the entire directory using File Explorer, and start over with a <code>leanproject get  ...</code></p>",
        "id": 200153922,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1591649216
    },
    {
        "content": "<p>and hope it works! What's the leanproject project name that is causing issues? I can try it on my windows machine</p>",
        "id": 200153972,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1591649252
    },
    {
        "content": "<p>ha ha! Ashvni this is certainly another approach! Is the project you're working on on GitHub?</p>",
        "id": 200154092,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591649322
    },
    {
        "content": "<p>If not, then try <code>leanproject new dvr-project</code> and then copy stuff over. Perhaps this is the simplest solution.</p>",
        "id": 200154246,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591649405
    },
    {
        "content": "<p>Output should look something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ leanproject new dvr_project\n&gt; mkdir -p dvr_project\n&gt; cd dvr_project\n&gt; mkdir src\n&gt; git init -q\n&gt; git checkout -b lean-3.4.2\nSwitched to a new branch &#39;lean-3.4.2&#39;\nconfiguring dvr_project 0.1\nAdding mathlib\nmathlib: cloning https://github.com/leanprover-community/mathlib to _target/deps/mathlib\n&gt; git clone https://github.com/leanprover-community/mathlib _target/deps/mathlib\nCloning into &#39;_target/deps/mathlib&#39;...\nremote: Enumerating objects: 290, done.\nremote: Counting objects: 100% (290/290), done.\nremote: Compressing objects: 100% (214/214), done.\nremote: Total 51776 (delta 181), reused 130 (delta 74), pack-reused 51486\nReceiving objects: 100% (51776/51776), 22.32 MiB | 1.07 MiB/s, done.\nResolving deltas: 100% (39965/39965), done.\n&gt; git checkout --detach 470ccd328e15391cf328e0e006e13a06ff7d7b29    # in directory _target/deps/mathlib\nHEAD is now at 470ccd32 chore(scripts): update nolints.txt (#2993)\nconfiguring dvr_project 0.1\nmathlib: trying to update _target/deps/mathlib to revision 470ccd328e15391cf328e0e006e13a06ff7d7b29\n&gt; git checkout --detach 470ccd328e15391cf328e0e006e13a06ff7d7b29    # in directory _target/deps/mathlib\nHEAD is now at 470ccd32 chore(scripts): update nolints.txt (#2993)\nLooking for local mathlib oleans\nLooking for remote mathlib oleans\nTrying to download https://oleanstorage.azureedge.net/mathlib/470ccd328e15391cf328e0e006e13a06ff7d7b29.tar.xz to /home/buzzard/.mathlib/470ccd328e15391cf328e0e006e13a06ff7d7b29.tar.xz\n100%|█████████████████████████████████████████████████████████████████████████████████████| 22.5M/22.5M [00:21&lt;00:00, 1.07MiB/s]\nFound mathlib oleans at https://oleanstorage.azureedge.net/mathlib/\n</code></pre></div>",
        "id": 200154327,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591649442
    },
    {
        "content": "<p>I tried removing target, and </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">leanproject</span> <span class=\"n\">up</span>\n</code></pre></div>\n\n\n<p>worked. Currently, it shows 10 problems instead of 1001, so I assume things are working okay</p>",
        "id": 200154337,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1591649448
    },
    {
        "content": "<p>rofl, working OK is 0 problems :D</p>",
        "id": 200154371,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591649464
    },
    {
        "content": "<p>Glad you got things working! I opened an issue: <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/55\">mathlib-tools#55</a></p>",
        "id": 200156480,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591650669
    }
]