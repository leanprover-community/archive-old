[
    {
        "content": "<p>I tried to argue that <code>2 ∣ a*a</code> implies <code>2 ∣ a</code> because 2 is prime (see <code>have a_even : 2 ∣ a</code> below). I want to use the theorem <code>nat.prime.dvd_mul</code>, but there are always errors when I try to use it. How should I use it?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.prime</span> <span class=\"c1\">-- for nat.prime.dvd_mul</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">sqrt2_irrational</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">gcd</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">a2_even</span><span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">dvd.intro</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">a_even</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">nat.prime.dvd_mul</span> <span class=\"o\">(</span><span class=\"n\">nat.prime</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">a2_even</span><span class=\"o\">,</span> <span class=\"c1\">-- problem here</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 318355999,
        "sender_full_name": "Hank",
        "timestamp": 1672286176
    },
    {
        "content": "<p>How does it fail?</p>",
        "id": 318363809,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1672294662
    },
    {
        "content": "<p>If I do <code>rw nat.prime.dvd_mul (nat.prime 2) at a2_even</code>, I get the error message </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">nat.prime.dvd_mul</span> <span class=\"o\">(</span><span class=\"n\">nat.prime</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">nat.prime</span> <span class=\"mi\">2</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Prop</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">nat.prime</span> <span class=\"bp\">?</span><span class=\"n\">m_1</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</code></pre></div>\n<p>If I do <code>rw nat.prime.dvd_mul 2 a a (nat.prime 2) at a2_even</code>, I get the error message </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"n\">pre</span><span class=\"bp\">-</span><span class=\"n\">numeral</span><span class=\"o\">,</span> <span class=\"kd\">universe</span> <span class=\"n\">level</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>I don't know how to use this theorem correctly and would appreciate any guidance.</p>",
        "id": 318366218,
        "sender_full_name": "Hank",
        "timestamp": 1672296541
    },
    {
        "content": "<p>You're putting the type <code>nat.prime 2</code> where a proof that 2 is prime is needed.</p>",
        "id": 318368962,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672298864
    },
    {
        "content": "<p>Instead you could use, for instance, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.prime_two\">docs#nat.prime_two</a></p>",
        "id": 318369018,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672298898
    },
    {
        "content": "<p>or <code>by norm_num</code></p>",
        "id": 318369026,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672298904
    }
]