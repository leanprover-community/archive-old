[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">ε</span>  <span class=\"o\">:</span> <span class=\"n\">real</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span> <span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span> <span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>Is there some lemma like this?</p>",
        "id": 203677274,
        "sender_full_name": "Iocta",
        "timestamp": 1594615147
    },
    {
        "content": "<p>I doubt you'll find that \"out of the box\" in the sense that <code>library_search</code> can solve it.</p>",
        "id": 203677951,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594616140
    },
    {
        "content": "<p>but the result with two different epsilons is hopefully findable by library_search</p>",
        "id": 203677999,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594616168
    },
    {
        "content": "<p>I don't see it </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">ε</span> <span class=\"n\">ε&#39;</span>   <span class=\"o\">:</span> <span class=\"n\">real</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"bp\">→</span> <span class=\"n\">ε&#39;</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span>\n<span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε&#39;</span>\n<span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span> <span class=\"bp\">+</span> <span class=\"n\">ε&#39;</span>  <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">e_pos</span> <span class=\"n\">e&#39;_pos</span> <span class=\"n\">hac</span> <span class=\"n\">hbc</span><span class=\"o\">,</span>\n<span class=\"n\">library_search</span><span class=\"o\">,</span> <span class=\"c1\">-- doesn&#39;t find it</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 203680224,
        "sender_full_name": "Iocta",
        "timestamp": 1594619340
    },
    {
        "content": "<p>I think <code>linarith</code> might be what you're looking for?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">notation</span> <span class=\"bp\">`|`</span> <span class=\"n\">x</span> <span class=\"bp\">`|`</span> <span class=\"o\">:=</span> <span class=\"n\">abs</span> <span class=\"n\">x</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">ε</span> <span class=\"n\">ε&#39;</span> <span class=\"o\">:</span> <span class=\"n\">real</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"bp\">→</span> <span class=\"n\">ε&#39;</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span>\n<span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε&#39;</span>\n<span class=\"bp\">→</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span> <span class=\"bp\">+</span> <span class=\"n\">ε&#39;</span>  <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">e_pos</span> <span class=\"n\">e&#39;_pos</span> <span class=\"n\">hac</span> <span class=\"n\">hbc</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">abs_le</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n<span class=\"n\">split</span><span class=\"bp\">;</span>\n  <span class=\"n\">linarith</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 203680881,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1594620325
    }
]