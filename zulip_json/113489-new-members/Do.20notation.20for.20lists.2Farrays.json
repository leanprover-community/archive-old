[
    {
        "content": "<p>Coming from other fp languages, this seems like something I should be able to do, but lean tells me my goal (List Nat) is not a monad application. What am I doing wrong? Do I need to import something?</p>",
        "id": 313737086,
        "sender_full_name": "Matei Adriel",
        "timestamp": 1670104391
    },
    {
        "content": "<p>I am guessing this is about Lean 4. Could you briefly explain what you are trying to do? Are you trying to use the list monad which joins lists on <code>&gt;&gt;=</code>, or trying to do something with a list inside of a do-block whose type is another monad?</p>",
        "id": 313747651,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1670113185
    },
    {
        "content": "<p>List is not a monad in lean4 on purpose. There is a thread about this somewhere in <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> but the bottom line was that people would expect it to be lazy and the default leean4 isn't</p>",
        "id": 313794771,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1670153019
    },
    {
        "content": "<p>Note there is still a <code>for</code> loop notation in Lean 4 as well as the usual <code>map</code>.  But unlike say Scala, neither is not based on list monads (but the for loop notation does require being inside a <code>do</code> block of some monad, such as <code>IO</code>).</p>",
        "id": 313799183,
        "sender_full_name": "Jason Rute",
        "timestamp": 1670155325
    },
    {
        "content": "<p>I think <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/List.20Functor\">#lean4 &gt; List Functor</a> might be the discussion.</p>",
        "id": 313799700,
        "sender_full_name": "Jason Rute",
        "timestamp": 1670155582
    },
    {
        "content": "<p>I’m curious about the lazy comment. Scala’s lists aren’t lazy as far as I can tell, but they have <code>List</code> (and other iterables) as a monad.  Indeed <code>for</code> loop notation and <code>do</code> notation are identical (with them using <code>for</code> as the keyword).  However, I haven’t read the full conversation  to catch the details.</p>",
        "id": 313800171,
        "sender_full_name": "Jason Rute",
        "timestamp": 1670155816
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/113489-new-members/topic/Do.20notation.20for.20lists.2Farrays/near/313794771\">said</a>:</p>\n<blockquote>\n<p>List is not a monad in lean4 on purpose. There is a thread about this somewhere in <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> but the bottom line was that people would expect it to be lazy and the default leean4 isn't</p>\n</blockquote>\n<p>I for one never expected it to be lazy (I'm primarily coming from Purescript). </p>\n<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> <a href=\"#narrow/stream/113489-new-members/topic/Do.20notation.20for.20lists.2Farrays/near/313747651\">said</a>:</p>\n<blockquote>\n<p>I am guessing this is about Lean 4. Could you briefly explain what you are trying to do? Are you trying to use the list monad which joins lists on <code>&gt;&gt;=</code>, or trying to do something with a list inside of a do-block whose type is another monad?</p>\n</blockquote>\n<p>I was trying to basically implement List.inter myself (I couldn't find it because I was expecting the name to be List.intersection)</p>",
        "id": 313909216,
        "sender_full_name": "Matei Adriel",
        "timestamp": 1670228362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"486803\">Matei Adriel</span> <a href=\"#narrow/stream/113489-new-members/topic/Do.20notation.20for.20lists.2Farrays/near/313909216\">said</a>:</p>\n<blockquote>\n<p>I was trying to basically implement List.inter myself (I couldn't find it because I was expecting the name to be List.intersection)</p>\n</blockquote>\n<p>Okay, could you post the code you tried that gave you this error? It is hard to guess what you are trying without seeing it.</p>",
        "id": 314089375,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1670262487
    }
]