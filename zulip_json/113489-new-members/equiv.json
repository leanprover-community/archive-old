[
    {
        "content": "<p>Why does <code>equiv</code> means equivalence relationship? It only encapsulates a bijective function and its inverse. </p>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/data/equiv/basic.html#equiv\">https://leanprover-community.github.io/mathlib_docs/data/equiv/basic.html#equiv</a></p>",
        "id": 273996438,
        "sender_full_name": "abaaba",
        "timestamp": 1646324179
    },
    {
        "content": "<p>As written just below the definition, <code>α ≃ β</code> is the type of functions from <code>α → β</code> with a two-sided inverse, so <code>equiv</code> doesn't mean \"equivalence relation\" here. <code>α ≃ β</code> is the type (read set if you prefer) of bijective functions <code>α → β</code>.</p>",
        "id": 273996942,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646324393
    },
    {
        "content": "<blockquote>\n<p><code>α ≃ β</code> is the type (read set if you prefer) of bijective functions <code>α → β</code>.</p>\n</blockquote>\n<p>I see. But how is that related with word \"equivalence\"?</p>",
        "id": 273997367,
        "sender_full_name": "abaaba",
        "timestamp": 1646324542
    },
    {
        "content": "<p>I think the name comes from <em>equivalent set</em>, i.e. sets with same cardinality, i.e. <code>α</code> and <code>β</code> are equivalent if there is a bijection <code>α → β</code>. Then of course being equivalent is an equivalence relation.</p>",
        "id": 273997639,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646324652
    },
    {
        "content": "<p>At the top, the docs do say it's <code>an equivalence between types ... used to express that Types/Sorts are equivalent</code>, not that this is \"the notion of an equivalence relation\". You might be more satisfied with <a href=\"https://leanprover-community.github.io/mathlib_docs/init/logic.html#equivalence\">https://leanprover-community.github.io/mathlib_docs/init/logic.html#equivalence</a>.</p>",
        "id": 274000299,
        "sender_full_name": "Chris B",
        "timestamp": 1646325656
    },
    {
        "content": "<p>Oh I see, but honestly what a confusing naming .... equivalent set means sets with same cardinality .... <br>\nAnd still, why does the page says \"<em>we use this (and not equality!) to express that various Types or Sorts are equivalent.</em>\" Does the \"equivalent\" here also means the type have same cardinality (or in case of infinite types, have a bijection relation between them)?</p>",
        "id": 274001875,
        "sender_full_name": "abaaba",
        "timestamp": 1646326261
    },
    {
        "content": "<p>Equality of type is an evil concept, you should almost always avoid it. Yes, \"equivalent\" means \"same cardinality\". This is common mathematical terminology.</p>",
        "id": 274002704,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646326610
    },
    {
        "content": "<p>Note that it has <code>refl</code>, <code>symm</code>, and <code>trans</code> that have the same form as an equivalence relation, except that <code>Prop</code> is replaced with a more general <code>Sort</code>.</p>",
        "id": 274014776,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1646331192
    },
    {
        "content": "<p>Honestly I think \"equivalence\" is a weird word to use for this from the standpoint of ordinary math--maybe it comes from intensional type theory/homotopy type theory?</p>",
        "id": 274014899,
        "sender_full_name": "Reid Barton",
        "timestamp": 1646331241
    },
    {
        "content": "<p>I would just say isomorphism (or bijection)</p>",
        "id": 274014979,
        "sender_full_name": "Reid Barton",
        "timestamp": 1646331266
    },
    {
        "content": "<p>Maybe it depends on your native language</p>",
        "id": 274016095,
        "sender_full_name": "Reid Barton",
        "timestamp": 1646331778
    },
    {
        "content": "<p>What is additionally confusing is that we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_equiv\">docs#has_equiv</a> which is used for notation for equivalence relations (via setoid instances)</p>",
        "id": 274018700,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646332863
    },
    {
        "content": "<p>An <code>equiv</code> is an explicit bijection / 1-1 correspondence, usually a canonical one, it's not a Prop so not just \"having same cardinality\"; <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.is_equivalent\">docs#cardinal.is_equivalent</a> is defined to be the Prop <code>nonempty (α ≃ β)</code>. It can be used to state that two structures are <a href=\"https://mathoverflow.net/questions/15731/cryptomorphisms\">cryptomorphic</a>, i.e. are mathematically equivalent concepts, and carries the functions to go between them.</p>",
        "id": 274036472,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1646340003
    },
    {
        "content": "<p>I was also very confused by the usage of the word \"equivalence\" and the abbreviation <code>equiv</code> for this concept, when I started learning Lean. It's one of those things like \"lift\" which you kind of feel you're stuck with; maybe when mathematicians are writing their own theorem provers they can use language we find more appropriate.</p>",
        "id": 274054347,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1646348900
    },
    {
        "content": "<p>or \"type\"</p>",
        "id": 274059730,
        "sender_full_name": "Reid Barton",
        "timestamp": 1646352300
    },
    {
        "content": "<p>It's just another word for \"set\"</p>",
        "id": 274060720,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1646353025
    },
    {
        "content": "<p>set, kind, sort, collection, group, type, conglomerate</p>",
        "id": 274060938,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646353199
    },
    {
        "content": "<p>we're really hard on synonyms for \"bunch of stuff\"</p>",
        "id": 274060997,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646353223
    },
    {
        "content": "<p>to the point that it becomes difficult to have plain english discussions about bunches of stuff because you have to avoid all the synonyms that have been given a technical meaning</p>",
        "id": 274061193,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646353369
    },
    {
        "content": "<p>I propose murder (as in of crows, not of mathematicians)</p>",
        "id": 274062371,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1646354089
    },
    {
        "content": "<p>You mean you can't have a normal conversation because mathematicians lack an inner product?</p>",
        "id": 274062592,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646354293
    },
    {
        "content": "<p>wah, I don't get it</p>",
        "id": 274062948,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1646354577
    },
    {
        "content": "<p>(orthonormality)</p>",
        "id": 274065344,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646356380
    },
    {
        "content": "<p>This is probably because of my CS background, but the idea of \"set\" doesn't work well as a replacement for \"type\" in my mind. Things of the same \"type\" are necessarily intimately related by their nature, whereas things of the same \"set\" may not, depending on how the set was built.</p>\n<p>This is probably dependent on mother tongue, but from those words that Mario listed, \"type\", \"sort\" and \"kind\" are the true synonyms for me. And the other words would form another cluster of synonyms</p>",
        "id": 274072036,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1646361739
    },
    {
        "content": "<p>And there goes another word: \"cluster\" <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 274072134,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1646361841
    }
]