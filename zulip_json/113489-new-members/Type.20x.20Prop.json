[
    {
        "content": "<p>Is a dependent pair from Type to Prop valid? I tried writing the following type signature</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">lengthPresMap</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n  <span class=\"bp\">-&gt;</span><span class=\"c1\">-----------------------</span>\n  <span class=\"bp\">Σ</span> <span class=\"n\">bs</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">β</span><span class=\"o\">,</span> <span class=\"n\">as.length</span> <span class=\"bp\">=</span> <span class=\"n\">bs.length</span>\n</code></pre></div>\n<p>but it fails with the error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">List.length</span> <span class=\"n\">as</span> <span class=\"bp\">=</span> <span class=\"n\">List.length</span> <span class=\"n\">bs</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Type</span> <span class=\"bp\">?</span><span class=\"n\">u.16</span>\n</code></pre></div>",
        "id": 223837658,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1611525353
    },
    {
        "content": "<p>use subtype</p>",
        "id": 223838152,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1611525710
    },
    {
        "content": "<p>How do I do this? I don't see it anywhere in the lean4 codebase</p>",
        "id": 223838360,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1611525802
    },
    {
        "content": "<p>Do you want <a href=\"https://leanprover-community.github.io/mathlib_docs/find/psigma\">docs#psigma</a>?</p>",
        "id": 223839506,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611527334
    },
    {
        "content": "<p>Oh, this is #lean4</p>",
        "id": 223839520,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611527349
    },
    {
        "content": "<p>Yes, questions about Lean4 in new members are a bit confusing.</p>",
        "id": 223839529,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611527372
    },
    {
        "content": "<p>But it seems that the milestone release of Lean 4 actually brought us new users that use only Lean 4.</p>",
        "id": 223839570,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611527402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Type.20x.20Prop/near/223839529\">said</a>:</p>\n<blockquote>\n<p>Yes, questions about Lean4 in new members are a bit confusing.</p>\n</blockquote>\n<p>yes, sorry I'm a new user who's using lean4 :(</p>",
        "id": 223839585,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1611527414
    },
    {
        "content": "<p>You don't have to be sorry, we're simply having a small organization issue.</p>",
        "id": 223839597,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611527439
    },
    {
        "content": "<p>In the mean time, you should probably post in the lean4 stream.</p>",
        "id": 223839729,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611527629
    }
]