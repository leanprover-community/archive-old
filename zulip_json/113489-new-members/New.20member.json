[
    {
        "content": "<p>Hi Everyone, </p>\n<p>I'm slowly getting familiar with Zulip/Lean. I want to learn more math so it could help me abstract complex programming problems so it'll be easier to reason about them and synthesis solutions and understanding. Is this the right place? </p>\n<p>The last math education was Calc 3 in Community College which I failed. I really want to understand Category theory. I feel the web and it's interactions are so complex that I feel a constant need to find a new language to simplify all the complex ideas that programmers have to deal with.</p>\n<p>Any ideas on where a person like me can start?</p>\n<p>I'm curious about dependent type theory and Category theory.</p>",
        "id": 260316317,
        "sender_full_name": "Andre",
        "timestamp": 1636051511
    },
    {
        "content": "<p>For category theory, if you are first and foremost a programmer, there is always the classical by now book by Bartosz Milewski: <a href=\"https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/\">https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/</a></p>",
        "id": 260318159,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1636052311
    },
    {
        "content": "<p>I've been hearing a buzz about applied category theory recently.  I haven't read it, but I've paged through <a href=\"https://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf\">7 sketches in compositionality: an invitation to applied category theory</a>. If you don't have some abstract algebra background, I imagine it would be tough going without guidance, but at the least it looks like it might give you some idea of what the subject is about.</p>",
        "id": 260318166,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636052314
    },
    {
        "content": "<p>Hi everyone, </p>\n<p>Following Jeremy Avigad's advice from today's Topos Institute Colloquium talk I'd like to introduce myself and ask a couple of basic questions regarding how to better learn Lean. I'm a graduate student at Notre Dame currently interested in factorization homology and category theory. I have a fairly strong background in topology and category theory so I think I might be well-equipped to formalize those two areas, if that hasn't been done already.</p>\n<p>So my first question is: what is the best resource to learn the fundamentals of Lean, dependent type theory, and formalization?<br>\nMy second question (from which I will benefit only in the future) is: once I'm sufficiently fluent in Lean, where can I find a list of things that need to be formalized?</p>\n<p>Thank you in advance!</p>",
        "id": 260322726,
        "sender_full_name": "Lorenzo Riva",
        "timestamp": 1636054395
    },
    {
        "content": "<p>Welcome Lorenzo! We've got a page with learning resources for Lean 3 here, which is hopefully a good starting point: <a href=\"https://leanprover-community.github.io/learn.html\">https://leanprover-community.github.io/learn.html</a></p>",
        "id": 260322877,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1636054483
    },
    {
        "content": "<p>A curated list of what's in mathlib <a href=\"https://leanprover-community.github.io/mathlib-overview.html\">https://leanprover-community.github.io/mathlib-overview.html</a></p>\n<p>Specifically undergraduate math that's in mathlib <a href=\"https://leanprover-community.github.io/undergrad.html\">https://leanprover-community.github.io/undergrad.html</a> and what's not in mathlib <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">https://leanprover-community.github.io/undergrad_todo.html</a></p>\n<p>The mathlib docs: <a href=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a></p>",
        "id": 260322982,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636054557
    },
    {
        "content": "<p>About your second question, there's plenty to do! What area are you interested in?</p>",
        "id": 260323031,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636054565
    },
    {
        "content": "<p>A solid approach, too, is to formalize something that interests you, whether or not it's already in mathlib, and along the way you'll start finding missing lemmas that might be generally useful, and after some polishing they can be your first contributions. Mathlib is pretty big, so that can help with getting a feel for what's in it, too.</p>",
        "id": 260323496,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636054816
    },
    {
        "content": "<p>I guess one of my first contributions was the trivial statement <a href=\"https://github.com/leanprover-community/mathlib/issues/3391\">#3391</a> (how have there been almost 7000 PRs since then??) and it was from some discussion about how to make proofs involving nested quantifiers nicer.</p>",
        "id": 260324364,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636055255
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260318166\">said</a>:</p>\n<blockquote>\n<p>I've been hearing a buzz about applied category theory recently.  I haven't read it, but I've paged through <a href=\"https://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf\">7 sketches in compositionality: an invitation to applied category theory</a>. If you don't have some abstract algebra background, I imagine it would be tough going without guidance, but at the least it looks like it might give you some idea of what the subject is about.</p>\n</blockquote>\n<p>Thank you! I don't have an abstract algebra background and it is kinda tough going in so far without guidance. However, I have a strange feeling pushing me to continue.</p>",
        "id": 260326773,
        "sender_full_name": "Andre",
        "timestamp": 1636056337
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260324364\">said</a>:</p>\n<blockquote>\n<p>I guess one of my first contributions was the trivial statement <a href=\"https://github.com/leanprover-community/mathlib/issues/3391\">#3391</a> (how have there been almost 7000 PRs since then??) and it was from some discussion about how to make proofs involving nested quantifiers nicer.</p>\n</blockquote>\n<p>I know!! I started in MArch and the number of PR is already close to doubling.</p>",
        "id": 260329854,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636057739
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260322877\">said</a>:</p>\n<blockquote>\n<p>Welcome Lorenzo! We've got a page with learning resources for Lean 3 here, which is hopefully a good starting point: <a href=\"https://leanprover-community.github.io/learn.html\">https://leanprover-community.github.io/learn.html</a></p>\n</blockquote>\n<p>Thanks! I'll start with this as soon as I can.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260322982\">said</a>:</p>\n<blockquote>\n<p>A curated list of what's in mathlib <a href=\"https://leanprover-community.github.io/mathlib-overview.html\">https://leanprover-community.github.io/mathlib-overview.html</a></p>\n<p>Specifically undergraduate math that's in mathlib <a href=\"https://leanprover-community.github.io/undergrad.html\">https://leanprover-community.github.io/undergrad.html</a> and what's not in mathlib <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">https://leanprover-community.github.io/undergrad_todo.html</a></p>\n<p>The mathlib docs: <a href=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a></p>\n</blockquote>\n<p>Thank you!</p>",
        "id": 260361130,
        "sender_full_name": "Lorenzo Riva",
        "timestamp": 1636081063
    },
    {
        "content": "<p>Yay factorization homology! Welcome.</p>\n<p>Unfortunately we don't have a particularly good \"todo list\" for formalisation, and it can take some experimentation / asking around to identifying the boundary of what is currently possible. Throwing out ideas here on zulip generally gets fast feedback.</p>",
        "id": 260540236,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636238171
    },
    {
        "content": "<p>A lot of the category theory library has been built with the beginnings of algebraic geometry (spec / gamma) or the beginning of homological algebra in mind.</p>",
        "id": 260540316,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636238304
    },
    {
        "content": "<p>No infinity categories yet, of any variety.</p>",
        "id": 260540323,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636238325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455367\">@Lorenzo Riva</span> blowing my own trumpet, but <a href=\"https://github.com/ImperialCollegeLondon/formalising-mathematics\">here</a> is a course I gave to math PhD students about undergraduate mathematics in Lean, and <a href=\"https://github.com/ImperialCollegeLondon/M40001_lean/blob/master/src/2021/README.md\">here</a> is the course I taught this term as part of the \"intro to proof\" course at Imperial. These resources get you straight in to the mathematics without bothering too much about the type theory story.</p>",
        "id": 260540990,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636239444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260540990\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"455367\">Lorenzo Riva</span> blowing my own trumpet, but <a href=\"https://github.com/ImperialCollegeLondon/formalising-mathematics\">here</a> is a course I gave to math PhD students about undergraduate mathematics in Lean, and <a href=\"https://github.com/ImperialCollegeLondon/M40001_lean/blob/master/src/2021/README.md\">here</a> is the course I taught this term as part of the \"intro to proof\" course at Imperial. These resources get you straight in to the mathematics without bothering too much about the type theory story.</p>\n</blockquote>\n<p>Thank you! I started with the two interactive textbooks mentioned on the website but I'll definitely take a look at your material.</p>",
        "id": 260545562,
        "sender_full_name": "Lorenzo Riva",
        "timestamp": 1636246421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260540323\">said</a>:</p>\n<blockquote>\n<p>No infinity categories yet, of any variety.</p>\n</blockquote>\n<p>What about simplicial sets? That might be one of the directions I can take and then transition to infinity-categories</p>",
        "id": 260545618,
        "sender_full_name": "Lorenzo Riva",
        "timestamp": 1636246498
    },
    {
        "content": "<p>We have simplicial sets (and simplicial objects in general) around <code>algebraic_topology/simplicial</code> e.g. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/sSet\">docs#sSet</a></p>",
        "id": 260546335,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1636247594
    },
    {
        "content": "<p>Unfortunately, we don't yet have simplicial homotopy, but it should be a very doable project!</p>",
        "id": 260546636,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1636248043
    },
    {
        "content": "<p>Simplifical stuff working towards e.g. Rezk's notes on quasicategories would be a great project for someone who knows this stuff. The mathlib prerequisites are hopefully mostly in place??</p>",
        "id": 260547747,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636249957
    },
    {
        "content": "<p>Ahoi! I'm Hanno, a former PhD student from Bonn (application of homotopical algebra to knot theory), did some formal verification in Coq for a security company afterwards, and these days I'm working on post-quantum cryptography at Arm Research in Cambridge, UK.<br>\nI joined because out of curiosity about the development of Lean and the \"news\" about the liquid tensor experiment :-)</p>",
        "id": 260557310,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1636266154
    },
    {
        "content": "<p>Hey! We're meeting every Wednesday in the CMS from 3 to 6pm, if you wanna join!</p>",
        "id": 260559175,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636269534
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260559175\">said</a>:</p>\n<blockquote>\n<p>Hey! We're meeting every Wednesday in the CMS from 3 to 6pm, if you wanna join!</p>\n</blockquote>\n<p>Thanks Yaël! Is that a general meeting about Lean, or specific to liquid tensor / any other project?</p>",
        "id": 260619777,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1636353686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455830\">@Hanno Becker</span> I've never been to these meetings. But I think they are Lean-generic</p>",
        "id": 260619849,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636353787
    },
    {
        "content": "<p>Yes, it's pretty much an excuse to hang out with other Lean users in person (with laptops), from my sample of 1.</p>",
        "id": 260619925,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636353872
    },
    {
        "content": "<p>Sometimes mathlib maintainers are persuaded to come along so that they can be haggled about reviewing PRs.</p>",
        "id": 260619961,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636353955
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260546636\">said</a>:</p>\n<blockquote>\n<p>Unfortunately, we don't yet have simplicial homotopy, but it should be a very doable project!</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"455367\">@Lorenzo Riva</span>  Note that simplicial <em>homology</em> (two letters differ <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>) is basically done in the liquid tensor experiment. Just pointing this out to avoid duplication.</p>",
        "id": 260625485,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636359559
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/New.20member/near/260619961\">said</a>:</p>\n<blockquote>\n<p>Sometimes mathlib maintainers are persuaded to come along so that they can be haggled about reviewing PRs.</p>\n</blockquote>\n<p>again with a sample size of one <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 260626668,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636360438
    },
    {
        "content": "<p>I assume you will be coming this week, Eric, right??</p>",
        "id": 260626757,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636360483
    }
]