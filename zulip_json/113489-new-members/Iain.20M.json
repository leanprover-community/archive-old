[
    {
        "content": "<p>Hi all! Introducing myself as per the local custom - I'm Iain, a software developer from the UK. I did an MMath about a decade ago, but decided against doing a PhD in combinatorics for reasons I don't really remember any more, and have been writing code for money ever since.</p>\n<p>I have a long running interest in the idea of digitally formalising mathematics, as it's the intersection of two things I understand and enjoy. I've been dabbling in it on the side for a while, going as far as to play with writing my own (rather unpolished) proof assistant / explorer. I'm particularly interested in how to make libraries of formalised proofs explorable, accessible and readable without specialised knowledge, and would very much appreciate pointers to any active work in this area (Lean or otherwise).</p>\n<p>At the moment I'm keen just to learn more about Lean and how it works in practice, hopefully by making some contributions to mathlib and getting some experience using it. I look forward to asking a bunch of beginner questions here shortly :)</p>",
        "id": 206679600,
        "sender_full_name": "Iain Monro",
        "timestamp": 1597228851
    },
    {
        "content": "<blockquote>\n<p>I'm particularly interested in how to make libraries of formalised proofs explorable, accessible and readable without specialised knowledge, and would very much appreciate pointers to any active work in this area (Lean or otherwise).</p>\n</blockquote>\n<p>There are definitely people around thinking about this. You may be interested in our <a href=\"https://link.springer.com/chapter/10.1007/978-3-030-53518-6_16\">recent paper</a> about linting and docs. We're very happy to take feedback about the docs, and even happier to see PRs with improvements!</p>",
        "id": 206680113,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1597229294
    },
    {
        "content": "<p>I actually read that paper yesterday :) I'm definitely on board with the idea of maintaining and expanding docs, and hope to contribute to that to the extent I contribute to the underlying library. But I was trying to get at something more ambitious - the idea that formal proofs in advanced areas could and possibly should be be displayed in a format that is substantially more readable than, say, the current Wikipedia page for that same proof. I'm imagining something like a cross between Metamath's Proof Explorer and the idea of a <a href=\"http://cs500.cs.ua.edu/Lamport.pdf\">structured proof</a>, to pick two things I can gesture at that I know actually already exist.</p>",
        "id": 206684381,
        "sender_full_name": "Iain Monro",
        "timestamp": 1597233142
    },
    {
        "content": "<p>If you figure out how to do this, the Metamath crowd will be very interested :)</p>",
        "id": 206684572,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597233292
    },
    {
        "content": "<p>Did you look at <a href=\"https://leanprover-community.github.io/format_lean/\">https://leanprover-community.github.io/format_lean/</a>? (look at the example and click on everything). It's very primitive but already useful (at least for me).</p>",
        "id": 206684904,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597233592
    },
    {
        "content": "<p>The basic idea is that you should be able to mix normal text and Lean code, and have access to the tactic state evolving in a proof without installing Lean.</p>",
        "id": 206684993,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597233632
    },
    {
        "content": "<p>The idea of structure proof, as implemented in Isabelle, will never be enough to give access to the full information available in a proof assistant. You need something interactive where you can click when you want to see more context, more details, more implicit stuff...</p>",
        "id": 206685113,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597233728
    },
    {
        "content": "<p>The term \"structured proof\" a la Lamport is different from Isar proofs</p>",
        "id": 206685411,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597233963
    },
    {
        "content": "<p>Oh, sorry, I didn't click the link!</p>",
        "id": 206685431,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597233985
    },
    {
        "content": "<p>Yes, we want proof assistant helping us to write Lamport's structured proofs.</p>",
        "id": 206685466,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597234006
    },
    {
        "content": "<p>it is more like a proof at many levels of detail, where you can skip the subbranches once you are convinced by the intermediate statement</p>",
        "id": 206685472,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597234020
    },
    {
        "content": "<p>this is definitely what Metamath proofs attempt to do, but unfortunately we haven't learned yet how to do folding well so you have to do that in your own head</p>",
        "id": 206685499,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597234065
    },
    {
        "content": "<p>if you literally read every line of a metamath proof the level of detail is uncomfortably high</p>",
        "id": 206685576,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597234111
    },
    {
        "content": "<p>Sorry, yes, I added the link to disambiguate the phrase but I should have specified what I meant in actual text!</p>",
        "id": 206685581,
        "sender_full_name": "Iain Monro",
        "timestamp": 1597234119
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Iain.20M/near/206684904\">said</a>:</p>\n<blockquote>\n<p>Did you look at <a href=\"https://leanprover-community.github.io/format_lean/\">https://leanprover-community.github.io/format_lean/</a>? (look at the example and click on everything). It's very primitive but already useful (at least for me).</p>\n</blockquote>\n<p>I hadn't seen that, and I was intially excited by it, but it looks like it's just producing the HTML from comments, no? So you just have a non-formal proof interleaved with (and maintained separately to) a formal proof, with no real structural relationship between them. An obvious problem for turning that into a structured proof would be if you wanted to expand out a tricky application of linarith or something . You'd need some way of turning the formal proof that outputs (which is obviously uncommented because it's autogenerated) into readable HTML as well - and once you have that, what do you need the comments for?</p>",
        "id": 206689860,
        "sender_full_name": "Iain Monro",
        "timestamp": 1597237143
    },
    {
        "content": "<p>The comments are the translation of tactic gobbledegook like <code>linarith</code> which no mathematician understands, into LaTeX, which every mathematician knows and loves. I think they play a key role.</p>",
        "id": 206691022,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597237788
    },
    {
        "content": "<p>yeah, but that's basically saying that the <code>linarith</code> proof is atomic, there is no lower level in the structured proof, even though it's still quite possibly not convincing due to its complexity</p>",
        "id": 206691156,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597237860
    },
    {
        "content": "<p><code>linarith</code> is definitely atomic in all the use cases I've ever seen. The translation into LaTeX is \"The rest is an easy exercise for the reader\".</p>",
        "id": 206691296,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597237951
    },
    {
        "content": "<p>easy exercise for the computer, at least</p>",
        "id": 206691407,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597238008
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Iain.20M/near/206691022\">said</a>:</p>\n<blockquote>\n<p>The comments are the translation of tactic gobbledegook like <code>linarith</code> which no mathematician understands, into LaTeX, which every mathematician knows and loves. I think they play a key role.</p>\n</blockquote>\n<p>I love the idea of translating tactic gobbledegook into readable LaTeX (or at least, readable HTML). I mean, that's the end goal I'm talking about. I just honestly think that the strategy of \"do it all manually\" would likely turn out to be less feasible than solving the hard problem of doing it automatically.</p>",
        "id": 206697700,
        "sender_full_name": "Iain Monro",
        "timestamp": 1597240993
    },
    {
        "content": "<p>Aah I see.</p>",
        "id": 206697830,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597241049
    },
    {
        "content": "<p>Related to making Lean proofs explorable (though maybe not yet accessible and readable), last year I experimented a bit with writing with embedded interactive Lean code in \"Observable notebooks\" here: <a href=\"https://observablehq.com/@bryangingechen/fibonacci-formalized-1-some-sums\">https://observablehq.com/@bryangingechen/fibonacci-formalized-1-some-sums</a> (see also <a href=\"https://observablehq.com/@bryangingechen/fibonacci-formalized-2-bees-and-cars\">part 2</a> with some Lean-driven graphics using D3).</p>",
        "id": 206706757,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1597245062
    },
    {
        "content": "<p>Iain, I understand your concern about tactics that do non-trivial work. But, as far as research-level mathematics is concerned, this is a completely virtual issue. We are very far from having tactics that do steps we would like to see explicit, even in a very detailed proof. Sure, <code>linarith</code> can already do a bit too much when I use Lean to teach first year undergrad, but not much more.</p>",
        "id": 206874577,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597354360
    },
    {
        "content": "<p>I can confirm, I think <code>linarith</code> will be remembered by every student of this year as <em>the</em> magic tactic. I remember seeing people trying it after every single tactic call, to see if it would help.</p>",
        "id": 206876685,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1597355852
    }
]