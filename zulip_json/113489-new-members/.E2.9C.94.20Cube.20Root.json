[
    {
        "content": "<p>I made the definition </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">cube_root</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"k\">then</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">))</span> <span class=\"k\">else</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>But it complains about: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">definition</span> <span class=\"bp\">'</span><span class=\"n\">cube_root'</span> <span class=\"n\">is</span> <span class=\"kd\">noncomputable</span><span class=\"o\">,</span> <span class=\"n\">it</span> <span class=\"n\">depends</span> <span class=\"n\">on</span> <span class=\"bp\">'</span><span class=\"n\">real.decidable_lt'</span>\n</code></pre></div>",
        "id": 276540906,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1648156811
    },
    {
        "content": "<p>You can put <code>noncomputable theory</code> at the top of the file or put <code>noncomputable</code> right before <code>def</code>.</p>\n<p>That's essentially a warning that the definition cannot be evaluated with <code>#eval</code>.</p>",
        "id": 276541430,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1648157047
    },
    {
        "content": "<p>Shouldn't it be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">cube_root</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"k\">then</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 276541872,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648157287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Cube.20Root/near/276414228\">said</a>:</p>\n<blockquote>\n<p>and then project down to the real line again to get the real function. That's why the negative function is the reflection of the positive one but scaled down by 1/2</p>\n</blockquote>\n<p>So this isn't correct? <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span></p>",
        "id": 276541976,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1648157356
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Cube.20Root/near/276541872\">said</a>:</p>\n<blockquote>\n<p>Shouldn't it be</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">cube_root</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"k\">then</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Wait that seems correct when I look again</p>",
        "id": 276542109,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1648157423
    },
    {
        "content": "<p>This is correct, but you don't want to reproduce the wonky results of the existing pow, right?</p>",
        "id": 276542114,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648157424
    },
    {
        "content": "<p>I mean, you successfully created a function which equals <code>x^(1/3)</code> everywhere, but that's not what you're after.</p>",
        "id": 276542180,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648157466
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"367659\">Callum Cassidy-Nolan</span> <a href=\"#narrow/stream/113489-new-members/topic/Cube.20Root/near/276413458\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Cube.20Root/near/276412914\">said</a>:</p>\n<blockquote>\n<p>What function do you want? If you only need the nonnegative values then <code>x^(1/3)</code> is fine</p>\n</blockquote>\n<p>I'm looking for the function which comes from this graph as a function <code>R -&gt; R</code>: <a href=\"/user_uploads/3121/uX1rTZBC6jE-a2kb8eo6VOhx/image.png\">image.png</a></p>\n</blockquote>\n<p>This is my goal</p>",
        "id": 276542212,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1648157491
    },
    {
        "content": "<p>the one you wrote down is wonky_pow</p>",
        "id": 276542279,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1648157526
    },
    {
        "content": "<p>the one yael wrote is what I think you want</p>",
        "id": 276542285,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1648157531
    },
    {
        "content": "<p>Closing the thread with the final definition : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">cube_root</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"k\">then</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 276542486,
        "sender_full_name": "Callum Cassidy-Nolan",
        "timestamp": 1648157662
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"367659\">Callum Cassidy-Nolan</span> has marked this topic as resolved.</p>",
        "id": 276542492,
        "sender_full_name": "Notification Bot",
        "timestamp": 1648157668
    }
]