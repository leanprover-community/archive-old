[
    {
        "content": "<p>I have an hypothesis <code>h: ↥(f.is_some)</code>. How do I get <code>x: (...)</code> and <code>h: f = some x</code> from it with a single tactic? It works with <code>cases</code> and eliminating the none case, but that is quite involved. I tried rewriting or somehow applying <code>option.get</code>, but that didn't work out. I'm sure that there is a short way!</p>",
        "id": 218166990,
        "sender_full_name": "Henning Dieterichs",
        "timestamp": 1606574538
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.option.basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">f.is_some</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">set</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">option.get</span> <span class=\"n\">h</span><span class=\"o\">,</span>                      <span class=\"c1\">-- x : α</span>\n  <span class=\"k\">have</span> <span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">option.get_mem</span> <span class=\"n\">h</span><span class=\"o\">,</span>   <span class=\"c1\">-- hx : f = some x</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 218167353,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1606575168
    },
    {
        "content": "<p>thanks, that makes sense! I don't understand the theorem get_mem though... What does \\in mean here?</p>",
        "id": 218168650,
        "sender_full_name": "Henning Dieterichs",
        "timestamp": 1606577057
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"bp\">↔</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">iff.rfl</span>\n</code></pre></div>\n<p>so <code>a ∈ f</code> is defined to be <code>f = some a</code></p>",
        "id": 218168711,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1606577195
    },
    {
        "content": "<p>I see. Thanks!</p>",
        "id": 218168785,
        "sender_full_name": "Henning Dieterichs",
        "timestamp": 1606577338
    }
]