[
    {
        "content": "<p>Since in mathlib a module over a semiring is called a semimodule why there is not both concept of algebra and semialgebra? I mean maybe not to confuse it with a semialgebra of sets but if it is just a naming problem I guess it can be solved easily</p>",
        "id": 203638322,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594550940
    },
    {
        "content": "<p>because it's the computer scientists who like all this semring stuff, and they are not sufficiently into algebra to have bothered to build all this semi-theory as far as the mathematicians who want to do Galois theory and algebraic number theory etc and who don't really care about semirings and just need rings. I'm sure that PRs making all these new structures would be seriously considered.</p>",
        "id": 203638522,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594551360
    },
    {
        "content": "<p>There didn't used to be semimodules, there was just modules, and then someone spotted that there was an exciting generalisation and someone else bothered to do it.</p>",
        "id": 203638573,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594551400
    },
    {
        "content": "<p>The definition of a UFD makes sense for semirings, but Lean demands an integral domain because the person who wrote it didn't care.</p>",
        "id": 203638596,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594551473
    },
    {
        "content": "<p>In fact the definition of UFD makes sense for commutative cancellative monoids with 0, if you care. But the library grows organically.</p>",
        "id": 203638649,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594551535
    },
    {
        "content": "<p>Kevin, you should stop writing things like this. We are very grateful to have many lemmas about natural numbers. Semi-rings are not exotic, you use one since you were 2 years old.</p>",
        "id": 203638661,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594551571
    },
    {
        "content": "<p>And who knows whether you'll end wanting to talk about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}[X]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span></span></span></span> for instance?</p>",
        "id": 203638723,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594551604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> has been an amazing proponent of making stuff work in the right generality, he tirelessly refactors -- and others too.</p>",
        "id": 203638726,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594551608
    },
    {
        "content": "<p>Yes Patrick, you are absolutely right. 99% of use cases have the \"normal mathematical\" assumptions, and then all of a sudden you run into a situation where the slight extra generality is really helpful, and then you curse the library for having it all set up in the way the maths books are set up.</p>",
        "id": 203638759,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594551663
    },
    {
        "content": "<p>The first time I saw this was when someone defined a group acting on a set, and then Mario said \"but there are no inverses mentioned in the axioms -- make it a monoid acting on a set\". If you catch it early you can get it \"right\" from the start, but the more you leave it, the harder it is to change.</p>",
        "id": 203638827,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594551736
    },
    {
        "content": "<p>In the measure theory refactor, Yury notes that there is an <code>ennreal</code>-semimodule structure on the space of measures, and uses it to deduce several facts for free.</p>",
        "id": 203640313,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1594554382
    },
    {
        "content": "<p>So does everybody agree that what is now an algebra should be called a semialgebra and introduce the name algebra for what mathematicians actually call an algebra, so that the names are coherent with rings, semirings modules and semimodules? I am asking all of this because I am introducing topological algebras and smooth algebras and need names for what is actually an algebra and not a semialgebra otherwise everything becomes a mess</p>",
        "id": 203653133,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594575585
    },
    {
        "content": "<p>Aren't algebras and semialgebras the same thing?</p>",
        "id": 203653209,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594575677
    },
    {
        "content": "<p>Maybe the problem is with semimodule</p>",
        "id": 203653216,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594575696
    },
    {
        "content": "<p>i.e. semimodule should just be called module</p>",
        "id": 203653224,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594575705
    },
    {
        "content": "<p>It's entirely possible that I am missing something bad that would happen if we just renamed <code>semimodule</code> -&gt; <code>module</code> and removed <code>module</code></p>",
        "id": 203653363,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594575904
    },
    {
        "content": "<p>I do not understand what you mean by saying they are the same thing! I though something like a commutative monoid was a semimodule on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span> that does not have a module structure. What am I missing?</p>",
        "id": 203653504,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594576115
    },
    {
        "content": "<p>(The general categorical framework is that you have a symmetric monoidal category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>V</mi><mo separator=\"true\">,</mo><mo>⊗</mo><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(V, \\otimes, 1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">⊗</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>, the relevant examples being commutative monoids/abelian groups; a (commutative) semiring/ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is a (commutative) monoid object in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span>; an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-module is a module object over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span>; if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is commutative and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span> is a reasonable category then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-modules again form a symmetric monoidal category; an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-algebra is a monoid object in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow></mrow><annotation encoding=\"application/x-tex\">R\\mathrm{Mod}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span></span></span></span>. For semiring/ring the distinction is important because you need to know which <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span> you are talking about, but once you give a semiring/ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span> is determined, so you don't need to repeat yourself in (semi)module and (semi)algebra.)</p>",
        "id": 203653529,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594576177
    },
    {
        "content": "<p>Well, I guess it could still happen that a semimodule over a ring viewed as a semiring is different from a module over that ring, but in fact that doesn't happen here.</p>",
        "id": 203653597,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594576282
    },
    {
        "content": "<p>The reason being that negation on the module is determined by the semimodule structure, it's multiplication by <code>-1 : R</code>.</p>",
        "id": 203653688,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594576423
    },
    {
        "content": "<p>Oh ok I see this but what if I want to define a topological algebra to be something for which addition, negation and multiplication are continuous (and multiplication by a scalar). If I only have the name semialgebra I cannot talk about negation and if I do what other name should I give to it if not a topological algebra?</p>",
        "id": 203653731,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594576443
    },
    {
        "content": "<p>Actually I get it for free with multiplication by -1 again I guess</p>",
        "id": 203653749,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594576496
    },
    {
        "content": "<p>Then never mind it's just that I did not ever use these things before</p>",
        "id": 203653762,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594576523
    },
    {
        "content": "<p>I guess I was arguing two separate things before. It's \"morally correct\" to refer to a semimodule structure over a semiring as a module structure. And, when there could be ambiguity (a semimodule structure over a <em>ring</em>), the ambiguity doesn't matter.</p>",
        "id": 203653917,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594576746
    },
    {
        "content": "<p>Of course things that don't matter in ordinary math sometimes matter in formalization, but looking at the definition of <code>module</code> it looks like it will in fact not matter in Lean either.</p>",
        "id": 203653929,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594576776
    },
    {
        "content": "<p>I am not really sure what the best thing to do is, if to remove module or keep useless names just because they are more familiar to normal mathematicians who might not need to deal with the greatest generalizations, and I am clearly not the right person to discuss these decisions, but I just think it would be cool to have more uniformity and have the same conventions for modules and algebras because otherwise things are pretty hard to name afterwards and they get quite confusing for someone like me who just began looking into mathlib</p>",
        "id": 203654361,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594577472
    },
    {
        "content": "<p>I think it would be good for someone to try deleting <code>module</code> and renaming <code>semimodule</code> to <code>module</code>! I hope it works.</p>",
        "id": 203665887,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594595954
    }
]