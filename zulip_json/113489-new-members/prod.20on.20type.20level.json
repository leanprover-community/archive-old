[
    {
        "content": "<p>If I wanted to define a type synonym such that I could refer to <code>my_matrix (prod m n) α := matrix m n α</code>, what's the way to do that? I'm not sure how to use <code>out_param</code>, or if it is necessary. I get Type errors when I try:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">my_matrix</span> <span class=\"o\">:</span> <span class=\"n\">out_param</span> <span class=\"o\">(</span><span class=\"n\">prod</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">ι</span><span class=\"o\">,</span> <span class=\"n\">matrix</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"n\">ι</span>\n</code></pre></div>",
        "id": 210056824,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1600114285
    },
    {
        "content": "<p>If <code>p : prod m n</code> then <code>p.fst</code> isn't <code>m</code>.</p>",
        "id": 210058703,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1600115292
    },
    {
        "content": "<p>Ah, right. In Haskell, I can say something like <code>p ~ prod m n</code>. Is this getting close to the dreaded heq?</p>",
        "id": 210059115,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1600115523
    },
    {
        "content": "<p>You could do <code>def my_matrix (X : Type) (R : Type) := X -&gt; R</code><br>\nand then <code>my_matrix (m \\times n)</code> would be the type of -- you know -- <code>m \\times n</code>-matrices.</p>",
        "id": 210059359,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600115642
    },
    {
        "content": "<p>And with (un)curry, you would be able to move to mathlib's matrices</p>",
        "id": 210059424,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600115667
    }
]