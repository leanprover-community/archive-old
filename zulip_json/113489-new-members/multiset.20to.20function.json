[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> iirc lean4's list.get is a function on <code>fin L.length</code>. Do we have that in mathlib somewhere?</p>",
        "id": 269048503,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642984562
    },
    {
        "content": "<p>Of course it's trivial to build using list.nth_le, but still...</p>",
        "id": 269048531,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642984580
    },
    {
        "content": "<p>Are you sure? <a href=\"https://github.com/leanprover/lean4/blob/master/src/Init/Prelude.lean#L1103-L1108\">https://github.com/leanprover/lean4/blob/master/src/Init/Prelude.lean#L1103-L1108</a></p>",
        "id": 269049685,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642986153
    },
    {
        "content": "<p>Mathlib does use this function in a few places (<a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/list/indexes.lean#L66\">1</a>, <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/list/nodup_equiv_fin.lean#L41\">2</a>, <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/list/nodup_equiv_fin.lean#L63\">3</a>, <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/set_theory/pgame.lean#L128\">4</a>) but it is always spelled <code>\\lam i, l.nth_le i i.2</code></p>",
        "id": 269049932,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642986486
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> , Sorry, I was thinking of <code>Array.get</code></p>\n<p><a href=\"https://github.com/leanprover/lean4/blob/7ada79bf2ef813424c7a4d5348af379f99395d0a/src/Init/Prelude.lean#L1207\">https://github.com/leanprover/lean4/blob/7ada79bf2ef813424c7a4d5348af379f99395d0a/src/Init/Prelude.lean#L1207</a></p>",
        "id": 269051345,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642988285
    }
]