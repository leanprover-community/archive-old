[
    {
        "content": "<p>Hi,</p>\n<p>Is this somewhere in mathlib? I feel like I am reinventing the wheel ...</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">image_ne_empty</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">W</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">W</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">V</span><span class=\"o\">}</span>\n        <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">image</span> <span class=\"n\">f</span> <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span>\n    <span class=\"o\">:=</span> <span class=\"n\">Exists</span><span class=\"bp\">.</span><span class=\"n\">dcases_on</span> <span class=\"o\">(</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">exists_mem_of_ne_empty</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">ne_empty_of_mem</span> <span class=\"err\">∘</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">mem_image_of_mem</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 182959456,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1575901378
    },
    {
        "content": "<p>Not sure if its there, but isn't this <code>mt (finset.image_empty) h</code>, or something like that. (Also, I think in your lemma <code>f</code> should be explicit, since it can't be determined from other variables.</p>",
        "id": 182965280,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1575904949
    },
    {
        "content": "<p>Nevermind, I'm talking nonsense with my proof idea.</p>",
        "id": 182965948,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1575905366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span> This one looks useful: <a href=\"https://github.com/leanprover-community/mathlib/blob/b031290b228838d5e779908b129420331bb131c5/src/data/finset.lean#L1008\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/b031290b228838d5e779908b129420331bb131c5/src/data/finset.lean#L1008\">https://github.com/leanprover-community/mathlib/blob/b031290b228838d5e779908b129420331bb131c5/src/data/finset.lean#L1008</a></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">image_eq_empty</span> <span class=\"o\">:</span> <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">image</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"err\">∅</span> <span class=\"bp\">↔</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"err\">∅</span> <span class=\"o\">:=</span>\n</pre></div>\n\n\n<p>There is a general way to get the <code>not</code>s into place.</p>",
        "id": 182966771,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1575905616
    },
    {
        "content": "<p>I think it's something like <code>not_iff_not_of_iff</code></p>",
        "id": 182967166,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1575905818
    },
    {
        "content": "<p>oh, I was going to suggest writing that exact statement and calling it <code>image_eq_empty</code></p>",
        "id": 182968256,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1575906388
    },
    {
        "content": "<p>your proof was just about right too:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">image_ne_empty</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">W</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">W</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">V</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span> <span class=\"bp\">→</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">image</span> <span class=\"n\">f</span> <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span> <span class=\"o\">:=</span>\n<span class=\"n\">mt</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">image_eq_empty</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n</pre></div>",
        "id": 182968441,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1575906490
    },
    {
        "content": "<p>But maybe this statement should also become an iff?</p>",
        "id": 182968611,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1575906580
    },
    {
        "content": "<p>The proof is such that it shouldn't exist at all</p>",
        "id": 182968828,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1575906691
    },
    {
        "content": "<blockquote>\n<p>Not sure if its there, but isn't this <code>mt (finset.image_empty) h</code>, or something like that.</p>\n</blockquote>\n<p>Ah, right, of course ... I wasn't looking in this direction at all because somehow proving that a set is nonempty by exhibiting an element felt more direct (the proof of <code>image_eq_empty</code> boils down to <code>eq_empty_of_forall_not_mem</code>, <code>eq_zero_of_forall_not_mem</code>, <code>eq_nil_iff_forall_not_mem</code>, <code>eq_nil_of_subset_nil</code> and ultimately <code>false.elim</code> with lots of negatives all over the place).</p>\n<p>Thanks!</p>",
        "id": 182991258,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1575920145
    }
]