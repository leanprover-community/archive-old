[
    {
        "content": "<p>If I define an inductive type, then its rec_on gives a different type  which can be quite complex. I have some intuition on how it this works, but is it maybe explicitly written down somewhere?<br>\nThanks.</p>",
        "id": 213672670,
        "sender_full_name": "Golol",
        "timestamp": 1602971986
    },
    {
        "content": "<p>presumably this is in Mario's MSc thesis?</p>",
        "id": 213672746,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1602972092
    },
    {
        "content": "<p>there's also a natural language description here: <a href=\"https://leanprover.github.io/reference/declarations.html#inductive-families\">https://leanprover.github.io/reference/declarations.html#inductive-families</a></p>",
        "id": 213673489,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1602973257
    },
    {
        "content": "<p>perfect, that's exactly what I was looking for</p>",
        "id": 213674275,
        "sender_full_name": "Golol",
        "timestamp": 1602974591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243838\">@Golol</span>  <br>\nAlso you may have noticed, but <code>rec_on</code> is  just a definition that rearranges the order of the arguments passed to <code>rec</code>. <code>rec_on</code> takes the major as the first explicit argument since it's often more intuitive (it feels more like telling the computer \"do induction on n\"). <br>\n If you're going to read Mario's thesis you might like having the mm0 spec as a guide even if you don't speak mm0 (<a href=\"https://github.com/digama0/mm0/blob/master/examples/lean.mm1#L284\">https://github.com/digama0/mm0/blob/master/examples/lean.mm1#L284</a>). <br>\nThere are four type checkers to choose from if you want to see actually see source code that constructs a recursor, but it's fairly involved. It's still pretty neat though.</p>",
        "id": 213674579,
        "sender_full_name": "Chris B",
        "timestamp": 1602975111
    },
    {
        "content": "<p>I have searched for \"Mario's MSc thesis\" without results. Can somebody point me in the right direction? Thanks!</p>",
        "id": 246370784,
        "sender_full_name": "Morten Brodersen",
        "timestamp": 1626604318
    },
    {
        "content": "<p>OK found out that Mario is Mario Carneiro. Found it!</p>",
        "id": 246370920,
        "sender_full_name": "Morten Brodersen",
        "timestamp": 1626604552
    },
    {
        "content": "<p>the relevant link is <a href=\"https://github.com/digama0/lean-type-theory/releases/tag/v1.0\">https://github.com/digama0/lean-type-theory/releases/tag/v1.0</a></p>",
        "id": 246371604,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1626605826
    },
    {
        "content": "<p>Yep found it Mario. I will give it a read.</p>",
        "id": 246371662,
        "sender_full_name": "Morten Brodersen",
        "timestamp": 1626605908
    }
]