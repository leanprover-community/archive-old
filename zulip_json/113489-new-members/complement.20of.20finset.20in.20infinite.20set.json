[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite</span> <span class=\"n\">s</span><span class=\"err\">ᶜ</span> <span class=\"o\">:=</span> <span class=\"bp\">_</span>\n</code></pre></div>\n\n\n<p>Is this in mathlib?</p>",
        "id": 207358094,
        "sender_full_name": "Iocta",
        "timestamp": 1597796352
    },
    {
        "content": "<p>I started working on it but it seemed to need a bunch of lemmas I couldn't find</p>",
        "id": 207358273,
        "sender_full_name": "Iocta",
        "timestamp": 1597796537
    },
    {
        "content": "<p>I wonder if there is a straightforward proof with cardinality?</p>",
        "id": 207358956,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597797187
    },
    {
        "content": "<p><code>mk_compl_of_omega_le</code> seems useful?</p>",
        "id": 207359003,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597797241
    },
    {
        "content": "<p>Presumably there is also a lemma stating that a set of cardinality omega is infinite?</p>",
        "id": 207359125,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597797355
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">cardinal</span>\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite</span> <span class=\"n\">s</span><span class=\"err\">ᶜ</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite_coe_iff</span><span class=\"o\">,</span> <span class=\"n\">infinite_iff</span><span class=\"o\">,</span> <span class=\"n\">mk_compl_of_omega_le</span> <span class=\"n\">s</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n  <span class=\"n\">all_goals</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">mk_nat</span><span class=\"o\">,},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">lt_omega_iff_finite</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207359605,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597797875
    },
    {
        "content": "<p>Probably this can be made into a 2-liner xD</p>",
        "id": 207359641,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597797920
    },
    {
        "content": "<p>I don't know how to navigate the <code>finset</code>/<code>fintype</code> API well enough to finish this quickly, but another approach is to first transform it by something like</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite</span> <span class=\"n\">s</span><span class=\"err\">ᶜ</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">unfreeze_local_instances</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">compl</span><span class=\"o\">,</span> <span class=\"n\">boolean_algebra</span><span class=\"bp\">.</span><span class=\"n\">compl</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>so then the context is</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">fintype</span> <span class=\"err\">↥</span><span class=\"n\">s</span><span class=\"o\">,</span>\n<span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"n\">fintype</span> <span class=\"err\">↥</span><span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">s</span><span class=\"o\">}</span>\n<span class=\"err\">⊢</span> <span class=\"n\">false</span>\n</code></pre></div>\n\n\n<p>If you let <code>m</code> and <code>m'</code> be the maximal elements in the two sets, then <code>1 + max m m'</code> is in neither set, contradicting the fact that the sets are complements.</p>",
        "id": 207359959,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597798245
    },
    {
        "content": "<p>(I know the question is \"is this in mathlib,\" which this certainly doesn't help you in answering.)</p>",
        "id": 207359991,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597798309
    },
    {
        "content": "<p>I would suggest:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite</span> <span class=\"n\">s</span><span class=\"err\">ᶜ</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite_univ_iff</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">infinite</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">union</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207360386,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597798800
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite</span> <span class=\"n\">s</span><span class=\"err\">ᶜ</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">hsc</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">infinite_univ</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">union_compl_self</span> <span class=\"n\">s</span> <span class=\"bp\">▸</span> <span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"n\">union</span> <span class=\"n\">hsc</span>\n</code></pre></div>",
        "id": 207374816,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597819240
    }
]