[
    {
        "content": "<p>I have a goal which can be closed by<code>rw lemma, rw lemma, rw lemma, refl,</code>, it turns out <code>repeat {rw lemma},</code> also does the refl for me. Is it built in to all combinators?</p>",
        "id": 270864917,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644117329
    },
    {
        "content": "<p>Is this actually Lean 4 or 3?</p>",
        "id": 270865203,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644117695
    },
    {
        "content": "<p>Then one used in Buzzard's natural number game, I noticed that both <code>rwa</code> and <code>repeat</code> does the <code>refl</code> for you. And thus the shortest proof in <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=3&amp;level=5\">world 3 level 5</a> being </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">induction</span> <span class=\"n\">c</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">mul_zero</span><span class=\"o\">},</span> <span class=\"c1\">-- does 3 rewrites followed by a refl</span>\n\n<span class=\"n\">rw</span> <span class=\"n\">mul_succ</span><span class=\"o\">,</span>\n<span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hn</span><span class=\"o\">,</span> <span class=\"n\">mul_succ</span><span class=\"o\">,</span> <span class=\"n\">mul_add</span><span class=\"o\">],</span> <span class=\"c1\">-- followed by a refl</span>\n</code></pre></div>\n<p>If this is not version dependent behavior <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> you might want to update the notes a bit</p>",
        "id": 270865526,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644118116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"476897\">@Matt Yan</span> you might have a better chance finding your answer on <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a>. The natural numbers game uses Lean 3 and this stream is more specific to Lean 4</p>",
        "id": 270866559,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644119670
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 270866666,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644119857
    },
    {
        "content": "<p>What version is the reference manual based on? <a href=\"https://leanprover.github.io/reference/index.html\">https://leanprover.github.io/reference/index.html</a></p>",
        "id": 270866723,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644119923
    },
    {
        "content": "<p>That's Lean 3</p>",
        "id": 270866858,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644120037
    },
    {
        "content": "<p>Also keep in mind that the NNG uses a certain version of Lean 3 that might differ from the version that's largely used by the community in some aspects. I tried searching for the source code of <code>repeat</code> on my smartphone but I had no success</p>",
        "id": 270867063,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644120295
    },
    {
        "content": "<p>Yes, the answer I believe will have to do with the fact that NNG specifically uses a simplified version of <code>rw</code>.</p>",
        "id": 270867068,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644120319
    },
    {
        "content": "<p>Normally <code>rw</code> will call <code>refl</code>, but NNG's does not (for pedagogical reasons).</p>",
        "id": 270867074,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644120331
    },
    {
        "content": "<p>But probably it doesn't similarly cripple <code>repeat</code> or <code>rwa</code>, so you get the normal behavior.</p>",
        "id": 270867075,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644120345
    },
    {
        "content": "<p>I see...I do find lean 4 and relevant docs on GitHub and github io, Is there any plan to migrate NNG to lean 4? <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 270867082,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644120361
    },
    {
        "content": "<p>This is probably already documented somewhere, but yeah NNG is also a very old version of Lean 3.</p>",
        "id": 270867126,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644120379
    },
    {
        "content": "<p>Yes I believe it eventually will. But it's still early, Lean 4 is still changing often, and mathlib, the major library for Lean 3, is still not very close to ported to Lean 4, so that will likely happen first.</p>",
        "id": 270867143,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644120416
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/repeat.20automatically.20does.20refl.3F/near/270867126\">said</a>:</p>\n<blockquote>\n<p>This is probably already documented somewhere, but yeah NNG is also a very old version of Lean 3.</p>\n</blockquote>\n<p>In which case it would still be better if NNG uses the latest stable Lean 3</p>",
        "id": 270867219,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644120530
    },
    {
        "content": "<p>It's definitely been discussed before, see e.g. <a href=\"#narrow/stream/113488-general/topic/Adding.20logging.20for.20cases.20where.20oleans.20are.20not.20picked.20up/near/259862000\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Adding.20logging.20for.20cases.20where.20oleans.20are.20not.20picked.20up/near/259862000</a> -- I don't know if there's a status update but I'd guess Kevin certainly wouldn't mind if someone sent a PR doing so, it likely will involve some fixes it sounds like though.</p>",
        "id": 270867465,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644120860
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/repeat.20automatically.20does.20refl.3F\">#lean4 &gt; repeat automatically does refl?</a> by <span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span></p>",
        "id": 270867961,
        "sender_full_name": "Notification Bot",
        "timestamp": 1644121620
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.repeat\">docs#tactic.repeat</a> is the core for the <code>repeat</code> tactic, but it doesn't do <code>refl</code>.</p>\n<p>If I were to guess, what's going on is that <code>repeat</code> accidentally circumvents whatever the mechanism is that makes <code>rw</code> become the special NNG <code>tactic.interactive.rw'</code></p>\n<p>(<span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> Do you have any idea why <code>rw</code> in a <code>repeat</code> would use the non-NNG <code>rw</code>, if that's what's happening? Just pinging you because your name is at the top of <a href=\"https://github.com/ImperialCollegeLondon/natural_number_game/blob/master/src/tactic/nat_num_game.lean\">this file</a>)</p>",
        "id": 270868786,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644122762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Yes, your guess is correct. The <code>rw</code> inside <code>repeat</code> is the regular one, not the NNG one. It is because <code>repeat</code> takes a tactic block in the regular tactic class, and it hasn't been overridden in NNG to take NNG tactics instead</p>",
        "id": 270872852,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644128011
    },
    {
        "content": "<p>I'm reluctant to fiddle with NNG because it works and I'm in the middle of a heavy term of teaching</p>",
        "id": 270877840,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644135726
    }
]