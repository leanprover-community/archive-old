[
    {
        "content": "<p>what does the leftarrow mean? Sometimes it is required in rewrites and sometimes it is not. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.ring</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">my_ring</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">neg_add_cancel_left</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">add_assoc</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">add_left_neg</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">zero_add</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 265768816,
        "sender_full_name": "Hank",
        "timestamp": 1640152134
    },
    {
        "content": "<p>Our <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#rw%20/%20rewrite\">tactic docs</a> give the following explanation:</p>\n<blockquote>\n<p><code>rw e</code> applies an equation or <code>iff</code> <code>e</code> as a rewrite rule to the main goal. If <code>e</code> is preceded by left arrow (<code>←</code> or <code>&lt;-</code>), the rewrite is applied in the reverse direction.</p>\n</blockquote>\n<p>Does that answer your question?</p>",
        "id": 265769048,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1640152473
    },
    {
        "content": "<p>It'd probably be good if we duplicated some of that information in the doc string for <code>rw</code>, since right now it just says \"an abbreviation for <code>rewrite</code>\" which isn't very convenient.</p>",
        "id": 265769112,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1640152570
    },
    {
        "content": "<p>So if you have <code>h : x = y</code> then <code>rw h</code> will turn <code>x</code> into <code>y</code>, and <code>rw ← h</code> will turn <code>y</code> into <code>x</code></p>",
        "id": 265769119,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1640152580
    },
    {
        "content": "<p>That's correct.</p>",
        "id": 265769210,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1640152738
    },
    {
        "content": "<p>thanks!</p>",
        "id": 265769235,
        "sender_full_name": "Hank",
        "timestamp": 1640152786
    }
]