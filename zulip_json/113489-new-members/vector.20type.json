[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243102\">Brandon Brown</span> <a href=\"#narrow/stream/113489-new-members/topic/noob.20question(s)/near/196068544\" title=\"#narrow/stream/113489-new-members/topic/noob.20question(s)/near/196068544\">said</a>:</p>\n<blockquote>\n<p>Hoping someone help me understand the <code>vector α n</code> type . It's supposed to be a kind of list of type <code>α</code> of length <code>n</code> but I don't see how this type enforces the length to be <code>n</code></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">inductive</span> <span class=\"n\">vector</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n<span class=\"bp\">|</span> <span class=\"n\">nil</span> <span class=\"o\">{}</span>                              <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">zero</span>\n<span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>I'm not really sure how to use this type.</p>\n</blockquote>\n<p>it enforces the length to b n by induction. You can see an n on the LHS and a succ n on the RHS</p>",
        "id": 196068565,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588450995
    },
    {
        "content": "<p>what do you want to do with vector?</p>",
        "id": 196068625,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588451058
    },
    {
        "content": "<p>So if I do <code>vector.cons ℕ vector.nil</code> that creates a type within the vector type family?</p>",
        "id": 196068701,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1588451188
    },
    {
        "content": "<p>I'm still wrapping my head around the inductive family thing</p>",
        "id": 196068715,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1588451214
    },
    {
        "content": "<p><code>vector  3</code> is a type</p>",
        "id": 196068960,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588451628
    },
    {
        "content": "<p>How do I create a vector of natural numbers of length e.g. 2?</p>",
        "id": 196069017,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1588451733
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"bp\">ℤ</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"n\">vector</span><span class=\"bp\">.</span><span class=\"n\">cons</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">vector</span><span class=\"bp\">.</span><span class=\"n\">cons</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">vector</span><span class=\"bp\">.</span><span class=\"n\">cons</span> <span class=\"mi\">0</span> <span class=\"n\">vector</span><span class=\"bp\">.</span><span class=\"n\">nil</span><span class=\"o\">))</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">v</span>\n</code></pre></div>",
        "id": 196069084,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588451852
    },
    {
        "content": "<p>the notation that comes out of the print is also a valid thing to put in</p>",
        "id": 196069136,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588451954
    },
    {
        "content": "<p>Hm ok so that created the type, now how do I add elements to it?<br>\nlike for list you just keep doing <code>list.cons h (list.cons h (list.nil)))</code> or whatever</p>",
        "id": 196069215,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1588452048
    },
    {
        "content": "<p>But in this case its supposed to limit it to length 3</p>",
        "id": 196069220,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1588452065
    },
    {
        "content": "<p>Oh you already added elements - oh man I'm really confused</p>",
        "id": 196069415,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1588452431
    },
    {
        "content": "<p>Ohh I get it now - thanks</p>",
        "id": 196069471,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1588452560
    }
]