[
    {
        "content": "<p>Hello!<br>\nThis is my first time posting here. Please forgive me if I am making some mistakes.<br>\nI am an undergrad studying math and cs at BITS Pilani University in India. I recently got into the field of interactive theorem provers and used coq for a while before switching to Lean.<br>\nI am interested in understanding how real numbers are defined in Lean. Could someone please direct me to some resources about this topic.</p>",
        "id": 225138044,
        "sender_full_name": "Kimaya Bedarkar",
        "timestamp": 1612432003
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"375411\">@Kimaya Bedarkar</span> sure, first you should probably post in the new members stream instead. This stream is for an old conference only.</p>",
        "id": 225138148,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1612432070
    },
    {
        "content": "<p>Oh!<br>\nI am sorry!<br>\nCan this message be moved there</p>",
        "id": 225138258,
        "sender_full_name": "Kimaya Bedarkar",
        "timestamp": 1612432142
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"238830\" href=\"/#narrow/stream/238830-Lean-for-the-curious-mathematician-2020/topic/.28no.20topic.29\">#Lean for the curious mathematician 2020 &gt; (no topic)</a> by <span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span></p>",
        "id": 225138302,
        "sender_full_name": "Notification Bot",
        "timestamp": 1612432178
    },
    {
        "content": "<p>The reals in lean are defined via Cauchy sequences of rationals, you can see the doc at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real\">docs#real</a> there isn't a huge amount of description there, but from there you can see the main results click to view the source of each definition. Check out <a href=\"https://leanprover-community.github.io/mathlib_docs/data/real/cau_seq.html\">https://leanprover-community.github.io/mathlib_docs/data/real/cau_seq.html</a> also. If you just want to get a feel for proving things about the reals in lean maybe look at the tutorial project (second on <a href=\"https://leanprover-community.github.io/learn.html\">https://leanprover-community.github.io/learn.html</a>) as this has some exercises doing this.</p>",
        "id": 225138860,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1612432477
    },
    {
        "content": "<p>I am actually interested in exploring an alternative definition of reals which can help in formalising computational geometry proofs<br>\nHas any work previously been done in finding some alternative definition of reals which might be computationally better?</p>",
        "id": 225139058,
        "sender_full_name": "Kimaya Bedarkar",
        "timestamp": 1612432600
    },
    {
        "content": "<p>Not in Lean yet, as far as I know. We do have an open issue about adding some definition of computable reals to mathlib, but I don't believe anyone has worked on it: <a href=\"https://github.com/leanprover-community/mathlib/issues/1038\">#1038</a>.</p>",
        "id": 225165785,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612448908
    },
    {
        "content": "<p>I think this depends on what you mean by \"computationally better\". I think that most things that would fit the definition of \"computable reals\" would actually not be computationally better than what we already have. What you really need is something like interval arithmetic and/or (possibly arbitrary-precision) floating point arithmetic if you want to actually compute with real numbers at a reasonable speed</p>",
        "id": 225203315,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612464031
    },
    {
        "content": "<p>Note that we are already doing some nontrivial real computations, e.g. to calculate <code>e</code> and <code>pi</code> to 10 decimals, and the fact that real numbers are defined in a \"noncomputable\" way doesn't matter at all</p>",
        "id": 225203439,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612464108
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Kimaya.20Bedarkar/near/225203439\">said</a>:</p>\n<blockquote>\n<p>Note that we are already doing some nontrivial real computations, e.g. to calculate <code>e</code> and <code>pi</code> to 10 decimals, and the fact that real numbers are defined in a \"noncomputable\" way doesn't matter at all</p>\n</blockquote>\n<p>Is there some source to read about the computation of those constants with such precision?</p>",
        "id": 225203603,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1612464190
    },
    {
        "content": "<p>Not really, but I have a whole philosophy about how to do verified numerical computations that I will tell anyone who seems to be interested <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 225204506,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612464626
    },
    {
        "content": "<p>The short version is: it's not actually computing on real, it's doing computations on rational numbers reduced to questions about nat that can be decided by <code>norm_num</code></p>",
        "id": 225204610,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612464681
    },
    {
        "content": "<p>The high precision estimates of e are done in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.exp_one_near_10/src\">src#real.exp_one_near_10</a>, although the actual proof depends on <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.exp_1_approx_succ_eq/src\">src#real.exp_1_approx_succ_eq</a> and the few theorems in the section on <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.exp_near/src\">src#real.exp_near</a></p>",
        "id": 225205003,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612464862
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Kimaya.20Bedarkar/near/225165785\">said</a>:</p>\n<blockquote>\n<p>Not in Lean yet, as far as I know. We do have an open issue about adding some definition of computable reals to mathlib, but I don't believe anyone has worked on it: <a href=\"https://github.com/leanprover-community/mathlib/issues/1038\">#1038</a>.</p>\n</blockquote>\n<p>Thanks for this. I checked it out and it was quite helpful</p>",
        "id": 225268833,
        "sender_full_name": "Kimaya Bedarkar",
        "timestamp": 1612510862
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Kimaya.20Bedarkar/near/225203315\">said</a>:</p>\n<blockquote>\n<p>I think this depends on what you mean by \"computationally better\". I think that most things that would fit the definition of \"computable reals\" would actually not be computationally better than what we already have. What you really need is something like interval arithmetic and/or (possibly arbitrary-precision) floating point arithmetic if you want to actually compute with real numbers at a reasonable speed</p>\n</blockquote>\n<p>Thank you. I will try to think about this.</p>",
        "id": 225268907,
        "sender_full_name": "Kimaya Bedarkar",
        "timestamp": 1612510929
    }
]