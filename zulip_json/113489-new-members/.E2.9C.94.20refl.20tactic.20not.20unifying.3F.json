[
    {
        "content": "<p>Why wont <code>refl</code> (or <code>rfl</code>) unify this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">n</span>\n</code></pre></div>",
        "id": 308262571,
        "sender_full_name": "Joseph O",
        "timestamp": 1667745769
    },
    {
        "content": "<p>Because they aren't at all definitionally equivalent, this would be something <code>ring</code> could do.</p>",
        "id": 308262736,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1667745869
    },
    {
        "content": "<p>Ive tried <code>ring</code>, but it fails as well</p>",
        "id": 308262823,
        "sender_full_name": "Joseph O",
        "timestamp": 1667745913
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">tactic.istep</span> <span class=\"mi\">31</span> <span class=\"mi\">8</span> <span class=\"mi\">31</span> <span class=\"mi\">8</span> <span class=\"mi\">180</span> <span class=\"n\">ring</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">ring</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Type</span> <span class=\"bp\">?</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"bp\">?+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">tactic</span> <span class=\"bp\">?</span><span class=\"n\">m_1</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"bp\">?</span>\n<span class=\"n\">trinums.lean</span><span class=\"o\">:</span><span class=\"mi\">31</span><span class=\"o\">:</span><span class=\"mi\">8</span>\n<span class=\"n\">don't</span> <span class=\"n\">know</span> <span class=\"n\">how</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">placeholder</span>\n<span class=\"n\">context</span><span class=\"o\">:</span>\n<span class=\"bp\">⊢</span> <span class=\"kt\">Type</span> <span class=\"bp\">?</span>\n</code></pre></div>",
        "id": 308262881,
        "sender_full_name": "Joseph O",
        "timestamp": 1667745946
    },
    {
        "content": "<p>Ah, you don't have the ring tactic imported</p>",
        "id": 308262958,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1667745970
    },
    {
        "content": "<p>So lean thinks you mean the ring structure</p>",
        "id": 308262976,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1667745991
    },
    {
        "content": "<p>oh it works now!</p>",
        "id": 308262993,
        "sender_full_name": "Joseph O",
        "timestamp": 1667746007
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 308262998,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667746012
    }
]