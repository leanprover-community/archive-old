[
    {
        "content": "<p>Are these two examples provable? I'm struggling with the first, and now I'm not certain if it actually holds.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">var</span> <span class=\"o\">:=</span> <span class=\"n\">ℕ</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">var</span> <span class=\"o\">:</span> <span class=\"n\">var</span> <span class=\"bp\">→</span> <span class=\"n\">term</span>\n<span class=\"bp\">|</span> <span class=\"n\">app</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">term</span>\n<span class=\"c1\">-- term.abs y P = λ y . P</span>\n<span class=\"bp\">|</span> <span class=\"n\">abs</span> <span class=\"o\">:</span> <span class=\"n\">var</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">term</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">FV</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">var</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">term.var</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">term.app</span> <span class=\"n\">P</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">FV</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">∪</span> <span class=\"o\">(</span><span class=\"n\">FV</span> <span class=\"n\">Q</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">x</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">FV</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">}</span>\n\n\n<span class=\"c1\">-- sub_is_def M x N means M [ x := N ] is defined</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">sub_is_def</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">var</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n\n<span class=\"c1\">-- y [ x := N ] is defined</span>\n<span class=\"bp\">|</span> <span class=\"n\">var</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">sub_is_def</span> <span class=\"o\">(</span><span class=\"n\">term.var</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span>\n\n<span class=\"c1\">-- P [ x := N ] is defined → Q [ x := N ] is defined → (P Q) [ x := N ] is defined</span>\n<span class=\"bp\">|</span> <span class=\"n\">app</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">sub_is_def</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"n\">sub_is_def</span> <span class=\"n\">Q</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"n\">sub_is_def</span> <span class=\"o\">(</span><span class=\"n\">term.app</span> <span class=\"n\">P</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span>\n\n<span class=\"c1\">-- x = y → ( λ y . P ) [ x := N ] is defined</span>\n<span class=\"bp\">|</span> <span class=\"n\">abs_same</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">sub_is_def</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span>\n\n<span class=\"c1\">-- x ≠ y → x ∉ FV ( λ y . P ) → ( λ y . P ) [ x := N ] is defined</span>\n<span class=\"bp\">|</span> <span class=\"n\">abs_diff_nel</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"n\">FV</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">sub_is_def</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span>\n\n<span class=\"c1\">-- x ≠ y → y ∉ FV ( N ) → P [ x := N ] is defined → ( λ y . P ) [ x := N ] is defined</span>\n<span class=\"bp\">|</span> <span class=\"n\">abs_diff</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">y</span> <span class=\"bp\">∉</span> <span class=\"n\">FV</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"n\">sub_is_def</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"n\">sub_is_def</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span>\n\n<span class=\"kd\">notation</span> <span class=\"n\">M</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"bp\">`</span> <span class=\"n\">x</span> <span class=\"bp\">`</span><span class=\"o\">:=</span><span class=\"bp\">`</span> <span class=\"n\">N</span> <span class=\"bp\">`</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"bp\">`</span><span class=\"n\">is_def</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">sub_is_def</span> <span class=\"n\">M</span> <span class=\"n\">x</span> <span class=\"n\">N</span>\n\n\n<span class=\"c1\">-- M [ x := N ]</span>\n<span class=\"kd\">def</span> <span class=\"n\">sub</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">var</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">term</span>\n<span class=\"c1\">-- if x = y then y [ x := N ] = N else y [ x := N ] = y</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">term.var</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"k\">then</span> <span class=\"n\">N</span> <span class=\"k\">else</span> <span class=\"n\">term.var</span> <span class=\"n\">y</span>\n\n<span class=\"c1\">-- (P Q) [ x := N ] = (P [ x := N ] Q [ x := N ])</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">term.app</span> <span class=\"n\">P</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">:=</span> <span class=\"n\">term.app</span> <span class=\"o\">(</span><span class=\"n\">sub</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sub</span> <span class=\"n\">Q</span> <span class=\"n\">x</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- if x = y then ( λ y . P ) [ x := N ] = ( λ y . P ) else ( λ y . P ) [ x := N ] = ( λ y . P [ x := N ] )</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"k\">then</span> <span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span> <span class=\"k\">else</span> <span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"n\">sub</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n<span class=\"kd\">notation</span> <span class=\"n\">M</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"bp\">`</span> <span class=\"n\">x</span> <span class=\"bp\">`</span><span class=\"o\">:=</span><span class=\"bp\">`</span> <span class=\"n\">N</span> <span class=\"bp\">`</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">sub</span> <span class=\"n\">M</span> <span class=\"n\">x</span> <span class=\"n\">N</span>\n\n\n<span class=\"c1\">-- is_sub M x N L means M [ x := N ] = L</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">is_sub</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">var</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n\n<span class=\"c1\">-- if x = y then y [ x := N ] = N</span>\n<span class=\"bp\">|</span> <span class=\"n\">var_same</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"o\">(</span><span class=\"n\">term.var</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">N</span>\n\n<span class=\"c1\">-- if x ≠ y then y [ x := N ] = y</span>\n<span class=\"bp\">|</span> <span class=\"n\">var_diff</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"o\">(</span><span class=\"n\">term.var</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">term.var</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- (P Q) [ x := N ] = (P [ x := N ] Q [ x := N ])</span>\n<span class=\"bp\">|</span> <span class=\"n\">app</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P'</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Q'</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_sub</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">P'</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"n\">Q</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">Q'</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"o\">(</span><span class=\"n\">term.app</span> <span class=\"n\">P</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">term.app</span> <span class=\"n\">P'</span> <span class=\"n\">Q'</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- if x = y then ( λ y . P ) [ x := N ] = ( λ y . P )</span>\n<span class=\"bp\">|</span> <span class=\"n\">abs_same</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- if x ≠ y then ( λ y . P ) [ x := N ] = ( λ y . P [ x := N ] )</span>\n\n<span class=\"bp\">|</span> <span class=\"n\">abs_diff_nel</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P'</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"n\">FV</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">P'</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P'</span><span class=\"o\">)</span>\n\n<span class=\"bp\">|</span> <span class=\"n\">abs_diff</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P'</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">y</span> <span class=\"bp\">∉</span> <span class=\"n\">FV</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">P'</span> <span class=\"bp\">→</span> <span class=\"n\">is_sub</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">term.abs</span> <span class=\"n\">y</span> <span class=\"n\">P'</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">H1</span> <span class=\"o\">:</span> <span class=\"n\">is_sub</span> <span class=\"n\">M</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"o\">[</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">N</span> <span class=\"o\">]</span> <span class=\"n\">is_def</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">H1</span> <span class=\"o\">:</span> <span class=\"n\">is_sub</span> <span class=\"n\">M</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"o\">[</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">N</span> <span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">L</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 260591462,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1636313408
    },
    {
        "content": "<p>The first one is just induction on the <code>is_sub</code> value</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">var</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">term</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">H1</span> <span class=\"o\">:</span> <span class=\"n\">is_sub</span> <span class=\"n\">M</span> <span class=\"n\">x</span> <span class=\"n\">N</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"o\">[</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">N</span> <span class=\"o\">]</span> <span class=\"n\">is_def</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">H1</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sub_is_def.var</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sub_is_def.var</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sub_is_def.app</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sub_is_def.abs_same</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sub_is_def.abs_diff_nel</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sub_is_def.abs_diff</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 260592527,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636314998
    },
    {
        "content": "<p>because the two inductive propositions have nearly the same structure</p>",
        "id": 260592536,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636315025
    },
    {
        "content": "<p>Huh. I thought I had tried that, but I guess not. Thank you.</p>",
        "id": 260592859,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1636315435
    }
]