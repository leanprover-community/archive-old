[
    {
        "content": "<p>It should go through the lemma that the length of a sublist is leq than the length of a list</p>",
        "id": 289657318,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1657837054
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.length_le_of_sublist\">docs#list.length_le_of_sublist</a></p>",
        "id": 289657410,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1657837093
    },
    {
        "content": "<p>That was my first instinct too, but filter_map also maps, so it's not a sublist. Should be easy by induction, though</p>",
        "id": 289657911,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1657837439
    },
    {
        "content": "<p>It seems like something I should add to mathlib then!</p>",
        "id": 289658077,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1657837554
    },
    {
        "content": "<p><code>(l.filter_map f).map some</code> is a sublist of <code>l.map f</code>, though. So <code>(l.filter_map f).length = ((l.filter_map f).map some).length &lt;= (l.map f). length = l.length</code></p>",
        "id": 289658391,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1657837755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 289659879,
        "sender_full_name": "Notification Bot",
        "timestamp": 1657838661
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 293648399,
        "sender_full_name": "Notification Bot",
        "timestamp": 1660616390
    }
]