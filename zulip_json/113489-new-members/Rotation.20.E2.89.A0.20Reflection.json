[
    {
        "content": "<p>I'm working on a lemma that shows a rotation by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> is never the same as a reflection about the x-axis. Simplified to an equation, I am trying to prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mrow><mi>i</mi><mi>θ</mi></mrow></msup><mo>∗</mo><mi>z</mi><mo mathvariant=\"normal\">≠</mo><mover accent=\"true\"><mi>z</mi><mo>ˉ</mo></mover></mrow><annotation encoding=\"application/x-tex\">e^{i\\theta}*z ≠ \\bar{z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.56778em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.56778em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span></span></span></span>. I found an example of z for which this equation is not true, but I am having trouble finishing the proof.</p>",
        "id": 246287334,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1626473963
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.complex.isometry</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.trigonometric</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">complex</span>\n\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">π</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">real.pi</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">reflection_rotation</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">θ</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">rotation</span> <span class=\"o\">(</span><span class=\"n\">exp_map_circle</span> <span class=\"n\">θ</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">≠</span> <span class=\"n\">conj_lie</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">θ</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">exp</span><span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">θ</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)),</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">exp_conj</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">conj.map_mul</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">conj.map_div</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">exp_add</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mul_add</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">add_assoc</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">θ</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">+</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">θ</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">θ</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_comm</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">exp_eq_exp_iff_exists_int</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 246287394,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1626474004
    },
    {
        "content": "<p>How can I show that there is, in fact, not an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">n \\in \\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> that satisfies the equation or that the equation before I rewrite exp_eq_exp_iff_exists_int is, in fact, false?</p>",
        "id": 246287470,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1626474062
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"418334\">Shadman Sakib</span> has marked this topic as resolved.</p>",
        "id": 246289138,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626475547
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"418334\">Shadman Sakib</span> has marked this topic as unresolved.</p>",
        "id": 246289191,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626475572
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">push_neg</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">n</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">add_left_cancel</span> <span class=\"o\">(</span><span class=\"n\">mul_right_cancel'</span> <span class=\"n\">I_ne_zero</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n</code></pre></div>\n<p>will get you closer to your goal. a word of advice, though, using<code>simp</code> every line is slow + bad style (what if someone adds a new simp lemma? then it could break your whole proof). try use <code>squeeze_simp</code> if <code>simp</code> doesn't finish your goal and replace the <code>simp</code> with the <code>simp only</code> it suggests</p>",
        "id": 246291247,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1626477808
    },
    {
        "content": "<p>you can also group <code>rw</code>s using the syntax <code>rw [add_comm, exp_eq_exp_iff_exists_int]</code> (for example)</p>",
        "id": 246291311,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1626477850
    },
    {
        "content": "<p>it'd be interesting, but not sure if possible in mathlib, to prove this via complex diffability; the lhs is complex diffable whilst the rhs isn't</p>",
        "id": 246291363,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1626477940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"418334\">@Shadman Sakib</span> Sometimes it pays to generalize a lemma to prove a more specialized one:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.complex.isometry</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">complex</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">reflection_rotation'</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"bp\">¬</span> <span class=\"n\">w</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">conj</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hu</span> <span class=\"o\">:</span> <span class=\"n\">w.re</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"n\">ring_hom.map_one</span><span class=\"o\">],</span>\n    <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">one_re</span> <span class=\"n\">at</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n    <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"n\">I</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">conj_I</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">add_left_inj</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">neg_add_self</span><span class=\"o\">],</span>\n    <span class=\"n\">nth_rewrite</span> <span class=\"mi\">1</span> <span class=\"bp\">←</span><span class=\"n\">one_mul</span> <span class=\"n\">I</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">right_distrib</span><span class=\"o\">,</span> <span class=\"n\">mul_eq_zero</span><span class=\"o\">],</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">I_ne_zero</span><span class=\"o\">,</span> <span class=\"n\">or_false</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">add_left_inj</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">),</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">add_neg_cancel_right</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">],</span>\n    <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n    <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">hu</span><span class=\"o\">,</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">reflection_rotation</span> <span class=\"o\">(</span><span class=\"n\">θ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">rotation</span> <span class=\"o\">(</span><span class=\"n\">exp_map_circle</span> <span class=\"n\">θ</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">≠</span> <span class=\"n\">conj_lie</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">rotation_apply</span><span class=\"o\">,</span> <span class=\"n\">ne.def</span><span class=\"o\">,</span> <span class=\"n\">conj_lie_apply</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"n\">reflection_rotation'</span> <span class=\"o\">(</span><span class=\"n\">exp_map_circle</span> <span class=\"n\">θ</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 246291922,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1626478620
    },
    {
        "content": "<p>(I'm sure those with more facility than me with complex numbers and algebraic expressions could simplify the proof of the supporting lemma.)</p>",
        "id": 246292019,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1626478742
    }
]