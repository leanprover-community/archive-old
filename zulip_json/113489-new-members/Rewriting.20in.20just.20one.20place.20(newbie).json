[
    {
        "content": "<p>I am playing around with the natural numbers game online, trying out variations on some proofs.<br>\nI want to rewrite a hypothesis</p>\n<p>ab : b + a = a</p>\n<p>using zero_add, to get ab: b + a = 0 + a</p>\n<p>with the step: rw ← zero_add a at ab,</p>\n<p>I get: ab : b + (0 + a) = 0 + a (rewriting both occurrences of \"a\")</p>\n<p>Is there a nice idiom that would give the desired result?</p>",
        "id": 319086101,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1672688077
    },
    {
        "content": "<p>You might try <code>change</code> for definitional equivalence or <code>convert_to</code> for other other. The latter might create additional goals.</p>",
        "id": 319087410,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1672688859
    },
    {
        "content": "<p>There is also <code>nth_rewrite</code> which first takes a zero-based index and then a rewrite lemma.</p>",
        "id": 319087630,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1672689002
    },
    {
        "content": "<p><code>zero_add</code> isn't definitional and NNG is running on a very old Lean so might well not have <code>convert_to</code> or <code>nth_rewrite</code></p>",
        "id": 319087684,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672689011
    },
    {
        "content": "<p>The way I usually solve this sort of thing in NNG is <code>have ab' : b + a = 0 + a,</code> and prove this with <code>rw zero_add, exact ab</code>.</p>",
        "id": 319087767,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672689060
    },
    {
        "content": "<p>NNG has <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#conv\">tactic#conv</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">conv</span> <span class=\"n\">at</span> <span class=\"n\">ab</span> <span class=\"o\">{</span><span class=\"n\">to_rhs</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">zero_add</span> <span class=\"n\">a</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 319088013,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1672689197
    },
    {
        "content": "<p>indeed <code>conv</code> was in core Lean 3.4.1</p>",
        "id": 319088886,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672689736
    },
    {
        "content": "<p>Thanks much!</p>",
        "id": 319101729,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1672698576
    }
]