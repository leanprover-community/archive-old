[
    {
        "content": "<p>In the below sample, I've deduced that finset.univ = {a} (off the type t\\alpha). However, the rewrite failed and I have no clue why. They should both be finset.univ of t\\alpha, as far as I can see with the widget, and I don't know what else it could be. In addition, the whole usage of unfreezing and the induction tactic is based on other usage in mathlib, but I don't really understand what I've done there, so it could be wrong <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> Any pointers?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finsupp.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">multinomial</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span>  <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">factorial</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">*∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"o\">{</span><span class=\"n\">j'</span> <span class=\"bp\">∈</span> <span class=\"n\">fintype.elems</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">j'</span> <span class=\"bp\">≤</span> <span class=\"n\">i</span><span class=\"o\">},</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">i</span><span class=\"o\">))</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">multinomial_theorem</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hα</span> <span class=\"o\">:</span> <span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hα₁</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hα₂</span> <span class=\"o\">:</span> <span class=\"n\">has_le</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hα₃</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n   <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)),</span> <span class=\"n\">ite</span> <span class=\"o\">((</span><span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">multinomial</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">k</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)))</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(((</span><span class=\"n\">k</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">))))</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">unfreezingI</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">induction</span> <span class=\"n\">hα</span> <span class=\"n\">using</span> <span class=\"n\">fintype.induction_subsingleton_or_nontrivial</span> <span class=\"k\">with</span> <span class=\"n\">tα</span> <span class=\"n\">htα</span> <span class=\"n\">htα₁</span> <span class=\"n\">htα₂</span> <span class=\"n\">htα₃</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n      <span class=\"n\">simp</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">finset.nonempty.bex</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">finset.univ_nonempty</span> <span class=\"n\">tα</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"n\">fintype.univ_of_subsingleton</span> <span class=\"n\">a</span><span class=\"o\">),</span>\n  <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 293407343,
        "sender_full_name": "Pim Otte",
        "timestamp": 1660488142
    },
    {
        "content": "<p>I think the problem here is probably that the fintype instance in <code>fintype.univ_of_subsingleton</code> (that comes from the subsingleton instance htα₁) is not defeq to the fintype instance htα in <code>finset.univ</code> in your goal. I think in order to apply induction more easily, you may want to generalize your definition to use an arbitrary finset instead of only <code>finset.univ</code> of a fintype. However, there are other problems in your definition, which I'll detail in the multinomial topic.</p>",
        "id": 293418017,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1660494271
    }
]