[
    {
        "content": "<p>I am new to lean and have played around with it but I still haven't wrapped my head around whether or not it is possible to use lean to create your own axiomatic theories.  For example, let's say I want to create a propositional calculus that is built from a couple logical connectives together with modus ponens and a handful of axioms.  Is it possible to reason with lean within this scope? </p>\n<p>I tried seeing if this had already had been asked in the past but didn't have too much luck so apologize if this is something that has come up from time to time.  Cheers and thanks (hoping to carve out more time in the future to really start using lean more).</p>",
        "id": 274258824,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1646506043
    },
    {
        "content": "<p>you can do that by defining the logic you're interested in and using Lean as a meta-logic</p>",
        "id": 274259037,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1646506397
    },
    {
        "content": "<p>then you'll be proving theorems of the form \"X is provable in [your logic]\"</p>",
        "id": 274259049,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1646506434
    },
    {
        "content": "<p>I think you could even define the syntax such that this amounts to putting a turnstile before the theorem statement</p>",
        "id": 274259127,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1646506512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"482773\">@Jakub Kądziołka</span> Thanks for the reply.  Any pointers in navigating the meta-programming documentation?  Also not sure, but would this be something that might be easier in lean 4 vs lean 3?</p>",
        "id": 274259266,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1646506703
    },
    {
        "content": "<p>An example is probably all I would need to get me started (would at least save me some time stumbling around at least) so if you are aware of any I am interested to hear.  Thanks again.</p>",
        "id": 274259471,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1646506895
    },
    {
        "content": "<p>This has nothing to do with \"metaprogramming\" as in \"writing tactics. You might want to check out Flypitch.</p>",
        "id": 274260003,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646507619
    },
    {
        "content": "<p>There's also <a href=\"#narrow/stream/236446-Type-theory/topic/Modelling.20a.20Type.20Theory.20in.20Lean/near/195563859\">this thread</a>, there are probably similar ones in the \"Type Theory\" stream. There's another project <a href=\"https://github.com/digama0/mm0\">called mm0</a> that's more directly aimed at this kind of thing; the author has an intro/tutorial video: <a href=\"https://www.youtube.com/watch?v=A7WfrW7-ifw\">https://www.youtube.com/watch?v=A7WfrW7-ifw</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"A7WfrW7-ifw\" href=\"https://www.youtube.com/watch?v=A7WfrW7-ifw\"><img src=\"https://uploads.zulipusercontent.net/1a5ad0f819a84449ad8f588d196d496ff7c49212/68747470733a2f2f692e7974696d672e636f6d2f76692f413757667257372d6966772f64656661756c742e6a7067\"></a></div>",
        "id": 274260321,
        "sender_full_name": "Chris B",
        "timestamp": 1646508043
    },
    {
        "content": "<p>Thanks everyone.  Seems metamath or mm0/mm1 are what I actually need as doing this in lean is a bit harder. Cheers.</p>",
        "id": 274266730,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1646516899
    }
]