[
    {
        "content": "<p>The Lean community is awesome! Thanks to your help, now I'm able to complete this proof. Suggestions welcome.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">placeholder</span> <span class=\"o\">:=</span> <span class=\"mi\">998244353</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fibonacci</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">placeholder</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">have</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">nat.sub_lt_succ</span> <span class=\"n\">n</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">fibonacci</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fibonacci_sum</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">placeholder</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci_sum</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">closed_form</span> <span class=\"o\">{</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">fibonacci_sum</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">bound</span><span class=\"o\">,</span>\n\n  <span class=\"n\">cases</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">exact</span> <span class=\"n\">absurd</span> <span class=\"n\">bound</span> <span class=\"o\">(</span><span class=\"n\">lt_irrefl</span> <span class=\"mi\">0</span><span class=\"o\">),</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">induction_hypothesis</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">norm_num</span> <span class=\"o\">[</span><span class=\"n\">fibonacci</span><span class=\"o\">,</span> <span class=\"n\">fibonacci_sum</span><span class=\"o\">],</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">norm_num</span> <span class=\"o\">[</span><span class=\"n\">fibonacci_sum</span><span class=\"o\">],</span>\n      <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"n\">induction_hypothesis</span> <span class=\"o\">(</span><span class=\"n\">nat.succ_pos</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n\n      <span class=\"n\">rw</span> <span class=\"n\">fibonacci</span><span class=\"o\">,</span>\n      <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n      <span class=\"n\">ring</span><span class=\"o\">,</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 222691714,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1610614196
    },
    {
        "content": "<p>What is the placeholder for</p>",
        "id": 222691865,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610614314
    },
    {
        "content": "<p>obviously f(0) = 0</p>",
        "id": 222691869,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610614320
    },
    {
        "content": "<p>I want to count from 1</p>",
        "id": 222691934,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1610614339
    },
    {
        "content": "<p>That's fine but if you choose the correct value for zero then your proofs will be easier</p>",
        "id": 222691971,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1610614370
    },
    {
        "content": "<p>In line with Kenny's comment, why do you not define fibonacci as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">fibonacci</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">have</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">nat.sub_lt_succ</span> <span class=\"n\">n</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">fibonacci</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>?</p>",
        "id": 222691975,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1610614375
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">fibonacci</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 222692000,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610614399
    },
    {
        "content": "<p>Here's a slow proof with <code>omega</code>, using fibonacci defined with values in the naturals:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fibonacci</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fibonacci_sum</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci_sum</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">fibonacci_succ_pos</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">fibonacci</span> <span class=\"n\">n.succ</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">induction_hypothesis</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">nat.one_pos</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">fibonacci</span><span class=\"o\">],</span>\n    <span class=\"n\">apply</span> <span class=\"n\">nat.lt_add_left</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">induction_hypothesis</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">closed_form</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">fibonacci_sum</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">induction_hypothesis</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">fibonacci_sum</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"n\">induction_hypothesis</span><span class=\"o\">,</span>\n    <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">fibonacci</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci_succ_pos</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"n\">omega</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 222792248,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1610662406
    },
    {
        "content": "<p>I have a proof of a variant statement <a href=\"https://github.com/bryangingechen/lean-fibonacci/blob/master/src/fib.lean#L55\">here</a> too (originally written for <a href=\"https://observablehq.com/@bryangingechen/fibonacci-formalized-1-some-sums#sectionFormulas\">an Observable notebook on Lean</a>).</p>",
        "id": 222793766,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1610662861
    },
    {
        "content": "<p>Subtraction for naturals is hard to deal with, so if you can make it be in terms of addition you can sometimes find simpler proofs:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fibonacci</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fibonacci_sum</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">fibonacci_sum</span> <span class=\"n\">n</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">closed_form</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">fibonacci_sum</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">fibonacci</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">induction_hypothesis</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">fibonacci_sum</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_assoc</span><span class=\"o\">,</span> <span class=\"n\">induction_hypothesis</span><span class=\"o\">],</span>\n    <span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 222794825,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1610663446
    }
]