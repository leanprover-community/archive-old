[
    {
        "content": "<p>This seems incredibly elementary (but so does the irrationality of sqrt 2 <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span>), but I'm finding myself going around in unending circles. I'm trying to figure out the best way to state something like the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥₁</span> <span class=\"bp\">=</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"bp\">∣</span><span class=\"n\">x</span><span class=\"bp\">∣</span><span class=\"o\">⟩</span> <span class=\"bp\">≤</span> <span class=\"bp\">∥</span><span class=\"mi\">1</span><span class=\"bp\">∥₂</span> <span class=\"bp\">⬝</span> <span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥₂</span> <span class=\"bp\">=</span> <span class=\"bp\">√</span><span class=\"n\">n</span><span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥₂</span>\n</code></pre></div>\n<p>where <code>1</code> is the all-ones vector <code>&lt;1, 1, ...&gt;</code> of length <code>|x|</code> and <code> ⟨1,∣x∣⟩</code> is the standard inner product. I've tried to do something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.inner_product_space.basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ones_vector</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">ℝ</span> <span class=\"n\">l</span> <span class=\"o\">:=</span> <span class=\"n\">vector.repeat</span> <span class=\"mi\">1</span> <span class=\"n\">l</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">one_vector_prod</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">inner_product_space</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">vector</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)]:</span> <span class=\"bp\">⟪</span><span class=\"n\">ones_vector</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">⟫</span><span class=\"n\">_ℝ</span> <span class=\"bp\">≤</span> <span class=\"bp\">∥</span><span class=\"n\">ones_vector</span> <span class=\"n\">n</span><span class=\"bp\">∥</span> <span class=\"bp\">*</span> <span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥</span> <span class=\"o\">:=</span> <span class=\"n\">real_inner_le_norm</span> <span class=\"o\">(</span><span class=\"n\">ones_vector</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>but I kinda feel like this isn't even really doing what I think it's doing.</p>\n<p>Is this remotely the right direction to formalize something of the form in the first code block? For context, this is basically the first baby steps of what is intended to be a formalization of the <a href=\"https://en.wikipedia.org/wiki/Leftover_hash_lemma\">Leftover hash lemma</a> following <a href=\"https://cims.nyu.edu/~regev/papers/qcrypto.pdf\">Regev's proof  (in claim 5.3)</a>.</p>",
        "id": 306373824,
        "sender_full_name": "Ashley Blacquiere",
        "timestamp": 1666846402
    },
    {
        "content": "<p>you don't want to use vector, but the space <code>l -&gt; ℝ</code> and if you want to use the norms, there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi_Lp\">docs#pi_Lp</a> to get different <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">L^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span>-norms.</p>",
        "id": 306378080,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1666849322
    },
    {
        "content": "<p>see <a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/inner_product_space/pi_L2.html\">https://leanprover-community.github.io/mathlib_docs/analysis/inner_product_space/pi_L2.html</a> for the stuff about the inner product space</p>",
        "id": 306378434,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1666849576
    },
    {
        "content": "<p><code>vector</code> is nearly never the correct choice, sadly.</p>",
        "id": 306441836,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1666875129
    },
    {
        "content": "<p>Well, this is embarrassing... These responses seemed familiar, which led me to realize that I had basically <a href=\"#narrow/stream/113489-new-members/topic/Ones.20vector.20inner.20product/near/302585371\">already asked this question</a> and had some useful responses (with apologies to <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  if you happened to notice that I asked twice - I wasn't ignoring your suggestions - I just forgot! <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>). I guess that's what I get for dipping in and out of my Lean project with very little regularity...</p>\n<p><span class=\"user-mention\" data-user-id=\"330967\">@Wrenna Robson</span> I've seen a couple of your other posts related to L1 norm, so maybe you can help me out: I'm trying to figure out how to relate the standard Manhattan distance L1 norm to an inner product, as the first equality in this statement: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥₁</span> <span class=\"bp\">=</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"bp\">∣</span><span class=\"n\">x</span><span class=\"bp\">∣</span><span class=\"o\">⟩</span> <span class=\"bp\">≤</span> <span class=\"bp\">∥</span><span class=\"mi\">1</span><span class=\"bp\">∥₂</span> <span class=\"bp\">⬝</span> <span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥₂</span> <span class=\"bp\">=</span> <span class=\"bp\">√</span><span class=\"n\">n</span><span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥₂</span>\n</code></pre></div>\n<p>I've looked at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi_Lp\">docs#pi_Lp</a>, but it seems to go further than I need? Perhaps I need to do something like what <a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/normed_space/pi_Lp.html#pi_Lp.norm_eq_of_L2\">pi_Lp.norm_eq_of_L2</a> is doing?</p>",
        "id": 306870567,
        "sender_full_name": "Ashley Blacquiere",
        "timestamp": 1667065549
    }
]