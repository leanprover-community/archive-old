[
    {
        "content": "<p>why are inductive types equivalent to set theory? they look different, how can they be equivalent</p>",
        "id": 241387156,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1622725353
    },
    {
        "content": "<p>like set theory is all about awkward encoding of ordinary mathematical objects and inductive types are more natural</p>",
        "id": 241387242,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1622725415
    },
    {
        "content": "<p>That sounds like you read it somewhere?</p>",
        "id": 241392259,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622727864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"270523\">Huỳnh Trần Khanh</span> <a href=\"#narrow/stream/113489-new-members/topic/inductive.20types.20.3D.20set.20theory.3F/near/241387156\">said</a>:</p>\n<blockquote>\n<p>why are inductive types equivalent to set theory? they look different, how can they be equivalent</p>\n</blockquote>\n<p>source? I did hear in a talk by Voevodsky that you can see a set as a tree that's determined by its branches (set extensionality).</p>",
        "id": 241393406,
        "sender_full_name": "Ken Lee",
        "timestamp": 1622728416
    },
    {
        "content": "<p>I would not say that inductive types are like set theory at all. They are quite different approaches. Inductive types postulate (at great complication) the existence of initial algebras to a certain class of strictly positive type equations (narrowly avoiding the known inconsistencies in the area), while set theory is about using a simple axiom system and building everything you need by encoding. To me, the fact that they are roughly equivalent in consistency strength speaks well for the set theoretic approach, because it is easier to justify.</p>\n<p>In ZFC you have to prove that an algebraic equation has a solution before you can start using the smallest one. In CIC they just... exist, for no clear reason. They don't have definitions or an encoding to consult to see why they should exist. Personally I think the \"naturalness\" is an illusion. It would sure be nice if they exist but I can say the same thing about the liar sentence or the set of all sets (or the category of categories, for that matter). Having a reasonable way to work with the object doesn't mean it is actually reasonable to assume its existence</p>",
        "id": 241393458,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622728442
    },
    {
        "content": "<blockquote>\n<p>Heh, yes, the <code>inductive</code> keyword gives you a new way of adding constants and axioms to the system :-) But this is a rather more controlled approach than the <code>constant</code> one! In particular, didn't some kid prove that it was equiconsistent with set theory at some point?</p>\n</blockquote>\n<p>Ah, \"equiconsistent\", not \"equivalent\". What does \"equiconsistent\" mean then and what does that proof look like?</p>",
        "id": 241394603,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1622728962
    },
    {
        "content": "<p>The \"some kid\" referred to in that quote is me, and the proof is <a href=\"https://github.com/digama0/lean-type-theory/releases/tag/v1.0\">https://github.com/digama0/lean-type-theory/releases/tag/v1.0</a></p>",
        "id": 241394715,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729011
    },
    {
        "content": "<p>What I proved is that Lean's axiomatic system is equiconsistent with ZFC + {there are n inaccessible cardinals | n &lt; omega}</p>",
        "id": 241394851,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729067
    },
    {
        "content": "<p>And what that means is that the consistency of either of these systems implies the consistency of the other</p>",
        "id": 241394919,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729100
    },
    {
        "content": "<p>that is, if lean can prove false, then there is some n such that ZFC + \"there are n inaccessible cardinals\" can also prove false</p>",
        "id": 241395000,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729139
    },
    {
        "content": "<p>Less formally, given two equiconsistent theories, it's not philosophically coherent to doubt one more than the other</p>",
        "id": 241395242,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729240
    },
    {
        "content": "<p>Why couldn't you just prove that Lean's foundation is consistent? Is it because of some arcane technical difficulty that I don't know of?</p>",
        "id": 241395542,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1622729359
    },
    {
        "content": "<p>The issue with consistency proofs is that they always beg the question, consistent <em>relative to what assumptions</em>?</p>",
        "id": 241395644,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"270523\">Huỳnh Trần Khanh</span> <a href=\"#narrow/stream/113489-new-members/topic/inductive.20types.20.3D.20set.20theory.3F/near/241395542\">said</a>:</p>\n<blockquote>\n<p>Why couldn't you just prove that Lean's foundation is consistent? Is it because of some arcane technical difficulty that I don't know of?</p>\n</blockquote>\n<p>Go read Goedel :-) That tells you you can't prove it in Lean (unless it's inconsistent)</p>",
        "id": 241395724,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622729422
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/G%C3%B6del's_incompleteness_theorems\">https://en.wikipedia.org/wiki/G%C3%B6del's_incompleteness_theorems</a></p>",
        "id": 241395795,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729449
    },
    {
        "content": "<p>Consistency strength is a way to put all formal theories on a single scale. Since Lean is able to construct a model of ZFC (see <code>set_theory.zfc</code>), we know that lean is strictly stronger than ZFC in consistency strength, and the theorem I proved shows just how much stronger it is (not by much, since inaccessible cardinals are one of the weaker large cardinal assumptions to make)</p>",
        "id": 241396211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729642
    },
    {
        "content": "<p>But knowing that it's on the scale at all is good news. The real headliner when the proof came out was \"lean can't prove false\"</p>",
        "id": 241396486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1622729754
    }
]