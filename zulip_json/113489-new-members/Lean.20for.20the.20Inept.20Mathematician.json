[
    {
        "content": "<p>grant huynhtrankhanh commit rights too <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267059903,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641475391
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113489-new-members/topic/Where.20to.20lookup.20math.20theories.2Fconjectures.20etc.2E.3F/near/267059615\">said</a>:</p>\n<blockquote>\n<p>Will set up github pages too perhaps</p>\n</blockquote>\n<p>Your sphinx integration lib would come in handy, I'd say</p>",
        "id": 267060106,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641475525
    },
    {
        "content": "<p>Now we perhaps race to see who writes the first one ha.</p>",
        "id": 267060125,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641475538
    },
    {
        "content": "<p>Yeah quite possibly, I may look at reviving it (for now I suspect it would sink a bit of time to get it in there because what's missing at the minute is automatic ref generation and without that life is a bit hard)</p>",
        "id": 267060192,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641475570
    },
    {
        "content": "<p>Perhaps after we have an article or two</p>",
        "id": 267060217,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641475581
    },
    {
        "content": "<p>what format are you thinking? blog?</p>",
        "id": 267060280,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641475613
    },
    {
        "content": "<p>I was assuming markdown files a la Jekyll blog for the minute</p>",
        "id": 267060308,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641475627
    },
    {
        "content": "<p>But open to whatever of course</p>",
        "id": 267060316,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641475632
    },
    {
        "content": "<p>let's use VuePress, it's quick and it's pretty <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 267060501,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641475736
    },
    {
        "content": "<p>but hey, I have commit rights anyway so I'll commit a boilerplate real quick <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267060644,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641475815
    },
    {
        "content": "<p>let's commit to other branches and open PRs to master :D</p>",
        "id": 267060897,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641475968
    },
    {
        "content": "<p>Also maybe no bikeshedding (myself included) on format until we have a post :D</p>",
        "id": 267061065,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641476054
    },
    {
        "content": "<p>I requested a <a href=\"#narrow/stream/236604-Zulip-meta/topic/Tags.20on.20Zulip.20topics.2Freplies/near/267060695\">split</a> of this topic.</p>",
        "id": 267061250,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1641476165
    },
    {
        "content": "<p>I think gh pages is a great format. I have an almost finished script that can turn lean files into md files. it's an extremely simplified version of alectryon</p>",
        "id": 267061789,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641476488
    },
    {
        "content": "<p>That woudl be awesome, especially because we'll likely have to run the lean code to make sure it works with mathlib -- so something like that is probably an even better idea</p>",
        "id": 267061896,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641476540
    },
    {
        "content": "<p>will get it up and running right after my dayjob shift <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 267061994,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641476624
    },
    {
        "content": "<p><a href=\"https://github.com/Julian/lftim/tree/someone-is-quicker-than-me\">https://github.com/Julian/lftim/tree/someone-is-quicker-than-me</a></p>\n<p>this thing is also very easy to use!!! you just need to write some markdown files and vuepress will take care of the rest <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> the default theme is already neat enough so we don't need to change it, what is the point anyway <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267062211,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641476764
    },
    {
        "content": "<p>then we just need to use netlify to deploy the site! ez pz <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267062293,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641476815
    },
    {
        "content": "<p>either way, md files seem to be a sweet spot</p>",
        "id": 267062452,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641476892
    },
    {
        "content": "<p>great! <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> we already have a boilerplate!!! now let's write an article <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> it's just a markdown file anyway, so easy <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> what should we write now?</p>",
        "id": 267063333,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641477440
    },
    {
        "content": "<p>Writing up your stars and bars is probably not a bad idea FWIW</p>",
        "id": 267063891,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641477727
    },
    {
        "content": "<p>For those looking for <a href=\"#narrow/stream/113489-new-members/topic/i.20proved.20stars.20and.20bars!!!/near/265123493\">stars and bars</a></p>",
        "id": 267064578,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1641478181
    },
    {
        "content": "<p>Alright, I'm free now. Let me translate this javascript code to python. Should be easier to use</p>",
        "id": 267110930,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641501415
    },
    {
        "content": "<p>I'm likely to find a movie and head to bed soon, but I started on a post (for math I know nothing about which I pulled from the \"December in Mathlib\" blog post) -- so there's some initial paragraphs here: <a href=\"https://github.com/Julian/lftim/commit/7b0f977549cd912f0f1f5bf5daf4e28785beb3d0\">https://github.com/Julian/lftim/commit/7b0f977549cd912f0f1f5bf5daf4e28785beb3d0</a> on lattice ordered commutative groups. Tomorrow I'll probably read through the (reasonably short file) but if anyone feels like adding to that, commenting on it, or whatever, go for it :)</p>",
        "id": 267117332,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641504554
    },
    {
        "content": "<p>The script is almost working. Then we will be able to just write everything in lean and the MD files will be generated automatically.</p>\n<p>Also, maybe, this deserves a separate stream so we can talk without worrying about spamming lots of people</p>",
        "id": 267119658,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641505913
    },
    {
        "content": "<p>hello? so what will we use? vuepress or jekyll? i prefer vuepress because it's easier to use for me though, and its default theme is very neat</p>",
        "id": 267150036,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641529212
    },
    {
        "content": "<p>here's my blog post <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> <a href=\"https://github.com/Julian/lftim/blob/second-entry-unless-someone-beats-me-to-it/_posts/2022-01-07-Stars-and-bars.md\">https://github.com/Julian/lftim/blob/second-entry-unless-someone-beats-me-to-it/_posts/2022-01-07-Stars-and-bars.md</a></p>",
        "id": 267151168,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641531012
    },
    {
        "content": "<p>I don't have experience using vuepress with GH pages</p>",
        "id": 267155248,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641536122
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267155248\">said</a>:</p>\n<blockquote>\n<p>I don't have experience using vuepress with GH pages</p>\n</blockquote>\n<p>me neither. but I have experience using VuePress with Netlify <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> the whole process is generally pretty straightforward</p>",
        "id": 267155320,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641536208
    },
    {
        "content": "<p>I'd say let's make use of the page that GitHub offers for free this way we don't need to have spread content</p>",
        "id": 267155417,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641536355
    },
    {
        "content": "<p>With GH pages, you just push a commit and the site updates accordingly</p>",
        "id": 267155433,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641536389
    },
    {
        "content": "<p>But Jekyll or VuePress, I don't know. I only have experience with Jekyll. I'm open to learn but I am comfortable with whatever Julian chooses</p>",
        "id": 267155632,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641536671
    },
    {
        "content": "<p>2-1. 2 people prefer Jekyll, so Jekyll it is then <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>\n<p>actually Netlify watches every commit on the GitHub repo and runs the build command automatically so the user experience should be the same <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> but I respect your preference <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267155714,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641536775
    },
    {
        "content": "<p><span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> no objections right? or should we wait for Julian to be online</p>",
        "id": 267156118,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641537335
    },
    {
        "content": "<p>🦗 ok everyone is asleep 💤💤💤 I'll leave this chat <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> I'll be back when people are online again!</p>",
        "id": 267156370,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641537621
    },
    {
        "content": "<p>I think we should write a few and then decide about tooling, until then minimal work necessary is just Jekyll. But yeah let's just write em first :)</p>",
        "id": 267162910,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641544202
    },
    {
        "content": "<p>Alright, after some interruptions, I was finally able to get it done. The script turns this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"> asd asd -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">qq</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\">## eee</span>\n\n<span class=\"cm\">* aaa</span>\n<span class=\"cm\">* bbb</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ttt</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n</code></pre></div>\n<p>Into this:</p>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code>asd asd\n\n<span class=\"sb\">```lean</span>\n<span class=\"kd\">def</span> <span class=\"n\">qq</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"sb\">```</span>\n\n<span class=\"gu\">## eee</span>\n\n<span class=\"k\">*</span> aaa\n<span class=\"k\">*</span> bbb\n\n<span class=\"sb\">```lean</span>\n<span class=\"kd\">def</span> <span class=\"n\">ttt</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n<span class=\"sb\">```</span>\n</code></pre></div>",
        "id": 267200027,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641568374
    },
    {
        "content": "<p>We just call it by, for example, <code>$ python lean2md.py src _posts</code>, and it will iterate on all lean files inside <code>src</code> and produce their respective markdown files (with the same name except for the extension) inside <code>_posts</code></p>",
        "id": 267200223,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641568457
    },
    {
        "content": "<p><a href=\"https://github.com/Julian/lftim/pull/1\">https://github.com/Julian/lftim/pull/1</a></p>",
        "id": 267201413,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641569060
    },
    {
        "content": "<p>inept mathematicians rejoice! I don't speak Python but I still understand the general logic of your code <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> how much time did you spend on debugging <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267202476,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641569607
    },
    {
        "content": "<p>Not much... I already had written something similar in javascript that does the same thing</p>",
        "id": 267203417,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641570002
    },
    {
        "content": "<p>Nice. Sounds great, better than what I was doing copy pasting from files!</p>",
        "id": 267204425,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641570520
    },
    {
        "content": "<p>If we want we can also make Jekyll link to the respective <code>.lean</code> file so it's easier for the reader to download it and follow along. But it's just an extra</p>",
        "id": 267211027,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641573716
    },
    {
        "content": "<p>haha, Donald Knuth invented literate programming and now we're doing something similar <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 267212019,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641574164
    },
    {
        "content": "<p>sorry for the stale joke but I couldn't help it</p>",
        "id": 267212403,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641574333
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"270523\">Huỳnh Trần Khanh</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267151168\">said</a>:</p>\n<blockquote>\n<p>here's my blog post <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> <a href=\"https://github.com/Julian/lftim/blob/second-entry-unless-someone-beats-me-to-it/_posts/2022-01-07-Stars-and-bars.md\">https://github.com/Julian/lftim/blob/second-entry-unless-someone-beats-me-to-it/_posts/2022-01-07-Stars-and-bars.md</a></p>\n</blockquote>\n<p>You should PR this maybe for comments so we merge it! But it may also be nice to describe the normal stars and bars proof before you talk about how it's not the one Lean uses, I think it's cute, but that's just me.</p>",
        "id": 267214855,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641575515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267117332\">said</a>:</p>\n<blockquote>\n<p>I'm likely to find a movie and head to bed soon, but I started on a post (for math I know nothing about which I pulled from the \"December in Mathlib\" blog post) -- so there's some initial paragraphs here: <a href=\"https://github.com/Julian/lftim/commit/7b0f977549cd912f0f1f5bf5daf4e28785beb3d0\">https://github.com/Julian/lftim/commit/7b0f977549cd912f0f1f5bf5daf4e28785beb3d0</a> on lattice ordered commutative groups. Tomorrow I'll probably read through the (reasonably short file) but if anyone feels like adding to that, commenting on it, or whatever, go for it :)</p>\n</blockquote>\n<p>While reading it, I noticed that it might be nice to have some sort of prelude, that is, a list of pre-requisite items that the reader should familiarize with before being able to fully understand the post. This is taking into consideration the fact that we're targeting inept mathematicians :D</p>\n<p>I think it's a bit less scary than finding out strange/new concepts in the middle of the text. And it might as well expose ideas for next posts, with the intent to cover up the prelude topics</p>",
        "id": 267216752,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641576457
    },
    {
        "content": "<p>Yes I thought about doing that, so I'm glad you did too :P will push me to do it.</p>",
        "id": 267217524,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641576828
    },
    {
        "content": "<p>Did you find that to be the case?</p>",
        "id": 267217593,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641576848
    },
    {
        "content": "<p>(That I mentioned something specific without explaining it? Just curious if I managed to)</p>",
        "id": 267217633,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641576877
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267217593\">said</a>:</p>\n<blockquote>\n<p>Did you find that to be the case?</p>\n</blockquote>\n<p>It was the case for me <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> <br>\nThe advantages of having ourselves as targets hehe</p>\n<p>This is my main problem when reading Wikipedia. The queue of things to know grows as I am reading the texts and it is really hard to manage in my head</p>",
        "id": 267217764,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641576957
    },
    {
        "content": "<p>Same here. That's why I have 100 tabs open...</p>",
        "id": 267217978,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641577061
    },
    {
        "content": "<p>Ha oy, yes understood. Eventually I clear out my 100 tabs and make believe that means I read them. Probably not the best approach :), but yes very good point.</p>",
        "id": 267218214,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641577172
    },
    {
        "content": "<p>In practice, the difference is that by following this prelude approach, the reader can decide whether to go on or not just by glancing at the pre-requisites. This contrasts with realizing that it's actually too much to take in right now in the middle of the way</p>",
        "id": 267219115,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641577609
    },
    {
        "content": "<p>This is a nice introspection experiment. My first stab will be at something way more basic like inj/surj/bijectivity of functions <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 267222349,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641579234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"270523\">Huỳnh Trần Khanh</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267151168\">said</a>:</p>\n<blockquote>\n<p>here's my blog post <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> <a href=\"https://github.com/Julian/lftim/blob/second-entry-unless-someone-beats-me-to-it/_posts/2022-01-07-Stars-and-bars.md\">https://github.com/Julian/lftim/blob/second-entry-unless-someone-beats-me-to-it/_posts/2022-01-07-Stars-and-bars.md</a></p>\n</blockquote>\n<p>I agree with Julian about the post. It would be nice to have an explanation of the concept behind the proof. Maybe even with a simple example. I'd argue that the concept/intuition is at least as important as the proof itself for inept people like myself <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 267260908,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641600431
    },
    {
        "content": "<p>When I first saw mention of <code>ourselves as targets</code> it made no sense to me. Now seeing it used in context a few times I take it that it means the goal is not to cover all of Math but only the math in <a href=\"https://github.com/leanprover-community/mathlib\">MathLib</a> (Lean 3). Is this the thinking to be associated with that phrase?</p>\n<p>This then raises the question if this will cover only <a href=\"https://github.com/leanprover-community/mathlib\">MathLib</a> for Lean 3 and/or <a href=\"https://github.com/leanprover-community/mathlib4\">MathLib4</a> for Lean 4?  It took me a more than a week when I came here to learn the there there was more than one MathLib for Lean.</p>",
        "id": 267285700,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1641633025
    },
    {
        "content": "<p>My understanding was that the authors consider themselves to be the \"inept mathematicians\" they are writing for</p>",
        "id": 267285947,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1641633457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267285947\">said</a>:</p>\n<blockquote>\n<p>My understanding was that the authors consider themselves to be the \"inept mathematicians\" they are writing for</p>\n</blockquote>\n<p>I considered that but then I, currently being one of the inept mathematicians (related to Lean), can't even write anything about Lean if it brings along any mention of Math as noted in my earlier <a href=\"#narrow/stream/113489-new-members/topic/Where.20to.20lookup.20math.20theories.2Fconjectures.20etc.2E.3F/near/267037627\">post</a>.</p>",
        "id": 267286327,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1641634062
    },
    {
        "content": "<p>I think the idea is something like \"write for your recent self\".  If you've just figured something out (e.g. how some proof works, or what's going on in some particular file in mathlib) then you could write an explanation that summarises your understanding.  The target audience — the person you should imagine you're explaining this to — should be someone of about the same ability as yourself who hasn't just gone through the process of figuring it out.  That is, you should write the article that you wish you could send back in time to your earlier self to save you that effort!</p>",
        "id": 267286881,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641634700
    },
    {
        "content": "<p>And I think this likely means we'll have articles at slightly different levels from each other, but roughly corresponding to the group of us, none of whom are anything resembling grad-school. PhD or research mathematicians, so at a more digestible level for our average level of understanding.</p>",
        "id": 267286960,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641634836
    },
    {
        "content": "<p>Side quest of mine is to understand the emoji use here. What does <span aria-label=\"100\" class=\"emoji emoji-1f4af\" role=\"img\" title=\"100\">:100:</span>  mean?</p>",
        "id": 267286962,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1641634848
    },
    {
        "content": "<p>None of the emoji mean anything. I used it just now to mean 100% (i.e. strong thumbs up).</p>",
        "id": 267286967,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641634870
    },
    {
        "content": "<blockquote>\n<p>the goal is not to cover all of Math</p>\n</blockquote>\n<p>By the way -- I think it's fine to cover something not in mathlib -- it will just mean you get to write the Lean code all on your own. But probably that will happen exactly when there's some nice piece of math you learn that you want to share but mathlib has it in some crazy generalization you can't begin to understand.</p>",
        "id": 267287327,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641635436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267287327\">said</a>:</p>\n<blockquote>\n<p>but mathlib has it in some crazy generalization you can't begin to understand.</p>\n</blockquote>\n<p>Yes, I think articles like this will be very valuable as a balance against the mission for maximal generality that guides mathlib.  Naturally, mathlib doesn't want to prove a result specifically for <code>ℕ</code> if it holds for an arbitrary unique factorization monoid; but this tendency toward generalisation means that the statements that get formalised in mathlib can be a bit abstracted and remote from everyday mathematical experience.  It will be really useful, then, to have articles that pull these theorems down to earth and make it easier to understand what they're doing and what they're for.</p>",
        "id": 267289041,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641638075
    },
    {
        "content": "<p>You can even write something that's super basic, like showing that the square of odd numbers is odd. And you can make it awesome by writing it in a way that you wish someone had explained it to you. Then linking it with a Lean proof that resembles your reasoning</p>",
        "id": 267295204,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641647330
    },
    {
        "content": "<p>For instance, something that I am very curious about: how the hack can one prove results about euclidean geometry in Lean? I makes no sense to me right now. Once I understand, I want to write about it. And explaining things always deepened my understandings</p>",
        "id": 267295302,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641647463
    },
    {
        "content": "<p>It's not explicitly related to mathlib formalization, but you might find <a href=\"https://arxiv.org/pdf/0810.4315.pdf\">A formal system for Euclid's Elements</a> interesting regarding the question \"how to do diagrammatic reasoning in a formal system\"</p>",
        "id": 267295467,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641647709
    },
    {
        "content": "<p>I made an attempt to explain the traditional stars and bars proof. wording might be awkward, please help me fix the article <a href=\"https://github.com/Julian/lftim/blob/0e949741fc7432e17c701cdddd7dc7f2b3070c36/_posts/2022-01-07-Stars-and-bars.md\">https://github.com/Julian/lftim/blob/0e949741fc7432e17c701cdddd7dc7f2b3070c36/_posts/2022-01-07-Stars-and-bars.md</a></p>",
        "id": 267296965,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641649857
    },
    {
        "content": "<p>Cool! Will have a look in a bit if no one else does first.</p>",
        "id": 267298728,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641652633
    },
    {
        "content": "<p>Loved the emojis! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 267299167,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641653222
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"270523\">Huỳnh Trần Khanh</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267296965\">said</a>:</p>\n<blockquote>\n<p>I made an attempt to explain the traditional stars and bars proof.</p>\n</blockquote>\n<p>Rather than launching straight into the quote from mathWorld, could I suggest that you start by first warming up the idea of <code>n choose k</code> and then introduce the notion of multisets?  Even if the reader already knows this, it's always helpful to warm up the brain-circuits!</p>",
        "id": 267301948,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641656965
    },
    {
        "content": "<p>That or adding to the \"prelude\" (so we don't need to regress too much)</p>",
        "id": 267302122,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641657228
    },
    {
        "content": "<p>Also you might start with a smaller example, so the reader can more easily work out the solution for themselves to verify that they understand.  Or even give a worked example like this: </p>\n<blockquote>\n<p>If we have an alphabet <code>a, b, c</code>, how many multisets of cardinality 2 can we construct?  <br>\nFirst, let's count the multisets that contain <code>a</code>.<br>\nIf one element of the multiset is <code>a</code> then that leaves us with 3 possibilities for the other element, giving <code>{a,a}</code>, <code>{a,b}</code>, and <code>{a,c}</code>.  <br>\nNow we also have to count the multisets that don't contain <code>a</code>.<br>\nThese are <code>{b,b}</code>, <code>{b,c}</code>, and <code>{c,c}</code>.  So there are 6 in total.</p>\n</blockquote>\n<p>A small worked example like this will help the reader to sniff out the recursive formula for counting multisets.</p>",
        "id": 267302706,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641658001
    },
    {
        "content": "<p>As in the example above, it might be better to use letters for the alphabet rather than numbers — then we don't have to switch between thinking about numerals that are counting things and numerals that are just symbols in an alphabet.</p>",
        "id": 267303023,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641658474
    },
    {
        "content": "<blockquote>\n<p>Notice that there is another way to represent each multiset.</p>\n</blockquote>\n<p>As an intermediate step, you might point out that each multiset is completely characterised by how many <code>a</code>s it contains, how many <code>b</code>s it contains, etc. — i.e. by a list of numbers.  In particular, the <em>length</em> of the list is the size of the alphabet, and the <em>sum</em> of the list is the cardinality of the multiset.  So every multiset of size <code>k</code> over an alphabet of <code>n</code> symbols corresponds to a way of writing <code>k</code> as a sum of <code>n</code> natural numbers.</p>\n<p>From there it's natural (but not obvious!) to move to another representation: we start with <code>k</code> stars and insert bars to partition them into <code>n</code> bins.</p>",
        "id": 267304155,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641660081
    },
    {
        "content": "<p>I like the use of emoji, but it might be easier to see what's going on if the \"bars\" were something like <span aria-label=\"barber\" class=\"emoji emoji-1f488\" role=\"img\" title=\"barber\">:barber:</span> rather than <span aria-label=\"chocolate\" class=\"emoji emoji-1f36b\" role=\"img\" title=\"chocolate\">:chocolate:</span>, so it's easier to see them as little dividers inserted between the <span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span>s.</p>\n<p>Also, for some reason I think a sequence like <span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span><span aria-label=\"barber\" class=\"emoji emoji-1f488\" role=\"img\" title=\"barber\">:barber:</span><span aria-label=\"barber\" class=\"emoji emoji-1f488\" role=\"img\" title=\"barber\">:barber:</span><span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span><span aria-label=\"barber\" class=\"emoji emoji-1f488\" role=\"img\" title=\"barber\">:barber:</span><span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span><span aria-label=\"barber\" class=\"emoji emoji-1f488\" role=\"img\" title=\"barber\">:barber:</span> might be easier to comprehend as a first example.  </p>\n<p>Somehow this seems easier to think of as \"three <span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span>s with <span aria-label=\"barber\" class=\"emoji emoji-1f488\" role=\"img\" title=\"barber\">:barber:</span>s inserted between them\" — but I can't explain why! <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 267304919,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641661227
    },
    {
        "content": "<p>Hi, I'd be quite interested in contributing a post or two on algebra when I find some time, could you give me commit rights <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> ? My GH username is Paul-Lez</p>",
        "id": 267361548,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1641739885
    },
    {
        "content": "<p>done and that would be awesome! I am still behind on getting to finishing mine so we are still at an ambitious 0 posts so far but we'll get there.</p>",
        "id": 267361739,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641740191
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376152\">@Paul Lezeau</span> feel free to test the <code>lean2md.py</code> script. It might have some unknown bugs</p>",
        "id": 267361925,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641740426
    },
    {
        "content": "<p>Yeah, it's going to get confused with leading and trailing whitespace I saw.</p>",
        "id": 267362020,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641740553
    },
    {
        "content": "<p>But I think it's OK to work those out as we find them.</p>",
        "id": 267362025,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641740563
    },
    {
        "content": "<p>(And in the interim if everyone just writes <code>.lean</code> files I think we're in good shape)</p>",
        "id": 267362029,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641740579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267361739\">said</a>:</p>\n<blockquote>\n<p>done and that would be awesome! I am still behind on getting to finishing mine so we are still at an ambitious 0 posts so far but we'll get there.</p>\n</blockquote>\n<p>Great! Thanks:)</p>",
        "id": 267362200,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1641740810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267361925\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"376152\">Paul Lezeau</span> feel free to test the <code>lean2md.py</code> script. It might have some unknown bugs</p>\n</blockquote>\n<p>I'll let you know if I find anything!</p>",
        "id": 267362213,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1641740832
    },
    {
        "content": "<p>Alright I wrote about graph coloring because graph theory is the topic I'm most familiar with in mathlib:<br>\n<a href=\"https://github.com/Julian/lftim/pull/3\">https://github.com/Julian/lftim/pull/3</a></p>\n<p>The resulting markdown file can be seen <a href=\"https://github.com/Julian/lftim/blob/graph-coloring/_posts/2022-01-09-Graph-Coloring-Basics.md\">here</a></p>",
        "id": 267390324,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641781683
    },
    {
        "content": "<p>Does anyone know how to set a pre-commit git hook? The documentation around this feature is super shallow.</p>\n<p>I want to set a hook that runs the python script and then calls git add on everything under <code>md</code> automatically. It's annoying when I forget to run the script before committing</p>",
        "id": 267420206,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641810515
    },
    {
        "content": "<p>you just put an executable file named <code>pre-commit</code> into <code>.git/hooks</code>, examples can be found in said directory of any git repository.</p>",
        "id": 267420478,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1641810676
    },
    {
        "content": "<p>Docs about git hooks are available here <a href=\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\">https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks</a></p>",
        "id": 267420511,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1641810699
    },
    {
        "content": "<p>Wow, that was a lot simpler than I thought. Thanks!!</p>",
        "id": 267420674,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641810787
    },
    {
        "content": "<p>several minutes late <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> in the JavaScript ecosystem <a href=\"https://www.npmjs.com/package/husky\">husky</a> is widely used</p>",
        "id": 267421030,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641811035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> will sh files work on Windows tho?</p>",
        "id": 267421551,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641811333
    },
    {
        "content": "<p>I dunno how exactly git determines what executable to call on windows but I'm rather sure it won't ship it's own thing but instead use the same mechanism windows uses to figure out what to use when you double click something. You are not forced to use .sh you can use any language you want.</p>",
        "id": 267421653,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1641811406
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267421551\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> will sh files work on Windows tho?</p>\n</blockquote>\n<p>yes. just believe me <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267421753,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641811450
    },
    {
        "content": "<p>I don't know why but it works</p>",
        "id": 267421795,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641811474
    },
    {
        "content": "<p>don't believe me? you can believe stack overflow though <a href=\"https://stackoverflow.com/a/18278072\">https://stackoverflow.com/a/18278072</a></p>",
        "id": 267421993,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641811586
    },
    {
        "content": "<p><span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 267422074,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641811628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267422074\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>\n</blockquote>\n<p>you should take my advice. use husky. this way the git hooks are actually present in the repository. otherwise the git hooks are only available on your own machine. works on my machine ftw <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267422325,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641811771
    },
    {
        "content": "<p>it's just a simple wrapper but it's tremendously helpful</p>",
        "id": 267422489,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641811843
    },
    {
        "content": "<p>whenever someone clones the repository, they can run <code>npm run prepare</code> and yayy, the hooks are installed!!</p>",
        "id": 267422705,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641811927
    },
    {
        "content": "<p>ok I'll help you set this up</p>",
        "id": 267425179,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641813176
    },
    {
        "content": "<p>it's a one time thing and it's pretty quick</p>",
        "id": 267425215,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641813195
    },
    {
        "content": "<p>just wait for a PR lol</p>",
        "id": 267425224,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641813202
    },
    {
        "content": "<p><a href=\"https://github.com/Julian/lftim/pull/4\">https://github.com/Julian/lftim/pull/4</a></p>",
        "id": 267426619,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641813978
    },
    {
        "content": "<p>I was thinking about making a makefile for it instead of adding node packages</p>",
        "id": 267427098,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641814260
    },
    {
        "content": "<p>(trying to keep the repo as minimal as possible)</p>",
        "id": 267427142,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641814280
    },
    {
        "content": "<p>Or maybe a Python script</p>",
        "id": 267427182,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641814312
    },
    {
        "content": "<p>I love how you're managing to do everything <em>but</em> the core of the project <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 267427251,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641814338
    },
    {
        "content": "<p>How come? We have three posts in the oven</p>",
        "id": 267427293,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641814372
    },
    {
        "content": "<p>Just kidding <span aria-label=\"stuck out tongue closed eyes\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue closed eyes\">:stuck_out_tongue_closed_eyes:</span> but you do spend a lot of time on the non post stuff</p>",
        "id": 267427340,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641814402
    },
    {
        "content": "<p>I love taking the chance to learn whatever</p>",
        "id": 267427370,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641814421
    },
    {
        "content": "<p>I'm in no position to judge because I myself went on so many detours to do some of the stuff that's now in mathlib</p>",
        "id": 267427458,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641814466
    },
    {
        "content": "<p>I mean, I'm not even in front of a computer</p>\n<p>Plus, setting up some sort of environment for a \"lean book\" is something that I've been thinking about for a while, so I'm trying out some ideas that I had</p>",
        "id": 267427469,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641814475
    },
    {
        "content": "<p>Also, coming up with a proper idea to write about is something that happens at random while taking a bath or doing dishes. I'm not a mathematician so it's not very natural to me <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 267428673,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641815315
    },
    {
        "content": "<p>I've been contemplating about teaching <code>org-babel</code> about Lean for a while but I have neither the elisp skills nor the time at the moment :(</p>",
        "id": 267429165,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1641815657
    },
    {
        "content": "<p>I had never heard of it. Looks interesting</p>",
        "id": 267430502,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641816530
    },
    {
        "content": "<p>It's a part of the emacs plugin <code>org-mode</code> which you can use as basically anything really (and I mean anything, you can generate websites from it, write lecture notes with LaTeX snippets in it, TODO list and time management stuff, table calculation program etc.) and one of its many features is org-babel which basically allows you to write snippets in $LANGUAGE in your document and evaluate them while compiling the document to TeX/HTML/Word/Whatever and print the output into the document.</p>\n<p>So theoretically speaking it should be possible to teach org-babel about Lean and due to a feature called sessions also to simply chain multiple lean blocks into one logical program. But I have absolutely not clue how org-babel actually works internally :/</p>",
        "id": 267431025,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1641816951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> merged after following your suggestions :)<br>\n<a href=\"https://github.com/Julian/lftim/pull/3\">https://github.com/Julian/lftim/pull/3</a><br>\nAnd we got our first post on <code>master</code> <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 267435259,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641819575
    },
    {
        "content": "<blockquote>\n<p>I'm not entirely sure if it's worth adding node dependency just to set a pre-commit hook.</p>\n</blockquote>\n<p>of course, no <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> the PR should only be merged if you are willing to use more tools from the Node.js ecosystem, otherwise I can make another PR which achieves the same thing, without Node and npm. spoiler: it's also very simple <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 267439227,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641821719
    },
    {
        "content": "<p>take a look: <a href=\"https://github.com/Julian/lftim/pull/5\">https://github.com/Julian/lftim/pull/5</a></p>",
        "id": 267440903,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641822651
    },
    {
        "content": "<p>FWIW I think you're misusing client-side git hooks as a CI step. Why not generate the markdown files on github from CI running on <code>master</code>, then have CI commit the result to <code>gh-pages</code>?</p>",
        "id": 267518975,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641858919
    },
    {
        "content": "<p>That's roughly how most of the leanprover-community repos work</p>",
        "id": 267519119,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641859018
    },
    {
        "content": "<p>I don't know about the others, but I'd like to see the markdown file in the PR diff, which makes the reviewing process a lot more pleasant</p>",
        "id": 267521753,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641860903
    },
    {
        "content": "<p>Except you can't actually comment suggestions on the markdown, right, as they need to be applied to the lean files first?</p>",
        "id": 267521892,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641861032
    },
    {
        "content": "<p>Yeap. Julian proposed something a bit similar: a GH action that pushes a commit to a branch as soon as the branch receives a commit from an user. This approach is a bit annoying because we'd need to pull multiple times while fixing things in the review process.</p>",
        "id": 267522169,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641861249
    },
    {
        "content": "<p>But I like your solution more in the other end of the spectrum: completely detaching ourselves from looking at markdown files during review and just sticking to lean files.</p>",
        "id": 267522295,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641861378
    },
    {
        "content": "<p>I think it is in fact a better solution. What about those who want to contribute by writing markdown files directly?</p>",
        "id": 267522548,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641861638
    },
    {
        "content": "<p>That works fine too, they can just be copied to the build. Just don't store lean and md versions of the same post</p>",
        "id": 267522689,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641861797
    },
    {
        "content": "<p>That makes a lot of sense. I probably misunderstood Julian's idea in the first place? Maybe</p>",
        "id": 267522893,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641861969
    },
    {
        "content": "<p>CI that adds commits to the same branch it builds in response to changes to (as you interpreted Julian's suggestion) is rarely a good idea, even if you teach it not to infinite loop - it makes managing your git history annoying, especially for inept git users!</p>",
        "id": 267523520,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641862499
    },
    {
        "content": "<p>(and also violates \"don't commit your build outputs\")</p>",
        "id": 267523550,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641862522
    },
    {
        "content": "<p>Alright, so I <em>did</em> misunderstand Julian's idea. Good to know!<br>\nThanks for pointing that out</p>",
        "id": 267523778,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641862689
    },
    {
        "content": "<p>(I don't know whether you did or not - I didn't say you misinterpreted it)</p>",
        "id": 267525420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641864050
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 267533389,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641872590
    },
    {
        "content": "<p>Mostly I am indifferent at this point about tooling :) there are many ways that work, but I care about getting some posts up first and then thinking about it -- which means I truly am OK with whatever anyone wants for now.</p>",
        "id": 267576931,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641905953
    },
    {
        "content": "<p>Alright. I merged Huỳnh's PR because it does make my life easier for now <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 267585342,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641909975
    },
    {
        "content": "<p>yes. Khanh is my first name</p>",
        "id": 267590685,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641912178
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> how did you realize your mistake lol</p>",
        "id": 267590892,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1641912273
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"270523\">Huỳnh Trần Khanh</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20for.20the.20Inept.20Mathematician/near/267590892\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> how did you realize your mistake lol</p>\n</blockquote>\n<p>Julian PM'd me <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 267590991,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641912315
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> , could I have access? I have a couple of ideas for articles that I might try to write up. My username is <code>stuart-presnell</code></p>",
        "id": 268117686,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1642240945
    },
    {
        "content": "<p>Sent!</p>",
        "id": 268117926,
        "sender_full_name": "Julian Berman",
        "timestamp": 1642241356
    }
]