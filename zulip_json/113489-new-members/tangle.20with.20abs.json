[
    {
        "content": "<p>I am getting myself in a total tangle with 05_sequence_limits.lean (<a href=\"https://github.com/leanprover-community/tutorials/blob/master/src/exercises/05_sequence_limits.lean\">https://github.com/leanprover-community/tutorials/blob/master/src/exercises/05_sequence_limits.lean</a>), and specifically the squeezing theorem. I can see the proof, but I just seem to have a sprawling mess of facts and calcs that feels very bad. I don't actually <em>have</em> a MWE: would it be alright if I posted what I have?</p>\n<p>The thing which is the actual sticking point is moving from |v n - u n| = v n - u n, where I have as a hypothesis (h : ∀ n, u n ≤ v n). This feels \"obviously true\" but I don't know how to get it. Maybe I want to do something else... but, in short, I'm all in knots. It's this sort of messy epsilon-chasing that I always found tiresome about real analysis anyway...</p>",
        "id": 207694256,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598051273
    },
    {
        "content": "<p>Actually, I do have a MWE, if I just sorry out the tangled bit. But it's still a mess!</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">seq_limit</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">hu</span> <span class=\"o\">:</span> <span class=\"n\">seq_limit</span> <span class=\"n\">u</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hw</span> <span class=\"o\">:</span> <span class=\"n\">seq_limit</span> <span class=\"n\">w</span> <span class=\"n\">l</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">seq_limit</span> <span class=\"n\">v</span> <span class=\"n\">l</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">ε</span> <span class=\"n\">ε_pos</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hu</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">linarith</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">N₁</span> <span class=\"n\">hN₁</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hw</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">linarith</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">N₂</span> <span class=\"n\">hN₂</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">max</span> <span class=\"n\">N₁</span> <span class=\"n\">N₂</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">ge_max_iff</span> <span class=\"n\">at</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">fact₁</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span>\n    <span class=\"k\">from</span> <span class=\"n\">hN₁</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">linarith</span><span class=\"o\">),</span>\n  <span class=\"k\">have</span> <span class=\"n\">fact₂</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">w</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span>\n    <span class=\"k\">from</span> <span class=\"n\">hN₂</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">linarith</span><span class=\"o\">),</span>\n  <span class=\"k\">have</span> <span class=\"n\">fact₃</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"k\">calc</span>\n    <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"bp\">|</span> <span class=\"bp\">=</span> <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"bp\">-</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">|</span>  <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">ring</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">l</span> <span class=\"bp\">-</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"bp\">|</span>    <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">apply</span> <span class=\"n\">abs_add</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">w</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span>    <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">abs_sub</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">3</span>                    <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">fact₄</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">u</span> <span class=\"n\">n</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"bp\">|</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"k\">calc</span>\n  <span class=\"bp\">|</span><span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">u</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"o\">)</span><span class=\"bp\">|</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">ring</span>\n        <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">u</span> <span class=\"n\">n</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span>   <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">apply</span> <span class=\"n\">abs_add</span>\n        <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span>                         <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207694503,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598051472
    },
    {
        "content": "<p>You've done the hard work by the time you've got to the use max line. I'm not at a computer right now but if you rewrite abs_le then linarith should be able to do everything</p>",
        "id": 207696770,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598053637
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330967\">@Wrenna Robson</span> you're making this a lot more complicated that it needs to be. You should think more carefully about the strategy, and have a look at the solution if you're really stuck. If you really want to prove this fourth fact your can use <code>rw [abs_of_nonneg, abs_of_nonpos] ; linarith [h n, h' n] }</code> but probably those lemmas have not been discussed since they are not needed.</p>",
        "id": 207697726,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598054558
    },
    {
        "content": "<p>Yes, I feel like I'm overblowing it!<br>\n<span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> which line? the fourth?</p>",
        "id": 207699668,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598057408
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> hmm! having looked at the solution, I see that, in fact my <em>actual on-paper proof</em> was over-complex. Which in a sense is a relief!</p>",
        "id": 207699901,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598057838
    },
    {
        "content": "<p>Yes, this is what I meant by \"you're making this a lot more complicated that it needs to be\". I'm sorry it wasn't clear I was referring to the pen and paper proof rather than Lean code.</p>",
        "id": 207713190,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598082892
    },
    {
        "content": "<p>Really the issue is that I'm rusty with analysis I suppose!</p>",
        "id": 207716584,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598089360
    },
    {
        "content": "<p>Blowing away those dusty epsilons and deltas!</p>",
        "id": 207717958,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598091857
    },
    {
        "content": "<p>You should go straight to learning about filters then.  <a href=\"https://www.youtube.com/watch?v=hhOPRaR3tx0\">https://www.youtube.com/watch?v=hhOPRaR3tx0</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"hhOPRaR3tx0\" href=\"https://www.youtube.com/watch?v=hhOPRaR3tx0\"><img src=\"https://i.ytimg.com/vi/hhOPRaR3tx0/default.jpg\"></a></div>",
        "id": 207719077,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598093811
    },
    {
        "content": "<p>Thank you! I am probably going to finish the tutorials though...</p>",
        "id": 207721181,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598097560
    },
    {
        "content": "<p>But then yes!</p>",
        "id": 207721189,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1598097585
    }
]