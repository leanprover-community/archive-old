[
    {
        "content": "<p>Hello, I'm working on formalizing some ideas from Voting Theory.  Here is a bit of context:<br>\nI have defined an <code>election_profile</code> as a <code>structure</code> consisting of a <code>finset</code> of candidates, a <code>finset</code> of voters, and an individual ordering <code>Q</code> that matches each voter to a ranking of the candidates. I have also defined a <code>voting_method</code> class. I am trying to prove a basic lemma about voting methods, but I am not sure how to \"access\" the properties of a class in a useful way. MWE: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.set.finite</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">election_profile</span> <span class=\"o\">(</span><span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">cands</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">χ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">voters</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">υ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">υ</span> <span class=\"bp\">→</span> <span class=\"n\">χ</span> <span class=\"bp\">→</span> <span class=\"n\">χ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">voting_method</span> <span class=\"o\">{</span><span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">election_profile</span> <span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"bp\">→</span> <span class=\"n\">finset</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">winners_subset</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">prof</span> <span class=\"o\">:</span> <span class=\"n\">election_profile</span> <span class=\"n\">χ</span> <span class=\"n\">υ</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"n\">prof</span> <span class=\"bp\">⊆</span> <span class=\"n\">prof.cands</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">winners_nonempty</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">prof</span> <span class=\"o\">:</span> <span class=\"n\">election_profile</span> <span class=\"n\">χ</span> <span class=\"n\">υ</span><span class=\"o\">,</span> <span class=\"n\">prof.cands.nonempty</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">prof</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">voting_method_singleton</span> <span class=\"o\">{</span><span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>  <span class=\"o\">{</span><span class=\"n\">prof</span> <span class=\"o\">:</span> <span class=\"n\">election_profile</span> <span class=\"n\">χ</span> <span class=\"n\">υ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">χ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">election_profile</span> <span class=\"n\">χ</span> <span class=\"n\">υ</span> <span class=\"bp\">→</span> <span class=\"n\">finset</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"n\">voting_method</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">prof.cands</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"n\">M</span> <span class=\"n\">prof</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"n\">prof</span> <span class=\"bp\">⊆</span> <span class=\"n\">prof.cands</span> <span class=\"o\">:=</span> <span class=\"n\">hM.winners_subset</span> <span class=\"n\">prof</span><span class=\"o\">,</span> <span class=\"c1\">-- doesn't work</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 265846835,
        "sender_full_name": "Andrew  Souther",
        "timestamp": 1640203509
    },
    {
        "content": "<p>A. Do you think that a <code>class</code> is a convenient way to define the idea of a voting method here? <br>\nB. If so, how can I better \"access\" the properties of this class in my proof?</p>",
        "id": 265846990,
        "sender_full_name": "Andrew  Souther",
        "timestamp": 1640203590
    },
    {
        "content": "<p><del>If you make <code>voting_method</code> a class, then in your assumptions you should say <code>[voting_method M]</code> rather than <code>{hM : voting_method M}</code></del> Sorry, I see you do this already</p>",
        "id": 265847117,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1640203667
    },
    {
        "content": "<p>And to get access to the two properties as lemmas, say something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">export</span> <span class=\"n\">voting_method</span> <span class=\"o\">(</span><span class=\"n\">winners_subset</span><span class=\"o\">,</span> <span class=\"n\">winners_nonempty</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 265847266,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1640203746
    },
    {
        "content": "<p>Great, thank you! This didn't quite work, but removing the comma did the trick:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">export</span> <span class=\"n\">voting_method</span> <span class=\"o\">(</span><span class=\"n\">winners_subset</span> <span class=\"n\">winners_nonempty</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 265862436,
        "sender_full_name": "Andrew  Souther",
        "timestamp": 1640212719
    },
    {
        "content": "<p>Oops, yes!</p>",
        "id": 265863195,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1640213295
    }
]