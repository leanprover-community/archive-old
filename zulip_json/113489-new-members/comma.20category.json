[
    {
        "content": "<p>another newbie question: I want to define a projection functor from a comma category. In one case this works, in the other it doesn't -- why?<br>\n(The error message I get in the first case is <code>type mismatch at field 'obj'   λ (X : comma L R), X.left has type   comma L R → auto_param A (name.mk_string \"obviously\" name.anonymous) but is expected to have type   comma L R → A_1</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.comma</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kd\">universes</span> <span class=\"n\">v</span> <span class=\"n\">v₁</span> <span class=\"n\">v₂</span> <span class=\"n\">v₃</span> <span class=\"n\">u</span> <span class=\"n\">u₁</span> <span class=\"n\">u₂</span> <span class=\"n\">u₃</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₁</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₂</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">B</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₃</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">T</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">⥤</span> <span class=\"n\">T</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">⥤</span> <span class=\"n\">T</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">proj_left_fails</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₁</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₂</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₃</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">comma.</span><span class=\"o\">{</span><span class=\"n\">v</span> <span class=\"n\">v</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">L</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">⥤</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">obj</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">X</span> <span class=\"o\">,</span> <span class=\"n\">X.left</span><span class=\"o\">,</span>\n  <span class=\"n\">map</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">f.left</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">proj_left_works</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">comma.</span><span class=\"o\">{</span><span class=\"n\">v</span> <span class=\"n\">v</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">L</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">⥤</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">obj</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">X.left</span><span class=\"o\">,</span>\n  <span class=\"n\">map</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">f.left</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">category_theory</span>\n</code></pre></div>",
        "id": 232324764,
        "sender_full_name": "Jakob Scholbach",
        "timestamp": 1617047174
    },
    {
        "content": "<p>In the first case, you have two different things called <code>A</code>, and <code>L</code> and <code>R</code> are declared using the first <code>A</code>, but the <code>A</code> in <code>(comma L R) \\func A</code> is the second <code>A</code></p>",
        "id": 232325677,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1617047530
    },
    {
        "content": "<p>Aha!</p>",
        "id": 232325839,
        "sender_full_name": "Jakob Scholbach",
        "timestamp": 1617047621
    },
    {
        "content": "<p>The error message tries to hint at this by calling them <code>A</code> and <code>A_1</code>, but the <code>auto_param</code> stuff (which can be ignored) obscures this</p>",
        "id": 232326017,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1617047701
    },
    {
        "content": "<p>OK, I see. Will watch out for <code>_1</code> in the future...</p>",
        "id": 232326672,
        "sender_full_name": "Jakob Scholbach",
        "timestamp": 1617047984
    },
    {
        "content": "<p>The trick with all that autoparam nonsense is to just note that you can just cross out the auto_param and also the name.mk_string stuff and then it's easier to read what it actually says :-)</p>",
        "id": 232328604,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617048762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247154\">@Jakob Scholbach</span> note that we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.comma.fst\">docs#category_theory.comma.fst</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.comma.snd\">docs#category_theory.comma.snd</a></p>",
        "id": 232338255,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1617052883
    },
    {
        "content": "<p>What's going on with this topic BTW? It looks like at some point the topic <code>no topic</code> was renamed to <code>comma category</code>? <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 232338583,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1617053029
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/comma.20category/near/232338583\">said</a>:</p>\n<blockquote>\n<p>What's going on with this topic BTW? It looks like at some point the topic <code>no topic</code> was renamed to <code>comma category</code>? <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>\n</blockquote>\n<p>Let me see if I can fix it...</p>",
        "id": 232339459,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1617053402
    },
    {
        "content": "<p>OK, I think the topics are split now.</p>",
        "id": 232339555,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1617053428
    }
]