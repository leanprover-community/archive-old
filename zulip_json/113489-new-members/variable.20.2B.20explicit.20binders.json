[
    {
        "content": "<p>If I have <code>variable (x : y)</code> and then make a <code>def</code> that doesn't use <code>x</code> in its body, <code>x</code> doesn't become part of the def's type signature. Can I force it to be so anyways (to make projective notation work anyhow)?</p>\n<p>I.e.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kd\">structure</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n    <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">12</span>\n\n  <span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span><span class=\"o\">)</span>\n\n  <span class=\"kd\">def</span> <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"mi\">37</span>\n  <span class=\"kd\">def</span> <span class=\"n\">baz</span> <span class=\"o\">:=</span> <span class=\"n\">foo.x</span>\n\n  <span class=\"kd\">end</span> <span class=\"n\">Foo</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">quux</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span><span class=\"o\">)</span>\n\n<span class=\"n\">I</span> <span class=\"k\">#check</span> <span class=\"n\">Foo.bar</span>     <span class=\"bp\">■</span> <span class=\"n\">Foo.bar</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n<span class=\"n\">I</span> <span class=\"k\">#check</span> <span class=\"n\">Foo.baz</span>     <span class=\"bp\">■</span> <span class=\"n\">Foo.baz</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span>\n<span class=\"n\">I</span> <span class=\"k\">#check</span> <span class=\"n\">quux.baz</span>     <span class=\"bp\">■</span> <span class=\"n\">Foo.baz</span> <span class=\"n\">quux</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n<span class=\"n\">E</span> <span class=\"k\">#check</span> <span class=\"n\">quux.bar</span>     <span class=\"bp\">■</span> <span class=\"n\">invalid</span> <span class=\"n\">field</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">function</span> <span class=\"bp\">'</span><span class=\"n\">Foo.bar'</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">argument</span> <span class=\"k\">with</span> <span class=\"n\">type</span> <span class=\"o\">(</span><span class=\"n\">Foo</span> <span class=\"bp\">...</span><span class=\"o\">)</span> <span class=\"n\">that</span> <span class=\"n\">can</span> <span class=\"n\">be</span> <span class=\"n\">used</span><span class=\"o\">,</span> <span class=\"n\">it</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">explicit</span> <span class=\"n\">or</span> <span class=\"n\">implicit</span> <span class=\"k\">with</span> <span class=\"n\">an</span> <span class=\"n\">unique</span> <span class=\"n\">name</span>\n</code></pre></div>\n<p>where <code>foo.bar</code> got treated differently than <code>foo.baz</code>. Obviously I can repeat the variable as a binder in the definition which is what I'm doing at the minute, but anything else I should know?</p>",
        "id": 243004449,
        "sender_full_name": "Julian Berman",
        "timestamp": 1623929708
    },
    {
        "content": "<p><code>include</code> is the keyword you're looking for, IIRC</p>",
        "id": 243005116,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1623930160
    },
    {
        "content": "<p>Aha, thanks! That does seem to do it on Lean 3 at least.</p>",
        "id": 243005850,
        "sender_full_name": "Julian Berman",
        "timestamp": 1623930677
    },
    {
        "content": "<p>Does Lean4 remove <code>include</code>?</p>",
        "id": 243006970,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1623931327
    },
    {
        "content": "<p>Unless I'm missing it I think so. Might just not be implemented yet though</p>",
        "id": 243010541,
        "sender_full_name": "Julian Berman",
        "timestamp": 1623933383
    }
]