[
    {
        "content": "<p>A <a href=\"https://leanprover-community.github.io/mathlib_docs/find/environment\">docs#environment</a>  as documented contains declarations and notation defined so far. <br>\nDoes this contain structures and type classes? <br>\nTo give a bit of context, I am trying to introspect the components of a type class, i.e. access their names and types.</p>",
        "id": 218588396,
        "sender_full_name": "Yasmine Sharoda",
        "timestamp": 1606929168
    },
    {
        "content": "<p>I think you want <a href=\"https://leanprover-community.github.io/mathlib_docs/find/environment.structure_fields\">docs#environment.structure_fields</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/environment.projection_info\">docs#environment.projection_info</a> then</p>",
        "id": 218591678,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606930577
    },
    {
        "content": "<p>Some explanation: for a structure/type class, let's say <code>group</code>, the environment will of course contain the type constructor <code>group</code> itself</p>",
        "id": 218591760,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606930616
    },
    {
        "content": "<p>The declaration <code>group</code> is just a top-level constant, though. The structure info is stored separately.<br>\nA class could technically be anything, but usually it's a structure. Then <code>environment.structure_fields</code> on the name <code>group</code> will produce a list of (the names of) the projections out of that structure.</p>",
        "id": 218592037,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606930732
    },
    {
        "content": "<p>Then you can look up these projections in the environment to find out what the fields of the structure are, or use <code>environment.is_projection</code> (actually, I'm not sure now how much more useful this would be)</p>",
        "id": 218592388,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606930883
    },
    {
        "content": "<p>This is very good start. I believe I am now missing information about the type of the declaration, which is not part of <code>projection_info</code>. <br>\nwould it be part of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/declaration\">docs#declaration</a> ? Its documentation is not very clear to me.</p>",
        "id": 218606550,
        "sender_full_name": "Yasmine Sharoda",
        "timestamp": 1606937260
    },
    {
        "content": "<p>The source <a href=\"https://github.com/leanprover-community/lean/blob/ed6accfb611bbd28ef5b7e34361d2b58a366e2c9/library/init/meta/declaration.lean#L47\">https://github.com/leanprover-community/lean/blob/ed6accfb611bbd28ef5b7e34361d2b58a366e2c9/library/init/meta/declaration.lean#L47</a> has more specific documentation</p>",
        "id": 218607297,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606937591
    },
    {
        "content": "<p><code>group</code> for example will be a <code>cnst</code> with the name <code>group</code>, one universe parameter <code>u</code> and type <code>Type u -&gt; Type u</code>. <code>is_trusted</code> is false for <code>meta</code> definitions, probably you can ignore it.</p>",
        "id": 218607487,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606937669
    },
    {
        "content": "<p>exactly what I am looking for.. thank you</p>",
        "id": 218607780,
        "sender_full_name": "Yasmine Sharoda",
        "timestamp": 1606937813
    }
]