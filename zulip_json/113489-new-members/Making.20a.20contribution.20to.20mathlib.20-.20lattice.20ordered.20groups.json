[
    {
        "content": "<p>Hello, I'd like to offer a contribution to mathlib - a basic theory of lattice ordered groups: <a href=\"https://github.com/leanprover-community/mathlib/pull/8663\">https://github.com/leanprover-community/mathlib/pull/8663</a> </p>\n<p>If this is of interest, please could I have write access to non-master branches of the mathlib repository? My GitHub username is mans0954.</p>\n<p>Thank you,</p>\n<p>Christopher Hoskin</p>",
        "id": 249404925,
        "sender_full_name": "Christopher Hoskin",
        "timestamp": 1628883964
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/invitations\">https://github.com/leanprover-community/mathlib/invitations</a></p>",
        "id": 249406598,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1628884867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"373192\">@Christopher Hoskin</span> once you've accepted the invite you can open a new version of that PR from a branch on mathlib and the CI will run on it.</p>",
        "id": 249410885,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1628886918
    },
    {
        "content": "<p>Note that we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/covariant_class\">docs#covariant_class</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/contravariant_class\">docs#contravariant_class</a>.</p>",
        "id": 249411338,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1628887172
    },
    {
        "content": "<p>Some random thoughts from looking over the code, it looks pretty good overall!:</p>\n<ul>\n<li>You use <code>simp</code> in some places where it doesn't close the goal (pos_meet_neg_eq_zero), this is called a non-terminal simp and is generally discouraged as if the set of simp lemmas later changes (someone adds a new simplification perhaps) it can break your proof, its better in such situations to change simp to <code>squeeze_simp</code> which will output a call to <code>simp only [...]</code> instead that will be more robust.</li>\n<li>In lemmas like <code>join_eq_add_pos_sub</code> the proof is a pure calc block, so doesn't need to be in a <code>begin... end</code> just <code>:= calc ... </code> will do.</li>\n<li>Some of your very short proofs in tactic more are term mode one-liners, like <code>lemma pos_sub_neg' (a : α) :  a⁺ - a⁻ = a := (pos_sub_neg _).symm</code> getting more experience with writing direct lean terms like this is always helpful to get rid of small goals faster.</li>\n<li>if you have multiple rewrites in a row they can be combined like <code>rw a, rw b,</code>  is equivalent to <code>rw [a, b]</code> </li>\n<li>are you aware of <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#library_search\">tactic#library_search</a>? in <code>abs_pos_eq</code> where you write <code>  -- I feel there ought to be a simpler way of finishing from here?</code> putting instead <code>library_search</code> tells me the proof can be finished with <code>exact nsmul_nonneg h 2,</code> instead.</li>\n</ul>",
        "id": 249412958,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1628888038
    },
    {
        "content": "<p>You should also read <a href=\"https://leanprover-community.github.io/contribute/style.html\">https://leanprover-community.github.io/contribute/style.html</a>, especially the part about braces.</p>",
        "id": 249414231,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1628888665
    },
    {
        "content": "<p>Thanks, I've created a branch within mathlib, but the CI is failing with the message \"Error: ERR_RNT: Reserved notation outside tactic.reserved_notation\" <a href=\"https://github.com/leanprover-community/mathlib/runs/3328082790\">https://github.com/leanprover-community/mathlib/runs/3328082790</a> </p>\n<p>Having looked in <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/reserved_notation.lean\">reserved_notation</a> it's not obvious to me what I've done wrong. Is there a way of seeing which line it's failing at?</p>\n<p>Thanks.</p>",
        "id": 249447637,
        "sender_full_name": "Christopher Hoskin",
        "timestamp": 1628927942
    },
    {
        "content": "<p>CI is hiding that for some reason (I have vague recollection there's desire to make that integrate better with the GitHub UI which is why that happened). Running it locally (by running <code>./scripts/lint-style.sh</code>) it shows me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">:</span><span class=\"n\">error</span> <span class=\"n\">file</span><span class=\"bp\">=</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">lattice_ordered_group.lean</span><span class=\"o\">,</span><span class=\"n\">line</span><span class=\"bp\">=</span><span class=\"mi\">214</span><span class=\"o\">,</span><span class=\"n\">code</span><span class=\"bp\">=</span><span class=\"n\">ERR_RNT</span><span class=\"o\">::</span><span class=\"n\">ERR_RNT</span><span class=\"o\">:</span> <span class=\"n\">Reserved</span> <span class=\"kd\">notation</span> <span class=\"n\">outside</span> <span class=\"n\">tactic.reserved_notation</span>\n<span class=\"o\">::</span><span class=\"n\">error</span> <span class=\"n\">file</span><span class=\"bp\">=</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">lattice_ordered_group.lean</span><span class=\"o\">,</span><span class=\"n\">line</span><span class=\"bp\">=</span><span class=\"mi\">222</span><span class=\"o\">,</span><span class=\"n\">code</span><span class=\"bp\">=</span><span class=\"n\">ERR_RNT</span><span class=\"o\">::</span><span class=\"n\">ERR_RNT</span><span class=\"o\">:</span> <span class=\"n\">Reserved</span> <span class=\"kd\">notation</span> <span class=\"n\">outside</span> <span class=\"n\">tactic.reserved_notation</span>\n</code></pre></div>",
        "id": 249447797,
        "sender_full_name": "Julian Berman",
        "timestamp": 1628928181
    },
    {
        "content": "<p>The error message is also visible at <a href=\"https://github.com/leanprover-community/mathlib/compare/lattice_ordered_group\">https://github.com/leanprover-community/mathlib/compare/lattice_ordered_group</a></p>",
        "id": 249447857,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628928270
    },
    {
        "content": "<p>Where it is attached to the correct line number</p>",
        "id": 249447860,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628928282
    }
]