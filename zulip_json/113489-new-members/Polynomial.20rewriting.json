[
    {
        "content": "<p>I'm trying to prove a small result about multivariate polynomials, and I'm kinda banging my head against the wall.</p>\n<p>I think the best way to proceed at this point is trying to substitute the hmiddle hypothesis into the goal. However, the side I'd like to substitute in has a 2<em>alpha</em>beta term, and the goal has a alpha*beta term, with a 2 outside the monomial. I've tried bringing the 2 inside the monomial, but can't make it work, I think because most of the related lemma's work with constant polynomials and not scalars? I've tried introducing an extra fact and applying div_eq_iff_eq_mul' to hmiddle, but it doesn't seem to stick.</p>\n<p>Any pointers? (Any other remarks about the rest are also welcome, I'm still learning a lot:))</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.mv_polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.polynomial.homogeneous</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">is_waring_decomposition</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">mv_polynomial.homogeneous_submodule</span> <span class=\"n\">σ</span> <span class=\"n\">R</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i.2</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">i.1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">p</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">waring_rank</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"o\">:=</span> <span class=\"n\">Inf</span> <span class=\"o\">({</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">mv_polynomial.homogeneous_submodule</span> <span class=\"n\">σ</span> <span class=\"n\">R</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">is_waring_decomposition</span> <span class=\"n\">p</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">sizeof</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">simple_waring_rank</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∈</span> <span class=\"n\">mv_polynomial.homogeneous_submodule</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">ℂ</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">waring_rank</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">)</span>  <span class=\"bp\">↔</span> <span class=\"o\">((</span><span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">finsupp.single</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"mi\">4</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">):=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">contrapose</span><span class=\"bp\">!</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n\n    <span class=\"k\">have</span> <span class=\"n\">choose_α_β</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">finsupp.single</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">α</span><span class=\"bp\">*</span><span class=\"n\">β</span> <span class=\"bp\">∧</span> <span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">α</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">∧</span> <span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">β</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span>\n      <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n\n    <span class=\"n\">cases</span> <span class=\"n\">choose_α_β</span> <span class=\"k\">with</span> <span class=\"n\">α</span> <span class=\"n\">h'</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">h'</span> <span class=\"k\">with</span> <span class=\"n\">β</span> <span class=\"n\">hαβ</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">fact₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.monomial</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">mv_polynomial.monomial</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">β</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">ring_nf</span> <span class=\"n\">SOP</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">mv_polynomial.ext_iff</span><span class=\"o\">,</span>\n      <span class=\"n\">intros</span> <span class=\"n\">m</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mv_polynomial.monomial_pow</span><span class=\"o\">,</span> <span class=\"n\">mv_polynomial.monomial_mul</span><span class=\"o\">,</span> <span class=\"n\">finsupp.smul_single'</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"n\">mv_polynomial.coeff_add</span><span class=\"o\">,</span>\n  <span class=\"n\">mv_polynomial.coeff_monomial</span><span class=\"o\">],</span>\n      <span class=\"n\">cases</span> <span class=\"n\">hαβ</span> <span class=\"k\">with</span> <span class=\"n\">hmiddle</span> <span class=\"n\">h'</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">h'</span> <span class=\"k\">with</span> <span class=\"n\">hfirst</span> <span class=\"n\">hlast</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">hfirst</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">hlast</span><span class=\"o\">,</span>\n      <span class=\"c1\">-- hmiddle: mv_polynomial.coeff (finsupp.single 0 1 + finsupp.single 1 1) p = 2 * α * β</span>\n      <span class=\"c1\">-- goal: ite (finsupp.single 0 2 = m) (mv_polynomial.coeff (finsupp.single 0 2) p) 0 + mv_polynomial.coeff m (⇑(mv_polynomial.monomial (finsupp.single 0 1 + finsupp.single 1 1)) (α * β) * 2) + ite (finsupp.single 1 2 = m) (mv_polynomial.coeff (finsupp.single 1 2) p) 0 = mv_polynomial.coeff m p</span>\n      <span class=\"c1\">--                                                                                                                                                                                ____________</span>\n      <span class=\"c1\">-- how to rw hmiddle into goal?</span>\n      <span class=\"k\">have</span> <span class=\"n\">fact</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">finsupp.single</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span>  <span class=\"n\">α</span> <span class=\"bp\">*</span> <span class=\"n\">β</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span>\n        <span class=\"n\">rw</span> <span class=\"n\">mul_assoc</span> <span class=\"n\">at</span> <span class=\"n\">hmiddle</span><span class=\"o\">,</span>\n        <span class=\"c1\">-- Failing here too</span>\n        <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n      <span class=\"o\">},</span>\n      <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n    <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 291856893,
        "sender_full_name": "Pim Otte",
        "timestamp": 1659536653
    },
    {
        "content": "<p>You'll need to prove you're not dividing by zero:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>      <span class=\"k\">have</span> <span class=\"n\">fact</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.coeff</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">finsupp.single</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span>  <span class=\"n\">α</span> <span class=\"bp\">*</span> <span class=\"n\">β</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">mul_assoc</span> <span class=\"n\">at</span> <span class=\"n\">hmiddle</span><span class=\"o\">,</span>\n        <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">eq_comm</span><span class=\"o\">,</span> <span class=\"n\">eq_div_iff</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">hmiddle</span><span class=\"o\">],</span>\n        <span class=\"n\">ring</span> <span class=\"o\">},</span>\n</code></pre></div>",
        "id": 291861000,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1659538330
    },
    {
        "content": "<p>I wonder if anyone can guess the differences between <code>eq_div_iff</code>, <code>eq_div_iff_mul_eq</code>, <code>eq_div_iff_mul_eq'</code> and <code>eq_div_iff_mul_eq''</code>, or between <code>div_eq_iff</code>, <code>div_eq_iff_eq_mul</code> and <code>div_eq_iff_eq_mul'</code> (no double prime available)</p>",
        "id": 291861520,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1659538542
    }
]