[
    {
        "content": "<p>Sorry for the unwieldy mwe. I get an error about metavariables trying to kill every goal with the  last 4 lines. I've tried everything I can think of; this compiles if I copy paste this proof into each appropriate structure field. I've tried using <code>@quotient.induction_on</code> and specifying the setoid instances. I've tried reading the <code>pp.all</code> output but didn't manage to deduce anything from it. See <a href=\"https://github.com/leanprover-community/mathlib/pull/2922\">#2922</a> for the real life version.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">localization</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">submonoid</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">comm_monoid</span> <span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">r</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comm_monoid</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">elab_as_eliminator</span><span class=\"o\">]</span>\n<span class=\"kn\">protected</span> <span class=\"n\">def</span> <span class=\"n\">lift_on₂</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">con</span> <span class=\"n\">α</span> <span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"bp\">.</span><span class=\"n\">quotient</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a₁</span> <span class=\"n\">a₂</span> <span class=\"n\">b₁</span> <span class=\"n\">b₂</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">a₁</span> <span class=\"n\">b₁</span> <span class=\"bp\">→</span> <span class=\"n\">c</span> <span class=\"n\">a₂</span> <span class=\"n\">b₂</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">a₁</span> <span class=\"n\">a₂</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">b₁</span> <span class=\"n\">b₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on₂&#39;</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">f</span> <span class=\"n\">h</span>\n\n<span class=\"n\">def</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span> <span class=\"n\">M</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">r</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mk&#39;</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">r_of_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">×</span> <span class=\"n\">M</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">r</span> <span class=\"n\">M</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">r_iff_exists</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_zero</span> <span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">M</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_add</span> <span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">z</span> <span class=\"n\">w</span><span class=\"o\">,</span> <span class=\"n\">lift_on₂</span> <span class=\"n\">z</span> <span class=\"n\">w</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">×</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">M</span> <span class=\"o\">((</span><span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"err\">$</span>\n<span class=\"bp\">λ</span> <span class=\"n\">r1</span> <span class=\"n\">r2</span> <span class=\"n\">r3</span> <span class=\"n\">r4</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">con</span><span class=\"bp\">.</span><span class=\"n\">eq</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">r_eq_r&#39;</span> <span class=\"n\">at</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"err\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h1</span> <span class=\"k\">with</span> <span class=\"n\">t₅</span> <span class=\"n\">ht₅</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h2</span> <span class=\"k\">with</span> <span class=\"n\">t₆</span> <span class=\"n\">ht₆</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">t₆</span> <span class=\"bp\">*</span> <span class=\"n\">t₅</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"o\">((</span><span class=\"n\">r1</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">r2</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">r2</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">r1</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">r3</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">r4</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">t₆</span> <span class=\"bp\">*</span> <span class=\"n\">t₅</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n      <span class=\"o\">(</span><span class=\"n\">r2</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">r4</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">t₆</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">r1</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">r3</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">t₅</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">r1</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">r3</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">t₅</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">r2</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">r4</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">t₆</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">ring</span>\n      <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">r3</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">r4</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">r4</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">r3</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">r1</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">r2</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">t₆</span> <span class=\"bp\">*</span> <span class=\"n\">t₅</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ht₆</span><span class=\"o\">,</span> <span class=\"n\">ht₅</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">ring</span>\n<span class=\"kn\">end</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_neg</span> <span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">con</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">×</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"err\">$</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">r1</span> <span class=\"n\">r2</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">con</span><span class=\"bp\">.</span><span class=\"n\">eq</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">r_eq_r&#39;</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"err\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">t</span> <span class=\"n\">ht</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">neg_mul_eq_neg_mul_symm</span><span class=\"o\">,</span> <span class=\"n\">neg_mul_eq_neg_mul_symm</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">],</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">comm_ring</span> <span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">refine</span>\n<span class=\"o\">{</span> <span class=\"n\">zero</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">one</span>  <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">add</span>  <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">+</span><span class=\"o\">),</span>\n  <span class=\"n\">mul</span>  <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">),</span>\n  <span class=\"n\">add_assoc</span>      <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃&#39;</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">zero_add</span>       <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on&#39;</span> <span class=\"n\">y</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">add_zero</span>       <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on&#39;</span> <span class=\"n\">y</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">neg</span>            <span class=\"o\">:=</span> <span class=\"n\">has_neg</span><span class=\"bp\">.</span><span class=\"n\">neg</span><span class=\"o\">,</span>\n  <span class=\"n\">add_left_neg</span>   <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on&#39;</span> <span class=\"n\">y</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">add_comm</span>       <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₂&#39;</span> <span class=\"n\">z</span> <span class=\"n\">y</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">left_distrib</span>   <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃&#39;</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">right_distrib</span>  <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃&#39;</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n   <span class=\"bp\">..</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">comm_monoid</span> <span class=\"n\">M</span> <span class=\"o\">}</span><span class=\"bp\">;</span>\n  <span class=\"o\">{</span>  <span class=\"n\">intros</span><span class=\"o\">,</span>\n     <span class=\"n\">refine</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"o\">(</span><span class=\"n\">r_of_eq</span> <span class=\"n\">M</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n     <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">snd_mul</span><span class=\"o\">,</span> <span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">fst_mul</span><span class=\"o\">,</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">coe_mul</span><span class=\"o\">],</span>\n     <span class=\"n\">ring</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 199679607,
        "sender_full_name": "Amelia Livingston",
        "timestamp": 1591219961
    },
    {
        "content": "<p>If you <code>set_option pp.all true</code> and <code>#print comm_ring.zero_add</code>, you can see the type of <code>comm_ring.zero_add</code>. It has <code>add_semigroup.mk</code> in the type, and then uses <code>comm_ring.mul_assoc</code>, so the type of <code>comm_ring.zero_add</code> actually depends on <code>comm_ring.mul_assoc</code>, which contains a metavariable since you didn't finish proving it yet.</p>",
        "id": 199682942,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1591221866
    },
    {
        "content": "<p>That's not a solution.</p>",
        "id": 199682956,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1591221877
    },
    {
        "content": "<p>Here is a workaround:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">tac</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[{</span>\n  <span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound&#39;</span> <span class=\"o\">(</span><span class=\"n\">r_of_eq</span> <span class=\"n\">M</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">snd_mul</span><span class=\"o\">,</span> <span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">fst_mul</span><span class=\"o\">,</span> <span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">coe_mul</span><span class=\"o\">],</span>\n  <span class=\"n\">ring</span> <span class=\"o\">}]</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">comm_ring</span> <span class=\"o\">(</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">zero</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">one</span>  <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">add</span>  <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">+</span><span class=\"o\">),</span>\n  <span class=\"n\">mul</span>  <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">),</span>\n  <span class=\"n\">add_assoc</span>      <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃&#39;</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">tac</span><span class=\"o\">),</span>\n  <span class=\"n\">zero_add</span>       <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on&#39;</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">tac</span><span class=\"o\">),</span>\n  <span class=\"n\">add_zero</span>       <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on&#39;</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">tac</span><span class=\"o\">),</span>\n  <span class=\"n\">neg</span>            <span class=\"o\">:=</span> <span class=\"n\">has_neg</span><span class=\"bp\">.</span><span class=\"n\">neg</span><span class=\"o\">,</span>\n  <span class=\"n\">add_left_neg</span>   <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on&#39;</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">tac</span><span class=\"o\">),</span>\n  <span class=\"n\">add_comm</span>       <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₂&#39;</span> <span class=\"n\">z</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">tac</span><span class=\"o\">),</span>\n  <span class=\"n\">left_distrib</span>   <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃&#39;</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">tac</span><span class=\"o\">),</span>\n  <span class=\"n\">right_distrib</span>  <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃&#39;</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">tac</span><span class=\"o\">),</span>\n   <span class=\"bp\">..</span><span class=\"n\">submonoid</span><span class=\"bp\">.</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">comm_monoid</span> <span class=\"n\">M</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 199684291,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591222796
    },
    {
        "content": "<p>it is times like this when I wish that interactive blocks had lambdas</p>",
        "id": 199684464,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591222879
    },
    {
        "content": "<p>thank you!!</p>",
        "id": 199741881,
        "sender_full_name": "Amelia Livingston",
        "timestamp": 1591275370
    }
]