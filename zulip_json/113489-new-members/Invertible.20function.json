[
    {
        "content": "<p>What is the correct way in Mathlib to say that a function is invertible and to say something about its inverse? Suppose fore example I wanted to state the lemma that, given a topological group, right multiplication is a homeomorphism, how do I express it?</p>",
        "id": 202465947,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593536697
    },
    {
        "content": "<p>There is <code>equiv</code> which records <code>f</code>, it's inverse and the proofs that both compositions are id.</p>",
        "id": 202466214,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593536840
    },
    {
        "content": "<p>Then there is <code>mul_equiv</code> for homomorphism</p>",
        "id": 202466232,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593536852
    },
    {
        "content": "<p>And <code>add_equiv</code> and <code>ring_equiv</code> etc...</p>",
        "id": 202466254,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593536863
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">homeomorph</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span><span class=\"kn\">structure</span> <span class=\"n\">homeomorph</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 202466432,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593536950
    },
    {
        "content": "<p>Looks relevant</p>",
        "id": 202466441,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593536954
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/homeomorph/src\">src#homeomorph</a></p>\n<p>This reminds me, I've always wondered why this wasn't just called \"homeo\". Is \"homeomorph\" a more common abbreviation outside the US?</p>\n<p><strong>edit</strong>: I guess Johannes added it <a href=\"https://github.com/leanprover-community/mathlib/commit/c8ecae8fc35aad0d16f79ee744eff9f234c45e94\">here</a> and we've just stuck with it. I bring this up because in e.g. blackboard talks, I think I've only ever seen people write \"homeo\" (similarly \"diffeo\").</p>",
        "id": 202466688,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593537079
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202466432\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">homeomorph</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span><span class=\"kn\">structure</span> <span class=\"n\">homeomorph</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n</code></pre></div>\n\n\n</blockquote>\n<p>Well I am aware of homeomorph but I am not really sure how to use it to state this lemma! Like what should I write after this</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">right_mul_is_homeomorph</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n</code></pre></div>\n\n\n<p>?</p>",
        "id": 202467504,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593537447
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202466688\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/homeomorph/src\">src#homeomorph</a></p>\n<p>This reminds me, I've always wondered why this wasn't just called \"homeo\". Is \"homeomorph\" a more common abbreviation outside the US?</p>\n</blockquote>\n<p>I think in the UK <code>homeo</code> is the most used abbreviation as well</p>",
        "id": 202467650,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593537516
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"267205\">@Nicolò Cavalleri</span> It is a defintion instead of a lemma (I know this is confusing), because you are recording data (the inverse function).</p>",
        "id": 202467713,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593537555
    },
    {
        "content": "<p>So you can continue by<br>\n<code>:= _</code> and then click on the <span aria-label=\"bulb\" class=\"emoji emoji-1f4a1\" role=\"img\" title=\"bulb\">:bulb:</span> if you put your cursor on the <code>_</code>.</p>",
        "id": 202467763,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593537583
    },
    {
        "content": "<p>Then click the \"skeleton\" option</p>",
        "id": 202467781,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593537590
    },
    {
        "content": "<p>Does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/homeomorph.mul_right/src\">src#homeomorph.mul_right</a> help?</p>",
        "id": 202467867,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593537613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202467867\">said</a>:</p>\n<blockquote>\n<p>Does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/homeomorph.mul_right/src\">src#homeomorph.mul_right</a> help?</p>\n</blockquote>\n<p>Yes actually it does I probably did not see it because I was looking for a lemma</p>",
        "id": 202468195,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593537758
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"267205\">Nicolò Cavalleri</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202465947\">said</a>:</p>\n<blockquote>\n<p>What is the correct way in Mathlib to say that a function is invertible and to say something about its inverse? Suppose fore example I wanted to state the lemma that, given a topological group, right multiplication is a homeomorphism, how do I express it?</p>\n</blockquote>\n<p>By the way, I am currently working towards the fact that the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>↦</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">A \\mapsto A^{-1}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> (for operators/matrices) is smooth, sounds like you will be using it?</p>",
        "id": 202468441,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1593537870
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202468441\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"267205\">Nicolò Cavalleri</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202465947\">said</a>:</p>\n<blockquote>\n<p>What is the correct way in Mathlib to say that a function is invertible and to say something about its inverse? Suppose fore example I wanted to state the lemma that, given a topological group, right multiplication is a homeomorphism, how do I express it?</p>\n</blockquote>\n<p>By the way, I am currently working towards the fact that the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>↦</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">A \\mapsto A^{-1}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> (for operators/matrices) is smooth, sounds like you will be using it?</p>\n</blockquote>\n<p>Well actually right now I made up this example to write something simpler than what I am actually doing, but I will be working soon on matrix Lie groups so that could be cool for that!</p>",
        "id": 202468831,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593538044
    },
    {
        "content": "<p>Maybe you would be interested in taking over a task that <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> , <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  and I were <a href=\"https://github.com/leanprover-community/mathlib/pull/3210#discussion_r447772950\">discussing</a> : to put a topological group structure on the group of units of a topological ring</p>",
        "id": 202469119,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1593538180
    },
    {
        "content": "<p>Using the restriction of the product topology on [ring] x [ring]</p>",
        "id": 202469205,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1593538207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"267205\">Nicolò Cavalleri</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202468195\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202467867\">said</a>:</p>\n<blockquote>\n<p>Does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/homeomorph.mul_right/src\">src#homeomorph.mul_right</a> help?</p>\n</blockquote>\n<p>Yes actually it does I probably did not see it because I was looking for a lemma</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"267205\">@Nicolò Cavalleri</span> <code>equiv X Y</code> is the type of inverse bijections <code>f : X -&gt; Y</code> and <code>g : Y -&gt; X</code>. Computer scientists prefer these to <code>f : X -&gt; Y</code> plus a proof of <code>bijective f</code> (which would be a lemma) because a computable bijection might have a non-computable inverse. <code>equiv</code> is nothing to do with equivalence relations -- I mean, it _is_ an equivalence relation on types, but what I mean is that if you want to prove lemmas about equivalence relations you don't use <code>equiv</code>. It is still hard for me three years on to remember that <code>def</code> is sometimes what the CS people use for what I would call a lemma. You just have to think very precisely about what you're saying and see whether implicitly you are, or want to, define data. For example we sometimes say \"theorem: G1 and G2 are isomorphic. Proof: consider the following canonical map from G1 to G2. Let's prove that it's an isomorphism...\". In Lean that canonical map is a definition, and you don't even <em>want</em> to prove the theorem that G1 and G2 are isomorphic, you want to prove the stronger statement that the canonical map is an isomorphism.</p>",
        "id": 202483254,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593545259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202469119\">said</a>:</p>\n<blockquote>\n<p>Maybe you would be interested in taking over a task that <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> , <span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span>  and I were <a href=\"https://github.com/leanprover-community/mathlib/pull/3210#discussion_r447772950\">discussing</a> : to put a topological group structure on the group of units of a topological ring</p>\n</blockquote>\n<p>It does look very interesting even if right now I am working on a summer project that is taking all of my time and I am not sure I would have time for that! Maybe at the end of this project!</p>",
        "id": 202500761,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593554416
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202483254\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"267205\">Nicolò Cavalleri</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202468195\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202467867\">said</a>:</p>\n<blockquote>\n<p>Does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/homeomorph.mul_right/src\">src#homeomorph.mul_right</a> help?</p>\n</blockquote>\n<p>Yes actually it does I probably did not see it because I was looking for a lemma</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"267205\">Nicolò Cavalleri</span> <code>equiv X Y</code> is the type of inverse bijections <code>f : X -&gt; Y</code> and <code>g : Y -&gt; X</code>. Computer scientists prefer these to <code>f : X -&gt; Y</code> plus a proof of <code>bijective f</code> (which would be a lemma) because a computable bijection might have a non-computable inverse. <code>equiv</code> is nothing to do with equivalence relations -- I mean, it _is_ an equivalence relation on types, but what I mean is that if you want to prove lemmas about equivalence relations you don't use <code>equiv</code>. It is still hard for me three years on to remember that <code>def</code> is sometimes what the CS people use for what I would call a lemma. You just have to think very precisely about what you're saying and see whether implicitly you are, or want to, define data. For example we sometimes say \"theorem: G1 and G2 are isomorphic. Proof: consider the following canonical map from G1 to G2. Let's prove that it's an isomorphism...\". In Lean that canonical map is a definition, and you don't even <em>want</em> to prove the theorem that G1 and G2 are isomorphic, you want to prove the stronger statement that the canonical map is an isomorphism.</p>\n</blockquote>\n<p>Thanks! Your explanations are always very clear!</p>",
        "id": 202500800,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1593554445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"267205\">Nicolò Cavalleri</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202500761\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113489-new-members/topic/Invertible.20function/near/202469119\">said</a>:</p>\n<blockquote>\n<p>Maybe you would be interested in taking over a task that <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> , <span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span>  and I were <a href=\"https://github.com/leanprover-community/mathlib/pull/3210#discussion_r447772950\">discussing</a> : to put a topological group structure on the group of units of a topological ring</p>\n</blockquote>\n<p>It does look very interesting even if right now I am working on a summer project that is taking all of my time and I am not sure I would have time for that! Maybe at the end of this project!</p>\n</blockquote>\n<p>I mentioned it because it might be relevant to the project you mentioned -- it would give you the topological group structure on GL(n) for free :)</p>",
        "id": 202504635,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1593557268
    },
    {
        "content": "<p>But of course, feel free not to go down that rabbit hole ...</p>",
        "id": 202504853,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1593557421
    }
]