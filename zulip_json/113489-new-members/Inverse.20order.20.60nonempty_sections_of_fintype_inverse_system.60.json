[
    {
        "content": "<p>Hi,</p>\n<p>I want to use <code>nonempty_sections_of_fintype_inverse_system</code> but drop the <code>opposite</code> part.<br>\nI've tried the following, but get an error on the line <code>  have F'sections_nempty : F'.sections.nonempty := nonempty_sections_of_fintype_inverse_system F',</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.filtered</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.category.Top.limits</span>\n<span class=\"kn\">import</span> <span class=\"n\">category_theory.category.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">category_theory.full_subcategory</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.opposite</span>\n\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">classical</span>\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"kd\">instance</span><span class=\"o\">]</span> <span class=\"n\">prop_decidable</span>\n\n\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">J</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_directed</span> <span class=\"n\">J</span> <span class=\"n\">ge</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">⥤</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">instance</span> <span class=\"n\">Joppreo</span> <span class=\"o\">:</span> <span class=\"n\">preorder</span> <span class=\"n\">J</span><span class=\"bp\">ᵒᵖ</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"n\">le</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">jop</span> <span class=\"n\">jop'</span><span class=\"o\">,</span> <span class=\"n\">jop'.unop</span> <span class=\"bp\">≤</span> <span class=\"n\">jop.unop</span><span class=\"o\">,</span>\n  <span class=\"n\">lt</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">jop</span> <span class=\"n\">jop'</span><span class=\"o\">,</span> <span class=\"n\">jop'.unop</span> <span class=\"bp\">&lt;</span> <span class=\"n\">jop.unop</span><span class=\"o\">,</span>\n  <span class=\"n\">le_refl</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">jop</span><span class=\"o\">,</span> <span class=\"n\">preorder.le_refl</span> <span class=\"n\">jop.unop</span><span class=\"o\">,</span>\n  <span class=\"n\">le_trans</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">j₁</span> <span class=\"n\">j₂</span> <span class=\"n\">j₃</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h₁₂</span> <span class=\"n\">h₂₃</span><span class=\"o\">,</span> <span class=\"n\">preorder.le_trans</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h₂₃</span> <span class=\"n\">h₁₂</span><span class=\"o\">,</span>\n  <span class=\"n\">lt_iff_le_not_le</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">j₁</span> <span class=\"n\">j₂</span><span class=\"o\">,</span> <span class=\"n\">preorder.lt_iff_le_not_le</span> <span class=\"n\">j₂.unop</span> <span class=\"n\">j₁.unop</span>\n  <span class=\"o\">}</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">Jopdir</span>  <span class=\"o\">:</span> <span class=\"n\">is_directed</span> <span class=\"n\">J</span><span class=\"bp\">ᵒᵖ</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">directed</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">jop</span> <span class=\"n\">jop'</span><span class=\"o\">,</span> <span class=\"kd\">by</span>\n  <span class=\"o\">{</span> <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span><span class=\"n\">cj</span><span class=\"o\">,</span><span class=\"n\">cj'</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">directed_of</span> <span class=\"o\">(</span><span class=\"n\">ge</span><span class=\"o\">)</span> <span class=\"n\">jop.unop</span> <span class=\"n\">jop'.unop</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">opposite.op</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">opposite.unop_op</span> <span class=\"n\">c</span> <span class=\"n\">at</span> <span class=\"n\">cj</span> <span class=\"n\">cj'</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">cj</span><span class=\"o\">,</span><span class=\"n\">cj'</span><span class=\"o\">⟩,}}</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">nonempty_sections_of_fintype_inverse_system'</span>\n <span class=\"o\">[</span><span class=\"n\">fin</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">J</span><span class=\"o\">),</span> <span class=\"n\">fintype</span> <span class=\"o\">(</span><span class=\"n\">F.obj</span> <span class=\"n\">j</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">nempty</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">J</span><span class=\"o\">),</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">F.obj</span> <span class=\"n\">j</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">F.sections.nonempty</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">let</span> <span class=\"n\">F'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">J</span><span class=\"bp\">ᵒᵖ</span><span class=\"o\">)</span><span class=\"bp\">ᵒᵖ</span> <span class=\"bp\">⥤</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">category_theory.op_op</span> <span class=\"n\">J</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">F</span><span class=\"o\">,</span>\n  <span class=\"n\">haveI</span> <span class=\"n\">fin'</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">J</span><span class=\"bp\">ᵒᵖ</span><span class=\"o\">)</span><span class=\"bp\">ᵒᵖ</span><span class=\"o\">,</span> <span class=\"n\">fintype</span> <span class=\"o\">(</span><span class=\"n\">F'.obj</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">jopop</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">fin</span><span class=\"o\">,},</span>\n  <span class=\"n\">haveI</span> <span class=\"n\">nempty'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">J</span><span class=\"bp\">ᵒᵖ</span><span class=\"o\">)</span><span class=\"bp\">ᵒᵖ</span><span class=\"o\">,</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">F'.obj</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">jopop</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">nempty</span><span class=\"o\">,},</span>\n  <span class=\"k\">have</span> <span class=\"n\">F'sections_nempty</span> <span class=\"o\">:</span> <span class=\"n\">F'.sections.nonempty</span> <span class=\"o\">:=</span> <span class=\"n\">nonempty_sections_of_fintype_inverse_system</span> <span class=\"n\">F'</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span><span class=\"n\">sec</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">F'sections_nempty</span><span class=\"o\">,</span>\n  <span class=\"n\">fapply</span> <span class=\"n\">Exists.intro</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">λ</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">opposite.op</span> <span class=\"bp\">$</span> <span class=\"n\">opposite.op</span> <span class=\"n\">j</span><span class=\"o\">),</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">λ</span> <span class=\"n\">j</span> <span class=\"n\">j'</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">sec</span> <span class=\"o\">(</span><span class=\"n\">opposite.op</span> <span class=\"bp\">$</span> <span class=\"n\">opposite.op</span> <span class=\"n\">j</span><span class=\"o\">)(</span><span class=\"n\">opposite.op</span> <span class=\"bp\">$</span> <span class=\"n\">opposite.op</span> <span class=\"n\">j'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f.op.op</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>After some investigation, I get a more useful error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">nonempty_sections_of_fintype_inverse_system</span> <span class=\"n\">F'</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">F'</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">@</span><span class=\"n\">category_theory.functor</span> <span class=\"o\">(</span><span class=\"n\">opposite</span> <span class=\"o\">(</span><span class=\"n\">opposite</span> <span class=\"n\">J</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">category_theory.category.opposite</span> <span class=\"o\">(</span><span class=\"n\">opposite</span> <span class=\"n\">J</span><span class=\"o\">)</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">category_theory.category.opposite</span> <span class=\"n\">J</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">preorder.small_category</span> <span class=\"n\">J</span> <span class=\"n\">_inst_1</span><span class=\"o\">)))</span>\n    <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n    <span class=\"n\">category_theory.types</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"bp\">@</span><span class=\"n\">category_theory.functor</span> <span class=\"o\">(</span><span class=\"n\">opposite</span> <span class=\"o\">(</span><span class=\"n\">opposite</span> <span class=\"n\">J</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">category_theory.category.opposite</span> <span class=\"o\">(</span><span class=\"n\">opposite</span> <span class=\"n\">J</span><span class=\"o\">)</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">preorder.small_category</span> <span class=\"o\">(</span><span class=\"n\">opposite</span> <span class=\"n\">J</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">inverse_system.Joppreo</span> <span class=\"n\">J</span> <span class=\"n\">_inst_1</span> <span class=\"n\">_inst_2</span><span class=\"o\">)))</span>\n    <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n    <span class=\"n\">category_theory.types</span>\n</code></pre></div>\n<p>I believe this is due to having a few different ways to do different constructions, but am not sure exactly where the problem lies, nor how to solve it.<br>\nAny idea? Thanks!</p>",
        "id": 296946175,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1662185807
    }
]