[
    {
        "content": "<ol>\n<li>Is the following a hole in the library or did I fail to import the correct file or is it intentionally omitted? (or is it a \"hole\" only in the sense that most people use something other than the <code>lift</code> tactic for passing to a subtype?) </li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"n\">universes</span> <span class=\"n\">u</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">can_lift</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n<span class=\"n\">refine</span> <span class=\"o\">{</span><span class=\"n\">coe</span> <span class=\"o\">:=</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">cond</span> <span class=\"o\">:=</span>  <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">R</span><span class=\"o\">),</span>\n    <span class=\"n\">prf</span> <span class=\"o\">:=</span> <span class=\"bp\">_</span><span class=\"o\">},</span>\n<span class=\"o\">{</span><span class=\"n\">exact</span> <span class=\"n\">coe</span><span class=\"o\">},</span>\n<span class=\"o\">{</span><span class=\"n\">exact</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">R</span><span class=\"o\">)},</span>\n<span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">ha</span> <span class=\"k\">with</span> <span class=\"n\">b</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n<span class=\"n\">existsi</span> <span class=\"n\">units</span><span class=\"bp\">.</span><span class=\"n\">mk_of_mul_eq_one</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">units</span><span class=\"bp\">.</span><span class=\"n\">coe_mk_of_mul_eq_one</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 197022074,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589069580
    },
    {
        "content": "<ol start=\"2\">\n<li>I kind of expected <code>apply_instance</code> to work on the goal that is closed by the first focusing brace by finding a <code>has_coe</code> instance. It doesn't, but then in order for <code>exact coe</code> to work, Lean must be doing that same search for an instance of has_coe, right? Does this go through something more primitive than apply_instance?</li>\n</ol>",
        "id": 197022222,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589069793
    }
]