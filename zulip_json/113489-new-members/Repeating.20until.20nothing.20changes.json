[
    {
        "content": "<p>Is there a way to repeat a tactic until nothing changes in the context? I guess somewhat similar to simp, but with a custom list of tactics</p>",
        "id": 230728742,
        "sender_full_name": "Guilherme Espada",
        "timestamp": 1616000604
    },
    {
        "content": "<p>Is <a href=\"https://leanprover-community.github.io/mathlib_docs/init/meta/tactic.html#tactic.repeat\">docs#repeat</a> what you're looking for?<br>\nIt takes a tactic (or a succession of tactics) as argument</p>",
        "id": 230729744,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1616000935
    },
    {
        "content": "<p>What I tried before posting was something along the lines of:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">repeat</span><span class=\"o\">{</span>\n <span class=\"n\">try</span><span class=\"o\">{</span>\n  <span class=\"n\">b</span>\n <span class=\"o\">},</span>\n <span class=\"n\">try</span><span class=\"o\">{</span>\n  <span class=\"n\">b</span>\n <span class=\"o\">},</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>However, this doesn't quite work: it seems to run until failure. The tries are needed because if you have multiple possible options, I don't want one fail to prevent the other from running (at an unspecified order). In fact, a tactic may fail in one cycle and work in the next.</p>",
        "id": 230731101,
        "sender_full_name": "Guilherme Espada",
        "timestamp": 1616001451
    },
    {
        "content": "<p>Unless there is a tactic that takes n subtactics and succeeds if any succeed, that would work</p>",
        "id": 230731735,
        "sender_full_name": "Guilherme Espada",
        "timestamp": 1616001677
    },
    {
        "content": "<p><code>try { a &lt;|&gt; b &lt;|&gt; c}</code> for the latter idea</p>",
        "id": 230735084,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616002881
    },
    {
        "content": "<p>Thanks! Works like a charm!</p>",
        "id": 230744621,
        "sender_full_name": "Guilherme Espada",
        "timestamp": 1616006287
    },
    {
        "content": "<p>You might also like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.chain/src\">src#tactic.chain</a> (but probably too specialized for its application in <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#tidy\">tactic#tidy</a> for others to use).</p>",
        "id": 230780005,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616020081
    }
]