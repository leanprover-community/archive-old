[
    {
        "content": "<p>I already have lemma le_transitive.    But  in my paper it's Lemma 30.  So I looked for it as lemma30  and did not find it.<br>\nFinally I found le_transitive.  So now let's give it BOTH names so we can find it either way.  OK I can do it like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">lemma30</span><span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"o\">(</span><span class=\"n\">Œ∫</span> <span class=\"n\">Œº</span> <span class=\"n\">‚Ñì</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">Œ∫</span> <span class=\"bp\">‚àà</span> <span class=\"bp\">ùîΩ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œº</span> <span class=\"bp\">‚àà</span> <span class=\"bp\">ùîΩ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñì</span> <span class=\"bp\">‚àà</span> <span class=\"bp\">ùîΩ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ∫</span> <span class=\"bp\">‚â§</span> <span class=\"n\">‚Ñì</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñì</span> <span class=\"bp\">‚â§</span> <span class=\"n\">Œº</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ∫</span> <span class=\"bp\">‚â§</span> <span class=\"n\">Œº</span> <span class=\"o\">:=</span> <span class=\"n\">le_transitive</span> <span class=\"n\">M</span>\n</code></pre></div>\n\n<p>But I wish I could leave out the long formula and just write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">lemma30</span><span class=\"o\">:=</span> <span class=\"n\">le_transitive</span> <span class=\"n\">M</span>\n</code></pre></div>\n\n<p>but that is illegal for some reason.</p>",
        "id": 213881906,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1603178051
    },
    {
        "content": "<p>Could it be</p>\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"k\">\\begin</span><span class=\"nb\">{</span>lemma<span class=\"nb\">}</span> <span class=\"k\">\\label</span><span class=\"nb\">{</span>le<span class=\"nb\">_</span>transitive<span class=\"nb\">}</span>\n  blabla\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>lemma<span class=\"nb\">}</span>\n</code></pre></div>\n\n<p>in your paper?</p>",
        "id": 213881963,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603178109
    },
    {
        "content": "<p>If you use a package like <code>\\usepackage{showkeys}</code> then you will even see the latex labels in the margin of your PDF</p>",
        "id": 213881982,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603178133
    },
    {
        "content": "<p>Because if you insert a lemma before \"Lemma 30\", you'll have a lot of renaming to do, if you do it your way. So I would suggest trying to write that 30 in as few places as possible. Preferably nowhere at all.</p>",
        "id": 213882073,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603178209
    },
    {
        "content": "<p>you can use <code>alias</code> for this</p>",
        "id": 213882094,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178243
    },
    {
        "content": "<p>or <code>def foo := @bar</code></p>",
        "id": 213882110,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178262
    },
    {
        "content": "<p>even if <code>bar</code> is a theorem</p>",
        "id": 213882113,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178272
    },
    {
        "content": "<p>although the linter will yell at you</p>",
        "id": 213882121,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178280
    },
    {
        "content": "<p>Aha!   That would be VERY useful.   The only reason I'm naming these lemmas with numbers in Lean is so I can work with the pdf on one monitor and the Lean file on the other monitor.   Since sync  is more or less dysfunctional in TeXShop I need to work with the pdf mostly.    I've already had to insert a lemma a couple of times.   It's obviously a wrong way to work,<br>\nbut I'm almost done now with this paper.</p>",
        "id": 213882196,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1603178319
    },
    {
        "content": "<p>If you are writing a formalization paper, you should definitely put the lemma names in the paper like Johan says</p>",
        "id": 213882235,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178359
    },
    {
        "content": "<p>don't do it the other way around, putting those terrible latex names in the formalization</p>",
        "id": 213882273,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284844\">@Michael Beeson</span> Even in your setup, where you want to look at the PDF, instead of the tex source, I think you should use <code>{showkeys}</code></p>",
        "id": 213882373,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603178442
    },
    {
        "content": "<p>well, Johan's using them as labels but I would put them also in the print, i.e. <code>\\begin{lemma}[(\\texttt{le_transitive})] ...</code></p>",
        "id": 213882391,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178454
    },
    {
        "content": "<p>Why not let a package do that for you?</p>",
        "id": 213882668,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603178656
    },
    {
        "content": "<p>I have nothing against it, I've never used <code>showkeys</code></p>",
        "id": 213882702,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178691
    },
    {
        "content": "<p>not sure about using the margin for this though, that's often off limits depending on the stylesheet / target venue</p>",
        "id": 213882754,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178739
    },
    {
        "content": "<p>At least one of those packages that shows labels in print is pretty configurable. I always forget which one is which.</p>",
        "id": 213882887,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603178823
    },
    {
        "content": "<p>also I don't know whether I would want this for all <code>\\label</code>s in the file, since I use <code>\\label</code> also for section references and those don't get a texttt gloss</p>",
        "id": 213882996,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603178891
    },
    {
        "content": "<p>Well, I love it that they also show up in the margin while I'm <em>writing</em> the text. For the final product, I agree that it would be good to have a more polished solution.</p>",
        "id": 213883409,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603179170
    }
]