[
    {
        "content": "<p>This sounds right. If you are _sure_ you've never set up an ssh key at github, do let us know, because this is an annoying obstacle in the setup.</p>",
        "id": 204411190,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595244662
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/password.20for.20encrypted.20SSH.20private.20key/near/204408774\">said</a>:</p>\n<blockquote>\n<p>Ok so GitHub is perhaps saying \"instead of providing your github password, just let me know that you are you, because you set up an ssh key at some point\". I'm not an expert, this is kind of a guess.</p>\n</blockquote>\n<p>I'm pretty sure this is exactly what happens. <span class=\"user-mention\" data-user-id=\"294534\">@Emiel Lanckriet</span>  must have set up his GitHub account to use an SSH key sometime in the past. That key is stored in his online GitHub account under Settings/SSH and GPG keys. He can connect from his machine to GitHub (to do <code>git push</code> for example) without further authentication, as long as he types the password to access the key on his local machine. This password is usually stored in a key ring which is many times activated by just logging into the local machine, depending on the settings, so he may have forgotten about it. Just my two cents.</p>\n<p>Nevertheless, as opposed to other Lean-related repositories, it is very inconvenient that <code>mathematics_in_lean</code> asks for authentication when attempting a <code>git clone</code>. In my experience, this happens irrespective of whether the person who attempts to clone is set up to use Git with SSH or HTTPS. This must be a setting on the repository itself that should be changed IMO, because it is a deterrent to using the book.</p>",
        "id": 204418246,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595249765
    },
    {
        "content": "<p>It seems like <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/77c707eaead3732d0a1527478602649c7e82874e/mathlibtools/leanproject.py#L167\">this code</a> is responsible. I don't see how the behavior could be dependent on the repository (<code>name</code>).</p>",
        "id": 204420941,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595251238
    },
    {
        "content": "<p>By the looks of it, if you don't want to push to the repository anyways, then you can just not enter a password and it should fall back to http.</p>",
        "id": 204421251,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595251425
    },
    {
        "content": "<p>So at the very least we should add a message that says you can just fall back (and perhaps provide the link on github explaining how to use ssh keys?)</p>",
        "id": 204421799,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595251770
    },
    {
        "content": "<p>I added the password prompt, since before, there'd be no way to properly use ssh based git if it was password protected</p>",
        "id": 204429983,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595255855
    },
    {
        "content": "<p>But I can totally understand how those that are unfamiliar with git could be confused why they are being asked for a password if they don't recall setting up an sshe keyed login</p>",
        "id": 204430100,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595255898
    },
    {
        "content": "<p>Perhaps the default should be https with a ssh optional flag</p>",
        "id": 204430131,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595255922
    },
    {
        "content": "<p>I can confirm that the ssh issue caused difficulties with some lftcm users last week, who had set up git in the past and then forgot about it. I can also confirm that we didn't do anything to configure the <code>mathematics_in_lean</code> repository; we just asked github to create a new repository and kept the defaults. (I also just checked the account settings and don't see anything that might help.)</p>",
        "id": 204433081,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1595257187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/113489-new-members/topic/password.20for.20encrypted.20SSH.20private.20key/near/204420941\">said</a>:</p>\n<blockquote>\n<p>It seems like <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/77c707eaead3732d0a1527478602649c7e82874e/mathlibtools/leanproject.py#L167\">this code</a> is responsible. I don't see how the behavior could be dependent on the repository (<code>name</code>).</p>\n</blockquote>\n<p>I don't quite understand what the code there is doing. IMHO if it is about unlocking a ssh keypair it ought to work with the passphrase rather than password. Certainly, there is also a Github password (for the github account), but as far as I know this password is not used to commincate with a git server, if the comminication is going via ssh.</p>",
        "id": 204433911,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595257548
    },
    {
        "content": "<p>and there is also the password for the local user account (on the client host).</p>",
        "id": 204434614,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595257885
    },
    {
        "content": "<p>It's the passphrase that unlocks the ssh keypair, not the user account. I could have written a more specific prompt. It has nothing to do with any repository and solely has to do with the way git is setup to connect to github on the user's machine.</p>",
        "id": 204435033,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595258070
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113489-new-members/topic/password.20for.20encrypted.20SSH.20private.20key/near/204435033\">said</a>:</p>\n<blockquote>\n<p>It's the passphrase that unlocks the ssh keypair, not the user account. I could have written a more specific prompt. It has nothing to do with any repository and solely has to do with the way git is setup to connect to github on the user's machine.</p>\n</blockquote>\n<p>but why is it then sent to github as <code>password</code>, rather than <code>passphrase</code>?<br>\n [client.connect('<a href=\"http://github.com\">github.com</a>', username='git', password=password)]<br>\n (<a href=\"https://github.com/leanprover-community/mathlib-tools/blob/77c707eaead3732d0a1527478602649c7e82874e/mathlibtools/leanproject.py#L191\">https://github.com/leanprover-community/mathlib-tools/blob/77c707eaead3732d0a1527478602649c7e82874e/mathlibtools/leanproject.py#L191</a>)</p>",
        "id": 204435452,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595258285
    },
    {
        "content": "<p>Because that is the name of the kwarg in the paramiko library: <a href=\"http://docs.paramiko.org/en/stable/api/keys.html\">http://docs.paramiko.org/en/stable/api/keys.html</a></p>",
        "id": 204435560,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595258345
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113489-new-members/topic/password.20for.20encrypted.20SSH.20private.20key/near/204435560\">said</a>:</p>\n<blockquote>\n<p>Because that is the name of the kwarg in the paramiko library: <a href=\"http://docs.paramiko.org/en/stable/api/keys.html\">http://docs.paramiko.org/en/stable/api/keys.html</a></p>\n</blockquote>\n<p>Isn't it rather <a href=\"http://docs.paramiko.org/en/stable/api/client.html\">http://docs.paramiko.org/en/stable/api/client.html</a> ?<br>\nIndeed, you invoke connect method of <code>paramiko.client.SSHClient</code>, which has both <code>password=</code> and <code>passphrase=</code> keyword args</p>",
        "id": 204436230,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595258582
    },
    {
        "content": "<p>It says</p>\n<ul>\n<li>password (str) – Used for password authentication; is also used for private key decryption if passphrase is not given.</li>\n<li>passphrase (str) – Used for decrypting private keys.</li>\n</ul>\n<p>so it looks as if they are different beasts.</p>",
        "id": 204436450,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595258687
    },
    {
        "content": "<p>It's not 100% clear to me what \"used for private key decryption\" means there. Perhaps it means \"treat it as passphrase\" - hard to tell without either doing a test of reading the source - but in any event the prompt should ask for <code>passphrase</code>, not <code>password</code>.</p>",
        "id": 204436939,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595258934
    },
    {
        "content": "<p>It can ask for either. The ssh key is encrypted with a <code>passphrase</code>. But that <code>passphrase</code> can be stored (at least on Linux machines) in the default key ring of the user, which is either unlocked when the user logs in or can be unlocked later with the local user login password.</p>",
        "id": 204437829,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595259356
    },
    {
        "content": "<p>At least that's what I gather.</p>",
        "id": 204437906,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595259385
    },
    {
        "content": "<p>The big question though is: why does the <code>mathematics_in_lean</code> repository behave differently than others. Because it really looks like it does.</p>",
        "id": 204438125,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595259494
    },
    {
        "content": "<p>And you did <code>leanproject get mathematics_in_lean; leanproject get other_repo</code></p>",
        "id": 204438232,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595259545
    },
    {
        "content": "<p>Exactly. And it looks like other people have the same experience of different behavior. The first asks the user to authenticate, the second doesn't for whatever <code>other_repo</code>. </p>\n<p>This should, however, be checked again on a fresh clone, as things are fluctuating.</p>\n<p>The demand for authentication is not a problem for me, but might be a problem for people not familiar with git.</p>",
        "id": 204439054,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595259893
    },
    {
        "content": "<p>I just tested it now, and I wasn't prompted for a password/passphrase any more. But this may just be due to my setup.</p>",
        "id": 204439471,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595260080
    },
    {
        "content": "<p>Whatever one you do first will add the passphrase to the ssh agent, then you won't be prompted again (for a while at least).</p>",
        "id": 204439954,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595260307
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"259857\">Dan Stanescu</span> <a href=\"#narrow/stream/113489-new-members/topic/password.20for.20encrypted.20SSH.20private.20key/near/204437829\">said</a>:</p>\n<blockquote>\n<p>It can ask for either. The ssh key is encrypted with a <code>passphrase</code>. But that <code>passphrase</code> can be stored (at least on Linux machines) in the default key ring of the user, which is either unlocked when the user logs in or can be unlocked later with the local user login password.</p>\n</blockquote>\n<p>sending to github the password for the local keyring makes no sense to me - and that's what happens there, if I am not mistaken.</p>",
        "id": 204465791,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595273574
    },
    {
        "content": "<p>My ssh-passphrase is what works here, not my keyring password, in my usage so far.</p>",
        "id": 204466071,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595273717
    },
    {
        "content": "<p>Really, if the user has an SSH key that requires a passphrase, the prompt should indicate which key it is trying to use. This is what happens when I use git manually:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">➜</span>  <span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">tools</span> <span class=\"n\">git</span><span class=\"o\">:(</span><span class=\"n\">master</span><span class=\"o\">)</span> <span class=\"err\">✗</span> <span class=\"n\">git</span> <span class=\"n\">pull</span>\n<span class=\"n\">Enter</span> <span class=\"n\">passphrase</span> <span class=\"n\">for</span> <span class=\"n\">key</span> <span class=\"err\">&#39;</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">user</span><span class=\"bp\">/.</span><span class=\"n\">ssh</span><span class=\"bp\">/</span><span class=\"n\">id_rsa&#39;</span><span class=\"o\">:</span>\n<span class=\"n\">Already</span> <span class=\"n\">up</span> <span class=\"n\">to</span> <span class=\"n\">date</span><span class=\"bp\">.</span>\n</code></pre></div>\n\n\n<p>However, as far as I can tell, paramiko does not expose directly what keyfile it is using to connect (<a href=\"https://github.com/paramiko/paramiko/blob/690d142321f53ae82f49a57b7f6716fb947d5687/paramiko/client.py#L712\">https://github.com/paramiko/paramiko/blob/690d142321f53ae82f49a57b7f6716fb947d5687/paramiko/client.py#L712</a>). I might PR that into Paramiko.</p>",
        "id": 204567258,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1595347490
    },
    {
        "content": "<p>I don't understand why any of this is necessary in the first place--doesn't <code>leanproject</code> invoke <code>git pull</code> or something?</p>",
        "id": 204567942,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595347797
    },
    {
        "content": "<p><code>leanproject get</code> invokes <code>git clone</code></p>",
        "id": 204569964,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595348805
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/113489-new-members/topic/password.20for.20encrypted.20SSH.20private.20key/near/204567942\">said</a>:</p>\n<blockquote>\n<p>I don't understand why any of this is necessary in the first place--doesn't <code>leanproject</code> invoke <code>git pull</code> or something?</p>\n</blockquote>\n<p><code>git pull</code> requires my SSH key anyway, because I connect to GitHub using SSH:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">➜</span>  <span class=\"n\">mathlib</span> <span class=\"n\">git</span><span class=\"o\">:(</span><span class=\"n\">bertrand</span><span class=\"bp\">-</span><span class=\"n\">postulate</span><span class=\"o\">)</span> <span class=\"err\">✗</span> <span class=\"n\">git</span> <span class=\"n\">remote</span> <span class=\"bp\">-</span><span class=\"n\">v</span>\n<span class=\"n\">origin</span>  <span class=\"n\">git</span><span class=\"bp\">@</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"o\">(</span><span class=\"n\">fetch</span><span class=\"o\">)</span>\n<span class=\"n\">origin</span>  <span class=\"n\">git</span><span class=\"bp\">@</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"o\">(</span><span class=\"n\">push</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 204574677,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1595351207
    },
    {
        "content": "<p>Right but e.g. invoking <code>git pull</code> from a shell script would result in the passphrase prompt if needed.</p>",
        "id": 204574776,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595351268
    },
    {
        "content": "<p>this is giving me (non-pebkac) problems too, I have made an issue at <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/72\">https://github.com/leanprover-community/mathlib-tools/issues/72</a></p>",
        "id": 204737349,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1595462879
    },
    {
        "content": "<p>Thanks. This has come up a few times recently.</p>",
        "id": 204766168,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595488182
    }
]