[
    {
        "content": "<p>Hello, in my proof, im getting an error, which I dont really understand. A possible explanation could be that im getting the math wrong, but ill let you see for yourselves.<br>\nProof so far:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">cantor_injective</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">¬</span><span class=\"n\">function.injective</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">set</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"n\">range</span> <span class=\"n\">f</span><span class=\"o\">},</span>\n  <span class=\"n\">by_contradiction</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">ξ</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"n\">ξ</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">exists_eq'</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">this</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">ξ</span><span class=\"o\">,</span> <span class=\"n\">fx</span><span class=\"o\">⟩,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">∈</span> <span class=\"n\">ξ</span> <span class=\"bp\">↔</span> <span class=\"n\">B</span> <span class=\"bp\">∉</span> <span class=\"n\">f</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"kd\">class</span> <span class=\"kd\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"n\">range</span> <span class=\"n\">f</span><span class=\"o\">},</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">function.injective</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n<span class=\"n\">ξ</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">fx</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"n\">ξ</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">has_mem</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">α</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"n\">range</span> <span class=\"n\">f</span><span class=\"o\">},</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">function.injective</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n<span class=\"n\">ξ</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">fx</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"n\">ξ</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">false</span>\n</code></pre></div>\n<p>thanks in advance</p>",
        "id": 280767180,
        "sender_full_name": "Joseph O",
        "timestamp": 1651370250
    },
    {
        "content": "<p>The error tells you what is wrong.</p>",
        "id": 280767239,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651370340
    },
    {
        "content": "<p>You must have written <code>X ∈ Y</code> for <code>X : set α</code> and <code>Y : α</code>, the error says this doesn't make sense, and the error will tell you precisely where you've written this.</p>",
        "id": 280767323,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651370416
    },
    {
        "content": "<p>Oh</p>",
        "id": 280767360,
        "sender_full_name": "Joseph O",
        "timestamp": 1651370432
    },
    {
        "content": "<p>I think I see</p>",
        "id": 280767363,
        "sender_full_name": "Joseph O",
        "timestamp": 1651370437
    },
    {
        "content": "<p>I fixed it</p>",
        "id": 280767381,
        "sender_full_name": "Joseph O",
        "timestamp": 1651370500
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 280767399,
        "sender_full_name": "Notification Bot",
        "timestamp": 1651370502
    }
]