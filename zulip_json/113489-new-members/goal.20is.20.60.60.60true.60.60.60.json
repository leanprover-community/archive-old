[
    {
        "content": "<p>What is the \"correct\" way of concluding a proof whose goal is <code>true</code>?  I have been using <code>trivial</code>, but I wonder whether some other tactic is more appropriate!</p>\n<p>Thank you!</p>",
        "id": 212065559,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1601640752
    },
    {
        "content": "<p><code>trivial</code> is a fine tactic. Why do you end up with goals like <code>true</code>?</p>",
        "id": 212065681,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601640832
    },
    {
        "content": "<p>Using <code>squeeze_simp</code>, replacing <code>simp only</code> by <code>rw</code> and messing around...  Ahaha</p>",
        "id": 212065809,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1601640912
    },
    {
        "content": "<p>Possibly due to lemmas of the form <code>x ↔ true</code>that maybe should just be spelt <code>x</code> (<a href=\"#narrow/stream/113488-general/topic/.60p.20x.60.20or.20.60p.20x.20.20.E2.86.94.20true.60.20in.20simp.20lemmas.3F/near/212064947\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/.60p.20x.60.20or.20.60p.20x.20.20.E2.86.94.20true.60.20in.20simp.20lemmas.3F/near/212064947</a>)</p>",
        "id": 212066184,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1601641133
    },
    {
        "content": "<p>\"I'm experimenting\" is a fine answer.</p>",
        "id": 212069199,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601642906
    },
    {
        "content": "<p>Some interesting alternatives include <code>constructor</code>, <code>split</code> (!) and <code>exact ⟨⟩</code></p>",
        "id": 212086056,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601650907
    },
    {
        "content": "<p>Or <code>exact true.intro</code>. But that one is boring :)</p>",
        "id": 212086367,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1601651046
    },
    {
        "content": "<p>or <code>exact trivial</code>, since <code>trivial</code> is both the name of the proof of <code>true</code> and also the name of a tactic that applies it</p>",
        "id": 212086713,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601651224
    },
    {
        "content": "<p>Thanks!  I think that also various of the <code>simp</code>s tactics work!  Is there a reason to prefer one tactic over another one?  I would like to make it as easy as possible for Lean to parse the files: which one of these tactics would be the \"fastest\"?</p>",
        "id": 212086955,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1601651342
    },
    {
        "content": "<p>the ones that aren't <code>simp</code></p>",
        "id": 212087421,
        "sender_full_name": "Reid Barton",
        "timestamp": 1601651463
    },
    {
        "content": "<p><code>exact trivial</code> is the fastest, I think, but <code>trivial</code> is fine. But really this is a micro optimization, there are generally much bigger fish to fry when it comes to speeding up proofs</p>",
        "id": 212087428,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601651468
    },
    {
        "content": "<p>generally speaking, the less you make lean guess what you mean the faster the tactic will be</p>",
        "id": 212087644,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601651559
    },
    {
        "content": "<p>so something like <code>simp</code> is slow because it uses a big database of true things, one of which is the one you want</p>",
        "id": 212087713,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601651594
    },
    {
        "content": "<p>and the others do some minor figuring out of which inductive type to construct</p>",
        "id": 212087757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601651619
    },
    {
        "content": "<p>Ok, thank you!  I realize that this is not the bottleneck for speed, but this is a concrete where I can easily formulate a question about optimization and I am glad for the answer!</p>",
        "id": 212088967,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1601652096
    },
    {
        "content": "<p>while we're listing tactics that can solve <code>true</code>, <code>cc</code> is presumably the shortest one</p>",
        "id": 212090235,
        "sender_full_name": "Reid Barton",
        "timestamp": 1601652661
    },
    {
        "content": "<p>if you are in term mode you can't beat <code>⟨⟩</code></p>",
        "id": 212090410,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601652735
    }
]