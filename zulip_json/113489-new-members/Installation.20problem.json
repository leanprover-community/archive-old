[
    {
        "content": "<p>Hi, I played the NNG and absolutely loved it. So I wanted the real deal and followed the <a href=\"https://leanprover-community.github.io/get_started.html\">download instructions</a> and downloaded the <a href=\"https://github.com/leanprover-community/tutorials/blob/master/README.md\">tutorials</a>. When I run <em>code tutorials</em>, Visual Studio Code opens and I can read <em>00_first_proof.lean</em>. I get yellow bars and a message <em>Loading...</em> on the right. After about 10 minutes I get <em>Error updating: excessive memory consumption detected</em> and lots of errors. What do I do?</p>",
        "id": 278998854,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649958625
    },
    {
        "content": "<p>Did you download the tutorials project using <code>leanproject get</code>?</p>",
        "id": 278998963,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1649958699
    },
    {
        "content": "<p>Yes.</p>",
        "id": 278999273,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649958836
    },
    {
        "content": "<p>What's your OS and how did you install Lean? I understand you followed the instructions page, just wondering if there's something specific to your situation.</p>",
        "id": 278999983,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649959171
    },
    {
        "content": "<p>I use Windows. I used bash.</p>",
        "id": 279000320,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649959303
    },
    {
        "content": "<p>My harddrive is somewhat full. Only 8 GB free, but that should be enough, no?</p>",
        "id": 279000490,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649959382
    },
    {
        "content": "<p>I already had python, but downloaded bash and VS Code following the guidelines.</p>",
        "id": 279000742,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649959507
    },
    {
        "content": "<p>That sounds right, assuming you installed <code>elan</code> using after installing bash as in the instructions. Can you delete the tutorial folder, re-download it using <code>leanproject get</code> and paste the command output here?</p>",
        "id": 279001053,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649959678
    },
    {
        "content": "<p>There might be a hint in there</p>",
        "id": 279001118,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649959696
    },
    {
        "content": "<p>First I get:<br>\n<a href=\"/user_uploads/3121/2SqZbWVG9aiX8s4e71YWMLcI/grafik.png\">grafik.png</a> <br>\non which I just click OK.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2SqZbWVG9aiX8s4e71YWMLcI/grafik.png\" title=\"grafik.png\"><img src=\"/user_uploads/3121/2SqZbWVG9aiX8s4e71YWMLcI/grafik.png\"></a></div>",
        "id": 279001349,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649959805
    },
    {
        "content": "<blockquote>\n<p>$ leanproject get tutorials<br>\nconfiguring tuto 0.1<br>\nWARNING: leanpkg configurations not specifying <code>path = \"src\"</code> are deprecated.<br>\nmathlib: cloning <a href=\"https://github.com/leanprover-community/mathlib\">https://github.com/leanprover-community/mathlib</a> to _target/deps/mathlib</p>\n<blockquote>\n<p>git clone <a href=\"https://github.com/leanprover-community/mathlib\">https://github.com/leanprover-community/mathlib</a> _target/deps/mathlib<br>\ngit checkout --detach 5bf57407a1db721efa8856c40b31ad50cf4c3f44    # in directory _target/deps/mathlib</p>\n</blockquote>\n</blockquote>",
        "id": 279001458,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649959879
    },
    {
        "content": "<p>You can use <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> if the formatting is getting messed up, but hopefully there's more to the output</p>",
        "id": 279001719,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649960011
    },
    {
        "content": "<p>I don't know how Git for Windows works, but on Linux you have to type \"yes\" explicitly to authorize a new host. The dialog text might be truncated. You can try typing \"yes\" on the text box before clicking OK to see if it helps, because this stray text box is very suspicious.</p>",
        "id": 279002108,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649960191
    },
    {
        "content": "<p>Thanks so much for your help. This is all the output I get. (both when I just click OK, and when I write <em>yes</em> (appears as ***) in the box.</p>",
        "id": 279002406,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649960356
    },
    {
        "content": "<p>Here's what I get on my Linux machine:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span> <span class=\"n\">tutorials</span>\n<span class=\"n\">Cloning</span> <span class=\"k\">from</span> <span class=\"n\">git</span><span class=\"bp\">@</span><span class=\"n\">github.com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">tutorials.git</span>\n<span class=\"n\">configuring</span> <span class=\"n\">tuto</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">WARNING</span><span class=\"o\">:</span> <span class=\"n\">leanpkg</span> <span class=\"n\">configurations</span> <span class=\"n\">not</span> <span class=\"n\">specifying</span> <span class=\"bp\">`</span><span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">\"src\"</span><span class=\"bp\">`</span> <span class=\"n\">are</span> <span class=\"n\">deprecated.</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"n\">Cloning</span> <span class=\"n\">into</span> <span class=\"bp\">'</span><span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib'...</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">264090</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">79</span><span class=\"bp\">/</span><span class=\"mi\">79</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">28</span><span class=\"bp\">/</span><span class=\"mi\">28</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Total</span> <span class=\"mi\">264090</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">67</span><span class=\"o\">),</span> <span class=\"n\">reused</span> <span class=\"mi\">54</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">51</span><span class=\"o\">),</span> <span class=\"n\">pack</span><span class=\"bp\">-</span><span class=\"n\">reused</span> <span class=\"mi\">264011</span>\n<span class=\"n\">Receiving</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">264090</span><span class=\"bp\">/</span><span class=\"mi\">264090</span><span class=\"o\">),</span> <span class=\"mi\">141</span><span class=\"bp\">.</span><span class=\"mi\">03</span> <span class=\"n\">MiB</span> <span class=\"bp\">|</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">47</span> <span class=\"n\">MiB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">Resolving</span> <span class=\"n\">deltas</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">210712</span><span class=\"bp\">/</span><span class=\"mi\">210712</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach 5bf57407a1db721efa8856c40b31ad50cf4c3f44    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"mi\">5</span><span class=\"n\">bf57407a1</span> <span class=\"n\">chore</span><span class=\"o\">(</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">fin_category</span><span class=\"o\">):</span> <span class=\"n\">Speed</span> <span class=\"n\">up</span> <span class=\"bp\">`</span><span class=\"n\">as_type_equiv_obj_as_type</span><span class=\"bp\">`</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">13298</span><span class=\"o\">)</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"mi\">5</span><span class=\"n\">bf57407a1</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">remotely...</span>\n  <span class=\"n\">Found</span> <span class=\"n\">remote</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Located</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n  <span class=\"mi\">5</span><span class=\"n\">bf57407a1</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%|████████████████████████████████|</span> <span class=\"mi\">66</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"n\">M</span><span class=\"bp\">/</span><span class=\"mi\">66</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"n\">M</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"bp\">&lt;</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">70</span><span class=\"n\">MB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">2353</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">07</span><span class=\"o\">,</span> <span class=\"mi\">323</span><span class=\"bp\">.</span><span class=\"mi\">57</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 279002776,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649960552
    },
    {
        "content": "<p>This last step (\"Looking for mathlib oleans...\") is missing. You can try to run it separately by running <code>leanproject get-m</code> inside the tutorials folder. Maybe that will give a useful diagnostic message if it fails.</p>",
        "id": 279002906,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649960621
    },
    {
        "content": "<p>I think the compiled mathlib binaries take up over half a gig nowadays. The problem looks like you have got mathlib but not the compiled binaries (oleans). Doing what Mauricio suggests above is probably a good idea! Sorry it's so hard to install on Windows :-/</p>",
        "id": 279003343,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649960839
    },
    {
        "content": "<p>ok, I ran <em>cd tutorials</em>, <em>leanproject get-m</em>. It finished quite quickly, but did not output anything. I am now running <em>code tutorials</em> again, it keeps <em>Loading...</em>.</p>",
        "id": 279003717,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649961031
    },
    {
        "content": "<p>Do you now have <code>.olean</code> files, like for example <code>_target/deps/mathlib/src/algebra/abs.olean</code>? What's the output of <code>leanproject --version</code> and <code>leanproject --debug get-m</code> inside the tutorials folder?</p>",
        "id": 279003996,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649961209
    },
    {
        "content": "<p>Yeah, right now the game is to get half a gig worth of olean files in that _target directory. <code>leanproject get-m</code> didn't output <em>anything</em>? That sounds weird. I don't know about Windows but on Linux you'll always get some kind of helpful output.</p>",
        "id": 279004208,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649961329
    },
    {
        "content": "<p>You said you already had Python installed. Do you have Python 2 or Python 3? I don't know if leanproject supports Python 2 anymore.</p>",
        "id": 279004341,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649961397
    },
    {
        "content": "<p>What are you talking about Kevin? Mathlib isn't so big</p>",
        "id": 279004353,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649961402
    },
    {
        "content": "<p>Or maybe it became so big</p>",
        "id": 279004384,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649961427
    },
    {
        "content": "<p>It seems you're right</p>",
        "id": 279004546,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649961517
    },
    {
        "content": "<p>I only have <code>abs.lean</code>, not <code>abs.olean</code> there. There is no result for <code>--debug</code>:<br>\n<a href=\"/user_uploads/3121/cS3Kb5peQSo6H_Q90yXvyJiy/grafik.png\">grafik.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/cS3Kb5peQSo6H_Q90yXvyJiy/grafik.png\" title=\"grafik.png\"><img src=\"/user_uploads/3121/cS3Kb5peQSo6H_Q90yXvyJiy/grafik.png\"></a></div>",
        "id": 279004573,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649961535
    },
    {
        "content": "<p>I see you have a space in your directory name. There's a small chance <code>leanproject</code> doesn't handle that well, since it's not the sort of thing Linux people (such as myself) think about. </p>\n<p>Edit: I just tested it and spaces in directory names are not a problem on Linux, though.</p>",
        "id": 279004776,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649961647
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">python</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Python</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n</code></pre></div>",
        "id": 279004808,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649961671
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/Installation.20problem/near/279004546\">said</a>:</p>\n<blockquote>\n<p>It seems you're right</p>\n</blockquote>\n<p>I discovered this because I made a virtual machine to mark my students' projects and I gave it 10 gigs of disc space and then after 20 projects it ran out of disc space!</p>",
        "id": 279004878,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649961720
    },
    {
        "content": "<p>I replaced the spaces with <code>_</code>, and reran the suggestions (including <code>leanproject get-m</code> inside <code>tutorials</code>). Still no <code>.olean</code> files in <code>C:\\Users\\Strichcoder\\Documents\\Math_and_Science\\Lean\\tutorials\\_target\\deps\\mathlib\\src\\algebra</code></p>",
        "id": 279005460,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649962050
    },
    {
        "content": "<p>OK here's a curveball suggestion: perhaps somehow the tarball for the relevant mathlib was corrupted? I don't know where the relevant directory is on Windows but somewhere there is a <code>.mathlib</code> directory and in it there might be a file called <code>5bf57407a1db721efa8856c40b31ad50cf4c3f44.tar.xz</code> (you can check your <code>leanpkg.toml</code> for the git hash of mathlib which you're using but this is the one for the current tutorials file). Remove this and remove <code>_target</code> in your tutorial repo and then try <code>leanproject get-m</code> again?</p>",
        "id": 279005621,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649962135
    },
    {
        "content": "<p>Hmm. I found a folder <code>C:\\Users\\Strichcoder\\.mathlib</code> but it only contains a file called <code>url</code>. I unfortunately don't know what my <code>leanpkg.toml</code> is.</p>",
        "id": 279005975,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649962327
    },
    {
        "content": "<p>That's a good suggestion, but while Raphael runs the experiment I have a question: Is it common for <code>git</code> on Windows to not produce any output, as in the above?</p>",
        "id": 279006084,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649962384
    },
    {
        "content": "<p>the <code>url</code> file contains a link, <code>https://oleanstorage.azureedge.net/mathlib/</code> and nothing else.</p>",
        "id": 279006164,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649962432
    },
    {
        "content": "<p>Yeah that's the right .mathlib directory , at least we now know that you haven't even downloaded the olean files. In the <code>tutorials</code> directory there will be a file called <code>leanpkg.toml</code> which says exactly which version of mathlib you want, but we don't need to worry about that right now, we know you have got no oleans rather than corrupted oleans.</p>",
        "id": 279006356,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649962528
    },
    {
        "content": "<p>I'm tempted to ask you to just close the terminal and re-open it. The authorization prompt might have done something weird to your terminal, because <code>git</code> is definitely supposed to print stuff.</p>",
        "id": 279006521,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649962603
    },
    {
        "content": "<p>In <code>tutorials</code> I have <code>leanpkg.path</code> and  <code>leanpkg.toml</code> but no <code>leanpkg.html</code>.</p>",
        "id": 279006583,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649962647
    },
    {
        "content": "<p>Oh sorry, my bad; it's <code>toml</code>. Sorry for adding to the confusion :-( I edited.</p>",
        "id": 279006756,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649962738
    },
    {
        "content": "<p>Yes, the authorization prompt might have done something. Since I typed in <code>yes</code>, it has since not appeared anymore when I deleted tutorials and reran <code>leanproject get tutorials</code>.</p>",
        "id": 279006769,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649962747
    },
    {
        "content": "<p>But I still get:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Strichcoder</span><span class=\"bp\">@</span><span class=\"n\">DESKTOP</span><span class=\"bp\">-</span><span class=\"n\">LSPVCNB</span> <span class=\"n\">MINGW64</span> <span class=\"bp\">~/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">Math_and_Science</span><span class=\"bp\">/</span><span class=\"n\">Lean</span>\n<span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span> <span class=\"n\">tutorials</span>\n<span class=\"n\">configuring</span> <span class=\"n\">tuto</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">WARNING</span><span class=\"o\">:</span> <span class=\"n\">leanpkg</span> <span class=\"n\">configurations</span> <span class=\"n\">not</span> <span class=\"n\">specifying</span> <span class=\"bp\">`</span><span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">\"src\"</span><span class=\"bp\">`</span> <span class=\"n\">are</span> <span class=\"n\">deprecated.</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach 5bf57407a1db721efa8856c40b31ad50cf4c3f44    # in directory _target/deps/mathlib</span>\n</code></pre></div>",
        "id": 279006819,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649962780
    },
    {
        "content": "<p>(three ``` not 2). That's it? This is annoying.</p>",
        "id": 279006898,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649962805
    },
    {
        "content": "<p>The lack of an authorization prompt is expected. Git/SSH saves the server fingerprint when you first authorize it. Then subsequent runs check that the fingerprint matches. This is called trust-on-first-use (or TOFU).</p>",
        "id": 279007010,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649962840
    },
    {
        "content": "<p>Do Windows users usually have this issue with <code>git</code>? No output at all? I think I'm going to shut up now and wait for a Windows power user to come along. Sorry :-(</p>",
        "id": 279007106,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649962902
    },
    {
        "content": "<p>Even if it does not help, here the content of <code>lenpkg.toml</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">package</span><span class=\"o\">]</span>\n<span class=\"n\">name</span> <span class=\"bp\">=</span> <span class=\"s2\">\"tuto\"</span>\n<span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"0.1\"</span>\n<span class=\"n\">lean_version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"leanprover-community/lean:3.42.1\"</span>\n<span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">\"src/solutions\"</span>\n\n<span class=\"o\">[</span><span class=\"n\">dependencies</span><span class=\"o\">]</span>\n<span class=\"n\">mathlib</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">git</span> <span class=\"bp\">=</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib\"</span><span class=\"o\">,</span> <span class=\"n\">rev</span> <span class=\"bp\">=</span> <span class=\"s2\">\"5bf57407a1db721efa8856c40b31ad50cf4c3f44\"</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 279007184,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649962931
    },
    {
        "content": "<p>Yeah that looks perfect. But do you have the oleans?</p>",
        "id": 279007226,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649962957
    },
    {
        "content": "<p>I wonder if this is again related to the Git security issue. Maybe the subsequent update broke something in Git or Git Bash? I am assuming you installed Git today.</p>",
        "id": 279007299,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649963009
    },
    {
        "content": "<p>no oleans in <code>C:\\Users\\Strichcoder\\Documents\\Math_and_Science\\Lean\\tutorials\\_target\\deps\\mathlib\\src\\algebra</code></p>",
        "id": 279007304,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649963011
    },
    {
        "content": "<p>One last blind guess. Does it work if you do <code>winpty leanproject get-m</code>? <a href=\"https://github.com/git-for-windows/build-extra/blob/main/ReleaseNotes.md\">https://github.com/git-for-windows/build-extra/blob/main/ReleaseNotes.md</a> claims some console programs don't work under MinTTY (that is, Git Bash)</p>",
        "id": 279007697,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649963210
    },
    {
        "content": "<p>I have no idea what shell tools a Windows user has but the manual version of what <code>leanproject get-m</code> is doing is this: (starting in the <code>tutorials</code> directory): </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cd</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span>\n<span class=\"n\">wget</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">oleanstorage.azureedge.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"mi\">5</span><span class=\"n\">bf57407a1db721efa8856c40b31ad50cf4c3f44.tar.xz</span>\n<span class=\"n\">tar</span> <span class=\"bp\">-</span><span class=\"n\">xvf</span> <span class=\"mi\">5</span><span class=\"n\">bf57407a1db721efa8856c40b31ad50cf4c3f44.tar.xz</span>\n</code></pre></div>",
        "id": 279007759,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649963242
    },
    {
        "content": "<p>I <em>suspect</em> the absence of feedback from git might be related to the fact that it's being called indirectly by another program.<br>\n<span class=\"user-mention\" data-user-id=\"494571\">@Raphael Appenzeller</span> wanna try deleting the <code>_target</code> folder and doing a <code>git clone https://github.com/leanprover-community/mathlib _target/deps/mathlib</code> by hand?</p>",
        "id": 279007766,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649963246
    },
    {
        "content": "<p>But they seem to have the lean files, it's the oleans which are missing</p>",
        "id": 279007798,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649963268
    },
    {
        "content": "<p>Is <code>leanproject get-m</code> a shortcut for <code>leanproject get-mathlib-cache</code>?</p>",
        "id": 279008131,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649963408
    },
    {
        "content": "<p>Deleting <code>_target</code> and running it gives me finally some more info:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"n\">Cloning</span> <span class=\"n\">into</span> <span class=\"bp\">'</span><span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib'...</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">264145</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">94</span><span class=\"bp\">/</span><span class=\"mi\">94</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">66</span><span class=\"bp\">/</span><span class=\"mi\">66</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Total</span> <span class=\"mi\">264145</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">47</span><span class=\"o\">),</span> <span class=\"n\">reused</span> <span class=\"mi\">66</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">28</span><span class=\"o\">),</span> <span class=\"n\">pack</span><span class=\"bp\">-</span><span class=\"n\">reused</span> <span class=\"mi\">264051</span>\n<span class=\"n\">Receiving</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">264145</span><span class=\"bp\">/</span><span class=\"mi\">264145</span><span class=\"o\">),</span> <span class=\"mi\">140</span><span class=\"bp\">.</span><span class=\"mi\">28</span> <span class=\"n\">MiB</span> <span class=\"bp\">|</span> <span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">08</span> <span class=\"n\">MiB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">Resolving</span> <span class=\"n\">deltas</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">210708</span><span class=\"bp\">/</span><span class=\"mi\">210708</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">Updating</span> <span class=\"n\">files</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">2665</span><span class=\"bp\">/</span><span class=\"mi\">2665</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n</code></pre></div>",
        "id": 279008191,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649963442
    },
    {
        "content": "<p>(still no .oleans though)</p>",
        "id": 279008239,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649963459
    },
    {
        "content": "<p>Right. So it might be the winpty thing in the release notes. I am really curious to know if <code>winpty leanproject get-m</code> works</p>",
        "id": 279008279,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649963487
    },
    {
        "content": "<p>wget ... is downloading lots and lots of files..<br>\n<span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Installation.20problem/near/279007759\">said</a>:</p>\n<blockquote>\n<p>I have no idea what shell tools a Windows user has but the manual version of what <code>leanproject get-m</code> is doing is this: (starting in the <code>tutorials</code> directory): </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cd</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span>\n<span class=\"n\">wget</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">oleanstorage.azureedge.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"mi\">5</span><span class=\"n\">bf57407a1db721efa8856c40b31ad50cf4c3f44.tar.xz</span>\n<span class=\"n\">tar</span> <span class=\"bp\">-</span><span class=\"n\">xvf</span> <span class=\"mi\">5</span><span class=\"n\">bf57407a1db721efa8856c40b31ad50cf4c3f44.tar.xz</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This has worked. I now have .olean files! I will try running VS code.</p>",
        "id": 279008554,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649963620
    },
    {
        "content": "<p>I wonder if <code>Git Bash</code> would have handled it any better</p>",
        "id": 279008686,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649963688
    },
    {
        "content": "<p>This is git bash, I think.</p>",
        "id": 279008746,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649963715
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/TQcghHqGqG6xgkAURsmNm8Nm/grafik.png\">grafik.png</a> <br>\n<a href=\"/user_uploads/3121/1nTCuOtmb-oK3jUXFSHI7ltP/grafik.png\">grafik.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/TQcghHqGqG6xgkAURsmNm8Nm/grafik.png\" title=\"grafik.png\"><img src=\"/user_uploads/3121/TQcghHqGqG6xgkAURsmNm8Nm/grafik.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/1nTCuOtmb-oK3jUXFSHI7ltP/grafik.png\" title=\"grafik.png\"><img src=\"/user_uploads/3121/1nTCuOtmb-oK3jUXFSHI7ltP/grafik.png\"></a></div>",
        "id": 279008846,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649963756
    },
    {
        "content": "<p>I still get the orange bars and the <code>Loading...</code> message which does not disappear. I should see in about 10 mins, if I get all the errors again.</p>",
        "id": 279009019,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649963824
    },
    {
        "content": "<p>Yes, i am using Git bash.</p>",
        "id": 279009062,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649963848
    },
    {
        "content": "<p>Out of curiosity, do you remember where you downloaded your Python version from?</p>",
        "id": 279009638,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649964109
    },
    {
        "content": "<p>So there might have been some error message that was hidden from us because the commands were being called indirectly by <code>leanproject</code> (like with the git commands)</p>",
        "id": 279009721,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649964139
    },
    {
        "content": "<p>No, I downloaded python a long time ago (~5 years).</p>",
        "id": 279009955,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649964249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> Yep, that's what the <code>winpty</code> thing is supposed to fix for non-MSYS2 versions of Python. The only thing I don't get is why more people don't hit this bug.</p>",
        "id": 279010013,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649964281
    },
    {
        "content": "<p>I still get a lot of errrors.<br>\n<a href=\"/user_uploads/3121/cjaMzvhs8UrchIoL_EG5DUSN/grafik.png\">grafik.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/cjaMzvhs8UrchIoL_EG5DUSN/grafik.png\" title=\"grafik.png\"><img src=\"/user_uploads/3121/cjaMzvhs8UrchIoL_EG5DUSN/grafik.png\"></a></div>",
        "id": 279010039,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649964299
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/zeUWyD_AE0Xb4M8cYx7AFyiE/grafik.png\">grafik.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/zeUWyD_AE0Xb4M8cYx7AFyiE/grafik.png\" title=\"grafik.png\"><img src=\"/user_uploads/3121/zeUWyD_AE0Xb4M8cYx7AFyiE/grafik.png\"></a></div>",
        "id": 279010370,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649964475
    },
    {
        "content": "<p>Awesome! So if it still doesn't work you should probably delete the tutorials folder and start afresh with <code>winpty leanproject get tutorials</code></p>",
        "id": 279010601,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649964594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/113489-new-members/topic/Installation.20problem/near/279007299\">said</a>:</p>\n<blockquote>\n<p>I wonder if this is again related to the Git security issue. Maybe the subsequent update broke something in Git or Git Bash? I am assuming you installed Git today.</p>\n</blockquote>\n<p>I installed Git yesterday, yes.</p>",
        "id": 279010693,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649964624
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"494571\">Raphael Appenzeller</span> <a href=\"#narrow/stream/113489-new-members/topic/Installation.20problem/near/279009955\">said</a>:</p>\n<blockquote>\n<p>No, I downloaded python a long time ago (~5 years).</p>\n</blockquote>\n<p>How come is your Python installation so old? 3.9 is not 5 years old<br>\n<span class=\"user-mention silent\" data-user-id=\"494571\">Raphael Appenzeller</span> <a href=\"#narrow/stream/113489-new-members/topic/Installation.20problem/near/279004808\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">python</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Python</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 279011154,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649964861
    },
    {
        "content": "<p>I probably updated it over the years. I just don't remember where I originally got it from.</p>",
        "id": 279011208,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649964902
    },
    {
        "content": "<p>omg, it works! First green messages:<br>\n<a href=\"/user_uploads/3121/cMCDWrdasWXz4CN8WHySWhxg/grafik.png\">grafik.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/cMCDWrdasWXz4CN8WHySWhxg/grafik.png\" title=\"grafik.png\"><img src=\"/user_uploads/3121/cMCDWrdasWXz4CN8WHySWhxg/grafik.png\"></a></div>",
        "id": 279011379,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649964975
    },
    {
        "content": "<p>Thank you so much. I deleted tutorials and ran <code>winpty leanproject get tutorials</code>. Is this a bug with git? So whenever I need to run <code>leanproject ...</code> I will just write <code>winpty leanproject ...</code> from now on?</p>",
        "id": 279011484,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649965042
    },
    {
        "content": "<p>Thank you everyone for helping me so much!</p>",
        "id": 279011547,
        "sender_full_name": "Raphael Appenzeller",
        "timestamp": 1649965077
    },
    {
        "content": "<p>It's a bad interaction between Git Bash (MinTTY) and your non-MSYS version of Python. Very roughly (and probably very inaccurately), compiling with MSYS2 replaces some Unix functions with their Windows counterparts, including terminal ones. MinTTY does not emulate Unix terminals because it expects programs to use Windows terminal APIs via MSYS. This assumption is broken by your version of Python.</p>",
        "id": 279012019,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649965337
    },
    {
        "content": "<p>And yes, if you want to run any Python program (including <code>leanproject</code>) in Git Bash, you should either use <code>winpty</code> or switch to a different Python build.</p>",
        "id": 279012437,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649965563
    },
    {
        "content": "<p>(thank god we're moving further away from Python dependencies with Lean 4)</p>",
        "id": 279012549,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649965628
    },
    {
        "content": "<p>Introducing C dependencies /o\\ :P</p>",
        "id": 279012575,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1649965647
    },
    {
        "content": "<p>Is this something that we could detect in <code>leanproject</code> (to e.g. output a helpful message)?</p>",
        "id": 279012577,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1649965648
    },
    {
        "content": "<p>If anyone is wondering why extracting the oleans by hand didn't work, it's probably because <code>leanpkg configure</code> needed to be ran on the fresh checkout first</p>",
        "id": 279012639,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649965677
    },
    {
        "content": "<p>Apparently, stdin is not a TTY in the broken configuration. So it seems like something that could be detected, yes.</p>",
        "id": 279013008,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649965859
    },
    {
        "content": "<p>Relatedly, is there any reason why Git Bash is recommended over, say, PowerShell?</p>",
        "id": 279014667,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649966705
    },
    {
        "content": "<p>Does PowerShell come with Windows? Maybe Git bash is recommended because, if I recall correctly, it comes with Git on Windows installations</p>",
        "id": 279015801,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649967372
    },
    {
        "content": "<p>Is this something leanproject even deals with directly, or is detecting it GitPython's problem?</p>",
        "id": 279019069,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649969282
    },
    {
        "content": "<p>The only thing that's specific to the cache step is the use of <code>tqdm</code>, I think. It could be worth disabling it if <code>sys.stderr.isatty()</code> is False.</p>",
        "id": 279209177,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1650182093
    },
    {
        "content": "<p>Can anyone diagnose what is going wrong with my installation based on the screenprint:</p>\n<p><a href=\"/user_uploads/3121/NchGg2D0a2-fzqc2cET0mLLn/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/NchGg2D0a2-fzqc2cET0mLLn/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/NchGg2D0a2-fzqc2cET0mLLn/image.png\"></a></div>",
        "id": 298635675,
        "sender_full_name": "Nathan Temple",
        "timestamp": 1663091146
    },
    {
        "content": "<p>what version of Lean are you hoping to use?</p>",
        "id": 298635813,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1663091199
    },
    {
        "content": "<p>Lean 3</p>",
        "id": 298669115,
        "sender_full_name": "Nathan Temple",
        "timestamp": 1663103989
    },
    {
        "content": "<p>Do you have a Lean 3 project open? (I can't tell because everything is folded up in your file explorer). Do you have the Lean 3 extension installed in VS Code?</p>",
        "id": 298672119,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663105394
    }
]