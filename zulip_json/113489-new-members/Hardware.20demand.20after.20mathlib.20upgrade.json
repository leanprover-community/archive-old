[
    {
        "content": "<p>As Kevin Buzzard <a href=\"#narrow/stream/208328-IMO-grand-challenge/topic/IMO.202020\">showed</a> his proof of <code>pi &lt; sqrt 2 + sqrt 3</code>, I noticed that my mathlib is outdated (not good enough bounds for pi), so I ran</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ leanpkg upgrade\n</code></pre></div>\n\n<p>After that, when I open a lean file in Emacs, lean just uses all the processor cores, and after some time consumes all my laptop 8G memory. Is this an expected behavior? Could it be because I upgraded mathlib but not lean?<br>\nCan I see what it is doing on the background? (compiling mathlib, I guess, but in more detail) Or idealy, could I lower its memory usage? However, Emacs apparently run it with the argument \"-M4096\" without appropriate effect.</p>",
        "id": 211385234,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601158928
    },
    {
        "content": "<p>It's recompiling mathlib. It's better to do it manually rather than letting emacs do it, especially because if emacs does it then olean files are not written. You can run <code>leanpkg build</code> or use leanproject.</p>",
        "id": 211385851,
        "sender_full_name": "Reid Barton",
        "timestamp": 1601160116
    },
    {
        "content": "<p>I think <code>leanpkg upgrade</code> will only give the latest mathlib that works with the current version of Lean though (that is, the one specified in your current <code>leanpkg.toml</code>)</p>",
        "id": 211385897,
        "sender_full_name": "Reid Barton",
        "timestamp": 1601160164
    },
    {
        "content": "<p>I guess you're in a separate project with mathlib as a dependency?</p>",
        "id": 211385902,
        "sender_full_name": "Reid Barton",
        "timestamp": 1601160187
    },
    {
        "content": "<p>Do you use <code>leanproject</code>? It can download precompiled <code>olean</code>s saving you lots of time on recompiling.</p>",
        "id": 211386000,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601160363
    },
    {
        "content": "<p>I am not sure. I have the file <code>leanproject</code> somewhere on my computer, which is however not working at the moment (probably broken with some python upgrades). My problem could also be that I just tried different procedures in history which resulted in some mess in my lean versions. Why is there actually the <code>elan</code>, <code>leanpgk</code>, <code>leanproject</code>?</p>",
        "id": 211386604,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601161399
    },
    {
        "content": "<p>Now, I am running the <code>lean --make src</code>, carefully watching the memory usage. 1.8G so far...</p>",
        "id": 211386661,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601161476
    },
    {
        "content": "<ul>\n<li><code>elan</code> can makes <code>lean</code> command switch between different versions based on the contents of <code>leanpkg.toml</code>;</li>\n<li><code>leanpkg</code> comes with <code>lean</code>;</li>\n<li><code>leanproject</code> is a Python script that should be used instead of <code>leanpkg</code> in most cases. Among other things, it can download precompiled <code>olean</code>s saving you a lot of time.</li>\n</ul>",
        "id": 211386727,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601161578
    },
    {
        "content": "<p>What is your OS? How did you install Python? Does <code>leanproject</code> command work? If not, what's the error message?</p>",
        "id": 211386830,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601161733
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133339\">@Miroslav Olšák</span> once you understand the workflow you never need to compile anything, so it's worth figuring out the recommended setup (which involves never using leanpkg directly)</p>",
        "id": 211387127,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601162232
    },
    {
        "content": "<p>I am on Gentoo, I have Python from the package manager, however I switched from to Python 3.7 as the main python3 recently, and I deleted the packages for other python versions (to not have too many redundant packages on my computer, even my hard drive is not unlimited). However, the leanproject I have on my computer was using Python3.6, so it was now complaining about missing <code>mathlibtools</code>. Now I fixed it, so <code>leanproject</code> is working.</p>",
        "id": 211387169,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601162309
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Hardware.20demand.20after.20mathlib.20upgrade/near/211387127\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"133339\">Miroslav Olšák</span> once you understand the workflow you never need to compile anything</p>\n</blockquote>\n<p>Not exactly: if you change, e.g., <code>src/algebra/group/basic.lean</code>, then you either recompile lots of files, or push it to github and wait while it does it for you.</p>",
        "id": 211387171,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601162321
    },
    {
        "content": "<p>Now, I will try to wait for the compilation I launched. The memory consumption is slowly rising, now it is on 3.5G. The entire src directory, including the compiled olean's so far has 90M. I find such behavior a bit suspicious if it is just compiling the files one by one as it shows. If it eats up all the memory again, I will try to download the precompiled files.</p>",
        "id": 211388090,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601163988
    },
    {
        "content": "<p>While <code>lean --make src</code> only shows one file at a time, using <code>top</code> you'll see that it's running multithreaded. Compiling mathlib single threaded on a 2.3GHz Xeon W currently takes <a href=\"#narrow/stream/113538-travis/topic/build.20time.20bot/near/211387181\">135m</a>.</p>\n<p><code>lean --make</code> can easily consume 16 cores for a substantial period while compiling mathlib.</p>",
        "id": 211388184,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1601164164
    },
    {
        "content": "<p>Is there a way to estimate at which percentage of the compilation it is?</p>",
        "id": 211388312,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601164426
    },
    {
        "content": "<p>No.</p>",
        "id": 211388390,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601164543
    },
    {
        "content": "<p>There could be at least some ways :-)...</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ find . -name *.lean <span class=\"p\">|</span> wc -l\n<span class=\"m\">688</span>\n$ find . -name *.olean <span class=\"p\">|</span> wc -l\n<span class=\"m\">691</span>\n$ find . -name *.olean -ctime <span class=\"m\">0</span> <span class=\"p\">|</span> wc -l\n<span class=\"m\">650</span>  <span class=\"c1\"># this number is raising</span>\n</code></pre></div>\n\n<p>Memory usage 4.4G by the way.</p>",
        "id": 211389050,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601165674
    },
    {
        "content": "<p>So the compilation is finished but the mathlib version is still not up to date enough to contain the pi estimates.</p>",
        "id": 211389688,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601166806
    },
    {
        "content": "<p>So I tried <code>leanproject</code></p>",
        "id": 211389691,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601166817
    },
    {
        "content": "<p>And it actually downloaded newer version (why?)</p>",
        "id": 211389755,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601166961
    },
    {
        "content": "<p>Now, I am a bit confused of what I did, but I will manage to phrase the question in a while.</p>",
        "id": 211389858,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601167099
    },
    {
        "content": "<p>We can only guess because we don't know (a) what is your setup: a <code>mathlib</code> branch or a project depending on <code>mathlib</code>; (b) which version did you have; (c) what command did you run.</p>",
        "id": 211389863,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601167121
    },
    {
        "content": "<p>OK, so what I think I did is that I edited the \".toml\" file to the newest lean, then I thought it would be better to create a new project elsewhere, and after failind to do so, I updated the lean and mathib anyway. This is not weird.</p>",
        "id": 211391423,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170009
    },
    {
        "content": "<p>What I would like to ask, however, is what is the standard way to create a new project -- that is quite confusing to me.</p>",
        "id": 211391431,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170045
    },
    {
        "content": "<p>Let's say, I have an empty directory where I would like to have write some lean files.</p>",
        "id": 211391491,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170137
    },
    {
        "content": "<p>As far as I understand, I need to write the leanpkg.toml file where I specify the lean version.</p>",
        "id": 211391539,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170204
    },
    {
        "content": "<p><code>leanproject new project_name</code></p>",
        "id": 211391556,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1601170234
    },
    {
        "content": "<p>Oh, that was not so difficult :-)</p>",
        "id": 211391630,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170359
    },
    {
        "content": "<p>And is it necessary to be inside a project to experiment with lean and mathlib?</p>",
        "id": 211391642,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170395
    },
    {
        "content": "<p>This will make a leanpkg.toml and a leanpkg.path as well as downloading the latest mathlib + oleans for mathlib.</p>",
        "id": 211391643,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1601170397
    },
    {
        "content": "<p>I have noticed, that is nice.</p>",
        "id": 211391651,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170436
    },
    {
        "content": "<p>Yeah I think being inside a project is the way to go, even if you just want to experiment,</p>",
        "id": 211391652,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1601170439
    },
    {
        "content": "<p>I am looking at <code>leanproject global-install</code> now.</p>",
        "id": 211391727,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170533
    },
    {
        "content": "<p>where did it install the mathlib?</p>",
        "id": 211391786,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170621
    },
    {
        "content": "<p>Personally I don't use that, maybe others do, but all of my lean projects just have their own mathlib.</p>",
        "id": 211391788,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1601170623
    },
    {
        "content": "<p><code>~/.lean</code>, probably...</p>",
        "id": 211391935,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601170863
    },
    {
        "content": "<p>but I have to admit that the instalation is actually way simpler than I remember it :-) when one uses the right commands...</p>",
        "id": 211392052,
        "sender_full_name": "Miroslav Olšák",
        "timestamp": 1601171050
    },
    {
        "content": "<p>I just work on <code>mathlib</code> branches.</p>",
        "id": 211392133,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601171186
    },
    {
        "content": "<p>This way I usually don't forget to PR the results.</p>",
        "id": 211392142,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601171203
    }
]