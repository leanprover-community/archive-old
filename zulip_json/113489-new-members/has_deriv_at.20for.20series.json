[
    {
        "content": "<p>I'm having trouble working with  <code>has_deriv_at</code>  in order to set up hypotheses to use with <code>has_deriv_at.sum</code>. My <code>h1</code> in the code below gives me a strange error message and I can't figure out how to resolve it. (For comparison, I've included <code>h2</code>, which does not result in that same error.) </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">calculus</span><span class=\"bp\">.</span><span class=\"n\">deriv</span>\n\n<span class=\"n\">def</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">):</span><span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"n\">i</span>\n<span class=\"n\">def</span> <span class=\"n\">a&#39;</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">):</span><span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"bp\">=</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"err\">∈</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">has_deriv_at</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a&#39;</span> <span class=\"mi\">2</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">has_deriv_at</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a&#39;</span> <span class=\"mi\">2</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>The error message I get is:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">a</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"mi\">2</span> <span class=\"err\">∈</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">k</span>\n</code></pre></div>",
        "id": 204964824,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1595623614
    },
    {
        "content": "<p>The <code>a</code>-bug? This works.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">):</span><span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"n\">i</span>\n<span class=\"n\">def</span> <span class=\"n\">a&#39;</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">):</span><span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"bp\">=</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"err\">∈</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">has_deriv_at</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a&#39;</span> <span class=\"mi\">2</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">has_deriv_at</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a&#39;</span> <span class=\"mi\">2</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 204974661,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595631377
    },
    {
        "content": "<p>By \"<code>a</code> bug\", do you mean a bug that hits only when you name a variable <code>a</code>? <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 204975530,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595632314
    },
    {
        "content": "<p>I have no idea. It was just a joke, but it does look like a bug and it appears that the name of the variable plays a role.</p>",
        "id": 204975615,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595632403
    },
    {
        "content": "<p>I hope I'm wrong about the bug part.</p>",
        "id": 204975626,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595632431
    },
    {
        "content": "<p>This could be the infamous <code>a</code> bug <a href=\"#narrow/stream/113489-new-members/topic/Is.20this.20a.20bug.3F/near/172013398\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Is.20this.20a.20bug.3F/near/172013398</a></p>",
        "id": 204975807,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1595632607
    },
    {
        "content": "<p>Wow. Thanks for the help! Would never have guessed that this was the problem.</p>",
        "id": 204976328,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1595633279
    }
]