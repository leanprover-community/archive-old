[
    {
        "content": "<p>Hello, I am new to lean, working on proving a simple lemma in lean4.  </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">String.split_empty</span> <span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">):</span> <span class=\"n\">String.split</span> <span class=\"s2\">\"\"</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"s2\">\"\"</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>I tried looking for existing theorems in mathlib, but it seems like there are no existing theorems about String.split?  In any case, I thought it should be easy to prove myself. </p>\n<p>My first thought was to just expand definitions and it will probably become trivial.  I was able to rewrite String.split with \"rw [String.split]\" But this reveals a helper function <code>String.splitAux</code> that will not be rewritten by <code>rw [String.splitAux]</code>  I tried a few other tactics like unfold, simp, and dsimp, but none of them would touch splitAux.</p>\n<p>I did notice that String.splitAux is a \"partial def\" unline String,split <a href=\"https://github.com/leanprover/lean4/blob/0b243f0ca33e1f6a2948c94896b22b2f304ac4c8/src/Init/Data/String/Basic.lean#L188-L196\">https://github.com/leanprover/lean4/blob/0b243f0ca33e1f6a2948c94896b22b2f304ac4c8/src/Init/Data/String/Basic.lean#L188-L196</a> so perhaps that is why it is not playing nice with theorem proving?</p>\n<p>Any advice on what tactics I should use here?  Also, is there a general purpose tactic that will just \"compute\" the expressions?  What about a general purpose hammer tactic like in Coq?</p>",
        "id": 314614313,
        "sender_full_name": "Jeremy Salwen",
        "timestamp": 1670482608
    }
]