[
    {
        "content": "<p>Hello again, I'm trying to solve some interval integrals but I'm very confused about how to go about them. Can someone help me understand which steps to take with the following test code? <br>\nlemma test : ∫ x in 0 .. (2 * real.pi), x = 2 * (real.pi)^2 :=</p>\n<p>The imports I have are import analysis.fourier and import measure_theory.integral.interval_integral.</p>",
        "id": 291718597,
        "sender_full_name": "Julia Ramos Alves",
        "timestamp": 1659451187
    },
    {
        "content": "<p>you want to use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/integral_id\">docs#integral_id</a></p>",
        "id": 291720520,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1659452090
    },
    {
        "content": "<p><code>library_search</code> only finds things that you have included so it could not find that</p>",
        "id": 291720683,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1659452164
    },
    {
        "content": "<p>and as Kevin already said, giving a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> is really helpful. In this case it would be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">measure_theory.integral.interval_integral</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"mi\">0</span> <span class=\"bp\">..</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">real.pi</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">real.pi</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>(you get the code formatting by using four backticks)</p>",
        "id": 291721156,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1659452392
    },
    {
        "content": "<p><code>simp</code> should solve this, right ?</p>",
        "id": 291726183,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1659454504
    },
    {
        "content": "<p>yes</p>",
        "id": 291726889,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1659454816
    },
    {
        "content": "<p>It still does not work, not even with simp, and I also have added <code> import analysis.special_functions.integrals </code><br>\nI don't understand what is wrong.  This is the whole code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">measure_theory.integral.interval_integral</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.integrals</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"mi\">0</span> <span class=\"bp\">..</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">real.pi</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">real.pi</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">integral_id</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 291733005,
        "sender_full_name": "Julia Ramos Alves",
        "timestamp": 1659457376
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"mi\">0</span> <span class=\"bp\">..</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">real.pi</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">real.pi</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">integral_id</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>nothing was wrong, <code>rw</code> just took care of the integral and then you have to solve obvious algebraic equalities</p>",
        "id": 291733601,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1659457623
    },
    {
        "content": "<p>here is a good summary on what <code>ring</code> does: <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/formalising-mathematics-2022/Part_C/tactics/ring.html\">https://www.ma.imperial.ac.uk/~buzzard/xena/formalising-mathematics-2022/Part_C/tactics/ring.html</a></p>",
        "id": 291735082,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1659458284
    }
]