[
    {
        "content": "<p>If I have <code>(1 ≤ n)</code> as <code>ℕ</code> how do I get <code>(1:ℝ)≤ ↑n</code>? Library search didn't help.</p>",
        "id": 183388408,
        "sender_full_name": "YH",
        "timestamp": 1576263483
    },
    {
        "content": "<p><code>norm_cast</code> is supposed to help in such situations</p>",
        "id": 183388495,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1576263532
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">exact_mod_cast</span> <span class=\"n\">h</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 183388561,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576263574
    },
    {
        "content": "<p>Someone asked me this at Xena yesterday and I revised all the various flavours of norm_cast ;-)</p>",
        "id": 183388608,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576263602
    }
]