[
    {
        "content": "<p>I have been using lists so far, but now I need to reason about what happens when merging lists without thinking of duplicates. Since I'm doing program verification, I would like to keep things decidable. I tried using <code>set</code> and <code>item \\in set</code>, but I would need <code>decidable item set</code> at many locations for that. Is there some kind of decidable set? In my case, even finite sets would be sufficient.</p>",
        "id": 218843834,
        "sender_full_name": "Henning Dieterichs",
        "timestamp": 1607094357
    },
    {
        "content": "<p>I often use <code>alist</code> and/or <code>finmap</code> for my verified programming needs</p>",
        "id": 218844854,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1607094835
    },
    {
        "content": "<p>but I think <code>finset</code> is the most exact match for what you are describing</p>",
        "id": 218844921,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1607094851
    },
    {
        "content": "<p>Thanks, finset seems to be my solution. I had to search a little bit to find <a href=\"https://leanprover-community.github.io/mathlib_docs/data/finset/basic.html\">the docs</a> though.</p>",
        "id": 218846875,
        "sender_full_name": "Henning Dieterichs",
        "timestamp": 1607095658
    },
    {
        "content": "<p>Documentation -- we are getting there, but for some of these files which have been around for several years there is certainly still some work to do.</p>",
        "id": 218847042,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607095720
    },
    {
        "content": "<p>All new files which go into mathlib must have proper documentation, but older files escaped this rule.</p>",
        "id": 218847148,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607095763
    }
]