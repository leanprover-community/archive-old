[
    {
        "content": "<p>Consider this code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">tactic</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">apply</span>\n<span class=\"k\">#check</span> <span class=\"n\">split</span>\n<span class=\"k\">#check</span> <span class=\"n\">reflexivity</span>\n<span class=\"k\">#check</span> <span class=\"n\">simp</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>It does not tell me what type <code>simp</code> is, even though it clearly works as a term of type <code>tactic unit</code>, inlining a lambda in the example theorem. What it says is <code>unknown identifier 'simp'</code>. What is going on?</p>",
        "id": 256088194,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633364943
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 256088304,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633364979
    },
    {
        "content": "<p>But it already works so clearly it is in scope in some sense.</p>",
        "id": 256088350,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633364995
    },
    {
        "content": "<p>Oops my bad, its <code>#check tactic.interactive.simp</code> anyways</p>",
        "id": 256088473,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633365023
    },
    {
        "content": "<p>The prefix <code>tactic.interactive</code> is the namespace for all the tactics that can be used in begin end blocks like this</p>",
        "id": 256088645,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633365082
    },
    {
        "content": "<p>So why is it the case that I can put <code>simp</code> into a proof if it is not visible?</p>",
        "id": 256088720,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633365108
    },
    {
        "content": "<p>There must be different scoping rules for proof blocks and the <code>check</code> command?</p>",
        "id": 256088864,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633365138
    },
    {
        "content": "<p>Because begin end blocks aren't literal proof terms, they are tactics which are parsed and interpreted separately, which then produce the actual proof terms</p>",
        "id": 256088921,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633365157
    },
    {
        "content": "<p>So why can tactics be parsed and interpreted while not being in scope?</p>",
        "id": 256089132,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633365226
    },
    {
        "content": "<p>Specifically, interactive tactics I suppose.</p>",
        "id": 256089236,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633365250
    },
    {
        "content": "<p>Because they are all in the tactic.interactive namespace, so the begin end block always looks there</p>",
        "id": 256089291,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633365268
    },
    {
        "content": "<p>So the proof block has its own namespace, I see.</p>",
        "id": 256089340,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633365287
    },
    {
        "content": "<p>How can I find out what namespaces proof blocks look into?</p>",
        "id": 256090198,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633365588
    },
    {
        "content": "<p><code>tactic.interactive</code> for all practical purposes.</p>",
        "id": 256090312,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633365615
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 256090421,
        "sender_full_name": "Ignat Insarov",
        "timestamp": 1633365652
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448347\">Ignat Insarov</span> has marked this topic as resolved.</p>",
        "id": 256090431,
        "sender_full_name": "Notification Bot",
        "timestamp": 1633365655
    },
    {
        "content": "<p>When using the <code>conv</code> tactic, the scope changes to <code>conv.interactive</code></p>",
        "id": 256091865,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633366191
    }
]