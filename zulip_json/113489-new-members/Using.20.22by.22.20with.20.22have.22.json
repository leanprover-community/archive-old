[
    {
        "content": "<p>Hello everyone!</p>\n<p>I have a quick question about the use of \"have\" in a tactic mode. When you use it, you get a new goal (and an hypothesis) added to the panel. But when I use \"by\" right after to prove it, the panel is completely empty. On the other hand if I use \"begin\"-\"end\" or \"{\"-\"}\", the goals are in the panel.<br>\nI made a little trivial example on the online version of Lean: <a href=\"https://leanprover.github.io/live/3.3.0/#code=example%20:%20(1%20=%201)%20:=%0Abegin%0A%20%20have%20:%201=1,%0A%20%20refl,%0A%20%20exact%20this,%0Aend%0A%0Aexample%20:%20(1%20=%201)%20:=%0Abegin%0A%20%20have%20:%201=1,%0A%20%20begin%20refl%20end,%0A%20%20exact%20this,%0Aend%0A%0Aexample%20:%20(1%20=%201)%20:=%0Abegin%0A%20%20have%20:%201=1,%0A%20%20by%20refl,%0A%20%20exact%20this,%0Aend\">https://leanprover.github.io/live/3.3.0/#code=example%20:%20(1%20=%201)%20:=%0Abegin%0A%20%20have%20:%201=1,%0A%20%20refl,%0A%20%20exact%20this,%0Aend%0A%0Aexample%20:%20(1%20=%201)%20:=%0Abegin%0A%20%20have%20:%201=1,%0A%20%20begin%20refl%20end,%0A%20%20exact%20this,%0Aend%0A%0Aexample%20:%20(1%20=%201)%20:=%0Abegin%0A%20%20have%20:%201=1,%0A%20%20by%20refl,%0A%20%20exact%20this,%0Aend</a><br>\nIf I place my cursor at the end of line 3 or line 10, I get two goals that appear in the panel. But if I place my cursor at the end of line 17, nothing is displayed.<br>\nYet according to <a href=\"https://leanprover.github.io/reference/tactics.html\">https://leanprover.github.io/reference/tactics.html</a>, \"by\" is equivalent to a \"begin\"-\"end\" with a single tactic.<br>\nIs there something I missed?</p>\n<p>Thank you in advance!</p>",
        "id": 205476373,
        "sender_full_name": "Auguste Poiroux",
        "timestamp": 1596114794
    },
    {
        "content": "<p>This is a quirk of the Lean server info request. You can use <code>by { }</code> to get back info.</p>",
        "id": 205476780,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1596114971
    },
    {
        "content": "<p>And you shouldn't be using this web editor which uses a very badly outdated Lean, but rather <a href=\"https://leanprover-community.github.io/lean-web-editor/\">https://leanprover-community.github.io/lean-web-editor/</a></p>",
        "id": 205476818,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1596115003
    },
    {
        "content": "<p>Ok thanks!<br>\nSo I tried \"by { }\" on the new editor (<a href=\"https://leanprover-community.github.io/lean-web-editor/#code=--%20Live%20WebAssembly%20version%20of%20Lean%0A%23eval%20let%20v%20%3A%3D%20lean.version%20in%20let%20s%20%3A%3D%20lean.special_version_desc%20in%20string.join%0A%5B%22Lean%20%28version%20%22%2C%20v.1.repr%2C%20%22.%22%2C%20v.2.1.repr%2C%20%22.%22%2C%20v.2.2.repr%2C%20%22%2C%20%22%2C%0Aif%20s%20%E2%89%A0%20%22%22%20then%20s%20%2B%2B%20%22%2C%20%22%20else%20s%2C%20%22commit%20%22%2C%20%28lean.githash.to_list.take%2012%29.as_string%2C%20%22%29%22%5D%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20refl%2C%0A%20%20exact%20this%2C%0Aend%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20begin%20refl%20end%2C%0A%20%20exact%20this%2C%0Aend%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20by%20refl%2C%0A%20%20exact%20this%2C%0Aend%0A%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20by%20%7Brefl%7D%2C%0A%20%20exact%20this%2C%0Aend%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20%7Brefl%7D%2C%0A%20%20exact%20this%2C%0Aend%0A\">https://leanprover-community.github.io/lean-web-editor/#code=--%20Live%20WebAssembly%20version%20of%20Lean%0A%23eval%20let%20v%20%3A%3D%20lean.version%20in%20let%20s%20%3A%3D%20lean.special_version_desc%20in%20string.join%0A%5B%22Lean%20%28version%20%22%2C%20v.1.repr%2C%20%22.%22%2C%20v.2.1.repr%2C%20%22.%22%2C%20v.2.2.repr%2C%20%22%2C%20%22%2C%0Aif%20s%20%E2%89%A0%20%22%22%20then%20s%20%2B%2B%20%22%2C%20%22%20else%20s%2C%20%22commit%20%22%2C%20%28lean.githash.to_list.take%2012%29.as_string%2C%20%22%29%22%5D%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20refl%2C%0A%20%20exact%20this%2C%0Aend%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20begin%20refl%20end%2C%0A%20%20exact%20this%2C%0Aend%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20by%20refl%2C%0A%20%20exact%20this%2C%0Aend%0A%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20by%20%7Brefl%7D%2C%0A%20%20exact%20this%2C%0Aend%0A%0Aexample%20%3A%20%281%20%3D%201%29%20%3A%3D%0Abegin%0A%20%20have%20%3A%201%3D1%2C%0A%20%20%7Brefl%7D%2C%0A%20%20exact%20this%2C%0Aend%0A</a>)<br>\nand I have the same issue. But using only \"{ }\" works...</p>",
        "id": 205477323,
        "sender_full_name": "Auguste Poiroux",
        "timestamp": 1596115235
    },
    {
        "content": "<p>It works for me</p>",
        "id": 205477511,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1596115336
    },
    {
        "content": "<p>Putting the cursor after <code>{</code> in <code> by { refl }</code></p>",
        "id": 205477542,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1596115355
    },
    {
        "content": "<p>Note that if you are already in tactic mode, <code>by</code> doesn't really do anything. See e.g. <a href=\"#narrow/stream/113489-new-members/topic/library_search.20bug.3F/near/204334342\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/library_search.20bug.3F/near/204334342</a></p>",
        "id": 205477590,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1596115385
    },
    {
        "content": "<p>It does something if you put a single tactic, without curly braces: it clearly signals that a goal is meant to be closed here (which is good for maintainence).</p>",
        "id": 205477713,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1596115452
    },
    {
        "content": "<p>Yes, that's true. My habit is to always write <code>have ... :=</code>(instead of using a comma) in which case adding <code>by</code> also changes from term mode to tactic mode.</p>",
        "id": 205477922,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1596115576
    },
    {
        "content": "<p>Oh ok! I meant about getting \"2 goals<br>\n⊢ 1 = 1</p>\n<p>this: 1 = 1<br>\n⊢ 1 = 1\" at the end of the \"have\" line (22 or 30 here).</p>",
        "id": 205477943,
        "sender_full_name": "Auguste Poiroux",
        "timestamp": 1596115591
    },
    {
        "content": "<p>I would chalk this up to what Patrick said. There are some quirks in how the tactic state is saved and returned. </p>\n<p>[If you really want to dig into it, you could (after <a href=\"https://leanprover-community.github.io/extras/tactic_writing.html\">learning about tactic writing</a>) look at <a href=\"https://github.com/leanprover-community/lean/blob/bdddb702a4f7bb1fdf85e19477745372f71f659c/library/init/meta/interactive.lean#L921\">the definition of the tactic <code>have</code></a> and see whether some <code>save_info</code>s should be inserted.]</p>",
        "id": 205478803,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1596116072
    },
    {
        "content": "<p>Ok, thank you!</p>",
        "id": 205479222,
        "sender_full_name": "Auguste Poiroux",
        "timestamp": 1596116301
    }
]