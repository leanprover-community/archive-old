[
    {
        "content": "<p>I feel like there should be an easy way to do this but I can't find it.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"n\">y1</span> <span class=\"n\">y2</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"o\">({</span><span class=\"n\">y1</span><span class=\"o\">,</span> <span class=\"n\">y2</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span> <span class=\"o\">)}</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y1</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 201513729,
        "sender_full_name": "ROCKY KAMEN-RUBIO",
        "timestamp": 1592709787
    },
    {
        "content": "<p>just <code>cases</code> on <code>h</code></p>",
        "id": 201514127,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592710500
    },
    {
        "content": "<p>or just <code>finset.mem_insert</code></p>",
        "id": 201514134,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592710509
    },
    {
        "content": "<p><code>cases h</code> gives me  a <code>cases tactic failed, it is not applicable to the given hypothesis</code> error. </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"n\">y1</span> <span class=\"n\">y2</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"o\">({</span><span class=\"n\">y1</span><span class=\"o\">,</span> <span class=\"n\">y2</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span> <span class=\"o\">)}</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y1</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"c1\">--rw finset.mem_insert at h,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>This works for me though</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"n\">y1</span> <span class=\"n\">y2</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"o\">({</span><span class=\"n\">y1</span><span class=\"o\">,</span> <span class=\"n\">y2</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span> <span class=\"o\">)}</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y1</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">mem_insert</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">mem_singleton</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">right</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 201537166,
        "sender_full_name": "ROCKY KAMEN-RUBIO",
        "timestamp": 1592750561
    },
    {
        "content": "<p>well I'm glad you found a way</p>",
        "id": 201537706,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592751490
    },
    {
        "content": "<p><code>fin_cases</code> might help</p>",
        "id": 201537811,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592751656
    },
    {
        "content": "<p>oh the statement doesn't even compile because you need <code>decidable_eq</code> for the set notation</p>",
        "id": 201537947,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592751866
    },
    {
        "content": "<p>but it still doesn't work</p>",
        "id": 201537951,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592751896
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"n\">y1</span> <span class=\"n\">y2</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"o\">({</span><span class=\"n\">y1</span><span class=\"o\">,</span> <span class=\"n\">y2</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span> <span class=\"o\">)}</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y1</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 201537952,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592751898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> why doesn't this work?</p>",
        "id": 201537956,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592751903
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">cases</span> <span class=\"n\">tactic</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">applicable</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"kn\">hypothesis</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"err\">?</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">y</span> <span class=\"n\">y1</span> <span class=\"n\">y2</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"o\">{</span><span class=\"n\">y1</span><span class=\"o\">,</span> <span class=\"n\">y2</span><span class=\"o\">}</span>\n<span class=\"err\">⊢</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y1</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y2</span>\n</code></pre></div>",
        "id": 201537962,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592751909
    },
    {
        "content": "<p>a bug, I guess! :-) I'm not immediately sure. I can try to look tomorrow.</p>",
        "id": 201537981,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1592751958
    },
    {
        "content": "<p>I dunno about <code>fin_cases</code> but this should just be <code>simpa using h</code>, right?</p>",
        "id": 201538040,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592752005
    }
]