[
    {
        "content": "<p>Hi  ! I'm trying lean for the  first time and I'm a bit lost in the std. So I'd like to use <code>#find</code> which requires a <code>import tactic.find</code> if I am correct.<br>\nI'm using vscode and I set  up the lean path in vscode settings. I  can confirm this works. But the import raises <code>file 'tactic/find' not found in the LEAN_PATH</code>. I'm not sure where to set this path, and to which destination.</p>",
        "id": 177509885,
        "sender_full_name": "Vincent Siles",
        "timestamp": 1570447407
    },
    {
        "content": "<p>The find tactic is part of mathlib, did you also set up that?</p>",
        "id": 177510101,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1570447665
    },
    {
        "content": "<p>For the record: you might also be interested in <code>library_search</code>. It is complementary to <code>#find</code>.</p>",
        "id": 177510195,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570447754
    },
    {
        "content": "<p>No, I did not. I was just trying  to  search for some definitions/lemmas in general (like the <code>SearchAbout</code> or <code>SearchPattern</code> in Coq).</p>",
        "id": 177510202,
        "sender_full_name": "Vincent Siles",
        "timestamp": 1570447763
    },
    {
        "content": "<p>Aah, you'll need mathlib for both of them</p>",
        "id": 177510215,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570447788
    },
    {
        "content": "<p>It's a bit unfortunate... but you need mathlib for almost anything beyond the bare minimum</p>",
        "id": 177510293,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570447834
    },
    {
        "content": "<p>ok I'll look into how to install mathlib then. Thank you</p>",
        "id": 177510304,
        "sender_full_name": "Vincent Siles",
        "timestamp": 1570447850
    },
    {
        "content": "<p>And nowadays it's not so hard to set up, with pre-compiled binaries etc</p>",
        "id": 177510309,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570447854
    },
    {
        "content": "<p>There are good instructions on Github</p>",
        "id": 177510323,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570447867
    },
    {
        "content": "<p><code>#find</code> and <code>library_search</code> seem to only search for lemmas. Can I use them to search for definitions too or is there another way ?</p>",
        "id": 177511231,
        "sender_full_name": "Vincent Siles",
        "timestamp": 1570448646
    },
    {
        "content": "<p>I think <code>library_search</code> will also find defs</p>",
        "id": 177511512,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570448912
    },
    {
        "content": "<p>There's no good reason to restrict <code>#find</code> to theorems, is there? It's a trivial change to let it match defs too.</p>",
        "id": 177511648,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1570449045
    },
    {
        "content": "<p><code>#find bool -&gt; _ -&gt; _</code> doesn't show the and or or function. Maybe I'm not using it correctly</p>",
        "id": 177511746,
        "sender_full_name": "Vincent Siles",
        "timestamp": 1570449148
    },
    {
        "content": "<p>No, you're right, it doesn't do that right now. It only looks for theorems. But I don't know why it's implemented with that restriction.</p>",
        "id": 177511868,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1570449265
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/1512\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1512\">https://github.com/leanprover-community/mathlib/pull/1512</a></p>",
        "id": 177512988,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1570450334
    },
    {
        "content": "<p><code>library_search</code> will find defs, but often it's not useful, but it finds \"the boring ones\" rather than the ones you want. A student here <span class=\"user-mention\" data-user-id=\"209436\">@Lucas Allen</span> has some work he'll PR soon that shows a list of applicable lemmas/defs. I think he's busy with non-Lean stuff right now.</p>",
        "id": 177574807,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1570495770
    },
    {
        "content": "<p>good to know, thank you</p>",
        "id": 177588685,
        "sender_full_name": "Vincent Siles",
        "timestamp": 1570517846
    }
]