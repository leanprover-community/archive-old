[
    {
        "content": "<p>Hi. I want to turn my goals into hypotheses so that when I prove them I could use them later - im doing induction.<br>\nI could do a have with the goal contents but actually I want to write a repeat loop.</p>",
        "id": 209591932,
        "sender_full_name": "Ben Nale",
        "timestamp": 1599707475
    },
    {
        "content": "<p>Hi Ben, welcome! Could you please give some example code (format it with <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>)?</p>",
        "id": 209592205,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1599707841
    },
    {
        "content": "<p>It's not so clear to me what you want exactly. If you use <code>induction n with n IH,</code> as tactic, then it will automatically put an induction hypothesis in your goal state.</p>",
        "id": 209592219,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1599707874
    },
    {
        "content": "<p>Im typing my code :)</p>",
        "id": 209592554,
        "sender_full_name": "Ben Nale",
        "timestamp": 1599708355
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">com</span><span class=\"o\">:</span>  <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span><span class=\"o\">:=</span> <span class=\"mi\">3</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">com</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">com</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">com_7</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">):</span><span class=\"n\">com</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"o\">)</span><span class=\"err\">%</span><span class=\"mi\">7</span> <span class=\"bp\">=</span><span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">com</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">%</span><span class=\"mi\">7</span> <span class=\"bp\">=</span><span class=\"mi\">3</span> <span class=\"bp\">∧</span> <span class=\"n\">com</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"err\">%</span><span class=\"mi\">7</span> <span class=\"bp\">=</span><span class=\"mi\">5</span> <span class=\"bp\">∧</span> <span class=\"n\">com</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"err\">%</span><span class=\"mi\">7</span><span class=\"bp\">=</span><span class=\"mi\">4</span> <span class=\"bp\">∧</span> <span class=\"n\">com</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"err\">%</span><span class=\"mi\">7</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">com</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"err\">%</span><span class=\"mi\">7</span><span class=\"bp\">=</span><span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">induction</span> <span class=\"n\">k</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">omega</span><span class=\"o\">,</span>\n<span class=\"n\">rcases</span> <span class=\"n\">hd</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span> <span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h2</span><span class=\"o\">,</span><span class=\"n\">h3</span><span class=\"o\">,</span><span class=\"n\">h4</span><span class=\"o\">,</span><span class=\"n\">h5</span><span class=\"o\">,</span><span class=\"n\">h6</span> <span class=\"bp\">⟩</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 209592671,
        "sender_full_name": "Ben Nale",
        "timestamp": 1599708521
    },
    {
        "content": "<p>the proof i am trying to implement is that com mod 7 is basically<br>\n1 3 5 4 0 1 and the pattern repeats</p>",
        "id": 209592773,
        "sender_full_name": "Ben Nale",
        "timestamp": 1599708698
    },
    {
        "content": "<p>Actually, I've found a way to do it with 2step induction. Thanks for your help :)</p>",
        "id": 209593379,
        "sender_full_name": "Ben Nale",
        "timestamp": 1599709490
    }
]