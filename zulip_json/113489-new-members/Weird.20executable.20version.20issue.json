[
    {
        "content": "<p>When I run lean --version from a terminal window within VS Code <strong>with a full path to the executable</strong>, I get one version.</p>\n<p>$ /Users/sullivan/.elan/bin/lean --version<br>\nLean (version 3.4.2, nightly-2018-08-23, commit b13ac127fd83, Release)</p>\n<p>When I run lean --version from an OSX terminal window <strong>with the same full path to the executable</strong>, I get a different version.</p>\n<p>$ /Users/sullivan/.elan/bin/lean --version<br>\nLean (version 3.4.2, commit cbd2b6686ddb, Release)</p>\n<p>What is going on here?</p>\n<p>The version difference matters to me because it appears that the newest release version (86ddb) breaks the possibility to overload =&gt;, an issue we're still investigating. Be that as it may, something strange and unexpected is happening. Or I'm crazy or just missing the obvious. Probably the latter. Can anyone enlighten me? I did by the way just erase .elan and download and install it again using option 1) proceed to install (default).</p>",
        "id": 178668593,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571673102
    },
    {
        "content": "<p>Is the <code>lean</code> you're running an executable or a link?</p>",
        "id": 178668752,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571673184
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 178668792,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571673204
    },
    {
        "content": "<p>Thanks, Kevin. It's the executable downloaded by the elan installer.</p>\n<p>$ ls -l /Users/sullivan/.elan/bin/lean<br>\n-rwxr-xr-x  4 sullivan  staff  5379104 Oct 21 09:26 /Users/sullivan/.elan/bin/lean</p>",
        "id": 178669181,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571673414
    },
    {
        "content": "<p>Under elan, <code>lean</code> will check your <code>leanpkg.toml</code> file and invoke the <code>lean</code> binary of the toolchain corresponding to the specified version.</p>",
        "id": 178669215,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571673442
    },
    {
        "content": "<p>Oh that's got to be it. Let me check.</p>",
        "id": 178669249,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571673466
    },
    {
        "content": "<p><code>elan show</code> is a good place to start</p>",
        "id": 178669255,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571673469
    },
    {
        "content": "<p>elan show<br>\ninstalled toolchains</p>\n<hr>\n<p>stable (default)<br>\nnightly-2018-08-23</p>\n<p>active toolchain</p>\n<hr>\n<p>stable (default)<br>\nLean (version 3.4.2, commit cbd2b6686ddb, Release)</p>",
        "id": 178669325,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571673497
    },
    {
        "content": "<p>So the issue is simply that lean is being run in a different directory on the two occasions?</p>",
        "id": 178669398,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571673562
    },
    {
        "content": "<p>Yep.</p>\n<p>[package]<br>\nname = \"2102dev\"<br>\nversion = \"0.1\"<br>\nlean_version = \"nightly-2018-08-23\"<br>\npath = \"src\"</p>\n<p>[dependencies]<br>\nmathlib = {git = \"<a href=\"https://github.com/leanprover/mathlib\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib\">https://github.com/leanprover/mathlib</a>\", rev = \"3ddfc239ddd757aa60cfa5a6f106bc68c5b8e1fc\"}</p>",
        "id": 178669403,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571673565
    },
    {
        "content": "<p>Thank you. It was of course \"the obvious\".</p>",
        "id": 178669497,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571673603
    },
    {
        "content": "<p>I tried running <code>lean</code> in an old clone of mathlib and lo and behold, elan awoke!</p>\n<div class=\"codehilite\"><pre><span></span>$ cd mathlib-kbuzzard/\nbuzzard@brian:~/lean-projects/mathlib-kbuzzard$ lean --version\ninfo: downloading component &#39;lean&#39;\ninfo: installing component &#39;lean&#39;\nLean (version 3.4.1, commit 17fe3decaf8a, Release)\nbuzzard@brian:~/lean-projects/mathlib-kbuzzard$\n</pre></div>",
        "id": 178669609,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571673666
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>So the issue is simply that lean is being run in a different directory on the two occasions?</p>\n</blockquote>\n</blockquote>\n<p>Yes, but this happens even when the same complete path to one executable is given. The \"new\" executable must be (doing the equivalent of) checking the toml file and redirecting execution to the old version (presumably at a different path somewhere in the 2018 nightly toolchain). This is what confused me.</p>",
        "id": 178669865,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571673826
    },
    {
        "content": "<p>I know that all the \"actual\" binaries are in <code>.elan/toolchains</code> (at least for me)</p>",
        "id": 178670112,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571673963
    },
    {
        "content": "<p>Yes, I think that <code>.elan/bin/lean</code> is only triaging to the correct version of lean.</p>",
        "id": 178670249,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674064
    },
    {
        "content": "<p>Ok. While I have you on the line ... all of the preceding was precipitated by an \"unexpected token\" error when processing a file that was working under the 2018 nightly version but that is no longer working under the stable 3.4.2 version. I checked the release notes, and there is no indication that anything should have changed. The problem occurs when I try to do this:</p>\n<p>notation e1 ⇒ e2 := pImpl e1 e2</p>\n<p>I now get \"unexpected token\" at the  ⇒ symbol. Any ideas? That character by the way is \\r= or \\=&gt;.</p>",
        "id": 178670405,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571674155
    },
    {
        "content": "<p>Is that arrow defined to mean something in Lean now?</p>",
        "id": 178670794,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571674396
    },
    {
        "content": "<p>It used to be some relator thing</p>",
        "id": 178670812,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674412
    },
    {
        "content": "<p>so maybe when the relator change happened, the arrow was removed from the list of valid unicode tokens</p>",
        "id": 178670896,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571674447
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124175\">@Kevin Sullivan</span> the commit you are looking for is <a href=\"https://github.com/leanprover/lean/commit/95fa4cfb0a8774570d67bb231c1ab088a94e12bb\" target=\"_blank\" title=\"https://github.com/leanprover/lean/commit/95fa4cfb0a8774570d67bb231c1ab088a94e12bb\">https://github.com/leanprover/lean/commit/95fa4cfb0a8774570d67bb231c1ab088a94e12bb</a></p>",
        "id": 178670927,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674471
    },
    {
        "content": "<p>Especially the deletion of <code>relator.lean</code>.</p>",
        "id": 178670949,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674485
    },
    {
        "content": "<p>You now need to use <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/logic/relator.lean\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/logic/relator.lean\">https://github.com/leanprover-community/mathlib/blob/master/src/logic/relator.lean</a></p>",
        "id": 178671045,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674552
    },
    {
        "content": "<p>(note this is now in mathlib)</p>",
        "id": 178671073,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674562
    },
    {
        "content": "<p>All this understood provided I correctly recognized the arrow you were using.</p>",
        "id": 178671124,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674585
    },
    {
        "content": "<p>Or maybe you want to use that symbol for something else than the relator thing?</p>",
        "id": 178671208,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674634
    },
    {
        "content": "<p>That must be it. Didn't see change in release notes. Maybe change in library.</p>",
        "id": 178673611,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571676114
    },
    {
        "content": "<p>#print ⇒  </p>\n<p>This also gives an unexpected token error at  ⇒  </p>\n<p>Is #print not the right way to see the definition of a notation?</p>",
        "id": 178673612,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1571676114
    }
]