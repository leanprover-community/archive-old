[
    {
        "content": "<p>I find it helpful when learning a new tool, to re-write already existing material, to go through and see how each element interacts, etc. Is there a way to disable lean's library to mitigate name collisions, and/or reliance on already existing code, or does lean become essentially unusable in such a state?</p>",
        "id": 224137635,
        "sender_full_name": "capli",
        "timestamp": 1611719889
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384455\">@capli</span> depends on how far you want to go. You can certainly avoid using mathlib. If you also want to avoid the core library, you should start your files with <code>prelude</code>. And yes, lean will not be very usable. But that seems to be what you want (-;</p>",
        "id": 224138295,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611720819
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Well, depending on the meaning of \"useable\", yes. hahaha<br>\nThank you for the tip!</p>",
        "id": 224138371,
        "sender_full_name": "capli",
        "timestamp": 1611720920
    },
    {
        "content": "<p>I've done a fair bit of this sort of thing when learning and teaching Lean. For example I <a href=\"https://github.com/ImperialCollegeLondon/complex-number-game\">rewrote <code>data.complex.basic</code></a> and here there were no issues -- I just didn't import <code>data.complex.basic</code>. But some students and I <a href=\"https://github.com/ImperialCollegeLondon/group-theory-game\">rewrote basic group theory</a> whilst having group theory already imported and here it was more of a pain. We <a href=\"https://github.com/ImperialCollegeLondon/group-theory-game/blob/152ec4a92ad67b6174a3d240c63fa56a6df6017e/src/group/basic.lean#L17\">spend our entire time in the <code>mygroup</code> namespace</a> and even then <a href=\"https://github.com/ImperialCollegeLondon/group-theory-game/blob/152ec4a92ad67b6174a3d240c63fa56a6df6017e/src/subgroup/cyclic.lean#L318\">things don't always go smoothly</a>, because there are lemmas about groups which live in the root namespace so one inevitably gets collisions; we just made do with writing <code>mygroup.blah</code> now and again, and having <code>mygroup.group</code> open.</p>",
        "id": 224154237,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611737877
    }
]