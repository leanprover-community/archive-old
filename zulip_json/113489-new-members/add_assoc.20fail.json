[
    {
        "content": "<p>In the following code</p>\n<p>example : (a + b) * (a + b) = a * a + 2 * (a * b) + b * b :=<br>\ncalc<br>\n  (a + b) * (a + b)<br>\n      = (a + b) * a + (a + b) * b : by rw mul_add<br>\n  ... = (a * a + b * a) + (a + b) * b : by rw add_mul<br>\n  ... = a * a + b * a + (a * b + b * b) : by rw add_mul<br>\n  ... = a * a + (b * a + (a * b + b * b)) : by add_assoc<br>\n  ... =</p>\n<p>lean does not accept add_assoc as a workable tactic in the last line. But I am using x + y + z = x + (y + z) with x=aa, y=ba, and z=ab+bb</p>",
        "id": 265527253,
        "sender_full_name": "Hank",
        "timestamp": 1639983950
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_assoc\">docs#add_assoc</a> isn't a tactic, it's a lemma, so you need to do <code>by rw add_assoc</code></p>",
        "id": 265527496,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1639984242
    },
    {
        "content": "<p>Also <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> will make it easier for people to try your code out</p>",
        "id": 265527514,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1639984269
    },
    {
        "content": "<p>thank you! that works</p>",
        "id": 265527731,
        "sender_full_name": "Hank",
        "timestamp": 1639984516
    }
]