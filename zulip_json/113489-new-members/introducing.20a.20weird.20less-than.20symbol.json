[
    {
        "content": "<p>I need two kinds of less-than,  so I have to introduce a new symbol for one of them,  and I tried to make it \\le\\H where \\H produces H in mathbb.     So I made a typographical error that Reid Barton pointed out,  and would delete this <br>\npost except I was told not to delete posts as they might still be useful.  Thanks Reid.    The example below is <br>\nfixed now.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">reserve</span> <span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"bp\">≤</span><span class=\"n\">ℍ</span> <span class=\"bp\">`</span><span class=\"o\">:</span> <span class=\"mi\">49</span>\n<span class=\"kd\">reserve</span> <span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"bp\">&lt;</span><span class=\"n\">ℍ</span> <span class=\"bp\">`</span><span class=\"o\">:</span> <span class=\"mi\">49</span>\n\n<span class=\"kd\">class</span>  <span class=\"n\">Model</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">𝔽</span><span class=\"o\">:</span><span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"bp\">𝕊</span><span class=\"o\">:</span><span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span>  <span class=\"c1\">--successor</span>\n<span class=\"o\">(</span><span class=\"n\">zero</span><span class=\"o\">:</span><span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mem</span><span class=\"o\">:</span><span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">addition</span><span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">le</span><span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">leH</span><span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">lessthan</span><span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">lessthanH</span><span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"kd\">infix</span>  <span class=\"bp\">∈</span> <span class=\"o\">:=</span>  <span class=\"n\">mem</span> <span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"kd\">infix</span>  <span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"n\">addition</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">additive_identity</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"bp\">𝔽</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">zero</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">leH_definition</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">leH</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">lessthanH_definition</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">lessthanH</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"bp\">𝕊</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Model</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">X</span> <span class=\"n\">R</span> <span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Model</span>\n<span class=\"kd\">infix</span> <span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"n\">addition</span>\n<span class=\"kd\">infix</span>  <span class=\"bp\">≤</span><span class=\"n\">ℍ</span> <span class=\"o\">:=</span> <span class=\"n\">leH</span>\n<span class=\"kd\">infix</span>  <span class=\"bp\">&lt;</span><span class=\"n\">ℍ</span> <span class=\"o\">:=</span> <span class=\"n\">lessthanH</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">test3</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">zero</span> <span class=\"bp\">≤</span><span class=\"n\">ℍ</span> <span class=\"n\">x</span><span class=\"o\">:=</span>\n  <span class=\"kd\">begin</span>\n\n  <span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 221327819,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1609462613
    },
    {
        "content": "<p>I think you wanted to define <code>infix  &lt;ℍ := lessthanH</code></p>",
        "id": 221327902,
        "sender_full_name": "Reid Barton",
        "timestamp": 1609462749
    }
]