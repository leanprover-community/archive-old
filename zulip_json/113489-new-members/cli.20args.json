[
    {
        "content": "<p>can you take in command line arguments in lean?</p>",
        "id": 266948725,
        "sender_full_name": "crab",
        "timestamp": 1641396421
    },
    {
        "content": "<p>In lean 4, you can do, e.g., the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">for</span> <span class=\"n\">l</span> <span class=\"k\">in</span> <span class=\"n\">L</span> <span class=\"k\">do</span>\n  <span class=\"n\">IO.println</span> <span class=\"n\">l</span>\n</code></pre></div>\n<p>and the command line arguments will be passed in as the list of strings to the <code>main</code> function. I don't know how to do this in lean3.</p>",
        "id": 266949992,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1641396955
    },
    {
        "content": "<p>In fact, I realized now I don't even know how to compile lean3 code into a binary...</p>",
        "id": 266950109,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1641396992
    },
    {
        "content": "<p><code>io.cmdline_args</code> it looks like</p>",
        "id": 266950131,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641396999
    },
    {
        "content": "<p>e.g. <a href=\"https://github.com/leanprover-community/lean/blob/65ad4ffdb3abac75be748554e3cbe990fb1c6500/tests/lean/run/socket_client.lean#L16-L21\">https://github.com/leanprover-community/lean/blob/65ad4ffdb3abac75be748554e3cbe990fb1c6500/tests/lean/run/socket_client.lean#L16-L21</a> (which I just found by github serach)</p>",
        "id": 266950155,
        "sender_full_name": "Julian Berman",
        "timestamp": 1641397015
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/cli.20args/near/266949992\">said</a>:</p>\n<blockquote>\n<p>In lean 4, you can do, e.g., the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">for</span> <span class=\"n\">l</span> <span class=\"k\">in</span> <span class=\"n\">L</span> <span class=\"k\">do</span>\n  <span class=\"n\">IO.println</span> <span class=\"n\">l</span>\n</code></pre></div>\n<p>and the command line arguments will be passed in as the list of strings to the <code>main</code> function. I don't know how to do this in lean3.</p>\n</blockquote>\n<p>thank you</p>",
        "id": 266960778,
        "sender_full_name": "crab",
        "timestamp": 1641402043
    }
]