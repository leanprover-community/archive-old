[
    {
        "content": "<p>Hi, I'm Jia Ming. This sounds a little silly but I have no clue how to deduce <code>0&lt;↑n</code> from <code>0&lt;(n : ℕ)</code> :( I'm stuck on the Real Numbers Game proving that the rationals are dense in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span>. I've almost got it but what seems like the simplest most obvious thing ever stopped me. It would be super helpful to know where I can learn exactly how Lean handles the conversion of numbers between types.</p>",
        "id": 203760456,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1594668950
    },
    {
        "content": "<p>You shouldn't be playing that level, it's not ready :-)</p>",
        "id": 203760526,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594668974
    },
    {
        "content": "<p>But maybe <code>norm_cast</code> will help.</p>",
        "id": 203760547,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594668990
    },
    {
        "content": "<p>Ohhh no wonder, I was wondering why a lot of things seems to be missing</p>",
        "id": 203760593,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1594669024
    },
    {
        "content": "<p>Thanks! I'll try that</p>",
        "id": 203760611,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1594669032
    },
    {
        "content": "<p>The first 7 levels are ready.</p>",
        "id": 203760628,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594669042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316806\">@Jia Ming Lim</span> </p>\n<blockquote>\n<p>It would be super helpful to know where I can learn exactly how Lean handles the conversion of numbers between types.</p>\n</blockquote>\n<p>This is exactly what will be one of the topics in the workshop tomorrow!</p>",
        "id": 203760662,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594669066
    },
    {
        "content": "<p>and \"max\" is ready: <a href=\"http://wwwf.imperial.ac.uk/~buzzard/xena/max_minigame/\">http://wwwf.imperial.ac.uk/~buzzard/xena/max_minigame/</a></p>",
        "id": 203760671,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594669071
    },
    {
        "content": "<p>Omg yeah I played that, so super fun</p>",
        "id": 203760803,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1594669120
    },
    {
        "content": "<p>I'm a bit busy this week, but we'll have an <code>abs</code> minigame soon :-) We'll then get on to limits.</p>",
        "id": 203760953,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594669199
    },
    {
        "content": "<p>all these new games will kill my research in these next weeks :D</p>",
        "id": 203761118,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1594669282
    },
    {
        "content": "<p>YES!!!!! THANK YOU ALL, I DID IT HAHAHAH my proof is super messy but it workssss &lt;3</p>",
        "id": 203768017,
        "sender_full_name": "Jia Ming Lim",
        "timestamp": 1594672767
    }
]