[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">prelude</span>\n<span class=\"kn\">inductive</span> <span class=\"n\">nat</span>\n<span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">nat</span>\n<span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"n\">nat</span>\n<span class=\"kn\">definition</span> <span class=\"n\">add</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"o\">:=</span>\n<span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">k</span> <span class=\"n\">nk</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">nk</span><span class=\"o\">)</span> <span class=\"n\">m</span>\n</code></pre></div>",
        "id": 203368922,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1594288805
    },
    {
        "content": "<p>I get a warning</p>",
        "id": 203368938,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1594288823
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">generate</span> <span class=\"n\">bytecode</span> <span class=\"n\">for</span> <span class=\"err\">&#39;</span><span class=\"n\">add&#39;</span>\n<span class=\"n\">unknown</span> <span class=\"n\">declaration</span> <span class=\"err\">&#39;</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">cases_on&#39;</span>\n</code></pre></div>",
        "id": 203368948,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1594288833
    },
    {
        "content": "<p>What's going on?</p>",
        "id": 203368957,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1594288846
    },
    {
        "content": "<p>If <code>nat.cases_on</code> is not defined automatically, then why it's needed?</p>",
        "id": 203369139,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1594289032
    },
    {
        "content": "<p><code>nat</code> has special support in the interpreter (to use GMP instead of the unary representation). So I'm not entirely surprised that replacing it causes interpreter-related issues. I don't know how to explain this specifically, though; maybe look at how <code>nat</code> is set up in the core library?</p>",
        "id": 203377046,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594296142
    },
    {
        "content": "<p>Changing <code>nat</code> to <code>mat</code> gives the same error</p>",
        "id": 203394804,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594306064
    }
]