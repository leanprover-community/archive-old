[
    {
        "content": "<p>I'm wondering why using #reduce to evaluate even one-character strings leads to a stack overflow in the default configuration of Lean? To replicate, try this.</p>\n<div class=\"codehilite\"><pre><span></span>#reduce &quot;-&quot;\n</pre></div>",
        "id": 189027954,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1582643773
    },
    {
        "content": "<p>A string is a list of chars. A char is a pair of a nat <code>n</code> and a proof of <code>n &lt; 55296 ∨ 57343 &lt; n ∧ n &lt; 1114112</code>. The normal form of that proof is very very large.</p>",
        "id": 189028491,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582644118
    },
    {
        "content": "<p>Already the numbers that Rob posted are huge when you unfold them completely:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"mi\">15153</span> <span class=\"c1\">-- works</span>\n<span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"mi\">15154</span> <span class=\"c1\">-- stack overflow</span>\n</pre></div>",
        "id": 189029140,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1582644488
    },
    {
        "content": "<p>I see. Ok. For pedagogy, this is inconvenient, as reduce doesn't work to show terms involving strings and #eval prints them in kernel rather than source format. But it is what it is, and I understand there's no workaround. Thank you, gentlemen.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113489-new-members/topic/deep.20recursion.20error.20reducing.20strings/near/189029140\" title=\"#narrow/stream/113489-new-members/topic/deep.20recursion.20error.20reducing.20strings/near/189029140\">said</a>:</p>\n<blockquote>\n<p>Already the numbers that Rob posted are huge when you unfold them completely:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"mi\">15153</span> <span class=\"c1\">-- works</span>\n<span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"mi\">15154</span> <span class=\"c1\">-- stack overflow</span>\n</pre></div>\n\n\n</blockquote>",
        "id": 189034847,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1582648067
    },
    {
        "content": "<blockquote>\n<p>#eval prints them in kernel rather than source format</p>\n</blockquote>\n<p>Not sure exactly what you mean by this, but do you want <code>#eval repr \"-\"</code>? (Same on that example, but compare with something with new lines or whatever.)</p>",
        "id": 189035143,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582648248
    }
]