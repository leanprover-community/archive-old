[
    {
        "content": "<p>what does the <code>[simp]</code> mean in this part from list.lean?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cons_ne_nil</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"o\">::</span><span class=\"n\">l</span> <span class=\"bp\">≠</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">contradiction</span>\n</code></pre></div>\n<p>will this code work without it?</p>",
        "id": 243104178,
        "sender_full_name": "Holly Liu",
        "timestamp": 1623977026
    },
    {
        "content": "<p>Where do you see this? <a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.cons_ne_nil/src\">src#list.cons_ne_nil</a></p>",
        "id": 243104451,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623977232
    },
    {
        "content": "<p>oh i was looking at <a href=\"https://github.com/leanprover/leanprover.github.io/blob/master/ijcar16/examples/list.lean\">https://github.com/leanprover/leanprover.github.io/blob/master/ijcar16/examples/list.lean</a> which is not the src folder. oops.</p>",
        "id": 243104581,
        "sender_full_name": "Holly Liu",
        "timestamp": 1623977339
    },
    {
        "content": "<p>thanks</p>",
        "id": 243104602,
        "sender_full_name": "Holly Liu",
        "timestamp": 1623977357
    },
    {
        "content": "<p><code>theorem cons_ne_nil (a : α) (l : list α) : a::l ≠ [].</code> how does the period conclude it when there's no proof?</p>",
        "id": 243104754,
        "sender_full_name": "Holly Liu",
        "timestamp": 1623977457
    },
    {
        "content": "<p>This works because it's an impossible pattern</p>",
        "id": 243104934,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623977608
    },
    {
        "content": "<p>E.g.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">foo</span>\n<span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n<span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">foo.a</span> <span class=\"bp\">≠</span> <span class=\"n\">foo.b.</span>\n</code></pre></div>",
        "id": 243105029,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623977673
    }
]