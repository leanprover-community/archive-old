[
    {
        "content": "<p>Actually I think we should avoid the \"failed\" error message entirely. It's really a placeholder for actual error reporting</p>",
        "id": 201802989,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592960964
    },
    {
        "content": "<p>In the case of <code>library_search</code>, it would be good if the failure message gave a lot more information, like a tutorial. Keep in mind that newbies are a major part of the user base for <code>library_search</code></p>",
        "id": 201803096,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592961058
    },
    {
        "content": "<p>does the information you want to display depend on what the failed goal was?</p>",
        "id": 201803415,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592961470
    },
    {
        "content": "<p>a basic troubleshooting guide would be good</p>\n<blockquote>\n<p><code>library_search</code> failed. If you aren't sure what to do next, you can also try <code>library_search!</code>, <code>suggest</code>, or <code>hint</code>. Possible reasons why library_search failed:</p>\n<ul>\n<li>\n<p>The goal should be provable by direct application of a lemma from the library. If you haven't already, try stating the theorem you want in its own lemma.</p>\n</li>\n<li>\n<p>Sometimes the library has one version of a lemma but not a very similar version obtained by permuting arguments. Try replacing <code>a + b</code> with <code>b + a</code>, or <code>a - b &lt; c</code> with <code>a &lt; b + c</code>, to see if maybe the lemma exists but isn't stated quite the way you would like.</p>\n</li>\n<li>\n<p>Make sure that you have all the side conditions for your theorem to be true. For example you won't find <code>a - b + b = a</code> in the library because it's false! Search for <code>b &lt;= a -&gt; a - b + b = a</code> instead.</p>\n</li>\n<li>\n<p>If a definition you made is in the lemma, you won't find any theorems about it in the library. Try unfolding the definition using <code>unfold my_definition</code></p>\n</li>\n<li>\n<p>If all else fails, ask on <a href=\"\">https://leanprover.zulipchat.com/</a>, and maybe we can improve the library and/or <code>library_search</code> for next time.</p>\n</li>\n</ul>\n</blockquote>",
        "id": 201803478,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592961548
    },
    {
        "content": "<p>This sounds great. I'm not sure what \"The goal should be provable by direct application of a lemma from the library.\" means though. Is this intended to remind the reader what the scope of <code>library_search</code> is?</p>",
        "id": 201805470,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1592964420
    },
    {
        "content": "<p>Yes, does \"one-step proof\" make more sense?</p>",
        "id": 201807207,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592967069
    },
    {
        "content": "<p>That is, it's not a general decision procedure, it's not <code>simp</code></p>",
        "id": 201807215,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592967091
    },
    {
        "content": "<p>it should be thought of as a search function for the library (which hopefully the name already makes clear)</p>",
        "id": 201807230,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592967120
    },
    {
        "content": "<p>but I can imagine someone confusing it for <code>sledgehammer</code> and needs to be told otherwise</p>",
        "id": 201807285,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592967156
    }
]