[
    {
        "content": "<p>Hello! Another newbie question here.</p>\n<p>I wrote a proof script (using tactics). Can I make Lean automatically generate the proof term from it and print it for me?</p>",
        "id": 249838552,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1629288111
    },
    {
        "content": "<p>Use the <code>#print</code> command for that.<br>\nE.g. <code>#print my_lemma</code>.</p>",
        "id": 249838630,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1629288139
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 249838709,
        "sender_full_name": "Notification Bot",
        "timestamp": 1629288194
    },
    {
        "content": "<p>See also the tactic <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#show_term\">tactic#show_term</a> which can show a proof term for just one or a few tactic steps</p>",
        "id": 249839036,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1629288388
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 249839062,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1629288415
    },
    {
        "content": "<p>Where can I write it to make it work? Can I do inside a <code>begin</code>—<code>end</code> block something like this?</p>\n<p><code>show_term { exact ih (nat.lt_succ_iff.1 y_small), }</code></p>",
        "id": 249839520,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1629288703
    },
    {
        "content": "<p>That seems to be how you do it. E.g. this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">show_term</span> <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Note the <code>import tactic</code> at the top!</p>",
        "id": 249839822,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1629288874
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 249840648,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1629289408
    }
]