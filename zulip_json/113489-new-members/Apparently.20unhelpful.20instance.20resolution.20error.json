[
    {
        "content": "<p>I'm trying to use <code>unique_factorization_domain.to_gcd_domain</code> to turn a <code>unique_factorization_domain</code> into a <code>gcd_domain</code>, but I'm getting a surprising error when I try to invoke it:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">unique_factorization_domain</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">unique_factorization_domain</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">unique_factorization_domain</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normalization_domain</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">associates</span> <span class=\"n\">R</span><span class=\"o\">)]</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">gcd_domain</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"n\">to_gcd_domain</span> <span class=\"n\">R</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">unique_factorization_domain</span>\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"n\">class</span> <span class=\"kn\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">integral_domain</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_2</span> <span class=\"o\">:</span> <span class=\"n\">unique_factorization_domain</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_3</span> <span class=\"o\">:</span> <span class=\"n\">normalization_domain</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">associates</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"err\">‚ä¢</span> <span class=\"n\">unique_factorization_domain</span> <span class=\"n\">R</span>\n</code></pre></div>\n\n\n<p>Naturally I assume I'm making a basic mistake, but the error message is not really giving me any clues. Anyone able to point me in the right direction?</p>",
        "id": 206810886,
        "sender_full_name": "Iain Monro",
        "timestamp": 1597323269
    },
    {
        "content": "<p>Try turning on <code>set_option pp.all true</code></p>",
        "id": 206812117,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597324042
    },
    {
        "content": "<p>Ah, yes, that helps!</p>\n<p>The problem was that <code>to_gcd_domain</code> wants a <code>unique_factorization_domain</code> whose <code>integral_domain</code> parameter has been constructed via <code>normalization_domain.to_integral_domain</code> from its <code>normalization_domain</code>, but I was just supplying one directly. Slightly odd that it cares, but I guess it makes sense if I think about if from the right direction. Removing <code>[integral_domain R]</code> and moving <code>[normalization_domain R]</code> before <code>[unique_factorization_domain R]</code> fixed it.</p>\n<p>Thanks!</p>",
        "id": 206813125,
        "sender_full_name": "Iain Monro",
        "timestamp": 1597324584
    }
]