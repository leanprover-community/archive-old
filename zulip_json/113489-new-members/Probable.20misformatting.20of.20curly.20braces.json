[
    {
        "content": "<p>The linter on my PR (<a href=\"https://github.com/leanprover-community/mathlib/pull/11780\">#11780</a>) says <code>Warning: WRN_BRC: Probable misformatting of curly braces</code> three times and then finishes with <code>Error: Process completed with exit code 123.</code>. I'm not sure how to fix this error, since I don't know where in the code the problem is. I suspect I'm missing something obvious. Can anyone help?</p>",
        "id": 270410469,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1643818433
    },
    {
        "content": "<p>mathlib brace style is like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">begin</span>\n  <span class=\"n\">my_tactic_that_splits_things</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">tactic1</span><span class=\"o\">,</span>\n    <span class=\"n\">tactic2</span><span class=\"o\">,</span>\n    <span class=\"n\">tactic3</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">tactic1</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>edit: ignore my lack of indents, Yaël is right!</p>",
        "id": 270413404,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643819389
    },
    {
        "content": "<p>Unfortunately, GitHub filters out the actual location of the error. You can see the errors if you click on the <a href=\"https://github.com/leanprover-community/mathlib/pull/11780/files\">files changed</a> tab, for example src/field_theory/krull_topology.lean line 138</p>",
        "id": 270414314,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1643819692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113489-new-members/topic/Probable.20misformatting.20of.20curly.20braces/near/270413404\">said</a>:</p>\n<blockquote>\n<p>mathlib brace style is like this:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">begin</span>\n<span class=\"n\">my_tactic_that_splits_things</span><span class=\"o\">,</span>\n<span class=\"o\">{</span> <span class=\"n\">tactic1</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic2</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic3</span> <span class=\"o\">},</span>\n<span class=\"o\">{</span> <span class=\"n\">tactic1</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">begin</span>\n  <span class=\"n\">my_tactic_that_splits_things</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">tactic1</span><span class=\"o\">,</span>\n    <span class=\"n\">tactic2</span><span class=\"o\">,</span>\n    <span class=\"n\">tactic3</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">tactic1</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>actually</p>",
        "id": 270416698,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643820508
    },
    {
        "content": "<p>One more thing: you can use the <code>#lint</code> command to make sure you have everything in order before pushing: that way you don't have to wait for GitHub to process your PR.</p>",
        "id": 270423552,
        "sender_full_name": "Daniel Roca González",
        "timestamp": 1643822593
    },
    {
        "content": "<p>Not quite, Daniel. <code>#lint</code> only runs the code linters, not the style ones.</p>",
        "id": 270425204,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643823154
    },
    {
        "content": "<p>But, yes, do run <code>#lint</code> and Ctrl+F <code>.{101}</code> (for long lines) before pushing anything to Github.</p>",
        "id": 270425285,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643823187
    },
    {
        "content": "<p>You can turn on editor rulers on VSCode, Yaël, if youwant to make things a bit easier ^^</p>",
        "id": 270427670,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643823957
    },
    {
        "content": "<p>I do! But the font is not quite monospace, and staring at the line ends of a 500 lines file is so much longer than Ctrl+F ing six characters.</p>",
        "id": 270430009,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643824740
    },
    {
        "content": "<p>Yeah, font issues make the rulers pretty useless sadly.</p>",
        "id": 270463804,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643838693
    },
    {
        "content": "<p>for me they've worked pretty flawlessly - but tbf I use a weird font in Cascadia Code</p>",
        "id": 270466398,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643839816
    },
    {
        "content": "<p><code>:set colorcolumn=100</code> works beautifully for me in nvim :)</p>",
        "id": 270532266,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1643886617
    }
]