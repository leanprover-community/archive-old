[
    {
        "content": "<p>Why are the mathlib proofs so golfed? Shouldn’t they be readable for people who want to learn from them</p>",
        "id": 280672491,
        "sender_full_name": "Joseph O",
        "timestamp": 1651257566
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/glossary.html#golfing\">glossary#golfing</a> has the rationale I perceived (or was told).</p>",
        "id": 280672596,
        "sender_full_name": "Julian Berman",
        "timestamp": 1651257610
    },
    {
        "content": "<p>Essentially people care more about statements than proofs often. When the proof is mechanical or uninteresting -- in the sense that it's felt there isn't much to learn mathematically from understanding the proof -- then the shorter the better.</p>",
        "id": 280672640,
        "sender_full_name": "Julian Berman",
        "timestamp": 1651257640
    },
    {
        "content": "<p>(That being said though I think for more interesting proofs there indeed <em>is</em> a hope or feeling that mathlib could have a bit more commenting and exposition than it does today).</p>",
        "id": 280672674,
        "sender_full_name": "Julian Berman",
        "timestamp": 1651257664
    },
    {
        "content": "<p>I guess that is reasonable</p>",
        "id": 280672794,
        "sender_full_name": "Joseph O",
        "timestamp": 1651257723
    },
    {
        "content": "<p>There's much distinction between API proofs, and actual theorems. A way to think of it is that compressing the trivial makes what's not stand out.</p>",
        "id": 280673375,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651258053
    },
    {
        "content": "<p>Golfed proofs are also usually easier to maintain, because they have less moving parts and tend to compile quicker (so they are less prone to time out).</p>",
        "id": 280673486,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651258109
    },
    {
        "content": "<p>You can also learn a lot by reading a golfed proof too; usually less mathematics and more about how to do golfling</p>",
        "id": 280679138,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651261242
    },
    {
        "content": "<p>Golfing has an additional benefit (frequently, not always) of showing you how things are less complicated than you were making them. (Maybe this is what Eric was saying, I'm not quite sure)</p>",
        "id": 280682734,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1651263276
    },
    {
        "content": "<p>You can also usually ungolf a golfed proof to see how it works. Luckily they tend to just be compressed and optimized rather than truly code golfed (which tends result in highly obfuscated code -- take a look at <a href=\"https://codegolf.stackexchange.com/\">https://codegolf.stackexchange.com/</a>).</p>",
        "id": 280684281,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1651264145
    },
    {
        "content": "<p>I still second <span class=\"user-mention\" data-user-id=\"467926\">@Joseph O</span> 's remark: sometimes proofs in <code>mathlib</code> looks <em>too</em> golfed to me. Once one knows how to de-golf a proof, this is more or less fine, but I believe this is hard for beginners, who can easily be discouraged by condensed way these proofs are stored in <code>mathlib</code>. I am thinking of taking an easy lemma that one wishes to adapt to another setting by saying \"oh, let me see if I can mimik the proof\". I was very upset with this at the beginning and I am still not convinced by maximising golfing.</p>",
        "id": 280735970,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1651324487
    },
    {
        "content": "<p>The idea stated <a href=\"https://leanprover-community.github.io/glossary.html#golfing\">here</a> is really to make code <em>as short as possible</em> (sic!) and this might be too short, but that is clearly a matter of personal taste.</p>",
        "id": 280736050,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1651324615
    },
    {
        "content": "<p>I am skeptical about golfing improving speed. Sometimes it's evident but very often it's about making more use of syntactic sugar and Lean's type inference powers, which is potentially slower, I believe</p>",
        "id": 280738965,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651328736
    },
    {
        "content": "<p>Often \"golfing\" is used to mean \"convert tactic proofs to term proofs\", which probably can improve speeds - especially if the tactic proof use <code>simp</code> when the term proof is just <code>foo.trans bar</code></p>",
        "id": 280742356,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651333724
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/113489-new-members/topic/Mathlib.20proofs.3F/near/280736050\">said</a>:</p>\n<blockquote>\n<p>The idea stated <a href=\"https://leanprover-community.github.io/glossary.html#golfing\">here</a> is really to make code <em>as short as possible</em> (sic!) and this might be too short, but that is clearly a matter of personal taste.</p>\n</blockquote>\n<p>I quoted the \"general\" (non-lean specific) definition more or less from the first sentence of <a href=\"https://en.wikipedia.org/wiki/Code_golf\">https://en.wikipedia.org/wiki/Code_golf</a>:</p>\n<blockquote>\n<p>Code golf is a type of recreational computer programming competition in which participants strive to achieve the shortest possible source code that solves a certain problem.</p>\n</blockquote>\n<p>Of course happy to tweak the language there if you think it's too harsh, but personally I fully agree with your point that balance is needed between \"as short as possible\" and \"as short as both possible and a good idea via some subjective collective wisdom\". E.g. no one I think would say it is a good idea for mathlib to use 1 letter variable names everywhere just because it'd golf some proofs shorter.</p>",
        "id": 280748406,
        "sender_full_name": "Julian Berman",
        "timestamp": 1651341712
    }
]