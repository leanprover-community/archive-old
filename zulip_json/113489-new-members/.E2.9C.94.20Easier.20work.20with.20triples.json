[
    {
        "content": "<p>Does putting the definitions in the <code>prod</code> namespace work?</p>",
        "id": 283364618,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653333378
    },
    {
        "content": "<p>Yes, it does. Thanks a lot!</p>",
        "id": 283365272,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1653333732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 283365286,
        "sender_full_name": "Notification Bot",
        "timestamp": 1653333740
    },
    {
        "content": "<p>In case somebody is interested in this little utility:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">prod</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">first</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"bp\">×</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">t.fst</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">secon</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"bp\">×</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"n\">t.snd.fst</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">third</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"bp\">×</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">γ</span> <span class=\"o\">:=</span> <span class=\"n\">t.snd.snd</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">firstwo</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"bp\">×</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">t.first</span><span class=\"o\">,</span> <span class=\"n\">t.secon</span><span class=\"o\">)</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">prod</span>\n</code></pre></div>",
        "id": 283366716,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1653334480
    },
    {
        "content": "<p>Actually:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">prod</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"bp\">×</span> <span class=\"n\">γ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">first</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">t.fst</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">secon</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"n\">t.snd.fst</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">third</span> <span class=\"o\">:</span> <span class=\"n\">γ</span> <span class=\"o\">:=</span> <span class=\"n\">t.snd.snd</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">firstwo</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">t.first</span><span class=\"o\">,</span> <span class=\"n\">t.secon</span><span class=\"o\">)</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">prod</span>\n</code></pre></div>",
        "id": 283368547,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1653335615
    },
    {
        "content": "<p>This is completely tangential, but I cannot react with <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> while I have reacted with <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 283368551,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653335620
    },
    {
        "content": "<p>I am able to use both.</p>",
        "id": 283368653,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1653335669
    },
    {
        "content": "<p>My <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> appears to be broken in all reactions...</p>",
        "id": 283368693,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653335696
    },
    {
        "content": "<p>Ah, not to my messages!</p>",
        "id": 283368724,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653335714
    },
    {
        "content": "<p>Very weird!</p>",
        "id": 283368744,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653335725
    },
    {
        "content": "<p>Ok, enough silliness!</p>",
        "id": 283368785,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653335760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Easier.20work.20with.20triples/near/283368551\">said</a>:</p>\n<blockquote>\n<p>This is completely tangential, but I cannot react with <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> while I have reacted with <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>\n</blockquote>\n<p>Maybe <span class=\"user-mention\" data-user-id=\"439115\">@Alya Abbott</span> knows this bug?</p>",
        "id": 283368990,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1653335875
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/ZXr_G-SmiZ5DPI6MXUbvUNx7/5e916688-ec0f-4552-ad42-414e11d0b2fd.jpg\">5e916688-ec0f-4552-ad42-414e11d0b2fd.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ZXr_G-SmiZ5DPI6MXUbvUNx7/5e916688-ec0f-4552-ad42-414e11d0b2fd.jpg\" title=\"5e916688-ec0f-4552-ad42-414e11d0b2fd.jpg\"><img src=\"/user_uploads/3121/ZXr_G-SmiZ5DPI6MXUbvUNx7/5e916688-ec0f-4552-ad42-414e11d0b2fd.jpg\"></a></div>",
        "id": 283369202,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653335971
    },
    {
        "content": "<p>Not too informative, but I captured the failure message</p>",
        "id": 283369247,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653335996
    },
    {
        "content": "<p>Is this the \"tada works but congratulations doesn't\" bug?</p>",
        "id": 283369520,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1653336094
    },
    {
        "content": "<p>Ah, it is!!!!</p>",
        "id": 283369643,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653336133
    },
    {
        "content": "<p>I had not realized the difference</p>",
        "id": 283369663,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653336144
    },
    {
        "content": "<p>Yes, I used tada and could react, but was probably using congratulations and could not.  Mauricio, thanks for naming the mystery!</p>",
        "id": 283369818,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1653336241
    }
]