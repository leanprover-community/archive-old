[
    {
        "content": "<p>Is there some \"canonical\" tutorial/resource/reference for how one would get around starting a new project of one's own? The tutorials I went through focused solely on proving results given, but didn't discuss how to form new lemmas/theorems/definitions. I could try and extrapolate from looking through the library but I'd rather see a place explaining what does what.<br>\n(I am not planning to do it yet, but it would be nice if it also covered defining new types structures)</p>",
        "id": 251561315,
        "sender_full_name": "Wojtek Wawrów",
        "timestamp": 1630504196
    },
    {
        "content": "<p>For the essentials of making a project directory set up properly you can look at <a href=\"https://leanprover-community.github.io/install/project.html#creating-a-lean-project\">https://leanprover-community.github.io/install/project.html#creating-a-lean-project</a></p>",
        "id": 251561585,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1630504298
    },
    {
        "content": "<p>For designing libraries/how to organise developments I think the material from the LFTCM2020 workshop will be helpful, especially Wednesday onwards (e.g. check out the files and exercises on structures, algebra, and topology in <a href=\"https://github.com/leanprover-community/lftcm2020/tree/master/src/exercises_sources/wednesday\">https://github.com/leanprover-community/lftcm2020/tree/master/src/exercises_sources/wednesday</a> be sure to clone the whole repo as per the instructions), there are also videos online of some of these sessions, but mostly they were designed for people to learn by doing.</p>",
        "id": 251562627,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1630504664
    },
    {
        "content": "<p>The main reference as always is <a href=\"https://leanprover.github.io/theorem_proving_in_lean/\">#tpil</a> though, if you havent seen it <a href=\"https://leanprover.github.io/theorem_proving_in_lean/structures_and_records.html\">https://leanprover.github.io/theorem_proving_in_lean/structures_and_records.html</a></p>",
        "id": 251562945,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1630504771
    },
    {
        "content": "<p>Thanks, I will take a look at all these!</p>",
        "id": 251563942,
        "sender_full_name": "Wojtek Wawrów",
        "timestamp": 1630505070
    },
    {
        "content": "<p>Hi. I plan to spend some time this semester to develop a few things in Lean. I've not done much besides the tutorials. Ultimately, I am interested in formalizing results of graduate level, such as class field theory.<br>\nBut I might spend a few weeks getting my hands on the system via easier stuff, possibly undergraduate algebra. <br>\n<span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> , <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> suggested this morning that we discuss a little bit about it.</p>",
        "id": 256392798,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633518382
    },
    {
        "content": "<p>Great to see you again!</p>",
        "id": 256392979,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633518488
    },
    {
        "content": "<p>Welcome (back)! I feel somewhat honoured that my name came up, and would be more than happy to assist in getting started with the formalization. Now my background is mostly logic with some algebraic number theory, so I'd like to mention <span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> whose main area of expertise is CFT. Though I understand Filippo is also busy with the Liquid Tensor Experiment.</p>\n<p>So to me the best course of action is probably that I can be here for the first few weeks working on some more elementary topics, and then Filippo is welcome to take over and get into the real meat of CFT.</p>",
        "id": 256400739,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1633522657
    },
    {
        "content": "<p>Needless to say, I am also very interested in CFT... and at only one floor distance from <span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> office :D</p>",
        "id": 256401208,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1633522886
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> ! As I was telling <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> , <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> and <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> , I have just submitted a grant proposal to develop some local CFT in Lean, so this is where I will be heading to soon. I would be very much happy to discuss and to take over from <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> , although I won't be able to make this my main focus until the end of 2021.</p>",
        "id": 256401613,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1633523081
    },
    {
        "content": "<p>Perhaps Ostrowski's theorem is a nice place to get started? I think we have most of the ingredients already available in mathlib, so the statement will look something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.order.absolute_value</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.pow</span>\n<span class=\"kn\">import</span> <span class=\"n\">number_theory.padics.padic_norm</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">real</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">absolute_value.trivial</span> <span class=\"o\">:</span> <span class=\"n\">absolute_value</span> <span class=\"n\">ℚ</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">map_mul'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">nonneg'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">add_le'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">eq_zero'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">absolute_value.padic</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fact</span> <span class=\"o\">(</span><span class=\"n\">nat.prime</span> <span class=\"n\">p</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">absolute_value</span> <span class=\"n\">ℚ</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">padic_norm</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">map_mul'</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">padic_norm.mul</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n  <span class=\"n\">nonneg'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">add_le'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">eq_zero'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">absolute_value_rat_eq_or_eq</span> <span class=\"o\">(</span><span class=\"n\">abv</span> <span class=\"o\">:</span> <span class=\"n\">absolute_value</span> <span class=\"n\">ℚ</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">nat.prime</span> <span class=\"n\">p</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">abv</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"bp\">@</span><span class=\"n\">absolute_value.padic</span> <span class=\"n\">p</span> <span class=\"o\">⟨</span><span class=\"n\">hp</span><span class=\"o\">⟩</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">∨</span>\n  <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">abv</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">absolute_value.abs</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">∨</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">abv</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">absolute_value.trivial</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 256407304,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1633525616
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262143\">@Ryan Lahfa</span> has a formalization of Ostrowski in Lean</p>",
        "id": 256407420,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633525667
    },
    {
        "content": "<p>Never mind then <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 256407555,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1633525712
    },
    {
        "content": "<p><a href=\"https://github.com/RaitoBezarius/berkovich-spaces\">https://github.com/RaitoBezarius/berkovich-spaces</a></p>",
        "id": 256407619,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633525735
    },
    {
        "content": "<p>Hi Antoine! You can count me in as yet another person who is interested in formalizing class field theory. I would like to eventually be able to formalize some aspects of anabelian geometry, where CFT (including the higher dimensional variants) is a fundamental tool.</p>",
        "id": 256414617,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633528364
    },
    {
        "content": "<p>Given that <a href=\"https://github.com/leanprover-community/mathlib/issues/2819\">#2819</a> is sorry free and slowly being PRed, and we have finiteness of the class group, maybe some things like Dirichlet's (S-)unit theorem might be in reach now and a good project?</p>",
        "id": 256415797,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633528790
    },
    {
        "content": "<p>I think even the basic theory of ramification is currently missing and would be a good project. There is a lot to do!</p>",
        "id": 256416065,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633528865
    },
    {
        "content": "<p>The next missing definition, in my opinion, is the definition of a local field. There is already a discussion here about whether we just do non-arch char 0, non-arch char 0 and then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> and its finite extensions in three different cases or whether we try and do them all at once. My instinct is to stick to the non-arch case but I don't know whether one should be formalising the theory of complete DVRs which are locally compact wrt the adic topology, or breaking up the theory into a char 0 and a char p strand immediately. I guess I am actually perhaps thinking too hard about the arithmetic case -- the general theory should be developed for arbitrary residue field.</p>\n<p>One big missing theorem is the canonical topology on a finite-dimensional vector space over a field like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>.  In what generality should we have this? Extensions of valuations need doing, as far as I know we don't have that a finite extension of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> has a canonical valuation on it extending the valuation on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> and I haven't really collected my thoughts yet about what order things should be proved in.</p>",
        "id": 256420241,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633530440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I think this is a good place to use henselianity :)</p>",
        "id": 256420804,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633530633
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Starting.20a.20new.20project/near/256420241\">said</a>:</p>\n<blockquote>\n<p>One big missing theorem is the canonical topology on a finite-dimensional vector space over a field like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>.  In what generality should we have this?</p>\n</blockquote>\n<p>Relevant: <a href=\"#narrow/stream/116395-maths/topic/Topology.20of.20finite-dimensional.20real.20vector.20spaces/near/255193392\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Topology.20of.20finite-dimensional.20real.20vector.20spaces/near/255193392</a><br>\nWe almost have this.</p>",
        "id": 256421240,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633530792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> If you submitted a grand to do this, I feel I shouldn't walk on your steps and leave you this task.<br>\n(Anyway, I spend 2 hours today generalizing a small topological lemma in topology.connected, that I'll eventually submit, and in the forthcoming weeks, I'll do little job like this to get more and more fluent in this business.)</p>",
        "id": 256649591,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633640695
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/Starting.20a.20new.20project/near/256415797\">said</a>:</p>\n<blockquote>\n<p>Given that <a href=\"https://github.com/leanprover-community/mathlib/issues/2819\">#2819</a> is sorry free and slowly being PRed, and we have finiteness of the class group, maybe some things like Dirichlet's (S-)unit theorem might be in reach now and a good project?</p>\n</blockquote>\n<p>In fact, doing basic (global) algebraic number theory seems like an interesting, useful and necessary thing to do. In the spirit of the classic books (Borevich-Shafarevich or Samuel).</p>",
        "id": 256649823,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633640786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Starting.20a.20new.20project/near/256420241\">said</a>:</p>\n<blockquote>\n<p>The next missing definition, in my opinion, is the definition of a local field. There is already a discussion here about whether we just do non-arch char 0, non-arch char 0 and then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> and its finite extensions in three different cases or whether we try and do them all at once. My instinct is to stick to the non-arch case but I don't know whether one should be formalising the theory of complete DVRs which are locally compact wrt the adic topology, or breaking up the theory into a char 0 and a char p strand immediately. I guess I am actually perhaps thinking too hard about the arithmetic case -- the general theory should be developed for arbitrary residue field.</p>\n<p>One big missing theorem is the canonical topology on a finite-dimensional vector space over a field like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>.  In what generality should we have this? Extensions of valuations need doing, as far as I know we don't have that a finite extension of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> has a canonical valuation on it extending the valuation on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> and I haven't really collected my thoughts yet about what order things should be proved in.</p>\n</blockquote>\n<p>In the spirit of the first chapter of Weil's Basic number theory. Yes, why not. This builds on completeness rather than compactness, which is interesting too.</p>",
        "id": 256650027,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633640869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> My experience with Lean is that contributing is really the key: as I was beginning here, <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span>  was working hard on Dedekind domains, but they suggested that I join forces and it eventually turned out in a joint project (where I did 10% and they did 90%, but I learnt and enjoyed it a lot...). So, I think that there will be a lot of room for common work, if you so wish. I will certainly keep you up to date as soon as I will begin working on local CFT (somewhen in January, when the Liquid Tensor Experiment will be more advanced) and we will see. If, in the meantime, you feel like working either towards the definition of local fields, or Dirichlet's Unit Theorem (global, sure, but possibly more \"basic\"), or anything else, please do not feel any bound.</p>",
        "id": 256698883,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1633677634
    }
]