[
    {
        "content": "<p>There has to be a better way to break up a conjunction of four conjuncts than this:</p>\n<div class=\"codehilite\"><pre><span></span><code>  <span class=\"n\">cases</span> <span class=\"n\">h13</span> <span class=\"k\">with</span> <span class=\"n\">h15</span> <span class=\"n\">h16</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h16</span> <span class=\"k\">with</span> <span class=\"n\">h17</span> <span class=\"n\">h18</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h18</span> <span class=\"k\">with</span> <span class=\"n\">h18</span> <span class=\"n\">h20</span><span class=\"o\">,</span>\n</code></pre></div>",
        "id": 209309734,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599494395
    },
    {
        "content": "<p>Have I mentioned that <code>rcases</code> is awesome yet today?</p>",
        "id": 209309806,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599494419
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#rcases\">tactic#rcases</a></p>",
        "id": 209309848,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599494450
    },
    {
        "content": "<p>your example would be <code>rcases h13 with ⟨h15, h17, h18, h20⟩</code></p>",
        "id": 209309990,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599494541
    },
    {
        "content": "<p>don't name them as <code>hXX</code>: instead name them as <code>hxab</code> if the variables involved are <code>x</code> and <code>a</code> and <code>b</code></p>",
        "id": 209310279,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1599494774
    },
    {
        "content": "<p>Thank you.</p>",
        "id": 209310599,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599495045
    },
    {
        "content": "<p>And similarly,  if my goal is a conjunction with four conjuncts,  how do a split into four goals all at once instead of three different \"split\" commands?</p>",
        "id": 209321126,
        "sender_full_name": "Michael Beeson",
        "timestamp": 1599505077
    },
    {
        "content": "<p>Something like <code>refine ⟨_, _, _, _⟩</code> should work.</p>",
        "id": 209321193,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599505130
    },
    {
        "content": "<p>Or <code>repeat {split}</code></p>",
        "id": 209321222,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599505195
    },
    {
        "content": "<p><code>repeat {split}</code> doesn't really work because the \"splittable \"part is now the second goal, so it's not focused anymore.</p>",
        "id": 209321387,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1599505344
    },
    {
        "content": "<p>I think repeat applies the tactic to all goals, right?</p>",
        "id": 209321397,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599505361
    },
    {
        "content": "<p>The <code>n+1</code>st iteration of the tactic will apply to all goals generated by the <code>n</code>th.</p>",
        "id": 209321502,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599505473
    },
    {
        "content": "<p>Oh indeed, my bad. Is that new, or am I just creating memories out of nowhere ?</p>",
        "id": 209321539,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1599505539
    },
    {
        "content": "<p>There is also <code>iterate</code> which works only on the first goal, if I recall correctly.</p>",
        "id": 209321587,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599505565
    }
]