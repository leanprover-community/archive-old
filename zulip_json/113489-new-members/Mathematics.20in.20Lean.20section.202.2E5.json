[
    {
        "content": "<p>Hello,<br>\nI'm working through Mathematics in Lean and I've reached the final exercise in <a href=\"https://leanprover-community.github.io/mathematics_in_lean/02_Basics.html#proving-facts-about-algebraic-structures\">Chapter 2</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The book recommends using the theorem <code>nonneg_of_mul_nonneg_left</code>.<br>\nHowever, I cannot find a way to <code>apply</code> it without having to make its implicit arguments explicit:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">nonneg_of_mul_nonneg_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>works but</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">nonneg_of_mul_nonneg_left</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>gives</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>invalid type ascription, term has type\n  0 ≤ ?m_3 * ?m_4 → 0 &lt; ?m_3 → 0 ≤ ?m_4\nbut is expected to have type\n  0 ≤ 2 * dist x y → 0 &lt; 2 → 0 ≤ dist x y\n</code></pre></div>\n<p>Is this case just too hard for type inference or am I missing something?</p>",
        "id": 287426717,
        "sender_full_name": "Yoni Katzuv",
        "timestamp": 1656151706
    }
]