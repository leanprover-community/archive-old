[
    {
        "content": "<p>i have this code (by a member of lean zulip):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">free_group</span> <span class=\"o\">(</span><span class=\"n\">of</span><span class=\"o\">)</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> The 3-strand braid group. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">braids_rel3</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">free_group</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"o\">{(</span><span class=\"n\">of</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">of</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">of</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"n\">of</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>i am getting red underlines under <code>open</code> and each <code>of</code>, the error being <code>command does not accept doc string</code>. how do i resolve this?</p>",
        "id": 250165258,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629489389
    },
    {
        "content": "<p>these are my imports:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.zmod.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">group_theory.presented_group</span>\n<span class=\"kn\">import</span> <span class=\"n\">group_theory.free_group</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.equiv.mul_add</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.group.defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.group_power</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n</code></pre></div>",
        "id": 250165367,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629489483
    },
    {
        "content": "<p>Do you have a doc string before <code>open</code>? (i.e. a comment that starts with <code>/--</code> and ends with <code>-/</code>)</p>",
        "id": 250166168,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1629489924
    },
    {
        "content": "<p>If so, try changing the first <code>/--</code> to <code>/-</code> instead.</p>",
        "id": 250166201,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1629489938
    },
    {
        "content": "<p>that fixed it, thanks</p>",
        "id": 250172630,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629493649
    },
    {
        "content": "<p>(It's a good idea to post code snippets as a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> --- i.e. an entire file (ideally minimised) that we could copy and paste into an editor window. e.g. in this example Bryan wouldn't have needed to deduce you had a misplaced doc-string.)</p>",
        "id": 250186264,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1629504832
    },
    {
        "content": "<p>alright i'll do that next time</p>",
        "id": 250188250,
        "sender_full_name": "Holly Liu",
        "timestamp": 1629507779
    }
]