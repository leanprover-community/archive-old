[
    {
        "content": "<p>This took me a really long time (to prove that equivalence relations are equivalent to set partitions). I made fast progress in the beginning, but proving that <code>(G : partition X → setoid X) (F : setoid X → partition X) = id</code> took me a few weeks for some reason (granted I have a day job as a physician and just doing this for my own edification). Also my proofs are probably way longer than they need to be. But I learned a lot nonetheless.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">setoid</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">equiv</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">open</span> <span class=\"n\">set</span>\n<span class=\"kn\">open</span> <span class=\"n\">setoid</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">eq_of_mem_eqv_class</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">eq_of_subset_of_subset</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">@</span><span class=\"n\">eq_of_mem_classes</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">exists_unique</span><span class=\"bp\">.</span><span class=\"n\">intro</span>\n<span class=\"c1\">--set_option trace.simplify.rewrite true</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span> <span class=\"kn\">structure</span> <span class=\"n\">partition</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">disjoint</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"err\">∩</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"err\">∅</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">cover</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">A</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">nonempty</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">A</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span><span class=\"o\">)</span>\n\n<span class=\"kn\">variable</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span>\n\n<span class=\"n\">def</span> <span class=\"n\">F</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">partition</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"n\">partition</span><span class=\"bp\">.</span><span class=\"n\">mk</span>\n<span class=\"o\">(</span>\n     <span class=\"n\">classes</span> <span class=\"n\">S</span>\n<span class=\"o\">)</span>\n<span class=\"o\">(</span> <span class=\"c1\">-- ⊢ (disjoint : ∀ A B ∈ ℱ, A ≠ B → A ∩ B = ∅)</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">eq_of_subset_of_subset</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n      <span class=\"n\">intros</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">mem_empty_eq</span><span class=\"o\">,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">a_1</span><span class=\"o\">,</span>\n      <span class=\"c1\">--have F : set (set X), from classes S,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">eq_of_mem_classes</span><span class=\"o\">,</span>\n      <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">assumption</span><span class=\"o\">},</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">empty_subset</span><span class=\"o\">,</span>\n    <span class=\"o\">}</span>\n  <span class=\"kn\">end</span>\n<span class=\"o\">)</span>\n<span class=\"o\">(</span> <span class=\"c1\">-- ⊢ (cover : ∀ x : X, ∃ A ∈ ℱ, x ∈ A)</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span>\n<span class=\"o\">)</span>\n<span class=\"o\">(</span> <span class=\"c1\">-- ⊢ (nonempty : ∀ A ∈ ℱ, A ≠ ∅)</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">aqn</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">empty_not_mem_classes</span><span class=\"o\">,</span>\n    <span class=\"n\">rwa</span> <span class=\"err\">←</span> <span class=\"n\">aqn</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span>\n<span class=\"o\">)</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">F</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Q3 : now define a map the other way</span>\n<span class=\"cm\">-/</span>\n<span class=\"c1\">--open_locale classical</span>\n\n<span class=\"n\">def</span> <span class=\"n\">G</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">partition</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"err\">∈</span> <span class=\"n\">P_F</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n  <span class=\"c\">/-</span><span class=\"cm\">have rt : X → X → Prop,</span>\n<span class=\"cm\">  {</span>\n<span class=\"cm\">    exact r,</span>\n<span class=\"cm\">  },-/</span>\n  <span class=\"k\">have</span> <span class=\"n\">iseqv</span> <span class=\"o\">:</span> <span class=\"n\">equivalence</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"err\">∈</span> <span class=\"n\">P_F</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span>\n        <span class=\"n\">apply</span> <span class=\"n\">P_cover</span><span class=\"o\">,</span>\n      <span class=\"o\">},</span>\n      <span class=\"o\">{</span>\n        <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"n\">cases</span> <span class=\"n\">h_h</span><span class=\"o\">,</span>\n        <span class=\"k\">have</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"err\">∈</span> <span class=\"n\">P_F</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span>\n          <span class=\"n\">finish</span><span class=\"o\">,</span>\n        <span class=\"o\">},</span>\n        <span class=\"n\">assumption</span><span class=\"o\">,</span>\n      <span class=\"o\">},</span>\n    <span class=\"o\">},</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"c1\">--symmetric</span>\n      <span class=\"n\">finish</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"c1\">-- transitive</span>\n      <span class=\"n\">unfold</span> <span class=\"n\">transitive</span><span class=\"o\">,</span>\n      <span class=\"n\">intros</span><span class=\"o\">,</span>\n      <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">r</span><span class=\"o\">],</span>\n      <span class=\"k\">have</span> <span class=\"n\">p1</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"err\">∈</span> <span class=\"n\">P_F</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">h</span><span class=\"o\">),</span> <span class=\"n\">assumption</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">p2</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"err\">∈</span> <span class=\"n\">P_F</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">z</span> <span class=\"err\">∈</span> <span class=\"n\">h</span><span class=\"o\">),</span> <span class=\"n\">assumption</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">p1</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">p2</span><span class=\"o\">,</span>\n      <span class=\"n\">use</span> <span class=\"n\">p1_w</span><span class=\"o\">,</span>\n      <span class=\"n\">split</span><span class=\"o\">,</span>\n      <span class=\"n\">finish</span><span class=\"o\">,</span>\n      <span class=\"n\">split</span><span class=\"o\">,</span>\n      <span class=\"n\">finish</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span>\n        <span class=\"n\">cases</span> <span class=\"n\">p1_h</span><span class=\"o\">,</span>\n        <span class=\"n\">cases</span> <span class=\"n\">p2_h</span><span class=\"o\">,</span>\n        <span class=\"n\">cases</span> <span class=\"n\">p1_h_h</span><span class=\"o\">,</span>\n        <span class=\"n\">cases</span> <span class=\"n\">p2_h_h</span><span class=\"o\">,</span>\n        <span class=\"n\">suffices</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">p1_w</span> <span class=\"bp\">=</span> <span class=\"n\">p2_w</span><span class=\"o\">,</span>\n        <span class=\"n\">finish</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span>\n            <span class=\"n\">suffices</span> <span class=\"n\">f1</span> <span class=\"o\">:</span> <span class=\"n\">p1_w</span> <span class=\"bp\">=</span> <span class=\"n\">p2_w</span> <span class=\"bp\">↔</span> <span class=\"n\">p1_w</span> <span class=\"err\">∩</span> <span class=\"n\">p2_w</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">f1</span><span class=\"o\">,</span>\n            <span class=\"n\">apply</span> <span class=\"n\">f1_mpr</span><span class=\"o\">,</span>\n            <span class=\"k\">have</span> <span class=\"n\">f2</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">p1_w</span> <span class=\"err\">∩</span> <span class=\"n\">p2_w</span><span class=\"o\">,</span>\n            <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_inter</span><span class=\"o\">,</span>\n            <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">assumption</span><span class=\"o\">},</span>\n            <span class=\"n\">set</span> <span class=\"n\">f3</span> <span class=\"o\">:=</span> <span class=\"n\">p1_w</span> <span class=\"err\">∩</span> <span class=\"n\">p2_w</span> <span class=\"k\">with</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n            <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"bp\">.</span><span class=\"n\">ne_empty</span><span class=\"o\">,</span>\n            <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">nonempty_of_mem</span><span class=\"o\">,</span>\n            <span class=\"n\">exact</span> <span class=\"n\">f2</span><span class=\"o\">,</span>\n            <span class=\"n\">split</span><span class=\"o\">,</span>\n            <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">intro</span><span class=\"o\">},</span>\n            <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"bp\">.</span><span class=\"n\">ne_empty</span><span class=\"o\">,</span>\n            <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">assumption</span><span class=\"o\">},</span>\n            <span class=\"n\">finish</span><span class=\"o\">,</span>\n            <span class=\"n\">finish</span><span class=\"o\">,</span>\n        <span class=\"o\">},</span>\n      <span class=\"o\">},</span>\n    <span class=\"o\">},</span>\n  <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">iseqv</span><span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">eq_iff_classes_eq&#39;</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r₁</span> <span class=\"n\">r₂</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">r₁</span> <span class=\"bp\">=</span> <span class=\"n\">r₂</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">|</span> <span class=\"n\">r₁</span><span class=\"bp\">.</span><span class=\"n\">rel</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">|</span> <span class=\"n\">r₂</span><span class=\"bp\">.</span><span class=\"n\">rel</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">h</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"bp\">▸</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">ext&#39;</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">ext_iff</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"err\">$</span> <span class=\"n\">h</span> <span class=\"n\">x</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">variable</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">partition</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">G</span> <span class=\"n\">s</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Q4 : now finally prove that the composite of maps in both directions</span>\n<span class=\"cm\">is the identity</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">F</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">G</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">left_inverse</span> <span class=\"n\">G</span> <span class=\"n\">F</span>\n<span class=\"kn\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"kn\">variable</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"bp\">.</span><span class=\"n\">rel</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">h</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">R</span><span class=\"bp\">.</span><span class=\"n\">rel</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">G</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">FG_eq_id</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">left_inverse</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">partition</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">setoid</span><span class=\"bp\">.</span><span class=\"n\">ext</span><span class=\"o\">,</span>\n<span class=\"n\">intros</span><span class=\"o\">,</span>\n<span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n<span class=\"n\">set</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">setoid</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">s_r</span> <span class=\"n\">s_iseqv</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">s</span><span class=\"o\">],</span>\n<span class=\"n\">intro</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">a_1</span><span class=\"o\">,</span>\n<span class=\"n\">suffices</span> <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">rel</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"n\">finish</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">setoid</span><span class=\"bp\">.</span><span class=\"n\">rel_iff_exists_classes</span><span class=\"o\">,</span>\n<span class=\"n\">finish</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span><span class=\"o\">,</span>\n<span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">setoid</span><span class=\"bp\">.</span><span class=\"n\">mem_classes</span><span class=\"o\">,</span>\n<span class=\"n\">assumption</span><span class=\"o\">,</span>\n<span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n<span class=\"n\">solve_by_elim</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n<span class=\"c1\">-- G : partition X → setoid X</span>\n<span class=\"c1\">-- F : setoid X → partition X</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">classical</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">prop_decidable</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">partition_els_eq_if_share_el</span>\n<span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)}</span>\n<span class=\"o\">{</span><span class=\"n\">disjoint</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"err\">∩</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"err\">∅</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"n\">cover</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">A</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">A</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"n\">nonempty</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">A</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"err\">∈</span> <span class=\"n\">F</span><span class=\"o\">}</span>\n<span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">cases</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">h2_h</span><span class=\"o\">,</span>\n<span class=\"n\">by_contra</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"err\">∩</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"err\">∅</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">disjoint</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n<span class=\"k\">have</span> <span class=\"n\">z2</span> <span class=\"o\">:</span> <span class=\"n\">h2_w</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"err\">∩</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">mem_inter</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n<span class=\"n\">rw</span> <span class=\"n\">z</span> <span class=\"n\">at</span> <span class=\"n\">z2</span><span class=\"o\">,</span>\n<span class=\"n\">tauto</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">GF_eq_id</span> <span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">right_inverse</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">partition</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intro</span><span class=\"o\">,</span>\n<span class=\"n\">set</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">G</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n<span class=\"n\">set</span> <span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">partition</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">F</span> <span class=\"n\">S</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">partition</span><span class=\"bp\">.</span><span class=\"n\">ext</span><span class=\"o\">,</span>\n<span class=\"n\">destruct</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n<span class=\"n\">destruct</span> <span class=\"n\">S</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span><span class=\"o\">{</span><span class=\"n\">intro</span><span class=\"o\">},</span>\n<span class=\"n\">cases</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n<span class=\"n\">injections</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">eq_of_subset_of_subset</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">intro</span><span class=\"o\">},</span>\n<span class=\"o\">{</span>\n  <span class=\"k\">have</span> <span class=\"n\">j1</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">tauto</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">j1</span> <span class=\"n\">at</span> <span class=\"n\">a_3</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"n\">j2</span> <span class=\"o\">:</span> <span class=\"n\">a_2</span> <span class=\"err\">∈</span> <span class=\"n\">classes</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">a_2</span> <span class=\"err\">∈</span> <span class=\"n\">x_F</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">h_2</span> <span class=\"n\">at</span> <span class=\"n\">a_3</span><span class=\"o\">,</span>\n  <span class=\"n\">solve_by_elim</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"n\">destruct</span> <span class=\"n\">a_4</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">j3</span> <span class=\"o\">:</span> <span class=\"n\">rel</span> <span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">solve_by_elim</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">j3</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">j4</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">a5</span> <span class=\"err\">∈</span> <span class=\"n\">x_F</span><span class=\"o\">),</span> <span class=\"n\">w</span> <span class=\"err\">∈</span> <span class=\"n\">a5</span><span class=\"o\">,</span><span class=\"n\">tauto</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">j4</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">j4_h</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"n\">j5</span> <span class=\"o\">:</span> <span class=\"n\">a_2</span> <span class=\"bp\">=</span> <span class=\"n\">j4_w</span><span class=\"o\">,</span>\n  <span class=\"n\">rwa</span> <span class=\"n\">j5</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">ext</span><span class=\"o\">,</span><span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span><span class=\"n\">intros</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">j6</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"err\">∈</span> <span class=\"n\">x_F</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">w</span> <span class=\"err\">∈</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h</span> <span class=\"n\">at</span> <span class=\"n\">a_5</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mem_set_of_eq</span> <span class=\"n\">at</span> <span class=\"n\">a_5</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">h_1</span> <span class=\"n\">at</span> <span class=\"n\">a_5</span><span class=\"o\">,</span><span class=\"n\">tauto</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">j6</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">j6_h</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">j6_h_h</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"n\">j7</span> <span class=\"o\">:</span> <span class=\"n\">j6_w</span> <span class=\"bp\">=</span> <span class=\"n\">j4_w</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">j7</span><span class=\"o\">,</span><span class=\"n\">tauto</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">partition_els_eq_if_share_el</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span><span class=\"o\">,</span><span class=\"n\">apply</span> <span class=\"n\">x_disjoint</span><span class=\"o\">,</span><span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n  <span class=\"n\">use</span> <span class=\"n\">w</span><span class=\"o\">,</span> <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n  <span class=\"n\">intro</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"n\">h₃</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"n\">w</span><span class=\"o\">,</span>\n  <span class=\"n\">tauto</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">h_1</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">j4_w</span><span class=\"o\">,</span>\n  <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n<span class=\"o\">},</span>\n<span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">tauto</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">h₃</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">h_2</span><span class=\"o\">,</span>\n<span class=\"n\">unfold</span> <span class=\"n\">classes</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">j3</span> <span class=\"o\">:</span> <span class=\"n\">rel</span> <span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">solve_by_elim</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">j3</span><span class=\"o\">,</span>\n<span class=\"n\">suffices</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">a_2</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">z</span><span class=\"o\">,</span>\n<span class=\"n\">use</span> <span class=\"n\">z_w</span><span class=\"o\">,</span>\n<span class=\"n\">ext</span><span class=\"o\">,</span>\n<span class=\"n\">split</span><span class=\"o\">,</span><span class=\"n\">intros</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">h_1</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_set_of_eq</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">exists</span><span class=\"bp\">.</span><span class=\"n\">intro</span><span class=\"o\">,</span>\n<span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n<span class=\"n\">intro</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_set_of_eq</span> <span class=\"n\">at</span> <span class=\"n\">a_4</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">h_1</span> <span class=\"n\">at</span> <span class=\"n\">a_4</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">a_4</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">a_4_h</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">a_4_h_right</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">z2</span> <span class=\"o\">:</span> <span class=\"n\">a_4_w</span> <span class=\"bp\">=</span> <span class=\"n\">a_2</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">partition_els_eq_if_share_el</span><span class=\"o\">,</span>\n<span class=\"n\">intros</span><span class=\"o\">,</span><span class=\"n\">apply</span> <span class=\"n\">x_disjoint</span><span class=\"o\">,</span><span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n<span class=\"n\">use</span> <span class=\"n\">z_w</span><span class=\"o\">,</span> <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">tauto</span><span class=\"o\">},</span>\n<span class=\"n\">rwa</span> <span class=\"err\">←</span> <span class=\"n\">z2</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">z3</span> <span class=\"o\">:</span> <span class=\"n\">a_2</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span><span class=\"o\">,</span>\n<span class=\"n\">solve_by_elim</span><span class=\"o\">,</span>\n<span class=\"n\">suffices</span> <span class=\"n\">z4</span> <span class=\"o\">:</span> <span class=\"n\">a_2</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">,</span>\n<span class=\"n\">solve_by_elim</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">ne_empty_iff_nonempty</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"o\">(</span><span class=\"n\">x_nonempty</span> <span class=\"n\">a_2</span> <span class=\"n\">a_3</span><span class=\"o\">),</span>\n<span class=\"kn\">end</span>\n\n<span class=\"n\">def</span> <span class=\"n\">partitions_biject_with_equivalence_relations</span> <span class=\"o\">:</span>\n  <span class=\"n\">equiv</span> <span class=\"o\">(</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">partition</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">fconstructor</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">F</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">G</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">FG_eq_id</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">GF_eq_id</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 203429704,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1594323430
    },
    {
        "content": "<p>Oh nice! I went through some of this on my live stream last week.</p>",
        "id": 203449988,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594333803
    },
    {
        "content": "<p>oh is it recorded anywhere?</p>",
        "id": 203461734,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1594345691
    },
    {
        "content": "<p><a href=\"https://www.youtube.com/watch?v=FEKsZj3WkTY\">https://www.youtube.com/watch?v=FEKsZj3WkTY</a> this one I think!</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"FEKsZj3WkTY\" href=\"https://www.youtube.com/watch?v=FEKsZj3WkTY\"><img src=\"https://i.ytimg.com/vi/FEKsZj3WkTY/default.jpg\"></a></div>",
        "id": 203487074,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1594373673
    },
    {
        "content": "<p>We finished the job on the Discord afterwards and this wasn't recorded</p>",
        "id": 203509920,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594389753
    },
    {
        "content": "<p>Ah I notice this time around your partition definition uses the property <code>(unique : ∀ A B ∈ F, A ∩ B ≠ ∅ → A = B)</code>  rather than the disjoint property <code>(disjoint : ∀ A B ∈ F, A ≠ B → A ∩ B = ∅)</code> and I suspect the former makes the subsequent proofs easier. I will try re-doing this</p>",
        "id": 203553540,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1594412221
    },
    {
        "content": "<p>It would be even better to use <code>nonempty</code></p>",
        "id": 203587440,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594456975
    }
]