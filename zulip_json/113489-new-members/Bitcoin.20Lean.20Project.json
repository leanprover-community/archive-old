[
    {
        "content": "<p>Hello everyone! I am a software engineer and maintainer of the Scala library <a href=\"http://github.com/bitcoin-s/bitcoin-s\">bitcoin-s</a>. I have had some previous experience in Agda and just finished all of the exercises in the (Lean) tutorials project. I am interested in starting a github repo called lean-bitcoin where I want to construct Bitcoin's basic data structures (transactions, spending conditions, etc.) with the goal of implementing protocols such as <a href=\"http://github.com/discreetlogcontracts/dlcspecs\">DLC construction</a> and proving the fidelity of those implementations, including correctness/bounds on fees and the like, and maybe even generating test vectors for other more efficient implementations (in other languages).</p>\n<p>I won't be needing any help with any Bitcoin-related knowledge, but I would really appreciate advice and help in setting up a lean project and high-level design and structuring of that project and some other more general getting-started help.</p>\n<p>Would anyone be interested and willing to chat with me sometime in the near future about this project?</p>",
        "id": 222529708,
        "sender_full_name": "Nadav Kohen",
        "timestamp": 1610509845
    },
    {
        "content": "<p>For the basic setup you can check out <a href=\"https://leanprover-community.github.io/leanproject.html\">https://leanprover-community.github.io/leanproject.html</a> and for adding more advanced CI to ensure your project is building daily we have  <a href=\"https://github.com/leanprover-contrib/leanprover-contrib\">https://github.com/leanprover-contrib/leanprover-contrib</a> .</p>",
        "id": 222530434,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1610510574
    },
    {
        "content": "<p>Thanks Alex for the response :) I do have the project generated by <code>leanproject</code> but I am generally unsure of how to continue from here. I think the natural starting place would be that I need definitions of <code>ByteVector</code>s and with those define types such as <code>UInt32</code> and the like. I'm sure that I could accomplish this in some crude way but I was hoping someone might be able to give me some pointers.</p>",
        "id": 222533446,
        "sender_full_name": "Nadav Kohen",
        "timestamp": 1610513465
    },
    {
        "content": "<p>You might want to check out some of the threads in the Program Verification stream, I think there were some threads about using bitvectors there, but I'm no expert</p>",
        "id": 222608483,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1610555962
    }
]