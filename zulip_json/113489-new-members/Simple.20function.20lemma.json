[
    {
        "content": "<p>I find myself frequently wanting to use the following straightforward lemma that holds for any function <code>f</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kd\">lemma</span> <span class=\"n\">eq_lemma</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"n\">intros</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">g</span> <span class=\"n\">a_eq_b</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">a_eq_b</span><span class=\"o\">,</span>\n    <span class=\"kd\">end</span>\n</code></pre></div>\n<p>Is there already such a lemma in mathlib or init or an appropriate tactic?</p>",
        "id": 266340170,
        "sender_full_name": "Julian Sutherland",
        "timestamp": 1640779838
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/congr_arg\">docs#congr_arg</a></p>",
        "id": 266340287,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1640779932
    },
    {
        "content": "<p>Perfect, thank you! :)</p>",
        "id": 266340312,
        "sender_full_name": "Julian Sutherland",
        "timestamp": 1640779953
    }
]