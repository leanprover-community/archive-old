[
    {
        "content": "<p>Hello everyone,<br>\nI'm doing level 3 in the Addition World in the natural numbers game (<a href=\"https://cbirkbeck.github.io/natural_number_game/?world=2&amp;level=3\">https://cbirkbeck.github.io/natural_number_game/?world=2&amp;level=3</a>). I notice that </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">induction</span> <span class=\"n\">b</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">refl</span>\n  <span class=\"o\">},</span>\n</code></pre></div>\n<p>closes the first goal (the base case for the induction. However, the first goal before applying <code>refl</code> is <code>‚ä¢ succ a + 0 = succ (a + 0)</code>. I would've assumed this would first require a <code>rw add_zero,</code> before <code>refl,</code> would close it. How did <code>refl</code> work on its own?</p>",
        "id": 290770450,
        "sender_full_name": "Rishi Mehta",
        "timestamp": 1658761273
    },
    {
        "content": "<p>Is definitional equality explained in NNG?</p>",
        "id": 290771737,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1658761776
    },
    {
        "content": "<p><code>succ a + 0</code> and <code>succ (a + 0)</code> are definitionally equal because <code>x + 0</code> is definitionally equal to <code>x</code> for any <code>x</code></p>",
        "id": 290771895,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1658761835
    },
    {
        "content": "<p>In Lean, certain things are considered to be true by definition (this is known as \"definitional equality\", or that they're \"defeq\" for short).</p>\n<p>The definition of addition is, essentially, <code>add_zero</code> and <code>add_succ</code>, so you can imagine that <code>refl</code> operates by applying these two lemmas wherever possible to try to make both sides the same.</p>",
        "id": 290771921,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658761849
    },
    {
        "content": "<p>I see - thank you!</p>",
        "id": 290775137,
        "sender_full_name": "Rishi Mehta",
        "timestamp": 1658763140
    },
    {
        "content": "<p>Yeah I explicitly avoided explaining definitional equality and indeed did the opposite -- I disabled <code>rw</code> so that it would not attempt to close defeq goals after application, because it confused new users. So now we only get confusion when people spot that <code>refl</code> is in fact stronger than I claim it to be. I peddle the lie that <code>a+0=a</code> is \"true by axiom\" rather than \"true by definition\" and tell the user to apply the \"axiom\" without telling them that the axiom is proved with <code>refl</code> internally.</p>",
        "id": 290859665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1658822266
    }
]