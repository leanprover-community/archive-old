[
    {
        "content": "<p>Are there existing tactics doing the following?</p>\n<ul>\n<li>The equivalent of the sequence <code>have subst : a = b := by ring, rw subst, clear subst</code>. I.e., I want to replace a term <code>a</code> in my goal (or some assumption) by <code>b</code>, where <code>a</code> and  <code>b</code> are living in a ring and <code>a = b</code> follows from the ring axioms.</li>\n<li>The equivalent of the sequence <code>let x := a, have hx : x = a := by refl, rw ← hx</code>. I.e., I want to introduce an abbreviation <code>x</code> for some term <code>a</code> (say, to hide irrelevant structure).</li>\n</ul>",
        "id": 272696363,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1645454326
    },
    {
        "content": "<p><code>rw show a = b, by ring,</code></p>",
        "id": 272696482,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454397
    },
    {
        "content": "<p><code>set x := a</code></p>",
        "id": 272696600,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454448
    },
    {
        "content": "<p>Or <code>rw (by ring : a = b)</code> for the first</p>",
        "id": 272696626,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645454459
    },
    {
        "content": "<p>If you really think the term <code>a</code> is irrelevant you can even go as far as <code>generalize : a = x</code></p>",
        "id": 272696785,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> Thanks! I think I tried something like this, but I probably got the parentheses wrong...</p>",
        "id": 272696789,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1645454532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> In some cases, that would do, but in others, I will have to go back to the original terms.</p>",
        "id": 272696886,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1645454584
    },
    {
        "content": "<p>Then you need to remember both answers <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 272696912,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454601
    },
    {
        "content": "<p>Compare</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">generalize</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_comm</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">set</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_comm</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 272697036,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454651
    },
    {
        "content": "<p>(you need to look at the tactic state of course)</p>",
        "id": 272697061,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454665
    },
    {
        "content": "<p>Bonus: you can use <code>set x := 1 + 1 with h,</code> to also create an assumption <code>h : x = 1 + 1</code></p>",
        "id": 272697166,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Thanks. I had overlooked your first answer to my second question at first.</p>",
        "id": 272697216,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1645454750
    },
    {
        "content": "<p>How can I mark the question as solved?</p>",
        "id": 272697369,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1645454819
    },
    {
        "content": "<p>Please don't. This only generates noise</p>",
        "id": 272697394,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645454834
    },
    {
        "content": "<p>I don't think it does anymore? There is a small tick mark next to the title</p>",
        "id": 272697436,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645454864
    },
    {
        "content": "<p>Ah, OK, there is a button in the title bar. But I'll refrain from using it for now...</p>",
        "id": 272697604,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1645454938
    },
    {
        "content": "<p><a href=\"https://github.com/zulip/zulip/pull/20977\">https://github.com/zulip/zulip/pull/20977</a> is what I was thinking of, it significantly reduced the noise from this feature imo</p>",
        "id": 272697883,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645455093
    },
    {
        "content": "<p>Oh, nice!</p>",
        "id": 272697970,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645455126
    },
    {
        "content": "<p>It seems resolving the topic still posts a new message, right?</p>",
        "id": 272698049,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645455184
    },
    {
        "content": "<p>Yes, just no notification for people who didnt reply to the thread, so I guess it depends on how you use the zulip feed whether you see them all show up or not</p>",
        "id": 272699585,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645455898
    },
    {
        "content": "<p>Then it should be OK to mark the topic as resolved, since it will affect only the two of you?</p>",
        "id": 272699812,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1645455990
    }
]