[
    {
        "content": "<p>I'm having trouble with using universes and ordinals. I want to lift an ordinal one universe higher and then compare it to an ordinal of that universe but I get an error as lean isn't able to figure out what universe to use in the lift. If I explicitly say I want it of type <code>max u u+1</code> then I get an error which I think is from <code>max u u+1</code> reducing to <code>u+1</code> too early.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">-- without explicit type</span>\n<span class=\"n\">def</span> <span class=\"n\">compliment</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ordinal</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ordinal</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">O</span> <span class=\"o\">:</span> <span class=\"n\">ordinal</span> <span class=\"bp\">|</span> <span class=\"bp\">¬</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">lift</span> <span class=\"bp\">=</span> <span class=\"n\">O</span> <span class=\"o\">}</span>\n\n<span class=\"c1\">-- with explicit type</span>\n<span class=\"n\">def</span> <span class=\"n\">compliment</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ordinal</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ordinal</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">O</span> <span class=\"o\">:</span> <span class=\"n\">ordinal</span> <span class=\"bp\">|</span> <span class=\"bp\">¬</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">M</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">lift</span> <span class=\"o\">:</span> <span class=\"n\">ordinal</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">})</span> <span class=\"bp\">=</span> <span class=\"n\">O</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 204940272,
        "sender_full_name": "Fox Thomson",
        "timestamp": 1595609921
    },
    {
        "content": "<p>Unfortunately, you can't use the target type to pin down the universes here, because <code>max</code> is not injective. You have to write <code>(M a).lift.{u (u+1)}</code></p>",
        "id": 204978185,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595635491
    },
    {
        "content": "<p>That works, thank you!</p>",
        "id": 205046200,
        "sender_full_name": "Fox Thomson",
        "timestamp": 1595759379
    }
]