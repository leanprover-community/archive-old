[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 308193497,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667687817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as unresolved.</p>",
        "id": 308193676,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667687996
    },
    {
        "content": "<p>[EDIT] not needed</p>",
        "id": 308194046,
        "sender_full_name": "Joseph O",
        "timestamp": 1667688259
    },
    {
        "content": "<p>nevermind i dont need it anymore</p>",
        "id": 308194621,
        "sender_full_name": "Joseph O",
        "timestamp": 1667688729
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 308194631,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667688741
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as unresolved.</p>",
        "id": 308199016,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667692939
    },
    {
        "content": "<p>i have a function </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">sum'</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">sum'</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>and a proof </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">sum'</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>but I'm not sure how to prove it using the function.</p>",
        "id": 308199210,
        "sender_full_name": "Joseph O",
        "timestamp": 1667693157
    },
    {
        "content": "<p>The proof should be <code>by rfl</code> (or <code>rfl</code>, or <code>by refl</code> if using Lean3)</p>",
        "id": 308199316,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667693258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/rewrite.20rule/near/308199316\">said</a>:</p>\n<blockquote>\n<p>The proof should be <code>by rfl</code> (or <code>rfl</code>, or <code>by refl</code> if using Lean3)</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">tactic.istep</span> <span class=\"mi\">21</span> <span class=\"mi\">30</span> <span class=\"mi\">21</span> <span class=\"mi\">30</span> <span class=\"mi\">90</span> <span class=\"n\">rfl</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">rfl</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">?</span><span class=\"n\">m_2</span> <span class=\"bp\">=</span> <span class=\"bp\">?</span><span class=\"n\">m_2</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">tactic</span> <span class=\"bp\">?</span><span class=\"n\">m_1</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"bp\">?</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">case</span> <span class=\"n\">nat.zero</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"n\">even_mul_self_pred</span>\n<span class=\"bp\">⊢</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">sum'</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span>\n</code></pre></div>",
        "id": 308199505,
        "sender_full_name": "Joseph O",
        "timestamp": 1667693452
    },
    {
        "content": "<p>Oh so your goal isn't <code>sum' 0 = 0</code>, contrary to your previous message</p>",
        "id": 308199609,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667693545
    },
    {
        "content": "<p>Is this Lean 3 or 4?</p>",
        "id": 308199635,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667693583
    },
    {
        "content": "<p>it wasnt my goal, it was a <code>have</code></p>",
        "id": 308199653,
        "sender_full_name": "Joseph O",
        "timestamp": 1667693616
    },
    {
        "content": "<p>Can you please provide a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ?</p>",
        "id": 308199736,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667693659
    },
    {
        "content": "<p>the goal was </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">case</span> <span class=\"n\">nat.zero</span>\n<span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"n\">even_mul_self_pred</span>\n<span class=\"bp\">⊢</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">sum'</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>my current proof is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">{</span>\n    <span class=\"n\">rw</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">sum'</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 308199744,
        "sender_full_name": "Joseph O",
        "timestamp": 1667693675
    },
    {
        "content": "<p>Replace sorry with <code>rfl</code></p>",
        "id": 308199758,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667693694
    },
    {
        "content": "<p>oh that works, thanks</p>",
        "id": 308199871,
        "sender_full_name": "Joseph O",
        "timestamp": 1667693798
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 308200236,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667694210
    }
]