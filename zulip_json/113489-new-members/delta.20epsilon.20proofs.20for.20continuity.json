[
    {
        "content": "<p>I plan on working a bit more closely with the topology files in mathlib, and in the future will be working in the reals quite a bit. I find that working with the preimage definition can get a bit tedious, so I was wondering if there was a theorem somewhere in a nook or cranny of mathlib showing that a delta-epsilon proof is sufficient for proving continuity in the reals. I've been searching myself but can't seem to find such a theorem.</p>",
        "id": 198124585,
        "sender_full_name": "Charlie Conneen",
        "timestamp": 1589921397
    },
    {
        "content": "<p>Do you mean something like <code>metric.continuous_iff</code>?</p>",
        "id": 198124906,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589921536
    },
    {
        "content": "<p>darn it, Patrick got there just before me.</p>",
        "id": 198124957,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589921560
    },
    {
        "content": "<p>I did this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">instances</span><span class=\"bp\">.</span><span class=\"n\">real</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">f</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">δ</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n  <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">library_search</span>\n</code></pre></div>",
        "id": 198124972,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589921566
    },
    {
        "content": "<p>and got</p>\n<div class=\"codehilite\"><pre><span></span><code>Try this: exact metric.continuous_iff\n</code></pre></div>",
        "id": 198125017,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589921594
    },
    {
        "content": "<p>If you don't know the answer yet, you can go with</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">instances</span><span class=\"bp\">.</span><span class=\"n\">real</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">f</span> <span class=\"bp\">↔</span> <span class=\"n\">sorry</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">metric</span><span class=\"bp\">.</span><span class=\"n\">continuous_iff</span><span class=\"o\">,</span> <span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">dist_eq</span><span class=\"o\">],</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 198125056,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589921619
    },
    {
        "content": "<p>wait, you used <code>metric.continuous_iff</code> in that proof!</p>",
        "id": 198125144,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589921650
    },
    {
        "content": "<p>Awesome, this was exactly what I was looking for!</p>",
        "id": 198125163,
        "sender_full_name": "Charlie Conneen",
        "timestamp": 1589921659
    },
    {
        "content": "<p>Sure, because I knew the name of the lemmas, but I was too lazy to type the statement</p>",
        "id": 198125188,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589921674
    },
    {
        "content": "<p>Also just learned about <code>library_search</code>. That will come in handy...</p>",
        "id": 198125252,
        "sender_full_name": "Charlie Conneen",
        "timestamp": 1589921709
    },
    {
        "content": "<p>Thanks a ton!</p>",
        "id": 198125281,
        "sender_full_name": "Charlie Conneen",
        "timestamp": 1589921724
    },
    {
        "content": "<p>Charlie, you should still stop worrying and learn to love general topology and filters.</p>",
        "id": 198125289,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589921729
    },
    {
        "content": "<p>If you're learning your way around a library, <code>library_search</code> is really useful. The only other skill you need is an understanding of exactly which kind of lemma one would expect to be in Lean's maths library</p>",
        "id": 198125306,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589921745
    },
    {
        "content": "<p>Haha! No worries there, I absolutely adore general topology. I am only working with fancy spaces out of necessity...</p>",
        "id": 198125564,
        "sender_full_name": "Charlie Conneen",
        "timestamp": 1589921872
    }
]