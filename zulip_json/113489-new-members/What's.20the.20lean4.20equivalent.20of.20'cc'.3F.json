[
    {
        "content": "<p>Hi all! I'm learning Lean this evening, by working through the Natural Numbers Game. However, I'm using Lean 4, and the game just seems to be for Lean 3. So I'm converting each challenge to Lean 4 as I go. I've hit my first stumbling block: <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=6&amp;level=9\">https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=6&amp;level=9</a> This chapter recommends solving with the tactic <code>cc</code>, but I can't see this tactic in Lean 4, or any equivalent of it. Could someone suggest how I would concisely solve this one in Lean 4?</p>",
        "id": 313715830,
        "sender_full_name": "jim",
        "timestamp": 1670088763
    },
    {
        "content": "<p>I found <a href=\"https://leanprover.github.io/lean4/doc/lean3changes.html\">https://leanprover.github.io/lean4/doc/lean3changes.html</a> - which looks useful, but it only seems to cover \"language-level\" breaking changes, rather than breaking changes in libraries, tactics, macros etc</p>",
        "id": 313717255,
        "sender_full_name": "jim",
        "timestamp": 1670089606
    },
    {
        "content": "<p>I also found <code>congr</code>, but it seems to be something different, and only usable within a <code>conv</code> mode (not really sure what I'm talking about here)</p>",
        "id": 313718109,
        "sender_full_name": "jim",
        "timestamp": 1670090249
    },
    {
        "content": "<p>I think the Lean 4 equivalent of <code>cc</code> is called <code>cc</code>--it just hasn't been written yet.</p>",
        "id": 313718859,
        "sender_full_name": "Reid Barton",
        "timestamp": 1670090675
    },
    {
        "content": "<p>I also didn't realize that this \"maze\" was within the scope of <code>cc</code>.</p>",
        "id": 313718890,
        "sender_full_name": "Reid Barton",
        "timestamp": 1670090693
    },
    {
        "content": "<p>A very logician-style answer :)</p>",
        "id": 313719361,
        "sender_full_name": "jim",
        "timestamp": 1670091013
    },
    {
        "content": "<p>Thanks, no worries - I don't think I need it</p>",
        "id": 313719398,
        "sender_full_name": "jim",
        "timestamp": 1670091055
    },
    {
        "content": "<p><code>solve_by_elim</code> might work for the maze (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Mathlib.Tactic.SolveByElim.solveByElim#doc\">docs4#Mathlib.Tactic.SolveByElim.solveByElim</a>)</p>",
        "id": 313720143,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1670091467
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> - I'm just using prelude etc at the moment and haven't figured out how to install packages like mathlib - I'll give it a go</p>",
        "id": 313721201,
        "sender_full_name": "jim",
        "timestamp": 1670092115
    },
    {
        "content": "<p>@jim have you seen <a href=\"https://lovettsoftware.com/NaturalNumbers/TutorialWorld.lean.html\">https://lovettsoftware.com/NaturalNumbers/TutorialWorld.lean.html</a>?</p>",
        "id": 313777805,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670142410
    }
]