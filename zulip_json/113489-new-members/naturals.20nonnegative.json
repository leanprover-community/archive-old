[
    {
        "content": "<p>Can someone please help me turn this into \"false\"? </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span>\n<span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span>\n<span class=\"err\">⊢</span> <span class=\"err\">Σ&#39;</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</pre></div>",
        "id": 190295670,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1583941094
    },
    {
        "content": "<p>I would try <code>have : not (0 &gt; n), by library_search,</code> and see what it prints, probably something like <code>not_lt_zero</code>.</p>",
        "id": 190296153,
        "sender_full_name": "Reid Barton",
        "timestamp": 1583941327
    },
    {
        "content": "<p><code>linarith</code> should be able to do it too, but that's overkill</p>",
        "id": 190296181,
        "sender_full_name": "Reid Barton",
        "timestamp": 1583941341
    },
    {
        "content": "<p>Thanks! But now I can't seem to finish it from \"false\" ... Help please?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">subtraction</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"err\">Σ&#39;</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">m</span>\n<span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">induction</span> <span class=\"n\">m</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">contr</span><span class=\"o\">:=</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">not_lt_zero</span> <span class=\"n\">n</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 190298820,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1583942545
    },
    {
        "content": "<p><code>exfalso</code></p>",
        "id": 190298866,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1583942575
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>There are no cases to consider :-)</p>",
        "id": 190300777,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1583943496
    }
]