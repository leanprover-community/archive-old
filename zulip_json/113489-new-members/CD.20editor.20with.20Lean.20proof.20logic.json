[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  I'm making a commutative diagram editor, that assists you or offers options for the next step to take in proving something.  </p>\n<p>The graphical part is already written (last year's personal project) in PyQt5 and it's very nice.  It even stores the undo/redo stack so even if you restart your machine, you can still undo from where you left off.   Things it would assist with would be stuff like: </p>\n<p>If I take an element 'x' at this module (a node), then there should be an element 'f(x)' in this other mapped to module.  And so on.</p>\n<p>I used to have videos up on YT showing its capabilities.   I'll work on it this week and post a video for you to get a better idea of it.</p>",
        "id": 174029326,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566633953
    },
    {
        "content": "<p>So you want your software to write Lean code and simply ask Lean to check it? It looks like you could even get away with using lean in command line mode (although using the Lean server would be faster for incremental changes)</p>",
        "id": 174029438,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566634146
    },
    {
        "content": "<p>Yes, I think server mode for now, but I will try both.</p>",
        "id": 174029445,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634183
    },
    {
        "content": "<p>I guess the \"proof ideas\" have to come from my app?</p>",
        "id": 174029491,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634238
    },
    {
        "content": "<p>I'm not 100% sure how Lean works, I will learn more about it this coming week</p>",
        "id": 174029499,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634277
    },
    {
        "content": "<p>It depends on the proof. Again it would help to have a full example of some proof you'd like your software to handle</p>",
        "id": 174029501,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566634306
    },
    {
        "content": "<p>I have an image on MSE</p>",
        "id": 174029542,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634323
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"https://i.stack.imgur.com/4uCeN.png\" target=\"_blank\" title=\"https://i.stack.imgur.com/4uCeN.png\"><img src=\"https://i.stack.imgur.com/4uCeN.png\"></a></div>",
        "id": 174029548,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634365
    },
    {
        "content": "<p>That's done in Paint3D not the app</p>",
        "id": 174029550,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634378
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/LQwxFTOLysGeMDSXoFKYqcQK/BananaCats_IsomorphismArrow.png\" target=\"_blank\" title=\"BananaCats_IsomorphismArrow.png\">BananaCats_IsomorphismArrow.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/LQwxFTOLysGeMDSXoFKYqcQK/BananaCats_IsomorphismArrow.png\" target=\"_blank\" title=\"BananaCats_IsomorphismArrow.png\"><img src=\"/user_uploads/3121/LQwxFTOLysGeMDSXoFKYqcQK/BananaCats_IsomorphismArrow.png\"></a></div>",
        "id": 174029614,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634480
    },
    {
        "content": "<p>There's one version's screenshot.  It also supports nodes within nodes, but I'm thinking of defeaturing that for the sake of graphics scene speed in PyQt5.</p>",
        "id": 174029623,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634524
    },
    {
        "content": "<p>About the drawing part, are you aware of <a href=\"https://tikzcd.yichuanshen.de/\" target=\"_blank\" title=\"https://tikzcd.yichuanshen.de/\">https://tikzcd.yichuanshen.de/</a>?</p>",
        "id": 174029670,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566634572
    },
    {
        "content": "<p>About your first picture, I'm afraid I don't understand the statement</p>",
        "id": 174029674,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566634596
    },
    {
        "content": "<p>Yep, I've used that before.  The editing in BananaCats is a lot easier.</p>",
        "id": 174029677,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634614
    },
    {
        "content": "<p>Oh it's a visual proof of (part of) Yoneda's lemma, but obviously not 100% visual since there's that added remark at the bottom.</p>",
        "id": 174029686,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634665
    },
    {
        "content": "<p>I'm thinking of breaking the proofs up into \"slides\" (actually application tabs).  <br>\nSo you'd click a button to functor, enter in the functors name, and it pops open the functored diagram.</p>",
        "id": 174029733,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634743
    },
    {
        "content": "<p>Also supports positional reflection of arrows / nodes, so if you modify the source diagram, you can optionally (by default) automatically position the parts of the target diagram.</p>",
        "id": 174029738,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634783
    },
    {
        "content": "<p>As far as \"diagram rules\" go, I'm not sure precisely how I'll accomplish that.  I've heard of Double-Pushout Rewriting of graphs, but it's scope is limited to adhesive categories (a lot of which are the usual categories).  But I'm sure Lean will help a lot with the logic part.  Rule intro / elimination etc.  I have to figure out a way to encode the diagrams into Lean code eventually.</p>",
        "id": 174029843,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566634957
    },
    {
        "content": "<p>Also will support drag-n-drop between app instances, and drag-n-drop of an image and text into the browser (for posting on say MSE).</p>",
        "id": 174029910,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566635126
    },
    {
        "content": "<p>Drag-n-drop of the objects in the scene already works, that's how I do copy/paste actually.</p>",
        "id": 174029950,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566635167
    },
    {
        "content": "<p><span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 174029957,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1566635209
    }
]