[
    {
        "content": "<p>Hello everyone!</p>\n<p>This is me, Kalle Kyt√∂l√§ <code>:= by refl</code>.</p>\n<p>I consider myself a mathematical physicist --- which could of course mean just about anything... So more specifically I work on certain two-dimensional statistical physics models and related conformal field theories. To a mathematician that might still not be particularly informative, so as a good first approximation what I do is probability theory and representation theory.</p>\n<p>I am not yet a complete beginner at formalization, but I (might) aspire to become one.</p>",
        "id": 232683522,
        "sender_full_name": "Kalle Kyt√∂l√§",
        "timestamp": 1617234836
    },
    {
        "content": "<p>I think there's something about this stuff in general, but I specifically got hooked by the Natural Number Game and the super helpful atmosphere here on this Zulip chat.</p>\n<p>Btw, for those fortunate enough to have the <a href=\"http://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\">NNG</a> ahead of them --- don't wait, it's amazing! One part of it just completely blew my mind (in a good way). Overall, it is just a really well designed puzzle game, and absolutely impeccably and insightfully narrated! I think it should be nominated for a ... well I don't know if there are prizes in that category, but it is the best natural number game I ever saw. Thank you so much, Kevin Buzzard and Mohammad Pedramfar!</p>\n<p>Looking for a sequel to the NNG, I also did half of <a href=\"https://github.com/ImperialCollegeLondon/formalising-mathematics\">Kevin Buzzard's course</a> so far. I look forward to a few more spare moments to look at the rest of it.</p>\n<p>Inspired by those, I finally did my first own attempts at formalizing something I thought should be sufficiently easy. And well, I was wrong.</p>",
        "id": 232683771,
        "sender_full_name": "Kalle Kyt√∂l√§",
        "timestamp": 1617234997
    },
    {
        "content": "<p>(Part of my mathematical background is in topological phases --- e.g. modular tensor categories, fusion categories, etc, so not-so-far from what you do. I'd be really excited to see some more physically-motivated maths coming to Lean!)</p>",
        "id": 232683796,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617235029
    },
    {
        "content": "<p>Yeah, not that far from the topics!</p>\n<p>I hope to finish some work in the near future about braided tensor category structure of a (certain) category of modules of a generic Virasoro vertex operator algebra (not the rational VOAs of the minimal models, but slightly more badly behaved ones). And a dream would be to formalize something to that direction, but I'll probably start from something else <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span>.</p>\n<p>Still, much of what I do is probability, which is quite different <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>.</p>",
        "id": 232684362,
        "sender_full_name": "Kalle Kyt√∂l√§",
        "timestamp": 1617235390
    },
    {
        "content": "<p>Welcome! I was once a condensed matter theorist, and while I never worked with CFTs directly in my research, I did learn enough about them to be fascinated by their \"magic\". I think your research topics are closely related to those of <span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span>, who was hanging out here a bit (though sadly he hasn't been active in about a year; hopefully this ping is not unwelcome).</p>\n<p>As far as I know, we only have a very small amount of probability theory in mathlib at the moment. Maybe <span class=\"user-mention\" data-user-id=\"350992\">@R√©my Degenne</span>, <span class=\"user-mention\" data-user-id=\"247798\">@Martin Zinkevich</span> and <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> can say a bit about what's there and what's to come?</p>",
        "id": 232686694,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1617237172
    },
    {
        "content": "<p>Is <span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span> here?!? Wow. Hi!</p>\n<p>Because among the people I imagined might have an interest in trying to formalize similar things, he was actually the first who came to my mind (and he is certainly more competent with computers than I am). But I never talked with him about this yet <span aria-label=\"speechless\" class=\"emoji emoji-1f636\" role=\"img\" title=\"speechless\">:speechless:</span>.</p>\n<p>Thanks for pointing out, superb!</p>",
        "id": 232687057,
        "sender_full_name": "Kalle Kyt√∂l√§",
        "timestamp": 1617237426
    },
    {
        "content": "<p>I was also asked in a private meddage by <span class=\"user-mention\" data-user-id=\"362285\">@Joao Bregunci</span> about probability theory, so let me reply to both Joao and <span class=\"user-mention\" data-user-id=\"373986\">@Kalle Kyt√∂l√§</span> about the state of probability theory in Lean.</p>\n<p>There is quite an extensive library of measure theory in Lean, with a lot of properties about measures and integrals. Probability distributions are a special case of measures, which are defined here: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.probability_measure\">docs#measure_theory.probability_measure</a>. However, there is not much work on probability theory specifically yet. The <code>probability</code> folder only contains 2 files:</p>\n<ul>\n<li><a href=\"https://leanprover-community.github.io/mathlib_docs/probability_theory/independence.html\">independence.lean</a> about independent sets and (more generally) independent sigma-algebras.</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib_docs/probability_theory/integration.html\">integration.lean</a> which mostly contains the proof that independent random variables satisfy <code>E[f * g] = E[f] * E[g]</code>. As you can see, the statement of this fact (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/probability_theory.lintegral_mul_eq_lintegral_mul_lintegral_of_indep_fun\">docs#probability_theory.lintegral_mul_eq_lintegral_mul_lintegral_of_indep_fun</a>) doesn't look very \"probabilistic\" yet. Though we could add notations like <code>ùîº f := ‚à´‚Åª x, f x</code>.<br>\nSo there isn't much probability theory yet, though of course we also have many facts about probabilities that hold for general measures (the additivity of expected values, for example). </li>\n</ul>\n<p>But if you want to extend the library, you can add - for example - variance, standard deviation, covariance, cumulants, conditional probability (which will be a multiple of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.measure.restrict\">docs#measure_theory.measure.restrict</a>), martingales (which will be significantly harder), or your favorite theorem from probability theory. <br>\nI don't know what's coming in probability theory, I'm not working on anything in probability myself, at the moment.</p>",
        "id": 232954319,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1617398865
    },
    {
        "content": "<p>Thanks for replying Floris. I am going to take a look at the measure theory library and see if there is a way in which I can meaningfully contribute. One of my only worries for now is that I've seen a Lean library called <a href=\"https://github.com/google/formal-ml\">Formal ML</a> that seems to do a lot in the ways of formalizing probability from <span class=\"user-mention\" data-user-id=\"247798\">@Martin Zinkevich</span>. I wanted to know if there any plans to incorporate any part of Formal ML in the Mathlib (Martin as already contributed Probability Theory in Lean also).</p>",
        "id": 233006685,
        "sender_full_name": "Joao Bregunci",
        "timestamp": 1617456701
    },
    {
        "content": "<p>Thank you Floris! This is very useful information!</p>\n<p>To be very clear, I will not anytime soon reach a level where I can actually contribute, so for now I'm just creating exercises for myself (and I keep getting stuck at the syntax).</p>\n<p>That said, one reason I chose conditional expected values as my first exercise is that if conditional expected values could be formalized, then much of discrete time martingale theory does not appear an awful lot harder (?). And martingale theory would have some really nice consequences (including an alternative proof of the Radon-Nikodym theorem, although I heard from Heather Macbeth that a proof of it is already being PR'd). Anyways, my level is far from a contributor, so right now I'm treating these as just additional levels of the NNG. If and when someone serious independently does the mathlib version of the topics I'm playing with, that's great for everyone.</p>",
        "id": 233008590,
        "sender_full_name": "Kalle Kyt√∂l√§",
        "timestamp": 1617458517
    },
    {
        "content": "<p>There is a nice martingale proof also of the SLLN.</p>",
        "id": 233009053,
        "sender_full_name": "Jason Rute",
        "timestamp": 1617458970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"362285\">Joao Bregunci</span> <a href=\"#narrow/stream/113489-new-members/topic/Kalle.20Kyt.C3.B6l.C3.A4/near/233006685\">said</a>:</p>\n<blockquote>\n<p>One of my only worries for now is that I've seen a Lean library called <a href=\"https://github.com/google/formal-ml\">Formal ML</a> that seems to do a lot in the ways of formalizing probability from <span class=\"user-mention silent\" data-user-id=\"247798\">Martin Zinkevich</span>. I wanted to know if there any plans to incorporate any part of Formal ML in the Mathlib (Martin as already contributed Probability Theory in Lean also).</p>\n</blockquote>\n<p>Martin can probably tell you more himself, but I believe his plan is to gradually PR the material from his Formal ML library into mathlib.</p>",
        "id": 233020730,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1617471885
    },
    {
        "content": "<p>Actually ... maybe he would be glad of some help on this!</p>",
        "id": 233020760,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1617471922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> , if this is his plan I would love to help him if possible. Do you know how can I reach him? He seems to not be here on Zulip as of recently...</p>",
        "id": 233030098,
        "sender_full_name": "Joao Bregunci",
        "timestamp": 1617481061
    },
    {
        "content": "<p>It's a good question!  He makes PRs on mathlib from time to time so maybe Github is a better place to reach him, or maybe someone like <span class=\"user-mention\" data-user-id=\"350992\">@R√©my Degenne</span> who has reviewed his work often will have a better idea.</p>",
        "id": 233031111,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1617482194
    },
    {
        "content": "<p>I am not sure what the etiquette here is, not to mention the ethics and the law -- if a person writes a Lean package under an open-source license (as Martin did with FormalML), is it ok for someone else to PR parts of it, keeping the copyright and authorship intact?</p>",
        "id": 233031296,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1617482426
    },
    {
        "content": "<p>It would certainly be very nice to get the rest of Martin's work into mathlib.</p>",
        "id": 233031334,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1617482510
    }
]