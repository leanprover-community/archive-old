[
    {
        "content": "<h1>Installing Lean on an M1 based Mac</h1>\n<h2>Changelog</h2>\n<ul>\n<li>21 September 2021 - First version. Known to work on my M1 MacBook Air running Big Sur (macOS 11.6 build 20G165)</li>\n</ul>\n<h2>Install <code>brew</code> and <code>leanproject</code></h2>\n<p>Install <a href=\"https://brew.sh/\">Homebrew</a> by running the following command in in <a href=\"http://Terminal.app\">Terminal.app</a> (found in the <code>/Applications/Utilities/</code> folder)</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/bin/bash -c <span class=\"s2\">\"</span><span class=\"k\">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</code></pre></div>\n<p>Now run the following command to install <a href=\"https://leanprover-community.github.io/leanproject.html\">leanproject</a>. This may take a few minutes because the <code>mathlibtools</code> packages has many dependecies that <code>brew</code> will automatically install.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>brew update\nbrew install mathlibtools\n</code></pre></div>\n<h3>Install <code>elan</code> from source</h3>\n<p>Do not install <code>elan</code> from <code>brew</code>. It won't work. Instead, we must build it from source. Start by installing some dependencies</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>brew install git\nbrew install gmp\nbrew install coreutils\nbrew install rust\n</code></pre></div>\n<p>Now we need to get the sources. I put most things like this in my <code>~/repos</code> folder, but feel free to put the sources where you want. (Note that <code>v1.0.8</code> is the newest release of <code>elan</code>, but it fails with the following error message, so <code>v1.0.7</code> it is for now)</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>elan v1.0.8 error message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>error: failed to run custom build command for <code>elan-dist v1.11.0 (/Users/trevor/repos/elan/src/elan-dist)</code></p>\n<p>Caused by:<br>\n  process didn't exit successfully: <code>/Users/trevor/repos/elan/target/debug/build/elan-dist-cf4fa37c4a1b6d17/build-script-build</code> (exit status: 101)<br>\n  --- stderr<br>\n  thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: NotPresent', src/elan-dist/build.rs:8:50<br>\n  note: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace</p>\n</div></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>mkdir -p ~/repos/\n<span class=\"nb\">cd</span> ~/repos\ngit clone https://github.com/leanprover/elan.git\ngit checkout v1.0.7\n<span class=\"nb\">cd</span> elan\n</code></pre></div>\n<p>Now we need to build and install <code>elan</code>. The <code>cargo</code> command comes from installing <code>rust</code> above. It builds and pulls in the dependencies for <code>elan</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo build\ncargo install\n<span class=\"nb\">cd</span> target/release/\n./elan-init\n</code></pre></div>\n<p>You'll probably just want to \"Proceed with installation (default)\" by pressing 1 then the return key. Now run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">source</span> <span class=\"nv\">$HOME</span>/.elan/env\n</code></pre></div>\n<p>so that your current Terminal session can find <code>elan</code>. This won't be neccesary in any newly open Terminal sessions.</p>\n<h2>Replace the Lean binaries</h2>\n<p>If you type <code>lean</code> in your Terminal you will get an error. While most apps work fine under Apple's emulation layer, for some reason <code>lean</code> and/or <code>brew</code> work together to confuse the emulation. So what we are going to do is build <code>lean</code> and its related commands from source and replace those files in the folder where <code>elan</code> stores its various binaries. Here we go:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> ~/repos/\ngit clone https://github.com/leanprover-community/lean.git\n<span class=\"nb\">cd</span> lean\ncat ~/.elan/update-hashes/stable\n</code></pre></div>\n<p>You should see something like <code>https://github.com/leanprover-community/lean/releases/tag/v3.33.0</code> printed out now. Take the last part after the <code>/tag/</code> (here it is <code>v3.33.0</code>) and run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git checkout v3.33.0\nmkdir -p build/release\n<span class=\"nb\">cd</span> build/release\nbrew install cmake\ncmake ../../src\nmake\n</code></pre></div>\n<p>This takes only 6 minutes with your new fancy M1 chip. Now we copy the built files where <code>elan</code> can find them. Note, you may have to type <code>y</code> to confirm deleting the Lean files.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> ../../\nrm ~/.elan/toolchains/stable/bin/lean\nrm ~/.elan/toolchains/stable/bin/leanchecker\nrm ~/.elan/toolchains/stable/bin/leanpkg\ncp bin/lean ~/.elan/toolchains/stable/bin\ncp bin/leanpkg ~/.elan/toolchains/stable/bin\ncp build/release/checker/leanchecker ~/.elan/toolchains/stable/bin\n</code></pre></div>\n<p>You should be able to run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>lean -v\nleanchcker -v\nleanpkg -v\n</code></pre></div>\n<p>to verify everything is running correctly. Congratulations, you have <code>lean</code> installed now.</p>\n<h2>Install VSCode</h2>\n<p>You may want to run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>brew install --cask visual-studio-code\ncode --install-extension jroesch.lean\n</code></pre></div>\n<p>to get VSCode and the Lean extension installed.</p>\n<h2>Install other Lean version</h2>\n<p>Lets say you run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>mkdir -p ~/projects/\n<span class=\"nb\">cd</span> ~/projects/\nleanproject get ImperialCollegeLondon/formalising-mathematics\n</code></pre></div>\n<p>so that you can install the wonderful <a href=\"https://github.com/ImperialCollegeLondon/formalising-mathematics\">Formalising Mathematics</a> workshop files. When doing this you'll get the error</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>dyld: Library not loaded: /usr/local/opt/gmp/lib/libgmp.10.dylib\n  Referenced from: /Users/trevor/.elan/toolchains/leanprover-community--lean---3.24.0/bin/lean\n  Reason: image not found\nCommand '['leanpkg', 'configure']' died with &lt;Signals.SIGABRT: 6&gt;.\n</code></pre></div>\n<p>because this Lean project requires a different version of Lean that we installed before. To fix this, we may do the following (note the <code>leanprover-community--lean---3.24.0</code> part from the error message)</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cat ~/.elan/update-hashes/leanprover-community--lean---3.24.0\n</code></pre></div>\n<p>which, unsurprisingly, tells us that the correct <code>git</code> tag is <code>v3.24.0</code> for this version of Lean. So now we run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> ~/repos/lean\ngit checkout v3.24.0\nmkdir -p build/release\n<span class=\"nb\">cd</span> build/release\nbrew install cmake\ncmake ../../src\nmake\n</code></pre></div>\n<p>and wait about 6 more minutes for Lean to build. Then we run </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> ../../\nrm ~/.elan/toolchains/leanprover-community--lean---3.24.0/bin/lean\nrm ~/.elan/toolchains/leanprover-community--lean---3.24.0/bin/leanchecker\nrm ~/.elan/toolchains/leanprover-community--lean---3.24.0/bin/leanpkg\ncp bin/lean ~/.elan/toolchains/leanprover-community--lean---3.24.0/bin\ncp bin/leanpkg ~/.elan/toolchains/leanprover-community--lean---3.24.0/bin\ncp build/release/checker/leanchecker ~/.elan/toolchains/leanprover-community--lean---3.24.0/bin\n</code></pre></div>\n<p>and now we have Lean 3.24.0 installed as well. I recommend first deleting the failed <code>formalising-mathematics</code> folder from before before continuing. So something like</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> ~/projects/\nrm -rf formalising-mathematics\nleanproject get ImperialCollegeLondon/formalising-mathematics\ncode formalising-mathematics\n</code></pre></div>\n<p>and you should be up and running.</p>",
        "id": 254299189,
        "sender_full_name": "Trevor Fancher",
        "timestamp": 1632271186
    },
    {
        "content": "<p>When deleting the Lean files here, I get the error message No such file or directory</p>\n<p>lean % cd ../../<br>\nrm ~/.elan/toolchains/stable/bin/lean<br>\nrm ~/.elan/toolchains/stable/bin/leanchecker<br>\nrm ~/.elan/toolchains/stable/bin/leanpkg<br>\ncp bin/lean ~/.elan/toolchains/stable/bin<br>\ncp bin/leanpkg ~/.elan/toolchains/stable/bin<br>\ncp build/release/checker/leanchecker ~/.elan/toolchains/stable/bin<br>\noverride r-xr-xr-x  timchiu/staff for /Users/timchiu/.elan/toolchains/stable/bin/lean? y<br>\noverride r-xr-xr-x  timchiu/staff for /Users/timchiu/.elan/toolchains/stable/bin/leanchecker? y<br>\noverride r-xr-xr-x  timchiu/staff for /Users/timchiu/.elan/toolchains/stable/bin/leanpkg? y<br>\ncp: bin/lean: No such file or directory<br>\ncp: bin/leanpkg: No such file or directory<br>\ncp: build/release/checker/leanchecker: No such file or directory</p>\n<p>Any help would be appreciated</p>",
        "id": 259720762,
        "sender_full_name": "Chiu Tim",
        "timestamp": 1635586217
    },
    {
        "content": "<p>don't delete the Lean files?</p>",
        "id": 259720776,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635586265
    },
    {
        "content": "<p>Kevin is saying: we don't know what you're doing, or why. Please give us some context.</p>",
        "id": 259721179,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635586847
    },
    {
        "content": "<p>I can tell you what the errors mean -- <code>cp bin/lean ~/.elan/toolchains/stable/bin</code> means \"make a copy of the file <code>bin/lean</code> some place or other\" and the error <code>cp: bin/lean: No such file or directory</code> means \"...but there is no file <code>bin/lean</code> so I can't do this\"</p>",
        "id": 259721238,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635586935
    },
    {
        "content": "<p>aah got it -- you're cutting and pasting some code from the post above! Perhaps my last message is helpful then. You need your working directory to be in a place where there's a directory called <code>bin</code> with a file called <code>lean</code> in it.</p>",
        "id": 259721319,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635587059
    },
    {
        "content": "<p>You might want to post the output of <code>pwd</code> and <code>ls -al</code>, maybe all that's happening is that things are fine but you're in the wrong directory for some reason.</p>",
        "id": 259721412,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635587227
    },
    {
        "content": "<p>timchiu@192 lean % pwd<br>\n/Users/timchiu/repos/lean<br>\ntimchiu@192 lean % ls -al<br>\ntotal 72<br>\ndrwxr-xr-x  22 timchiu  staff   704 30 Oct 10:17 .<br>\ndrwxr-xr-x   4 timchiu  staff   128 30 Oct 10:15 ..<br>\n-rw-r--r--   1 timchiu  staff    49 30 Oct 10:15 .clang-format<br>\n-rw-r--r--   1 timchiu  staff   153 30 Oct 10:15 .codecov.yml<br>\ndrwxr-xr-x  12 timchiu  staff   384 30 Oct 10:47 .git<br>\n-rw-r--r--   1 timchiu  staff    27 30 Oct 10:15 .gitattributes<br>\ndrwxr-xr-x   5 timchiu  staff   160 30 Oct 10:15 .github<br>\n-rw-r--r--   1 timchiu  staff   315 30 Oct 10:15 .gitignore<br>\n-rw-r--r--   1 timchiu  staff  9160 30 Oct 10:15 LICENSE<br>\n-rw-r--r--   1 timchiu  staff  3322 30 Oct 10:15 README.md<br>\ndrwxr-xr-x   7 timchiu  staff   224 30 Oct 10:21 bin<br>\n-rw-r--r--   1 timchiu  staff   308 30 Oct 10:15 bors.toml<br>\ndrwxr-xr-x   3 timchiu  staff    96 30 Oct 10:17 build<br>\ndrwxr-xr-x  14 timchiu  staff   448 30 Oct 10:15 doc<br>\ndrwxr-xr-x   3 timchiu  staff    96 30 Oct 10:15 extras<br>\ndrwxr-xr-x   4 timchiu  staff   128 30 Oct 10:15 images<br>\ndrwxr-xr-x   7 timchiu  staff   224 30 Oct 10:15 leanpkg<br>\ndrwxr-xr-x   9 timchiu  staff   288 30 Oct 10:15 library<br>\ndrwxr-xr-x  28 timchiu  staff   896 30 Oct 10:15 script<br>\ndrwxr-xr-x  19 timchiu  staff   608 30 Oct 10:15 src<br>\ndrwxr-xr-x   4 timchiu  staff   128 30 Oct 10:15 tests<br>\ndrwxr-xr-x  12 timchiu  staff   384 30 Oct 10:15 tmp</p>",
        "id": 259721619,
        "sender_full_name": "Chiu Tim",
        "timestamp": 1635587526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/259721319\">said</a>:</p>\n<blockquote>\n<p>aah got it -- you're cutting and pasting some code from the post above! Perhaps my last message is helpful then. You need your working directory to be in a place where there's a directory called <code>bin</code> with a file called <code>lean</code> in it.</p>\n</blockquote>\n<p>Yes, I am just copying code and I have no idea what any this means <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 259721655,
        "sender_full_name": "Chiu Tim",
        "timestamp": 1635587587
    },
    {
        "content": "<p>When you get this working, since I assume you are on a new M1 pro/max chip, I’d love to hear how long that <code>make</code> step above took.</p>",
        "id": 259728922,
        "sender_full_name": "Jason Rute",
        "timestamp": 1635597747
    },
    {
        "content": "<p>Yes I'm on the M1 pro, it took 5 minutes and 20 seconds</p>",
        "id": 259746902,
        "sender_full_name": "Tim Chiu",
        "timestamp": 1635621718
    },
    {
        "content": "<p>So it looks like you have a bin directory. What does <code>ls -l bin/</code> return?</p>",
        "id": 259756122,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635634384
    },
    {
        "content": "<p>No such file or directory</p>",
        "id": 259882558,
        "sender_full_name": "Tim Chiu",
        "timestamp": 1635782658
    },
    {
        "content": "<p>yeah but before you had a bin directory</p>",
        "id": 259882602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635782675
    },
    {
        "content": "<p>do you know about the command line? Sorry if I'm telling you things you already know</p>",
        "id": 259882662,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635782701
    },
    {
        "content": "<p>You can navigate around through directories etc on a mac using a file explorer. I think the mac one is called \"finder\"? At any point the explorer is \"in\" a given directory, and you can go into subdirectories and back up out of them etc</p>",
        "id": 259882769,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635782762
    },
    {
        "content": "<p>The command line is just the same. You typed a command <code>cp bin/lean ~/.elan/toolchains/stable/bin</code>, which means \"copy a file into a directory\", and it didn't work, the error was <code>cp: bin/lean: No such file or directory</code>. Either that file is somewhere on your system and we can try to find it, or the file is not on your system and something went wrong earlier.</p>",
        "id": 259883011,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635782865
    },
    {
        "content": "<p>The thing about <code>bin/lean</code> is that it is a <em>relative</em> path. It means \"start where we are now, then go into the <code>bin</code> directory and get the file called <code>lean</code> in that directory\".</p>",
        "id": 259883122,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635782899
    },
    {
        "content": "<p>So for example if you close your terminal and then open it again, you're screwed, because when you open a new terminal it won't be pointing to the directory which your old terminal was in.</p>",
        "id": 259883181,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635782931
    },
    {
        "content": "<p>This is why it's funny that you're telling me the error 2 days after our last conversation, because on my computer most terminals don't last two days</p>",
        "id": 259883234,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635782956
    },
    {
        "content": "<p>If you open a new terminal, and type <code>cd /Users/timchiu/repos/lean</code> and then <code>cd bin</code> and then <code>ls</code>, what happens?</p>",
        "id": 259883376,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635783012
    },
    {
        "content": "<p>Right!  I got :<br>\nlean        lean-gdb.py leanpkg     leanpkg.bat</p>",
        "id": 259990342,
        "sender_full_name": "Tim Chiu",
        "timestamp": 1635857406
    },
    {
        "content": "<p>Oh great -- <code>lean</code> is there! So go back up with <code>cd /Users/timchiu/repos/lean</code> again and then try cutting and pasting precisely the part which didn't work before, i.e.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cp</span> <span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">bin</span>\n<span class=\"n\">cp</span> <span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">leanpkg</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">bin</span>\n<span class=\"n\">cp</span> <span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">release</span><span class=\"bp\">/</span><span class=\"n\">checker</span><span class=\"bp\">/</span><span class=\"n\">leanchecker</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">bin</span>\n</code></pre></div>\n<p>If this works then you can continue with the instructions. But don't ever close your terminal and then come back to it later because this action will move the directory which the terminal is pointing out, and it moves around during the process.</p>",
        "id": 259992778,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635858653
    },
    {
        "content": "<p>In fact it seems to me that if those commands above work when your terminal is in the <code>/Users/timchiu/repos/lean</code> directory then you're all set. By the way, \"work\" means \"returns no output\". If you get an error then post it here.</p>",
        "id": 259992964,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635858732
    },
    {
        "content": "<p>Thank you so much! It's all working now.</p>",
        "id": 260028408,
        "sender_full_name": "Tim Chiu",
        "timestamp": 1635873549
    },
    {
        "content": "<p>It seems that I could not build elan in 2021 M1 Macbook.</p>\n<p><a href=\"/user_uploads/3121/_ini4VV4gxrClDqiSm_azJVe/image.png\">image.png</a><br>\n<a href=\"/user_uploads/3121/iUWDK2DE9xamXfMLfwSYtIy6/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/_ini4VV4gxrClDqiSm_azJVe/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/_ini4VV4gxrClDqiSm_azJVe/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/iUWDK2DE9xamXfMLfwSYtIy6/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/iUWDK2DE9xamXfMLfwSYtIy6/image.png\"></a></div><p>It seems that there is something wrong with the linking process?<br>\nAny help is appreciated</p>",
        "id": 260462782,
        "sender_full_name": "Qiye Tan",
        "timestamp": 1636145313
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455437\">Qiye Tan</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/260462782\">said</a>:</p>\n<blockquote>\n<p>It seems that I could not build elan in 2021 M1 Macbook.</p>\n</blockquote>\n<p>(As a general rule, it's always better to provide plain text rather than, or as well as, screenshots - someone who is debugging the problem may very well want to copy-paste some of the output.)</p>",
        "id": 260525430,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1636218927
    },
    {
        "content": "<p>Thx~ I think it is caused by curl-rust (libcurl bindings for Rust).</p>",
        "id": 260595380,
        "sender_full_name": "Qiye Tan",
        "timestamp": 1636318915
    },
    {
        "content": "<p>EDIT: Same issue as @Qiye Tan above.<br>\nUnfortunately, the elan installation is not working for me. <br>\nProceeding without elan and seeing how far it gets me. </p>\n<p>I'm on a 2021 M1 Macbook OS12.0.1<br>\nThe error I'm getting after <code>git checkout v1.0.7 &amp;&amp; cargo build</code>is the following. I tried with a couple later version as well with no luck. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">linking</span> <span class=\"k\">with</span> <span class=\"bp\">`</span><span class=\"n\">cc</span><span class=\"bp\">`</span> <span class=\"n\">failed</span><span class=\"o\">:</span> <span class=\"n\">exit</span> <span class=\"n\">status</span><span class=\"o\">:</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span>\n  <span class=\"bp\">=</span> <span class=\"n\">note</span><span class=\"o\">:</span> <span class=\"s2\">\"cc\"</span> <span class=\"s2\">\"-arch\"</span> <span class=\"s2\">\"arm64\"</span>\n<span class=\"bp\">...</span>\n<span class=\"o\">[</span><span class=\"n\">lots</span> <span class=\"n\">of</span> <span class=\"n\">lines</span> <span class=\"n\">of</span> <span class=\"n\">stuff</span><span class=\"o\">]</span>\n<span class=\"bp\">...</span>\n <span class=\"bp\">=</span> <span class=\"n\">note</span><span class=\"o\">:</span> <span class=\"n\">ld</span><span class=\"o\">:</span> <span class=\"n\">reference</span> <span class=\"n\">to</span> <span class=\"n\">symbol</span> <span class=\"o\">(</span><span class=\"n\">which</span> <span class=\"n\">has</span> <span class=\"n\">not</span> <span class=\"n\">been</span> <span class=\"n\">assigned</span> <span class=\"n\">an</span> <span class=\"n\">address</span><span class=\"o\">)</span> <span class=\"n\">__ZN4curl4init9INIT_CTOR17h0f90fe9ed6126500E</span> <span class=\"k\">in</span> <span class=\"bp\">'</span><span class=\"n\">__ZN4curl4init17h5336e02b4d062249E'</span> <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">boris</span><span class=\"bp\">/</span><span class=\"n\">repos</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">target</span><span class=\"bp\">/</span><span class=\"n\">debug</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">libcurl</span><span class=\"bp\">-</span><span class=\"mi\">40</span><span class=\"n\">c3b5b867aaff40.rlib</span><span class=\"o\">(</span><span class=\"n\">curl</span><span class=\"bp\">-</span><span class=\"mi\">40</span><span class=\"n\">c3b5b867aaff40.curl.1df23e43</span><span class=\"bp\">-</span><span class=\"n\">cgu.2.rcgu.o</span><span class=\"o\">)</span> <span class=\"n\">for</span> <span class=\"n\">architecture</span> <span class=\"n\">arm64</span>\n          <span class=\"n\">clang</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">linker</span> <span class=\"n\">command</span> <span class=\"n\">failed</span> <span class=\"k\">with</span> <span class=\"n\">exit</span> <span class=\"n\">code</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"n\">to</span> <span class=\"n\">see</span> <span class=\"n\">invocation</span><span class=\"o\">)</span><span class=\"bp\">```</span>\n</code></pre></div>",
        "id": 261643235,
        "sender_full_name": "boris",
        "timestamp": 1637070818
    },
    {
        "content": "<p>For what it's worth, installing elan the usual way Just Worked for me after choosing the correct shell</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">curl</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">master</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">-</span><span class=\"n\">init.sh</span> <span class=\"bp\">-</span><span class=\"n\">sSf</span> <span class=\"bp\">|</span> <span class=\"n\">arch</span> <span class=\"bp\">-</span><span class=\"n\">x86_64</span> <span class=\"n\">sh</span>\n</code></pre></div>",
        "id": 261663503,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1637078555
    },
    {
        "content": "<p>You have a different arch though right? They appear to have been building native ARM binaries.</p>",
        "id": 261666910,
        "sender_full_name": "Julian Berman",
        "timestamp": 1637079886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/261663503\">said</a>:</p>\n<blockquote>\n<p>For what it's worth, installing elan the usual way Just Worked for me after choosing the correct shell</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">curl</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">master</span><span class=\"bp\">/</span><span class=\"n\">elan</span><span class=\"bp\">-</span><span class=\"n\">init.sh</span> <span class=\"bp\">-</span><span class=\"n\">sSf</span> <span class=\"bp\">|</span> <span class=\"n\">arch</span> <span class=\"bp\">-</span><span class=\"n\">x86_64</span> <span class=\"n\">sh</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This works. However, one has to install Homebrew this way too. To check that you are using the right install of Homebrew you can do </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"n\">which</span> <span class=\"n\">brew</span>\n<span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">brew</span>\n</code></pre></div>\n<p>If you see</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"n\">which</span> <span class=\"n\">brew</span>\n<span class=\"bp\">/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">homebrew</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">brew</span>\n</code></pre></div>\n<p>you are pointing to the wrong Homebrew. </p>\n<p>In fact, it appears to be common to have 2 Homebrew versions or even just preferring the <code>arch -x86_64</code> version. <br>\nI've opted for the approach of having an \"Open with Rosetta\" duplicate version of iTerm. See google for more, e.g. <a href=\"https://gist.github.com/progrium/b286cd8c82ce0825b2eb3b0b3a0720a0\">this</a> or <a href=\"https://seannicdao.com/2021/02/dual-install-homebrew-nvm-and-node-on-apple-m1/\">this</a>.</p>\n<p>I recommend this approach to new M1 Mac installers as general installation instructions apply once you run everything with Rosetta.</p>",
        "id": 262048642,
        "sender_full_name": "boris",
        "timestamp": 1637317077
    },
    {
        "content": "<p>Thanks Sebastian and boris, just finished setting up lean 3 on the fresh macbook M1 using this approach and it works great. Here are the steps I've used:</p>\n<ol>\n<li>\n<p>open new terminal window and install xcode command line tools and rosetta 2 using <code>xcode-select --install</code> and <code>softwareupdate --install-rosetta</code>.</p>\n</li>\n<li>\n<p>switch to the x86 architechture in the current terminal window by <code>arch -x86_64 zsh </code> as boris suggests. Everything below should happen in the same window.</p>\n</li>\n<li>\n<p>install brew with <code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"</code></p>\n</li>\n<li>\n<p>the same steps as described in <a href=\"https://leanprover-community.github.io/install/macos_details.html\">controlled installation for macos</a>:</p>\n</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">elan</span> <span class=\"n\">mathlibtools</span>\n<span class=\"n\">elan</span> <span class=\"n\">toolchain</span> <span class=\"n\">install</span> <span class=\"n\">stable</span>\n<span class=\"n\">elan</span> <span class=\"n\">default</span> <span class=\"n\">stable</span>\n</code></pre></div>\n<ol start=\"5\">\n<li>\n<p>use <code>leanproject get</code> to get the repositories needed.</p>\n</li>\n<li>\n<p>after that I've installed vs-code from the website and set it up as usual.</p>\n</li>\n</ol>\n<p>Looks like <code>leanproject</code> should always be called from <code>arch -x86_64</code>. Also I have no idea about performance downsides of using lean under rosetta vs natively.</p>",
        "id": 262832039,
        "sender_full_name": "Fedor Pavutnitskiy",
        "timestamp": 1637957873
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"436061\">@Trevor Fancher</span> I followed your instructions and they worked - thank you very much. After having played around with the formalising-mathematics project, I decided to try the tutorials project using \"leanproject get tutorials\". This gave me the same error as in your guide (when you tried to get formalising-mathematics), but with 3.35.1 instead of 3.24.0, so I tried using the same solution, replacing 3.24.0 with 3.35.1, but this didn't work. As a workaround, I've just copied the contents of the lean files into the formalising-mathematics project, which seems to work, but obviously that's not a great fix. Do you have any idea what might have gone wrong?</p>",
        "id": 263609174,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1638551439
    },
    {
        "content": "<p>This really stinks. I'm seeing undergraduates with \"congratulations on getting to university here's a new Mac\" laptops and they're having the same sort of problem too.</p>",
        "id": 263653045,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1638565588
    },
    {
        "content": "<p>Hi new here, I am having the same problem: I can download everything but terminal can't find lean project...</p>",
        "id": 263730400,
        "sender_full_name": "Leon2k2k2k",
        "timestamp": 1638650633
    },
    {
        "content": "<p>never mind haha, I tried to install everything again and it works now!</p>",
        "id": 263730803,
        "sender_full_name": "Leon2k2k2k",
        "timestamp": 1638651237
    },
    {
        "content": "<p>Following Fedor's instructions after trying to follow the instructions at the top of the page and failing to build elan like others. After installing homebrew again in the new architecture /usr/local/bin/brew now exists, but which brew still points to /opt/homebrew/bin/brew</p>",
        "id": 264579004,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639249765
    },
    {
        "content": "<p>If it is indeed important to use the right brew here, it might be nice for Trevor to update the top comment again, or for Fedor's comment to specify the full path to the correct brew in its instructions.</p>",
        "id": 264579110,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639249897
    },
    {
        "content": "<p>I would urge people to update the community website rather than random zulip posts. People getting stuck trying to install Lean 3 on one of these cursed new macs is becoming a weekly occurrence amongst Imperial people.</p>",
        "id": 264579188,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639250030
    },
    {
        "content": "<p>\"I want to get involved\" -- \"great, install lean by following the instructions on the community website to the letter\" -- \"but I have a new mac and I need help\" -- [I now have to stop what I'm doing which is typically teaching someone how to use Lean at Xena or on the discord]</p>",
        "id": 264579284,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639250102
    },
    {
        "content": "<p>Let me just confirm Fedor's instructions work, then I'll make a PR to update the site</p>",
        "id": 264579425,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639250285
    },
    {
        "content": "<p>Thank you so much. I wish I could help (because this is a pain point for me) but I don't have access to a new Mac, so all I do is moan :-(</p>",
        "id": 264579752,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639250738
    },
    {
        "content": "<p>Hehe, I am using my mom's, she has one and I don't and I wanted to try lean out on it!</p>",
        "id": 264579809,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639250796
    },
    {
        "content": "<p>An MSc student who is fully signed-up to do her MSc project with me starting in January needs help with this, and now we've moved back to online so I can't even take her mac off her and <del>throw it in the trash</del> help her to install Lean on it</p>",
        "id": 264579813,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639250809
    },
    {
        "content": "<p>Hmm, I can actually still call <code>leanproject</code>, even after restarting the terminal window, without rerunning the architecture change. Nevertheless, Fedor's instructions work, and I can use lean from VSCode. Worryingly, when trying to build mathlib from scratch using <code>lean --make src</code>, I did run into memory issues.</p>",
        "id": 264582195,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639253778
    },
    {
        "content": "<p>Do you have to build mathlib from scratch??</p>",
        "id": 264582240,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639253829
    },
    {
        "content": "<p>Why can't you use leanproject to download the oleans? Anyone would have memory issues if they tried to build mathlib from scratch nowadays. On one of my computers building mathlib from scratch reliably freezes it.</p>",
        "id": 264582311,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639253887
    },
    {
        "content": "<p>No I don't have to build it from scratch - let me be clear. I just wanted to see if the M1 is as fast as they say by building mathlib on it.</p>",
        "id": 264582764,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639254464
    },
    {
        "content": "<p><code>leanproject get-m</code> works fine with this installation process, so it should be perfectly possible to use mathlib without building it. Perhaps you're right - it seems like building mathlib takes a lot of memory even on my intel Mac.</p>",
        "id": 264582952,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639254661
    },
    {
        "content": "<p>You can use flags such as -M6000 if building on the command line</p>",
        "id": 264582977,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639254715
    },
    {
        "content": "<p>Ah, I see that command will cut down the memory usage. Thanks!</p>",
        "id": 264583036,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639254750
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/231\">Pull Request</a></p>",
        "id": 264583618,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639255499
    },
    {
        "content": "<p>Thank you so much!</p>",
        "id": 264626377,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639319715
    },
    {
        "content": "<p>Okay, so some updates - I just tried this on a new MBP (Lean took 5\"14 to build here, which isn't too bad!) and I can confirm that the new instructions work for an Intel build. I seem to also be able to build from source and follow the build instructions from the top on that step, but Activity Monitor still reports it as an Intel arch build - I'll look into this tomorrow. And finally, most importantly as it relates to the comments on the PR, I installed all other components with the M1 homebrew, and it worked fine.</p>",
        "id": 265255566,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639718602
    },
    {
        "content": "<blockquote>\n<p>I seem to also be able to build from source and follow the build instructions from the top on that step, but Activity Monitor still reports it as an Intel arch build</p>\n</blockquote>\n<p>If you share what you ran happy to help with this -- just to be sure, you didn't run it from within the <code>arch -x86_64 zsh</code> shell hopefully? Otherwise what I run is <code>rm -rf build; mkdir -p build/release; cd build/release; cmake -DCMAKE_PREFIX_PATH=/opt/homebrew/ -DCMAKE_INSTALL_PREFIX=/Users/julian/.local/share/lean/lean-\"$(git name-rev HEAD --tags | sed 's;.*/v;;')\"-darwin/ ../../src &amp;&amp; make -j4</code> -- as long as you're not in an x86 shell that should work (or also don't set <code>ARCHPREFERENCES=x84</code>, etc)</p>",
        "id": 265292324,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639746100
    },
    {
        "content": "<p>You can confirm you get an ARM build out of that from running <code>file shell/lean</code>, which should say it's an ARM executable if everything went well.</p>",
        "id": 265292442,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639746154
    },
    {
        "content": "<p>Perhaps we should split the Zulip thread though for those stubborn enough to want ARM builds, I think there's already enough confusion on the above (and the PR is likely ready to merge so I'll put my token LGTM on it)</p>",
        "id": 265292513,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639746206
    },
    {
        "content": "<p>I went ahead and merged the instructions. Thank you all very much for writing and trying them out <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 265296373,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1639748470
    },
    {
        "content": "<p>ahh, I see what happened - I copied the wrong Lean installation over (I copied to <code>stable</code>, instead of <code>leanprover-community-lean-3.35.1</code>). I may make a little script that does this all correctly for me automatically, and learn some shell scripting for proper</p>",
        "id": 265324010,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639759220
    },
    {
        "content": "<p>If you want to automate this more I'd instead recommend writing yourself a homebrew formula personally (one you use with your ARM brew). I have one for Lean 4 but I haven't cared enough to do so for Lean 3. Happy to share one too.</p>",
        "id": 265328252,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761050
    },
    {
        "content": "<p>mind sharing it? it's probably helpful to others and can base the lean3 one off it sort of (although I guess it'll be quite different with lake and all)</p>",
        "id": 265328615,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639761223
    },
    {
        "content": "<p>Sure. It's here: <a href=\"https://github.com/Julian/homebrew-tap/blob/master/Formula/lean%404.rb\">https://github.com/Julian/homebrew-tap/blob/master/Formula/lean%404.rb</a></p>",
        "id": 265328852,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761340
    },
    {
        "content": "<p>(And it's essentially directly copied from the upstream lean formula)</p>",
        "id": 265328875,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761351
    },
    {
        "content": "<p>A lean 3 one would be the same, the build process doesn't care much about lake</p>",
        "id": 265328978,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761386
    },
    {
        "content": "<p>(Keep in mind you'd need one of these for each Lean 3 version you want obviously, which is why people like elan fully handling the install)</p>",
        "id": 265329105,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761446
    },
    {
        "content": "<p>can't you make it take an argument with the version? my idea was, if you run it in the directory with the lean installation, <code>elan which lean</code> gives you the right lean version, then you can make your lean locally and copy it into the right place</p>",
        "id": 265329621,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639761658
    },
    {
        "content": "<p>also tbf, it's only a minor inconvenience right now, as rosetta seems to be able to deal with lean these days just fine</p>",
        "id": 265329666,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639761677
    },
    {
        "content": "<p>if you made the version be an argument homebrew won't let you install multiple separate invocations</p>",
        "id": 265329692,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761690
    },
    {
        "content": "<p>yes, I'd say if you're happy with rosetta I would not bother personally</p>",
        "id": 265329726,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761704
    },
    {
        "content": "<p>the only reason I do so is because I don't have or want an x86 homebrew install for any other reason</p>",
        "id": 265329759,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761721
    },
    {
        "content": "<p>ahh, I see; don't really understand how homebrew works (still my first rodeo in OSX)</p>",
        "id": 265329805,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639761728
    },
    {
        "content": "<p>don't worry no one does :P (let alone me)</p>",
        "id": 265329892,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639761768
    },
    {
        "content": "<p>OK, cool, so I've got this little shell script now:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"ch\">#!/bin/zsh</span>\n\n<span class=\"nb\">set</span> -x\n\n<span class=\"nv\">version</span><span class=\"o\">=</span><span class=\"s2\">\"v\"</span>\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"k\">$(</span>elan which lean<span class=\"k\">)</span> <span class=\"o\">=</span>~ <span class=\"s2\">\"leanprover-community--lean---(.*)\\/bin\\/lean</span>$<span class=\"s2\">\"</span> <span class=\"o\">]]</span> <span class=\"k\">then</span>\n  <span class=\"nv\">version</span><span class=\"o\">+=</span><span class=\"nv\">$match</span>\n<span class=\"k\">fi</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">version</span> <span class=\"o\">==</span> <span class=\"s2\">\"v\"</span> <span class=\"o\">]]</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">\"elan which lean reported an unsupported Lean path:\"</span>\n  <span class=\"nb\">echo</span> <span class=\"k\">$(</span>elan which lean<span class=\"k\">)</span>\n  <span class=\"nb\">exit</span> <span class=\"m\">1</span>\n<span class=\"k\">fi</span>\n\n<span class=\"nv\">lenloc</span><span class=\"o\">=</span><span class=\"k\">$(</span>elan which lean<span class=\"k\">)</span>\n<span class=\"nv\">chkloc</span><span class=\"o\">=</span><span class=\"k\">$(</span>elan which leanchecker<span class=\"k\">)</span>\n<span class=\"nv\">pkgloc</span><span class=\"o\">=</span><span class=\"k\">$(</span>elan which leanpkg<span class=\"k\">)</span>\n\n<span class=\"c1\"># Set this to a local clone of leanprover-community/lean (that you don't mind being messed with!)</span>\n<span class=\"nb\">cd</span> ~/repos/lean\n<span class=\"c1\"># Note that this is very destructive!!!</span>\ngit clean -fdx\ngit switch master\ngit pull\ngit checkout <span class=\"nv\">$version</span>\nmkdir -p build/release\n<span class=\"nb\">cd</span> build/release\ncmake -DCMAKE_PREFIX_PATH<span class=\"o\">=</span>/opt/homebrew/ -DCMAKE_INSTALL_PREFIX<span class=\"o\">=</span>~/repos/lean/ ../../src\nmake bin_lean  -j10\n<span class=\"nb\">cd</span> ../../\ncp bin/lean <span class=\"nv\">$lenloc</span>\ncp bin/leanpkg <span class=\"nv\">$pkgloc</span>\ncp build/release/checker/leanchecker <span class=\"nv\">$chkloc</span>\n</code></pre></div>\n</div></div>\n<p>I'd really appreciate if people could try this and tell me how well it works; the idea is that after you <code>leanproject get</code> some repo, and <code>elan</code> installs the x86 version of <code>leanprover-community</code> lean required to run it, this replaces the relevant binaries with the ARM version (i.e. the workflow I use is <code>leanproject get mathlib; cd mathlib; this_script</code>)</p>\n<p>Firstly, wow Lean builds in a minute - my poor 3600X was taking like 4 minutes with -j12...</p>\n<p>Secondly, this is actually not perfect; I don't know the right <code>make</code> target that will make just <code>lean</code>, <code>leanpkg</code> and <code>leanchecker</code>. If you just leave it on default, it'll build all of the stdlib for no real reason; but <code>bin_lean</code> doesn't make <code>leanchecker</code>; please let me know if anyone knows!</p>\n<p>And also, lastly, currently this script seems to need <code>sudo</code> to copy the files at the end? Which isn't great... I feel like I got wrong permissions somewhere, but this is my first time using a Unix-like OS. If someone can tell me how I can fix that, that'd be much appreciated.</p>",
        "id": 265390589,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639800444
    },
    {
        "content": "<p>Ahh, I see the permissions issue. <code>elan</code> downloads <code>lean(pkg|checker)?</code> as <code>r-xr-xr-x</code>, so I can't <code>cp</code> on top of them. my current idea for a workaround (as we should own these files) are <code>chmod u+w lean, cp blah, chmod u-w lean</code>; is there a better way to do that?</p>",
        "id": 265391336,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639801555
    },
    {
        "content": "<p>anyways, I can finally get to maths, which is the happy thing :D</p>",
        "id": 265391391,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639801608
    },
    {
        "content": "<p>I followed <span class=\"user-mention\" data-user-id=\"460215\">@Fedor Pavutnitskiy</span>'s instructions and have it now semi-working. I've been able to use <code>leanproject get tutorials</code> and <code>leanproject get ImperialCollegeLondon/formalising-mathematics</code> and have both projects working successful. However, when I try to run <code>leanproject new test_project</code> I get a very long error that ends with <code>Command '['leanpkg', 'new', 'test_project']' returned non-zero exit status 1.</code>. I have tried restarting my computer and it hasn't made any difference.</p>",
        "id": 265426420,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639844311
    },
    {
        "content": "<p>Does anyone know how I can fix this?</p>",
        "id": 265426424,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639844321
    },
    {
        "content": "<p>Can you post the error? Do you have write access to the directory where you ran the command?</p>",
        "id": 265426439,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639844367
    },
    {
        "content": "<p>Sadly the error is over a million characters, and Zulip only lets me post ten thousand</p>",
        "id": 265426985,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639845008
    },
    {
        "content": "<p>I'm pretty sure I do have access</p>",
        "id": 265426994,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639845023
    },
    {
        "content": "<p>Here are the first few lines of the error </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">option</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">41</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">type</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">o.is_some</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">bool</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">option</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">41</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">type</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">o.is_some</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">bool</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean</span><span class=\"o\">:</span><span class=\"mi\">149</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span> <span class=\"n\">name</span><span class=\"o\">,</span> <span class=\"n\">name</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">provided</span> <span class=\"n\">explicitly</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean</span><span class=\"o\">:</span><span class=\"mi\">322</span><span class=\"o\">:</span><span class=\"mi\">28</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">f</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">expr</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean</span><span class=\"o\">:</span><span class=\"mi\">353</span><span class=\"o\">:</span><span class=\"mi\">23</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">e</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">expr</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">local_context.lean</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">pexpr.lean</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">has_reflect.lean</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr_address.lean</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">declaration.lean</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr_address.lean</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">option</span><span class=\"bp\">/</span><span class=\"n\">basic.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">local_context.lean</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">option</span><span class=\"bp\">/</span><span class=\"n\">basic.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">environment.lean</span><span class=\"o\">:</span><span class=\"mi\">8</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">option</span><span class=\"bp\">/</span><span class=\"n\">basic.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">interaction_monad.lean</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">option</span><span class=\"bp\">/</span><span class=\"n\">basic.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">interaction_monad.lean</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">tactic.lean</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">option</span><span class=\"bp\">/</span><span class=\"n\">basic.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">tactic.lean</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr.lean'</span> <span class=\"n\">uses</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">sebastianmonnet</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">tactic.lean</span><span class=\"o\">:</span><span class=\"mi\">1578</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">expr.const</span> <span class=\"o\">(</span><span class=\"n\">name.mk_string</span> <span class=\"s2\">\"dite\"</span> <span class=\"n\">name.anonymous</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">tgt_u</span><span class=\"o\">]</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n</code></pre></div>",
        "id": 265427003,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639845057
    },
    {
        "content": "<p>Oh you've posted enough! What does <code>elan show</code> print out? Maybe <code>elan default leanprover-community-lean-3.30.0</code> will help? I doubt it will do much harm. I'm wondering if your default lean toolchain is lean 4.</p>",
        "id": 265427699,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639845920
    },
    {
        "content": "<p>elan show prints out </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">installed</span> <span class=\"n\">toolchains</span>\n<span class=\"c1\">--------------------</span>\n\n<span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">default</span><span class=\"o\">)</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">24</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">35</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n\n<span class=\"n\">active</span> <span class=\"n\">toolchain</span>\n<span class=\"c1\">----------------</span>\n\n<span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">default</span><span class=\"o\">)</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">33</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"n\">a0fb1e8c7ac8</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 265427753,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639845981
    },
    {
        "content": "<p>So I guess it's not that?</p>",
        "id": 265427758,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639846001
    },
    {
        "content": "<p>can you try get the first few lines of the errors?</p>",
        "id": 265428309,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639846736
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/265428309\">said</a>:</p>\n<blockquote>\n<p>can you try get the first few lines of the errors?</p>\n</blockquote>\n<p>What do you mean? Is that not what I posted above?</p>",
        "id": 265428472,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639846860
    },
    {
        "content": "<p>this looks like the sort of errors I get when Lean didn't want to compile properly when you're compiling from source, but Fedor's instructions don't seem to</p>",
        "id": 265428486,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639846879
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460212\">Sebastian Monnet</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/265428472\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/265428309\">said</a>:</p>\n<blockquote>\n<p>can you try get the first few lines of the errors?</p>\n</blockquote>\n<p>What do you mean? Is that not what I posted above?</p>\n</blockquote>\n<p>oh, what?! that's almost weirder...</p>",
        "id": 265428492,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639846892
    },
    {
        "content": "<p>what arch terminal are you running <code>leanproject</code> from?</p>",
        "id": 265428504,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639846917
    },
    {
        "content": "<p>I've tried both the default and the x86 one from Fedor's instructions</p>",
        "id": 265428583,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639846994
    },
    {
        "content": "<p>can you post a full shell-log on something like pastebin or gists</p>",
        "id": 265428678,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639847091
    },
    {
        "content": "<p><a href=\"https://gist.github.com/SebastianMonnet/a2d6531bfc7e588d3e928f84a4e851d5\">https://gist.github.com/SebastianMonnet/a2d6531bfc7e588d3e928f84a4e851d5</a></p>",
        "id": 265428950,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639847427
    },
    {
        "content": "<p>can you try setting the <code>elan</code> default to a lean install that you've used in some other context, e.g. 3.35.1?</p>",
        "id": 265430253,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639848900
    },
    {
        "content": "<p>i'm not too sure what's going on but my first idea is that <code>leanpkg</code> is written in lean itself, so that may have something to do with it</p>",
        "id": 265430276,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639848936
    },
    {
        "content": "<p>Okay I just did this</p>",
        "id": 265430375,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849081
    },
    {
        "content": "<p>Will try making a leanproject</p>",
        "id": 265430416,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849088
    },
    {
        "content": "<p>ooh</p>",
        "id": 265430423,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849104
    },
    {
        "content": "<p>It's doing something different now!</p>",
        "id": 265430427,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849111
    },
    {
        "content": "<p>Seems to be working</p>",
        "id": 265430431,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849119
    },
    {
        "content": "<p>Will report back once it's done</p>",
        "id": 265430432,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849130
    },
    {
        "content": "<p>another bruised and battered user struggles to the top of the \"installing Lean 3 on an M1\" mountain</p>",
        "id": 265430442,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639849157
    },
    {
        "content": "<p>Do we need to add some comments about setting default elan toolchain? I am a bit confused about why this is happening -- changing my default toolchain between lean 3 versions shouldn't break <code>leanproject</code> right?</p>",
        "id": 265430503,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639849215
    },
    {
        "content": "<p>Yes the project works</p>",
        "id": 265430595,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849332
    },
    {
        "content": "<p>I think the oleans or something is broken, I personally haven't tried <code>stable</code> so i'm going to run some tests to see what's going on</p>",
        "id": 265430598,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639849343
    },
    {
        "content": "<p>Thank you both for your help</p>",
        "id": 265430602,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1639849356
    },
    {
        "content": "<p>For me the only thing which changes if I change my default toolchain is that at the very beginning of the output with <code>leanproject new</code> I get a different default branch (which is deleted later on):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">new</span> <span class=\"n\">test1</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">cd</span> <span class=\"n\">test1</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">init</span> <span class=\"bp\">-</span><span class=\"n\">q</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">33</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">Switched</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">new</span> <span class=\"n\">branch</span> <span class=\"bp\">'</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">33</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">'</span>\n<span class=\"n\">configuring</span> <span class=\"n\">test1</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">Adding</span> <span class=\"n\">mathlib</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n<p>As far as I know that 3.33 stuff (which is irrelevant) is the only thing affected by the default toolchain</p>",
        "id": 265430621,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639849398
    },
    {
        "content": "<p><code>leanpkg</code> is run on <code>lean</code> itself, it's not a python program or anything so if that Lean install is borked then it will blow up</p>",
        "id": 265430677,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639849458
    },
    {
        "content": "<p>Note that mathlib master is on 3.35.1 right now and the project works fine, it's just that one random bit at the beginning; that's the only way you can tell what your default toolchain is in the process.</p>",
        "id": 265430679,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639849462
    },
    {
        "content": "<p>Oh so you're suggesting that Sebastian has a borked 3.33 install?</p>",
        "id": 265430689,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639849491
    },
    {
        "content": "<p>Not that this matters much any more</p>",
        "id": 265430705,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639849522
    },
    {
        "content": "<p>that's my only idea so far, yeah, or the 3.33 install doesn't work on M1 for some reason; something'sdefinitely weird because I just reinstalled <code>stable</code> on my elan and it came as 3.35.1</p>",
        "id": 265430712,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639849543
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/265390589\">said</a>:</p>\n<blockquote>\n<p>OK, cool, so I've got this little shell script now:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"ch\">#!/bin/zsh</span>\n\n<span class=\"nb\">set</span> -x\n\n<span class=\"nv\">version</span><span class=\"o\">=</span><span class=\"s2\">\"v\"</span>\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"k\">$(</span>elan which lean<span class=\"k\">)</span> <span class=\"o\">=</span>~ <span class=\"s2\">\"leanprover-community--lean---(.*)\\/bin\\/lean</span>$<span class=\"s2\">\"</span> <span class=\"o\">]]</span> <span class=\"k\">then</span>\n  <span class=\"nv\">version</span><span class=\"o\">+=</span><span class=\"nv\">$match</span>\n<span class=\"k\">fi</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">version</span> <span class=\"o\">==</span> <span class=\"s2\">\"v\"</span> <span class=\"o\">]]</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">\"elan which lean reported an unsupported Lean path:\"</span>\n  <span class=\"nb\">echo</span> <span class=\"k\">$(</span>elan which lean<span class=\"k\">)</span>\n  <span class=\"nb\">exit</span> <span class=\"m\">1</span>\n<span class=\"k\">fi</span>\n\n<span class=\"nv\">lenloc</span><span class=\"o\">=</span><span class=\"k\">$(</span>elan which lean<span class=\"k\">)</span>\n<span class=\"nv\">chkloc</span><span class=\"o\">=</span><span class=\"k\">$(</span>elan which leanchecker<span class=\"k\">)</span>\n<span class=\"nv\">pkgloc</span><span class=\"o\">=</span><span class=\"k\">$(</span>elan which leanpkg<span class=\"k\">)</span>\n\n<span class=\"c1\"># Set this to a local clone of leanprover-community/lean (that you don't mind being messed with!)</span>\n<span class=\"nb\">cd</span> ~/repos/lean\n<span class=\"c1\"># Note that this is very destructive!!!</span>\ngit clean -fdx\ngit switch master\ngit pull\ngit checkout <span class=\"nv\">$version</span>\nmkdir -p build/release\n<span class=\"nb\">cd</span> build/release\ncmake -DCMAKE_PREFIX_PATH<span class=\"o\">=</span>/opt/homebrew/ -DCMAKE_INSTALL_PREFIX<span class=\"o\">=</span>~/repos/lean/ ../../src\nmake -j10\n<span class=\"nb\">cd</span> ../../\nchmod u+w <span class=\"nv\">$lenloc</span> <span class=\"nv\">$pkgloc</span> <span class=\"nv\">$chkloc</span>\ncp bin/lean <span class=\"nv\">$lenloc</span>\ncp bin/leanpkg <span class=\"nv\">$pkgloc</span>\ncp build/release/checker/leanchecker <span class=\"nv\">$chkloc</span>\nchmod u-w <span class=\"nv\">$lenloc</span> <span class=\"nv\">$pkgloc</span> <span class=\"nv\">$chkloc</span>\n</code></pre></div>\n</div></div>\n<p>I'd really appreciate if people could try this and tell me how well it works; the idea is that after you <code>leanproject get</code> some repo, and <code>elan</code> installs the x86 version of <code>leanprover-community</code> lean required to run it, this replaces the relevant binaries with the ARM version (i.e. the workflow I use is <code>leanproject get mathlib; cd mathlib; this_script</code>)</p>\n<p>Firstly, wow Lean builds in a minute - my poor 3600X was taking like 4 minutes with -j12...</p>\n<p>Secondly, this is actually not perfect; I don't know the right <code>make</code> target that will make just <code>lean</code>, <code>leanpkg</code> and <code>leanchecker</code>. If you just leave it on default, it'll build all of the stdlib for no real reason; but <code>bin_lean</code> doesn't make <code>leanchecker</code>; please let me know if anyone knows!</p>\n<p>~~And also, lastly, currently this script seems to need <code>sudo</code> to copy the files at the end? Which isn't great... I feel like I got wrong permissions somewhere, but this is my first time using a Unix-like OS. If someone can tell me how I can fix that, that'd be much appreciated.~ ~ see below</p>\n</blockquote>\n<p>I've updated to one that shouldn't run into permission issues - if someone knows a better way to write the shell script lmk! Would also appreciate someone else testing it to see if it's worth using.</p>",
        "id": 265446775,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639865806
    },
    {
        "content": "<p>I was a little worried that the solutions above were beyond my competence, since I don't really understand how lean installs itself.  As an alternative, which might be better for beginners, I used Docker and the dev container setup from <a href=\"https://github.com/danielbush/lean-remote-containers\">https://github.com/danielbush/lean-remote-containers</a>.</p>\n<p>This more or less worked out of the box, presumably because the Docker images are Linux, which elan supports.</p>\n<p>I did run into one problem, which is that, if you start with a \"bare\" directory, lean complains about not having a leanpkg.toml file.  My rather unsightly solution was to run leanproject and  then restart.</p>",
        "id": 273095961,
        "sender_full_name": "Louis Theran",
        "timestamp": 1645712976
    },
    {
        "content": "<p>Welcome, Louis! Great to see you here!</p>",
        "id": 273096537,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1645713222
    },
    {
        "content": "<p>I don't have an M1 mac so I haven't tested them but I think the current recommended instructions are here; did you try these / have any trouble with them? <a href=\"https://leanprover-community.github.io/install/macos.html#m1-macs--apple-silicon\">https://leanprover-community.github.io/install/macos.html#m1-macs--apple-silicon</a></p>",
        "id": 273097253,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1645713520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/273097253\">said</a>:</p>\n<blockquote>\n<p>I don't have an M1 mac so I haven't tested them but I think the current recommended instructions are here; did you try these / have any trouble with them? <a href=\"https://leanprover-community.github.io/install/macos.html#m1-macs--apple-silicon\">https://leanprover-community.github.io/install/macos.html#m1-macs--apple-silicon</a></p>\n</blockquote>\n<p>I didn't so far, since I got a little scared off by having to install a second homebrew for a different architecture.</p>\n<p>Since just running in Docker works more or less perfectly, I didn't try anything else.  (Though I can easily imagine a more refined version where one doesn't need devcontainers and just uses \"docker run lean\" as the executable.)</p>",
        "id": 273220761,
        "sender_full_name": "Louis Theran",
        "timestamp": 1645790937
    }
]