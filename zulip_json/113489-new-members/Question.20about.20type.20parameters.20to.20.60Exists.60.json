[
    {
        "content": "<p>I am trying to understand how <code>Exists</code> works in Lean.</p>\n<p>In <code>logic.lean</code> <code>Exists</code> is defined as follows.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Exists</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">intro</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Exists</span>\n</code></pre></div>\n<p>Now in this example,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n\n<span class=\"kd\">variable</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">U</span> <span class=\"bp\">→</span> <span class=\"n\">U</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n\n<span class=\"kd\">variable</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">U</span><span class=\"o\">),</span> <span class=\"n\">A</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>What values would <code>α</code> and <code>p</code> take in the type constructor for <code>Exists</code>?</p>",
        "id": 219711805,
        "sender_full_name": "Rajiv",
        "timestamp": 1607784363
    },
    {
        "content": "<p>This is syntactic sugar for nested exists</p>",
        "id": 219711845,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607784443
    },
    {
        "content": "<p>you can put <code>set_option pp.all true</code> on the line before <code>#check a</code></p>",
        "id": 219711851,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607784471
    },
    {
        "content": "<p>Thanks Kenny. I am really looking forward to going back to Haskell, after I understand lean type system! :-)</p>",
        "id": 219712041,
        "sender_full_name": "Rajiv",
        "timestamp": 1607784764
    }
]