[
    {
        "content": "<p>I want to use a null character ('\\0') is there a way to express that in lean4?</p>",
        "id": 321541009,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1673825218
    },
    {
        "content": "<p>I do not know if this is the null character, but it may help in finding it, even if it isn't!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span> <span class=\"o\">(âŸ¨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">âŸ©</span> <span class=\"o\">:</span> <span class=\"n\">Char</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>If you change <code>0</code> to other values, you'll range through the characters.</p>",
        "id": 321541196,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1673825409
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> !! I'll try figuring that out :)</p>",
        "id": 321541381,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1673825625
    },
    {
        "content": "<p>It seems that you should look for the \"unicode scalar value\" for the null character, but googling for it, yielded no answer.</p>\n<p>This may be more idiomatic:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span> <span class=\"k\">let</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"mi\">20000</span>\n      <span class=\"o\">(</span><span class=\"n\">List.iota</span> <span class=\"n\">m</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Char.ofNat</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">i</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 321541568,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1673825867
    },
    {
        "content": "<p>What do you want to use the null character for?</p>",
        "id": 321541745,
        "sender_full_name": "Reid Barton",
        "timestamp": 1673826047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>  I'm trying to implement lox language from crafting interpreters and there is line in <a href=\"https://craftinginterpreters.com/scanning.html#longer-lexemes\">longer lexemes</a> where I need to port this function.</p>\n<div class=\"codehilite\" data-code-language=\"Java\"><pre><span></span><code><span class=\"w\"> </span><span class=\"kd\">private</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"nf\">peek</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">isAtEnd</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"sc\">'\\0'</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">source</span><span class=\"p\">.</span><span class=\"na\">charAt</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 321570143,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1673850437
    },
    {
        "content": "<p>Thanks!! <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> I used an empty char right now but I'll try and use the value you have used to produce the null character</p>",
        "id": 321570226,
        "sender_full_name": "Shubham Kumar ðŸ¦€ (he/him)",
        "timestamp": 1673850484
    },
    {
        "content": "<p>The USV for the null character is 0, fwiw</p>",
        "id": 321570245,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673850496
    },
    {
        "content": "<p>There is also <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Char.toNat#doc\">docs4#Char.toNat</a> that I think is the \"inverse\" to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Char.ofNat#doc\">docs4#Char.ofNat</a>.</p>",
        "id": 321571015,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1673851059
    },
    {
        "content": "<p>This can be helpful if you want to find other Nat- equivalents of characters</p>",
        "id": 321571123,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1673851115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"557243\">@Shubham Kumar ðŸ¦€ (he/him)</span> There's <code>'\\u0000'</code> for the unicode literal, which is the null character.</p>",
        "id": 321649818,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1673878271
    },
    {
        "content": "<p>The more sensible Lean translation would probably be for <code>peek</code> to return <code>Option Char</code>.</p>",
        "id": 321681440,
        "sender_full_name": "Reid Barton",
        "timestamp": 1673887270
    }
]