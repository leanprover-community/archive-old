[
    {
        "content": "<p>Hello, I was wondering if anyone knows of any work on trees in Lean? I have looked at rbtree and mathlib tree.</p>",
        "id": 212314042,
        "sender_full_name": "Callum August",
        "timestamp": 1601910960
    },
    {
        "content": "<p>Do you mean <code>tree</code> as in graph theory, or as in data structure?</p>",
        "id": 212318614,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1601912979
    },
    {
        "content": "<p>I think there is theoretical overlap, but probably not much practical overlap</p>",
        "id": 212318654,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1601912995
    },
    {
        "content": "<p>As in the data structure</p>",
        "id": 212320126,
        "sender_full_name": "Callum August",
        "timestamp": 1601913612
    },
    {
        "content": "<p>I don't really know much about this, and I don't really know what <code>tree</code> means, but I was under the impression that <code>W</code>-types subsume all possible definitions of <code>tree</code>.</p>",
        "id": 212324562,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1601915611
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/W/src\">src#W</a></p>",
        "id": 212324647,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1601915648
    },
    {
        "content": "<p>Hi! I am new to Lean. My closest related experience is with Mathematica.<br>\nI am working on a special problem, and I am not sure whether I should use Mathematica or Lean.<br>\nI have a family of sets that are indexed by an ordered tree, and their relations between eachother depends on their indexing.<br>\nI need to prove that some of these sets are disjoint.<br>\nShould I stick with Mathematica or use Lean for this?</p>",
        "id": 228070837,
        "sender_full_name": "Christopher Iliffe Sprague",
        "timestamp": 1614446339
    },
    {
        "content": "<p>can you prove anything with Mathematica? What do you mean by prove?</p>",
        "id": 228071487,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614447051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Trees/near/228071487\">said</a>:</p>\n<blockquote>\n<p>can you prove anything with Mathematica? What do you mean by prove?</p>\n</blockquote>\n<p>Thanks for your response! From what I've read you can use first-order logic to prove some thing like this: <a href=\"https://reference.wolfram.com/language/ref/FindEquationalProof.html\">https://reference.wolfram.com/language/ref/FindEquationalProof.html</a>.<br>\nBy \"prove\", I mean state a theorem and prove it with a set of lemmas. Forgive me if I am not using the correct parlance.<br>\nFrom further reading, it seem Lean can do pretty much anything. So, now my question is: could I transfer what I produce in Lean to human-readable math in latex?</p>",
        "id": 228073530,
        "sender_full_name": "Christopher Iliffe Sprague",
        "timestamp": 1614449363
    },
    {
        "content": "<p>Oh, I didn't know Mathematica could do proofs like that -- that's why I was confused.</p>",
        "id": 228073621,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614449441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Trees/near/228073621\">said</a>:</p>\n<blockquote>\n<p>Oh, I didn't know Mathematica could do proofs like that -- that's why I was confused.</p>\n</blockquote>\n<p>Could you give me a recommendation on where to start for coding ordered trees and families of sets (in Euclidan space) that are indexed by such a tree?</p>",
        "id": 228073907,
        "sender_full_name": "Christopher Iliffe Sprague",
        "timestamp": 1614449709
    },
    {
        "content": "<p>We have a page of learning resources <a href=\"https://leanprover-community.github.io/learn.html\">here</a>. I recommend working through the Natural Number Game and some of the other tutorials to see what it's like to use Lean.</p>",
        "id": 228074518,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1614450407
    },
    {
        "content": "<blockquote>\n<p>could I transfer what I produce in Lean to human-readable math in latex?</p>\n</blockquote>\n<p>I'm afraid you have to do that manually—currently there are no usable tools and Lean proofs are not intended to be read outside of a Lean-aware text editor. Tactics can mutate the context and the mutations can be pretty hard to trace without the infoview, which is the right pane in Visual Studio Code with the Lean extension and the Lean web interface.</p>",
        "id": 228134510,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1614523341
    }
]