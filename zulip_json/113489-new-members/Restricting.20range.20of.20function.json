[
    {
        "content": "<p>Hi! <br>\nI have the following question:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"err\">&#39;&#39;</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>I would like to make a function like <code>(g ∘ f) : ↥S → γ</code>. Is there a way to do this?<br>\nI've tried using <code>set.restrict</code> but I don't think that would work for this case <code>#check set.restrict f S -- set.restrict f S : ↥S → β</code></p>",
        "id": 201736923,
        "sender_full_name": "Jason KY.",
        "timestamp": 1592924257
    },
    {
        "content": "<p>I guess you could define <code>f' : \\a \\to f '' S</code> and compose that.</p>",
        "id": 201737085,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592924312
    },
    {
        "content": "<p>Just by hand is probably easiest.</p>",
        "id": 201737131,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592924336
    },
    {
        "content": "<p>Though, there is <code>def image_factorization (f : α → β) (s : set α) : s → f '' s</code></p>",
        "id": 201737312,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592924407
    },
    {
        "content": "<p>Yes, I think that is exactly what I'm looking for! Thanks!</p>",
        "id": 201737400,
        "sender_full_name": "Jason KY.",
        "timestamp": 1592924449
    }
]