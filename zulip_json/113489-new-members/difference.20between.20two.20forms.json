[
    {
        "content": "<p>What is the difference between this one that compiles</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">h</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">intro_right</span> <span class=\"n\">q</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">intro_left</span> <span class=\"n\">p</span> <span class=\"n\">hq</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>and this one that doesn't?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">intro_right</span> <span class=\"n\">q</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">intro_left</span> <span class=\"n\">p</span> <span class=\"n\">hq</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 184002270,
        "sender_full_name": "Iocta",
        "timestamp": 1576917867
    },
    {
        "content": "<p>there is a missing <code>h</code> on the first line of the proof</p>",
        "id": 184002946,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1576919321
    },
    {
        "content": "<p>Your second example is equivalent to this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">intro_right</span> <span class=\"n\">q</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">intro_left</span> <span class=\"n\">p</span> <span class=\"n\">hq</span><span class=\"o\">)</span>\n  <span class=\"n\">h</span>\n</pre></div>\n\n\n<p>and <code>or.elim</code> takes its arguments in a different order than that</p>",
        "id": 184002956,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1576919397
    },
    {
        "content": "<p>I don't quite get it. How should it look? I don't see why there should be an <code>h</code> involved at all?</p>",
        "id": 184039971,
        "sender_full_name": "Iocta",
        "timestamp": 1576991469
    },
    {
        "content": "<p>The type of <code>or.elim</code> is <code>a ∨ b → (a → c) → (b → c) → c</code></p>",
        "id": 184040493,
        "sender_full_name": "Joe",
        "timestamp": 1576992650
    },
    {
        "content": "<p>So the first argument of <code>or.elim</code> should be something of the type <code>p ∨ q</code>.</p>",
        "id": 184040501,
        "sender_full_name": "Joe",
        "timestamp": 1576992679
    },
    {
        "content": "<p>But in your second example, the first thing  you feed to <code>or.elim</code> is of the type <code>p → q ∨ p</code>.</p>",
        "id": 184040552,
        "sender_full_name": "Joe",
        "timestamp": 1576992782
    },
    {
        "content": "<p>Here is the way to fix your second example.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">h</span>\n  <span class=\"o\">(</span><span class=\"bp\">_</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">_</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 184040609,
        "sender_full_name": "Joe",
        "timestamp": 1576992921
    },
    {
        "content": "<p>Ah I see. Thanks.</p>",
        "id": 184040764,
        "sender_full_name": "Iocta",
        "timestamp": 1576993318
    }
]