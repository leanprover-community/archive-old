[
    {
        "content": "<p>Is there a place which says which unicode characters or categories are valid Lean identifiers? Just curious to notice e.g. Lean seems happy with <code>variable {ùìò : Type*}</code> but not <code>variable {ùêº : Type*}</code></p>",
        "id": 220881984,
        "sender_full_name": "Julian Berman",
        "timestamp": 1608831163
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> had a cheat sheet somewhere on GitHub but I can't find it now. I did find <a href=\"#narrow/stream/113489-new-members/topic/What.20is.20going.20on.3F/near/194627615\">this Zulip post</a> which might help.</p>",
        "id": 220882123,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1608831339
    },
    {
        "content": "<p>Aha thanks, that does help since me grepping the <code>lean</code> repo for the definition of <code>token_kind::Identifier</code> isn't helping.</p>",
        "id": 220882182,
        "sender_full_name": "Julian Berman",
        "timestamp": 1608831425
    },
    {
        "content": "<p><a href=\"https://github.com/EdAyers/edlib/blob/master/docs/unicode.md\">https://github.com/EdAyers/edlib/blob/master/docs/unicode.md</a></p>",
        "id": 220882187,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1608831428
    },
    {
        "content": "<p>not sure if it's still up to date</p>",
        "id": 220882190,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1608831435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> amazing, thanks!</p>",
        "id": 220882193,
        "sender_full_name": "Julian Berman",
        "timestamp": 1608831456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> Thanks! Would you mind if we added that cheatsheet and maybe some of the other notes you wrote to the community website?</p>",
        "id": 220882318,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1608831608
    },
    {
        "content": "<p>Or maybe we could just link to them, if you prefer.</p>",
        "id": 220882331,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1608831644
    },
    {
        "content": "<p>Heh -- <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> \"Not all JSON is javascript because of unicode issues.\" at least is fixed now.</p>",
        "id": 220882346,
        "sender_full_name": "Julian Berman",
        "timestamp": 1608831699
    },
    {
        "content": "<p>JSON is now a proper subset of Javascript</p>",
        "id": 220882347,
        "sender_full_name": "Julian Berman",
        "timestamp": 1608831717
    },
    {
        "content": "<p>Hi Bryan, yeah sure do what you like with them! Although I wrote them mainly to get an idea of what is going on so they might contain misconceptions.</p>",
        "id": 221008562,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1609075136
    },
    {
        "content": "<p>Thanks Ed! I created <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/issues/153\">a GitHub issue</a> for this. Anyone should feel free to take it on!</p>",
        "id": 221075957,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609176166
    }
]