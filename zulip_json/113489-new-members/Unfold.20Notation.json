[
    {
        "content": "<p>Say I have the following: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">some_type</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">int</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">equiv</span> <span class=\"o\">:</span> <span class=\"n\">has_equiv</span> <span class=\"n\">some_type</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">l</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">l.x</span> <span class=\"bp\">=</span> <span class=\"n\">r.x</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">eq_imp_equiv</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">s'</span> <span class=\"o\">:</span> <span class=\"n\">some_type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">s'</span> <span class=\"bp\">→</span> <span class=\"n\">s</span> <span class=\"bp\">≈</span> <span class=\"n\">s'</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- ⊢ s = s' → s ≈ s'</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>How do I unfold the <code>≈</code> in the goal?<br>\nThanks <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 222882366,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1610727813
    },
    {
        "content": "<p><code>  simp only [(≈)], </code>is the way I usually unfold notation</p>",
        "id": 222888632,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1610729990
    },
    {
        "content": "<p>However, much of the time this isn't necessary to prove the theorem, just to see what you're trying to prove!</p>",
        "id": 222888926,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1610730096
    }
]