[
    {
        "content": "<p>I was reading through the implementation of Cantor's diagonal argument (specifically the theorem <a href=\"https://github.com/leanprover-community/mathlib/blob/fae00c7c500e757595058f009806e65df3f3d6ec/src/logic/function/basic.lean#L173-L175\"><code>cantor_surjective</code></a>) and I was having trouble understanding some of the syntax. For instance: the return type appears to be <code>Â¬ function.surjective f | h</code>... what is the <code>|</code> character doing? Is this pattern matching? When stepping through the code, I noticed that <code>h</code> has the type <code>function.surjective f</code>, but I'm not sure how that assignment was made.</p>",
        "id": 243334146,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1624243346
    },
    {
        "content": "<p>The type <code>not P</code> is exactly <code>P -&gt; false</code> so to prove such a theorem we can pattern match on <code>h</code> of type <code>P</code> and give a proof of false constructed from <code>h</code> after the :=</p>",
        "id": 243334404,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1624243753
    },
    {
        "content": "<p>Ah, that makes sense... thanks!</p>",
        "id": 243334453,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1624243804
    }
]