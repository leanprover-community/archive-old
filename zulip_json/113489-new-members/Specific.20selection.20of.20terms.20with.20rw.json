[
    {
        "content": "<p>Hey I'm going through the Nat Num Game, currently working through mul_add, I wonder first and foremost if it fundementally matters which variable we perform induction on? It seems some are much harder.</p>\n<p><code>a(b + c) = ab + ac</code></p>\n<p>Solving for <em>a</em> was my first shot but this got very hard fast, I did manage to solve for <em>b</em> and <em>c</em> however.</p>\n<p>Q2: Is it possible to provide a selector for specific terms?</p>\n<p>I know we can say <code>rw add_assoc a b c</code>, but is <code>rw add_assoc (ab) + a + (ac)</code> possible?</p>",
        "id": 188636006,
        "sender_full_name": "Martin Kleiven",
        "timestamp": 1582204824
    },
    {
        "content": "<p>You can do <code>rw add_assoc (a * b) a (a * c)</code>. Not sure if this is what you wanted.</p>",
        "id": 188636271,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1582205085
    },
    {
        "content": "<p>Okay so it does indeed work. Turned out I wanted right_add_comm but that's alright.</p>\n<p>Solving for <em>a</em>,  is that possible as well?</p>",
        "id": 188636566,
        "sender_full_name": "Martin Kleiven",
        "timestamp": 1582205364
    },
    {
        "content": "<p>The set of variables you perform induction on does matter, but given the set it shouldn't matter in which order you do induction.</p>",
        "id": 188636827,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1582205566
    },
    {
        "content": "<p>In this case, if you start by induction on <code>a</code> in <code>a * (b + c)</code>, you should be able to solve the base case, but there is no lemma <code>succ_mul</code> equivalent to <code>mul_succ</code> (yet!)</p>",
        "id": 188636998,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1582205705
    },
    {
        "content": "<p>If I understand correctly the choice on which variable to perform induction on is determined by previous lemmas that are proved, and ultimately what I choose depends on this. But any choice of variable are valid?</p>",
        "id": 188637166,
        "sender_full_name": "Martin Kleiven",
        "timestamp": 1582205863
    },
    {
        "content": "<p>I'm sorry, I don't understand the question. Indeed, the set of variables you do induction on is determined by the previous lemmas, and ultimately by the definitions. (For example, <code>*</code> is defined by recursion on the right-hand argument, so to prove things about <code>a * b</code> you probably want to do induction on the right-hand argument <code>b</code>.) But given that the variables you want to do induction on are correct, you can pick any one of the variables to start with, and you shouldn't get stuck.</p>",
        "id": 188638497,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1582206879
    },
    {
        "content": "<p>Not in general. For example, suppose you want to prove some property about exponentiation (on the natural numbers), e.g. <code>a ^ (b + c) = (a ^ b) * (a ^ c)</code>, which is defined as follows:</p>\n<ul>\n<li><code>a ^ 0 = 1</code></li>\n<li><code>a ^ (S n) = a * (a ^ n)</code></li>\n</ul>\n<p>Since exponentiation is defined by induction on its second argument, attempting to prove the statement by induction on <code>a</code> (the first argument) would fail miserably.</p>",
        "id": 188638499,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1582206884
    },
    {
        "content": "<p>Perhaps it's clearer to say that doing induction on <em>only</em> <code>a</code> would fail, but if the next command is <code>induction b</code>, you should be able to solve it anyway.</p>",
        "id": 188638686,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1582207018
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113489-new-members/topic/Specific.20selection.20of.20terms.20with.20rw/near/188638686\" title=\"#narrow/stream/113489-new-members/topic/Specific.20selection.20of.20terms.20with.20rw/near/188638686\">said</a>:</p>\n<blockquote>\n<p>Perhaps it's clearer to say that doing induction on <em>only</em> <code>a</code> would fail, but if the next command is <code>induction b</code>, you should be able to solve it anyway.</p>\n</blockquote>\n<p>But you probably won't be able to use the induction hypothesis generated by <code>induction a</code> anyway so you're technically not really performing induction on <code>a</code></p>",
        "id": 188638832,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1582207102
    },
    {
        "content": "<p>That's also a reasonable view. But up to definitional equality, <code>rw [add_zero]</code> (where <code>add_zero</code> reduces to <code>eq.refl</code>) then also isn't really doing rewriting :P</p>",
        "id": 188639267,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1582207427
    },
    {
        "content": "<p>Okay thanks, still not quite there but its starting to make sense to me, got some reading to do. Thank you both!</p>",
        "id": 188643634,
        "sender_full_name": "Martin Kleiven",
        "timestamp": 1582210036
    }
]