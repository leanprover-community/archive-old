[
    {
        "content": "<p>I had run into an <a href=\"https://github.com/leanprover/lean-mode/issues/7\" target=\"_blank\" title=\"https://github.com/leanprover/lean-mode/issues/7\">issue</a> with filling block comments in lean-mode.</p>\n<p>The problem is solved with</p>\n<div class=\"codehilite\"><pre><span></span>(require &#39;filladapt)\n(add-hook &#39;lean-mode-hook #&#39;filladapt-mode)\n</pre></div>\n\n\n<p>Maybe that's helpful for someone.</p>",
        "id": 131036154,
        "sender_full_name": "Joseph Corneli",
        "timestamp": 1533638813
    },
    {
        "content": "<p>... oh, but maybe I spoke too soon, since by default that screws up the fill behavior for <code>--</code> style comments.</p>",
        "id": 131036263,
        "sender_full_name": "Joseph Corneli",
        "timestamp": 1533638954
    },
    {
        "content": "<p>OK, adding one line to the relevant token table fixed it:</p>\n<div class=\"codehilite\"><pre><span></span>(setq filladapt-token-table\n      &#39;((&quot;^&quot; beginning-of-line)\n        (&quot;&gt;+&quot; citation-&gt;)\n        (&quot;\\\\(\\\\w\\\\|[0-9]\\\\)[^&#39;`\\&quot;&lt;\n]*&gt;[    ]*&quot; supercite-citation)\n        (&quot;;+&quot; lisp-comment)\n        ;; Added this line\n        (&quot;--&quot; lisp-comment)\n        (&quot;#+&quot; sh-comment)\n        (&quot;%+&quot; postscript-comment)\n        (&quot;///*&quot; c++-comment)\n        (&quot;@c[   ]&quot; texinfo-comment)\n        (&quot;@comment[     ]&quot; texinfo-comment)\n        (&quot;\\\\\\\\item[     ]&quot; bullet)\n        (&quot;[0-9]+\\\\.[    ]&quot; bullet)\n        (&quot;[0-9]+\\\\(\\\\.[0-9]+\\\\)+[   ]&quot; bullet)\n        (&quot;[A-Za-z]\\\\.[  ]&quot; bullet)\n        (&quot;(?[0-9]+)[    ]&quot; bullet)\n        (&quot;(?[A-Za-z])[  ]&quot; bullet)\n        (&quot;[0-9]+[A-Za-z]\\\\.[    ]&quot; bullet)\n        (&quot;(?[0-9]+[A-Za-z])[    ]&quot; bullet)\n        (&quot;[-~*+]+[  ]&quot; bullet)\n        (&quot;o[    ]&quot; bullet)\n        (&quot;[     ]+&quot; space)\n        (&quot;$&quot; end-of-line)))\n</pre></div>",
        "id": 131036781,
        "sender_full_name": "Joseph Corneli",
        "timestamp": 1533639523
    },
    {
        "content": "<p>I've created a repo for user contributions to <code>lean-mode</code>: <a href=\"https://github.com/leanprover-community/lean-mode-contrib\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean-mode-contrib\">https://github.com/leanprover-community/lean-mode-contrib</a></p>\n<p>That might be a good place to put it</p>",
        "id": 131046804,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1533651152
    },
    {
        "content": "<p>OK I'll try to tidy up and send there. Thanks!</p>",
        "id": 131055013,
        "sender_full_name": "Joseph Corneli",
        "timestamp": 1533659977
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 131063330,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1533668995
    }
]