[
    {
        "content": "<p>I just started trying to get lean setup in a Nix environment and installed lean(3.23.0), mathlibtools, elan, and vscode(1.52.1) with the lean extension(0.16.20). I created a new project and added </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">topological_space</span>\n</code></pre></div>\n<p>To a source file. Loading the file in VS Code then has the lean server using over 9 GB of RAM, is this expected behavior?</p>",
        "id": 221691669,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609875663
    },
    {
        "content": "<p>Yes</p>",
        "id": 221691700,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609875680
    },
    {
        "content": "<p>Actually, sorry, the answer is \"depends on how you set up the new project\"</p>",
        "id": 221691734,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609875702
    },
    {
        "content": "<p>Did you make the new project with <code>leanproject</code> or <code>leanpkg</code>?</p>",
        "id": 221691809,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609875731
    },
    {
        "content": "<p>I set it up with <code>leanproject new</code>.</p>",
        "id": 221691925,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609875791
    },
    {
        "content": "<p>I strongly suspect your PC is compiling mathlib right now, which can take a long time. If you make a new project with <code>leanproject new my-project</code> and then open the <code>my-project</code> directory using VS Code then you shouldn't have this problem.</p>",
        "id": 221691927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609875791
    },
    {
        "content": "<p>The differnce between <code>leanpkg</code> and <code>leanproject</code> is that <code>leanproject</code> downloads fully compiled mathlib binaries for you (like elan downloaded fully compiled lean binaries for you)</p>",
        "id": 221692014,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609875835
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"376219\">Devon Richards</span> <a href=\"#narrow/stream/113489-new-members/topic/Issues.20Setting.20up.20VSCode/near/221691925\">said</a>:</p>\n<blockquote>\n<p>I set it up with <code>leanproject new</code>.</p>\n</blockquote>\n<p>In which case, can you send a screenshot of VS Code with the file open?</p>",
        "id": 221692100,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609875861
    },
    {
        "content": "<p>I would guess you are right since it was using nearly 100% CPU across all cores for a while. <a href=\"/user_uploads/3121/rjGyXGSjIT765DvF15ylANMt/LeanFile.png\">LeanFile.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/rjGyXGSjIT765DvF15ylANMt/LeanFile.png\" title=\"LeanFile.png\"><img src=\"/user_uploads/3121/rjGyXGSjIT765DvF15ylANMt/LeanFile.png\"></a></div>",
        "id": 221692376,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609875977
    },
    {
        "content": "<p>The server has stopped using CPU, but is still holding onto the RAM, though I'd guess that might be expected behavior if it compiled from scratch.</p>",
        "id": 221692653,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609876100
    },
    {
        "content": "<p>On the command line what happens if you try <code>lean --make src/chapter0.lean</code>?</p>",
        "id": 221692743,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876162
    },
    {
        "content": "<p>it looks like it starts parsing through the mathlib source in the _target directory. This was setup with a nix shell if that changes anything.</p>",
        "id": 221692887,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609876223
    },
    {
        "content": "<p>I guess also I'd be interested in (a) the contents of <code>leanpkg.toml</code> (b) the commit which <code>_target/deps/mathlib</code> is on (this will be a git repo within your repo) (c) the output of <code>lean --version</code> when run in the project</p>",
        "id": 221692902,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876231
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 221692987,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609876277
    },
    {
        "content": "<p>It's the \"I installed lean 3.23.0\" line I'm worried about in the original post</p>",
        "id": 221693084,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876325
    },
    {
        "content": "<p><code>Lean (version 3.23.0, Release)</code> is the version.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">package</span><span class=\"o\">]</span>\n<span class=\"n\">name</span> <span class=\"bp\">=</span> <span class=\"s2\">\"DescriptiveSetTheory\"</span>\n<span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"0.1\"</span>\n<span class=\"n\">lean_version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"leanprover-community/lean:3.24.0\"</span>\n<span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">\"src\"</span>\n\n<span class=\"o\">[</span><span class=\"n\">dependencies</span><span class=\"o\">]</span>\n<span class=\"n\">mathlib</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">git</span> <span class=\"bp\">=</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib\"</span><span class=\"o\">,</span> <span class=\"n\">rev</span> <span class=\"bp\">=</span> <span class=\"s2\">\"3669cb35c578441812ad30fd967d21a94b6f387e\"</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>is the toml<br>\n<code>3669cb35c578441812ad30fd967d21a94b6f387e</code> is the commit</p>",
        "id": 221693089,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609876328
    },
    {
        "content": "<p>So there's your problem</p>",
        "id": 221693102,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876340
    },
    {
        "content": "<p>You shouldn't be installing any version of lean, I don't really know what you mean by \"I installed Lean 3.23.0\"</p>",
        "id": 221693132,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876361
    },
    {
        "content": "<p>the idea is that elan will take a look at that toml file, observe you need lean 3.24, and get elan to download it automatically for you.</p>",
        "id": 221693189,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876384
    },
    {
        "content": "<p>ah, I was just using the version in nixpkgs for the shell. I'll try setting up with elan instead.</p>",
        "id": 221693354,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609876463
    },
    {
        "content": "<p>I don't know anything about nix or elan but what you need to do is to somehow get it so that it's saying you're using 3.24.0 when you run lean in the directory</p>",
        "id": 221693364,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876466
    },
    {
        "content": "<p>The <code>lean</code> on my system is <code>/home/buzzard/.elan/bin/lean</code> which cunningly chooses which actual version of lean to run by searching for the nearest toml file and reading it and using what's in there</p>",
        "id": 221693476,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876532
    },
    {
        "content": "<p>Note that now you started compiling Lean by hand with <code>lean --make src/chapter0.lean</code>, your installation is currently corrupt. You should be able to fix this by running <code>leanproject get-mathlib-cache</code> within your project</p>",
        "id": 221693600,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876581
    },
    {
        "content": "<p>Right now you have about ten lean 3.23 compiled (olean) files and hundreds of precompiled lean 3.24 olean files</p>",
        "id": 221693674,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876614
    },
    {
        "content": "<p>Would it be possible / useful to have <code>leanproject</code> spit out a warning or error if it sees that running <code>lean</code> gives a different version than what's in the <code>leanpkg.toml</code> (or some other way of detecting issues with <code>lean</code> / <code>elan</code>)?</p>",
        "id": 221693945,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609876744
    },
    {
        "content": "<p>It did spit out warnings, but it created that leanpkg.toml.</p>",
        "id": 221694026,
        "sender_full_name": "Devon Richards",
        "timestamp": 1609876786
    },
    {
        "content": "<p>the toml is correct. The problem is that your project has a dependency on mathlib which right now uses lean 3.24.</p>",
        "id": 221694162,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876826
    },
    {
        "content": "<p>as of some time earlier today IIRC</p>",
        "id": 221694195,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609876843
    }
]