[
    {
        "content": "<p>I sometimes use <code>example</code> when I want to test things out, including sometimes when I haven't yet figured out the right statement that I want to prove, so I use <code>example : false := ...</code>, then explore what I can get given the <code>variables</code> I have - but some of the variables I've defined aren't in scope. Is there a trick I can use to get them in scope?</p>",
        "id": 199559306,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1591135101
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">comma</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">category_theory</span>\n<span class=\"kn\">open</span> <span class=\"n\">category</span> <span class=\"n\">limits</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">v</span> <span class=\"n\">u</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">category</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">small_category</span> <span class=\"n\">J</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_colimits_of_shape</span> <span class=\"n\">J</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Y</span> <span class=\"err\">⟶</span> <span class=\"n\">Z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"err\">⥤</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>for example I want to use <code>Y</code>, <code>Z</code> and <code>f</code> in this example</p>",
        "id": 199559456,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1591135231
    },
    {
        "content": "<p><code>include Y Z f</code></p>",
        "id": 199559473,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591135243
    },
    {
        "content": "<p>Before the <code>example</code></p>",
        "id": 199559483,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591135249
    },
    {
        "content": "<p>Perfect, thanks!</p>",
        "id": 199559523,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1591135274
    }
]