[
    {
        "content": "<p>Hello, I am new here,<br>\nI was looking for a theorem prover which is nice to use to prove category theory lemmas. I want to formalize basic proofs like \"limit of presheafs are computed pointwise\" or \"Cat is cartesian closed\", because I feel that I miss some details there. Is Lean a good place for this?</p>",
        "id": 199398841,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1591032891
    },
    {
        "content": "<p>Hi, welcome!<br>\nWe just got this \"Cat is cartesian closed\" yesterday (-;</p>",
        "id": 199399632,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033226
    },
    {
        "content": "<p>And presheaves are there as well.</p>",
        "id": 199399645,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033235
    },
    {
        "content": "<p>Otoh, if you want to do category theory, and <em>only</em> category theory, then you might also want to look at Coq (and/or HoTT) libraries</p>",
        "id": 199399705,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033274
    },
    {
        "content": "<p>Oh, so there is much for me to explore. :) Thank you.<br>\nWhat are differences between Lean and Coq when it comes to category theory? I proved some first order logic stuff on both Coq and Lean and they look almost identically...</p>",
        "id": 199400504,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1591033682
    },
    {
        "content": "<p>I think that their library is just bigger (although to be honest, I never looked at it in detail).</p>",
        "id": 199400593,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033733
    },
    {
        "content": "<p>The size of the library is not an issue for me I think, because I just want to scratch some stuff myself for now.</p>",
        "id": 199400748,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1591033811
    },
    {
        "content": "<p>In that case it shouldn't matter too much. If you care about unicode notation, that's a plus for lean. If you care about constructive logic, use coq.</p>",
        "id": 199400811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033858
    },
    {
        "content": "<p>Btw, is there a tool to convert graphical categoric diagrams (thinking like <a href=\"https://tikzcd.yichuanshen.de/\">https://tikzcd.yichuanshen.de/</a>) to formal format?</p>",
        "id": 199400818,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1591033864
    },
    {
        "content": "<p>Not yet, it's on our wish list.</p>",
        "id": 199400839,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033880
    },
    {
        "content": "<p>That's great! Really excited then.</p>",
        "id": 199400871,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1591033896
    },
    {
        "content": "<p>We are about to get a diagram chasing automated prover though...</p>",
        "id": 199400886,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033902
    },
    {
        "content": "<p>But it doesn't use cool graphics yet.</p>",
        "id": 199400901,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033909
    },
    {
        "content": "<p>Otoh, we also just got a \"widget\" framework. So we should be able to build fancy UI frontends soonish as well.</p>",
        "id": 199401000,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033938
    },
    {
        "content": "<p>If you care about that sort of stuff, my impression is that lean is ahead of coq</p>",
        "id": 199401037,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033955
    },
    {
        "content": "<p>But again, I haven't looked at their side of the fence very closely.</p>",
        "id": 199401068,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591033973
    },
    {
        "content": "<p>There are two Lean category theory questions in codewars. I still haven't done either of them :-/ I think that we need more documentation on how to steer this stuff</p>",
        "id": 199402739,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591034779
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Learning.20category.20theory/near/199399632\">said</a>:</p>\n<blockquote>\n<p>Hi, welcome!<br>\nWe just got this \"Cat is cartesian closed\" yesterday (-;</p>\n</blockquote>\n<p>We don't have that Cat is cartesian closed! I defined cartesian closed categories, didn't show that Cat itself is cartesian closed :) I agree that doing category theory (from scratch) in Lean or Coq doesn't make a huge difference - though I've heard from others who have done more category theory in Coq than I have that proof relevance gets annoying for more complex things. I've actually just done limits of presheaves are computed pointwise myself today, it was easier than I expected! (there's a version in mathlib already though)</p>",
        "id": 199404353,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1591035645
    },
    {
        "content": "<p>That's neat! Can't wait to go through it. But first, I need to learn the basics</p>",
        "id": 199405104,
        "sender_full_name": "Mateusz Zugaj",
        "timestamp": 1591035981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/113489-new-members/topic/Learning.20category.20theory/near/199404353\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Learning.20category.20theory/near/199399632\">said</a>:</p>\n<blockquote>\n<p>Hi, welcome!<br>\nWe just got this \"Cat is cartesian closed\" yesterday (-;</p>\n</blockquote>\n<p>We don't have that Cat is cartesian closed!</p>\n</blockquote>\n<p>Oops... sorry for overselling your PR</p>",
        "id": 199409584,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591038353
    },
    {
        "content": "<p>No worries, saves something for <span class=\"user-mention\" data-user-id=\"307978\">@Mateusz Zugaj</span> to do :)</p>",
        "id": 199410450,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1591038737
    }
]