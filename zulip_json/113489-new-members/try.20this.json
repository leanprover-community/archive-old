[
    {
        "content": "<p>I'm trying to get Lean to give me a <code>\"Try this: ...\"</code> message and hopefully one without needing something from mathlib. I found exactly one instance in Lean core, which looks like in something called <code>trace_lemmas</code>, a parameter to simp (<a href=\"https://github.com/leanprover-community/lean/blob/ec45183aa01354e8e2c273cf762cf53ead277fe4/library/init/meta/interactive.lean#L1296\">https://github.com/leanprover-community/lean/blob/ec45183aa01354e8e2c273cf762cf53ead277fe4/library/init/meta/interactive.lean#L1296</a>) -- but it looks like that parameter maybe isn't exposed externally (anymore?) because e.g. <code>example (n : ℕ) : n = n := by simp {trace_lemmas := tt}</code> tells me <code>'trace_lemmas' is not a field of structure 'tactic.simp_config_ext'</code></p>\n<p>Is there anything I'm doing wrong there, or am I correct that it's being hidden (I guess because there are better other things that exist now like <code>squeeze_simp</code>?)</p>\n<p>Or, any suggestion on how to get that kind of message another way, I guess what I see there with <code>trace()</code> is a way I can emit such a message myself if I try writing some meta thing?</p>",
        "id": 223008654,
        "sender_full_name": "Julian Berman",
        "timestamp": 1610834300
    },
    {
        "content": "<p>I think that what you found in core was just recently added by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> and it will replace <code>squeeze_simp</code> whenever Lean 3.25.0 is released and mathlib is upgraded.</p>",
        "id": 223008895,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1610834456
    },
    {
        "content": "<p>Oh, indeed, it's 8 days old, that'll teach me not to git blame before asking.</p>",
        "id": 223008980,
        "sender_full_name": "Julian Berman",
        "timestamp": 1610834512
    },
    {
        "content": "<p>So I guess the actual answer may be that I'm on 3.24</p>",
        "id": 223009027,
        "sender_full_name": "Julian Berman",
        "timestamp": 1610834529
    },
    {
        "content": "<p>Try this is jsut a trace message though</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"o\">(</span><span class=\"k\">do</span> <span class=\"n\">tactic.trace</span> <span class=\"s2\">\"Try this: use 2\"</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 223009030,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1610834540
    },
    {
        "content": "<p>Ah fantastic, thank you!</p>",
        "id": 223009031,
        "sender_full_name": "Julian Berman",
        "timestamp": 1610834554
    }
]