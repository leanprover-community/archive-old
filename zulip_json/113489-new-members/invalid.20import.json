[
    {
        "content": "<p>Dear All,</p>\n<p>I am trying to</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n</code></pre></div>\n\n\n<p>but I get the error message</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">file</span> <span class=\"err\">&#39;</span><span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">basic&#39;</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">LEAN_PATH</span>\n\n<span class=\"n\">invalid</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">resolve</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n</code></pre></div>\n\n\n<p>I can see that the file is in the subfolder of ring_theory called polynomial, I can import without problems other files in ring_theory, for instance localization.  Is there a way of getting Lean to import the files in sub-sub-sub-...-folders?</p>\n<p>Thank you!</p>",
        "id": 207609197,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997422
    },
    {
        "content": "<p>This is a really common question. Isn't there some link mentioned in the error message which you can click on which suggests some solutions?</p>",
        "id": 207609320,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997593
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 207609336,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997627
    },
    {
        "content": "<p>Oh wait -- you can import other ring theory stuff?</p>",
        "id": 207609403,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997659
    },
    {
        "content": "<p>yes, I can, although not <em>everything</em>.</p>",
        "id": 207609420,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997680
    },
    {
        "content": "<p>Are you happy working in the command line?</p>",
        "id": 207609431,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997694
    },
    {
        "content": "<p>The error message has no link</p>",
        "id": 207609432,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997696
    },
    {
        "content": "<p>I have a command line... I am happy to use it!</p>",
        "id": 207609446,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997713
    },
    {
        "content": "<p>Are you working in mathlib or in another project which uses mathlib as a dependency?</p>",
        "id": 207609470,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997740
    },
    {
        "content": "<p>I am working in lean-scheme</p>",
        "id": 207609496,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997758
    },
    {
        "content": "<p>That's a really old repo</p>",
        "id": 207609563,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997776
    },
    {
        "content": "<p>(I hope that this answers your question!)</p>",
        "id": 207609569,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997784
    },
    {
        "content": "<p>It hasn't been updated for months</p>",
        "id": 207609571,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997786
    },
    {
        "content": "<p>Ok, I have not used much from it yet, so I am happy to use a different one</p>",
        "id": 207609583,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997808
    },
    {
        "content": "<p>Are you sure it contains something called data.polynomial.basic?</p>",
        "id": 207609592,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997819
    },
    {
        "content": "<p>IIRC it was just called data.polynomial in those days</p>",
        "id": 207609611,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997844
    },
    {
        "content": "<p>\"it\" meaning mathlib?</p>",
        "id": 207609619,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997859
    },
    {
        "content": "<p>Can you say more about this claim that you can see the file in the subfolder of ring_theory called polynomial?</p>",
        "id": 207609635,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997877
    },
    {
        "content": "<p>Which file exactly can you see?</p>",
        "id": 207609691,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997895
    },
    {
        "content": "<p>Are you looking in the version of mathlib used by the project? That version us stored in _target</p>",
        "id": 207609701,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997916
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> if you press Ctrl+Space when you put your cursor after <code>ring_theory</code> you can see all the files with that name</p>",
        "id": 207609705,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597997925
    },
    {
        "content": "<p>this is what I find when I ls:</p>\n<p>$ ls mathlib/src/ring_theory/polynomial<br>\nbasic.lean  basic.olean  default.lean  default.olean  homogeneous.lean  homogeneous.olean  rational_root.lean  rational_root.olean</p>",
        "id": 207609716,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997936
    },
    {
        "content": "<p>I challenge your implicit implication that those files are what your project is importing</p>",
        "id": 207609737,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997963
    },
    {
        "content": "<p>maybe this is clearer</p>\n<p>$ ls -o mathlib/src/ring_theory/polynomial<br>\ntotal 376<br>\n-rw-rw-r-- 1 damiano  23172 Aug 21 10:00 basic.lean<br>\n-rw-r--r-- 1 damiano 189780 Aug 21 10:01 basic.olean<br>\n-rw-r--r-- 1 damiano     36 Jul 24 15:04 default.lean<br>\n-rw-r--r-- 1 damiano   2525 Aug 21 10:01 default.olean<br>\n-rw-rw-r-- 1 damiano   9466 Aug 21 10:00 homogeneous.lean<br>\n-rw-r--r-- 1 damiano  70425 Aug 21 10:01 homogeneous.olean<br>\n-rw-rw-r-- 1 damiano   9555 Aug 21 10:00 rational_root.lean<br>\n-rw-r--r-- 1 damiano  61000 Aug 21 10:01 rational_root.olean</p>",
        "id": 207609744,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997970
    },
    {
        "content": "<p>Which directory are you looking in?</p>",
        "id": 207609753,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997977
    },
    {
        "content": "<p>I have literally 50 copies of mathlib on my computer</p>",
        "id": 207609774,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597997993
    },
    {
        "content": "<p>mathlib/src/ring_theory/polynomial</p>",
        "id": 207609781,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597997995
    },
    {
        "content": "<p>What do you mean by mathlib?</p>",
        "id": 207609834,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998011
    },
    {
        "content": "<p>I think that I only have one mathlib</p>",
        "id": 207609835,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> you need to look inside <code>_target</code></p>",
        "id": 207609837,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998014
    },
    {
        "content": "<p>inside <code>lean-scheme</code></p>",
        "id": 207609845,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998021
    },
    {
        "content": "<p>You're looking at the wrong mathlib</p>",
        "id": 207609852,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998032
    },
    {
        "content": "<p>Each project comes with its own mathlib</p>",
        "id": 207609863,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998041
    },
    {
        "content": "<p>so how do I choose which mathlib to use?</p>",
        "id": 207609891,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998078
    },
    {
        "content": "<p>Inside the lean-scheme folder is the mathlib which lean-scheme uses</p>",
        "id": 207609902,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998090
    },
    {
        "content": "<p>You don't choose</p>",
        "id": 207609904,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998095
    },
    {
        "content": "<p>if you \"choose\" a different version of mathlib to use, the project will break</p>",
        "id": 207609917,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998112
    },
    {
        "content": "<p>is it the one called \"to_mathlib\"?</p>",
        "id": 207609919,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998115
    },
    {
        "content": "<p>can you <code>ls lean_scheme</code>?</p>",
        "id": 207609957,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998123
    },
    {
        "content": "<p>The leanpkg.toml file of the project tells the system which mathlib to use</p>",
        "id": 207609960,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998123
    },
    {
        "content": "<p>It's in _target</p>",
        "id": 207609981,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998136
    },
    {
        "content": "<p>I mean <code>ls lean-scheme</code></p>",
        "id": 207609982,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998137
    },
    {
        "content": "<p>this is what I have in lean-scheme/src</p>\n<p>$ ls -o lean-scheme/src/<br>\ntotal 36<br>\ndrwxrwxr-x 2 damiano 4096 Aug 19 14:36 instances<br>\ndrwxrwxr-x 3 damiano 4096 Aug 19 14:52 Kenny<br>\n-rw-rw-r-- 1 damiano  738 Aug 19 14:18 scheme.lean<br>\n-rw-rw-r-- 1 damiano 9943 Aug 19 14:36 scheme.olean<br>\ndrwxrwxr-x 3 damiano 4096 Aug 21 10:01 sheaves<br>\ndrwxrwxr-x 2 damiano 4096 Aug 21 10:01 spectrum_of_a_ring<br>\ndrwxrwxr-x 3 damiano 4096 Aug 21 10:01 to_mathlib</p>",
        "id": 207610005,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998162
    },
    {
        "content": "<p>Not src</p>",
        "id": 207610013,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998174
    },
    {
        "content": "<p>can you <code>ls lean-scheme</code>?</p>",
        "id": 207610016,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998175
    },
    {
        "content": "<p>It's in _target</p>",
        "id": 207610040,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998187
    },
    {
        "content": "<p>$ ls -o lean-scheme/<br>\ntotal 32<br>\n-rw-rw-r-- 1 damiano 11400 Aug 21 08:46 Chevalley.lean<br>\n-rw-rw-r-- 1 damiano    54 Aug 19 14:24 leanpkg.path<br>\n-rw-rw-r-- 1 damiano   207 Aug 19 14:18 leanpkg.toml<br>\n-rw-rw-r-- 1 damiano  3200 Aug 19 14:18 README.md<br>\ndrwxrwxr-x 7 damiano  4096 Aug 21 10:01 src<br>\ndrwxrwxr-x 3 damiano  4096 Aug 19 14:24 _target</p>",
        "id": 207610050,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998194
    },
    {
        "content": "<p>there's <code>_target</code></p>",
        "id": 207610057,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998203
    },
    {
        "content": "<p>at the bottom</p>",
        "id": 207610060,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998205
    },
    {
        "content": "<p>ah, let me look in <code>_target</code>!</p>",
        "id": 207610070,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998215
    },
    {
        "content": "<p>If you want to work in that old project then you're stuck with an old mathlib</p>",
        "id": 207610082,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998234
    },
    {
        "content": "<p>(and an old Lean)</p>",
        "id": 207610130,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998247
    },
    {
        "content": "<p>Ahhhhh!!!!  found it!</p>\n<p>$ ls -o _target/deps/mathlib/<br>\ntotal 48<br>\ndrwxrwxr-x  2 damiano  4096 Aug 19 14:24 archive<br>\ndrwxrwxr-x  7 damiano  4096 Aug 19 14:24 docs<br>\n-rw-rw-r--  1 damiano    95 Aug 19 14:24 leanpkg.toml<br>\n-rw-rw-r--  1 damiano 11357 Aug 19 14:24 LICENSE<br>\n-rwxrwxr-x  1 damiano   762 Aug 19 14:24 <a href=\"http://purge_olean.sh\">purge_olean.sh</a><br>\n-rw-rw-r--  1 damiano  2797 Aug 19 14:24 README.md<br>\ndrwxrwxr-x  2 damiano  4096 Aug 19 14:24 scripts<br>\ndrwxrwxr-x 22 damiano  4096 Aug 19 14:24 src<br>\ndrwxrwxr-x  6 damiano  4096 Aug 19 14:24 test<br>\n-rw-rw-r--  1 damiano   540 Aug 19 14:24 <a href=\"http://travis_long.sh\">travis_long.sh</a></p>",
        "id": 207610138,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998256
    },
    {
        "content": "<p>there you go</p>",
        "id": 207610153,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998268
    },
    {
        "content": "<p>ok, I did not realize that I had a second version of mathlib, inside lean_scheme</p>",
        "id": 207610170,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998286
    },
    {
        "content": "<p>Mathlib is not backwards compatible</p>",
        "id": 207610185,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597998314
    },
    {
        "content": "<p>alright, then probably this copy of mathlib does not contain the file that i am trying to import</p>\n<p>now i understand the inconsistencies!</p>\n<p>I still would like to be able to use the \"current\" mathlib: I'll look for a way</p>",
        "id": 207610204,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998352
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/113489-new-members/topic/invalid.20import/near/207609917\">said</a>:</p>\n<blockquote>\n<p>if you \"choose\" a different version of mathlib to use, the project will break</p>\n</blockquote>\n<p>.</p>",
        "id": 207610260,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/invalid.20import/near/207610185\">said</a>:</p>\n<blockquote>\n<p>Mathlib is not backwards compatible</p>\n</blockquote>\n<p>.</p>",
        "id": 207610274,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998406
    },
    {
        "content": "<p>indeed, there is a polynomial.lean file, but no polynomial/ directory</p>",
        "id": 207610275,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998407
    },
    {
        "content": "<p>ok, I will open the current version of mathlib, copy the files that i need and see what breaks and what doesn't, then!</p>",
        "id": 207610303,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998444
    },
    {
        "content": "<p>what's the point</p>",
        "id": 207610330,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998461
    },
    {
        "content": "<p>I would like to use functions in lean-scheme and functions in the current mathlib...</p>",
        "id": 207610381,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998485
    },
    {
        "content": "<p>(I mean, in the same proof!)</p>",
        "id": 207610388,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998503
    },
    {
        "content": "<p>you can't</p>",
        "id": 207610396,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998519
    },
    {
        "content": "<p>i was thinking of copying the text from the files in lean-scheme as a new project in the current mathlib.</p>",
        "id": 207610415,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998552
    },
    {
        "content": "<p>this may be cumbersome, but should work, right?</p>",
        "id": 207610420,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998563
    },
    {
        "content": "<p>no, because mathlib is not backwards compatible</p>",
        "id": 207610484,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998603
    },
    {
        "content": "<p>let's say the old version of mathlib contains a theorem called <code>A</code></p>",
        "id": 207610499,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998616
    },
    {
        "content": "<p>ok, works modulo fixing the commands that no longer work...  not everything will be broken!</p>",
        "id": 207610500,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998622
    },
    {
        "content": "<p>and lean-scheme used the theorem <code>A</code></p>",
        "id": 207610502,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998624
    },
    {
        "content": "<p>then mathlib changed the name to <code>B</code></p>",
        "id": 207610513,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998635
    },
    {
        "content": "<p>then it will break</p>",
        "id": 207610515,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998637
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/invalid.20import/near/207610500\">said</a>:</p>\n<blockquote>\n<p>ok, works modulo fixing the commands that no longer work...  not everything will be broken!</p>\n</blockquote>\n<p>then that's a tedious project</p>",
        "id": 207610531,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998648
    },
    {
        "content": "<p>i understand this, but i do not need much...</p>",
        "id": 207610535,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998655
    },
    {
        "content": "<blockquote>\n<p>ok, works modulo fixing the commands that no longer work...  not everything will be broken!</p>\n</blockquote>\n<p>then that's a tedious project</p>\n<p>I agree, but is there a better fix?</p>",
        "id": 207610549,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998676
    },
    {
        "content": "<p>no</p>",
        "id": 207610569,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597998701
    },
    {
        "content": "<p>so... here i go!  ahahaha</p>",
        "id": 207610581,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998711
    },
    {
        "content": "<p>in fact, it might be quicker to copy the files from the current mathlib into the old project, since those should not be incompatible with something that they have not seen!</p>",
        "id": 207610803,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597998876
    },
    {
        "content": "<p>Damiano, I think your are vastly underestimating how much mathlib is backward incompatible.</p>",
        "id": 207611250,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597999309
    },
    {
        "content": "<p>Especially stuff around polynomial have been problematic for a long time and changed a lot.</p>",
        "id": 207611305,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597999330
    },
    {
        "content": "<p>The proper fix is to fully update mathlib in this project and fixing stuff will take a a <em>lot</em> of time. Or else consider this as a frozen project.</p>",
        "id": 207611360,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597999399
    },
    {
        "content": "<p>Ok, so it seems that I am faced with the choice of </p>\n<ol>\n<li>redefine the Zariski topology,</li>\n<li>try to import a lemma about monomials in polynomial rings</li>\n</ol>\n<p>I will need to see what is harder...</p>",
        "id": 207611383,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597999426
    },
    {
        "content": "<p>Does <code>lean-scheme</code> have a Zariski topology that mathlib doesn't have?</p>",
        "id": 207611451,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597999475
    },
    {
        "content": "<p>I do not know, where is the Zariski topology in mathlib?</p>",
        "id": 207611496,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597999523
    },
    {
        "content": "<p>You should coordinate with Kevin and Kenny to know what needs to be done to incorporate more of that repo into mathlib. But I fear they are waiting for the category theory part of mathlib to become ready for sheaves of modules over a sheaf of rings.</p>",
        "id": 207611501,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597999531
    },
    {
        "content": "<p><code>algebraic_geometry/prime_spectrum</code></p>",
        "id": 207611505,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597999538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/invalid.20import/near/207611501\">said</a>:</p>\n<blockquote>\n<p>You should coordinate with Kevin and Kenny to know what needs to be done to incorporate more of that repo into mathlib. But I fear they are waiting for the category theory part of mathlib to become ready for sheaves of modules over a sheaf of rings.</p>\n</blockquote>\n<p>Ok, I will wait for this!</p>",
        "id": 207611524,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597999557
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/invalid.20import/near/207611505\">said</a>:</p>\n<blockquote>\n<p><code>algebraic_geometry/prime_spectrum</code></p>\n</blockquote>\n<p>... but I will take a look at this, in the meantime!</p>",
        "id": 207611577,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597999572
    },
    {
        "content": "<p>thanks!</p>",
        "id": 207611580,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597999575
    },
    {
        "content": "<p>The problem with lean-scheme is that it develops the theory of sheaves in a different way to three standard mathlib way. We are blocked from continuing the development of schemes until the mathlib version of sheaves has caught up with our version. The problem is that everyone is really busy. The big divergence is in the definition of the sheaf of rings on Spec (A). The definition is technical. First we put a presheaf on the basis of standard affine opens, then we prove it's a sheaf for this basis, then we prove that sheaves on a basis are the same as sheaves on the space</p>",
        "id": 207612193,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000122
    },
    {
        "content": "<p>All of this now needs to be redone using the mathlib version of presheaves and sheaves</p>",
        "id": 207612217,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000148
    },
    {
        "content": "<p>And this uses category theory</p>",
        "id": 207612276,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000167
    },
    {
        "content": "<p>And I'm pretty sure that they're not at the point where we can start doing this</p>",
        "id": 207612314,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000199
    },
    {
        "content": "<p>Surely there is lots of work on schemes that can come to mathlib now, before anyone runs into needing sheaves of modules over a sheaf of rings...</p>",
        "id": 207612334,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598000212
    },
    {
        "content": "<p>ok, so i will try to start a project using the algebraic_geometry section of mathlib in the current version of mathlib</p>\n<p>for this, should I then type</p>\n<p>code mathlib?  would this make me work in the current version of mathlib?</p>",
        "id": 207612351,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598000227
    },
    {
        "content": "<p>We can't even define a scheme I don't think Scott</p>",
        "id": 207612358,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000236
    },
    {
        "content": "<p>Damiano just clone mathlib and keep it up to date</p>",
        "id": 207612391,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000264
    },
    {
        "content": "<p>You might have lots of mathlibs on your computer as dependencies in other projects but you should only have one mathlib project</p>",
        "id": 207612469,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000299
    },
    {
        "content": "<p>You're saying that checking the sheaf condition on a basis is the blocker?</p>",
        "id": 207612483,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598000314
    },
    {
        "content": "<p>ok, so i can</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">code</span> <span class=\"o\">[</span><span class=\"n\">anything</span> <span class=\"n\">i</span> <span class=\"n\">want</span><span class=\"o\">]</span>\n</code></pre></div>\n\n\n<p>and if i import a file it will be from the version of mathlib that i have in my lean directory?</p>",
        "id": 207612488,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1598000317
    },
    {
        "content": "<p>Damiano read how to install projects on the community website</p>",
        "id": 207612508,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000340
    },
    {
        "content": "<p>That's good to know, I'll try to make that happen. I didn't realise anyone was yet waiting on that.</p>",
        "id": 207612509,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598000342
    },
    {
        "content": "<p>Scott here's the issue</p>",
        "id": 207612514,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000348
    },
    {
        "content": "<p>A scheme is a ringed space locally isomorphic to Spec R</p>",
        "id": 207612545,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000378
    },
    {
        "content": "<p>The isomorphism takes place in the category of spaces equipped with a presheaf of rings</p>",
        "id": 207612554,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000397
    },
    {
        "content": "<p>But putting the presheaf of rings on Spec R is not as easy as it sounds because of non affine opens</p>",
        "id": 207612614,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000430
    },
    {
        "content": "<p>In Lean-scheme we put the presheaf on a basis</p>",
        "id": 207612637,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000451
    },
    {
        "content": "<p>Then proved it was a sheaf (although sheafifying would also work)</p>",
        "id": 207612661,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000477
    },
    {
        "content": "<p>And then proved that sheaves on X were the same as sheaves on a basis</p>",
        "id": 207612680,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000498
    },
    {
        "content": "<p>By hand</p>",
        "id": 207612683,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000501
    },
    {
        "content": "<p>In our particular case</p>",
        "id": 207612696,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000511
    },
    {
        "content": "<p>My understanding is that <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> has a bunch of this stuff in the topos repo but he also has a thesis to write</p>",
        "id": 207612757,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000560
    },
    {
        "content": "<p>I wish I knew whether we should be doing this with sites. Or just presheaves on <code>opens X</code>.</p>",
        "id": 207612813,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598000622
    },
    {
        "content": "<p>The construction I sketched needs the concept of sheaf on something more general than opens X</p>",
        "id": 207612888,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000654
    },
    {
        "content": "<p>One could make the construction in a completely different way of course</p>",
        "id": 207612915,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000685
    },
    {
        "content": "<p>I think Hartshorne does it totally differently</p>",
        "id": 207612934,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000700
    },
    {
        "content": "<p>Are you just saying you want to check the sheaf condition only for covers consisting of opens in the basis?</p>",
        "id": 207612980,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598000738
    },
    {
        "content": "<p>That's easy to do in the current setup.</p>",
        "id": 207612994,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598000750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> IIRC Hartshorne defines the sheaf of rings on Spec R directly by looking at functions on U taking values in some crazy disjoint union of rings</p>",
        "id": 207613072,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000780
    },
    {
        "content": "<p>This might be a way to proceed</p>",
        "id": 207613084,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000788
    },
    {
        "content": "<p>I think Harshorne basically defined the stalks first, and then recover the sheaf using \"continuous\" sections of the stalks;</p>",
        "id": 207613115,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598000822
    },
    {
        "content": "<p>Scott I'm just saying that the way we did it pre category followed the stacks project approach which needed the concept of a presheaf and sheaf on a basis</p>",
        "id": 207613145,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598000847
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> to <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/status.20of.20schemes\">#general &gt; status of schemes</a></p>",
        "id": 207613292,
        "sender_full_name": "Notification Bot",
        "timestamp": 1598000963
    },
    {
        "content": "<p>I like the way this forum evolved to the point where schemes belong to \"general\" rather than \"maths\".</p>",
        "id": 207613352,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598001009
    },
    {
        "content": "<p>Hmm, okay, maybe that was a mistake. :-)</p>",
        "id": 207615154,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598002587
    },
    {
        "content": "<p>I decided to say nothing :D</p>",
        "id": 207633554,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598016412
    }
]