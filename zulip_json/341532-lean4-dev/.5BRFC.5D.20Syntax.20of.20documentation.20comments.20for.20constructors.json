[
    {
        "content": "<p>I realize that I'm literally starting a discussion on the syntax of comments.. but I'd like to change the position of docstrings in constructors to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Name</span> <span class=\"n\">where</span>\n  <span class=\"sd\">/-- The \"anonymous\" name. -/</span>\n  <span class=\"bp\">|</span> <span class=\"n\">anonymous</span> <span class=\"o\">:</span> <span class=\"n\">Name</span>\n</code></pre></div>\n<p>The proposed syntax has several advantages:</p>\n<ul>\n<li>The documentation is one level less indented.</li>\n<li>It is easier to add documentation after the fact (because you don't need to modify any line).</li>\n<li>You don't have the dangling <code>|</code> at the beginning.</li>\n<li>It is consistent with other uses of docstrings (we write <code>/-- doc -/ def</code> and not <code>def /-- doc -/</code>).</li>\n</ul>\n<p>(On a more subjective note, I find the current syntax ugly.)</p>\n<p>Are there some gotchas I'm overlooking?  Any opinions?</p>",
        "id": 298579241,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1663074107
    },
    {
        "content": "<blockquote>\n<p>It is consistent with other uses of docstrings (we write <code>/-- doc -/ def</code> and not <code>def /-- doc -/</code>).</p>\n</blockquote>\n<p>Heh, you must not have tried to document a <code>let rec</code> yet</p>",
        "id": 298580905,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1663074628
    },
    {
        "content": "<p>Oh wow, reading the syntax definition for let rec is a revelation.. Did you know we can do mutual let recs?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">no</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">rec</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">·</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">·</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"n\">a</span> <span class=\"o\">()</span>\n</code></pre></div>",
        "id": 298581796,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1663074939
    },
    {
        "content": "<p>If it wasn't for mutual let recs, I agree it would be better to put the docstring before the let rec.</p>",
        "id": 298581828,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1663074954
    },
    {
        "content": "<p>The way I would prefer to solve the let rec issue is to syntactically allow <code>/-- doc -/ let rec /-- doc1 -/ f1 := ..., /-- doc2 -/ f2 := ...</code>, but <code>/-- doc -/</code> is relocated to be the doc string for <code>f1</code>, with it being a syntax error if there is already a docstring there (like in this example)</p>",
        "id": 298583050,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1663075360
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/1598\">lean4#1598</a></p>",
        "id": 298631074,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1663089514
    },
    {
        "content": "<p>(For anyone unaware of the reference in the first message: <a href=\"https://wiki.haskell.org/Wadler's_Law\">https://wiki.haskell.org/Wadler's_Law</a>)</p>",
        "id": 299219783,
        "sender_full_name": "Reid Barton",
        "timestamp": 1663353259
    }
]