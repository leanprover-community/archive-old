[
    {
        "content": "<p>The following example does not work. We get an error on the <code>$(</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">declare_syntax_cat</span> <span class=\"n\">mycat</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"$(\"</span> <span class=\"n\">term</span> <span class=\"s2\">\")\"</span> <span class=\"o\">:</span> <span class=\"n\">mycat</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"abc\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">term</span><span class=\"bp\">|</span> <span class=\"n\">abc</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">term</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">Lean.Syntax.mkStrLit</span> <span class=\"s2\">\"abc\"</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"c1\">-- expected term</span>\n</code></pre></div>\n<p>In my current mental model of extensible syntax, this <em>should</em> work because the new <code>$(</code> syntax lies in its own category <code>mycat</code> so when we're parsing a <code>term</code> it shouldn't cause trouble. Is this an expected error and we must be careful with declaring global syntax (so should probably always make syntax <code>scoped</code>), or is this a bug?</p>",
        "id": 321979150,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1674022324
    },
    {
        "content": "<p>Keywords are currently global, so yes, be careful when using them in other syntax categories!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">declare_syntax_cat</span> <span class=\"n\">unused</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"ohNo\"</span> <span class=\"o\">:</span> <span class=\"n\">unused</span>\n<span class=\"k\">#check</span> <span class=\"n\">ohNo</span> <span class=\"c1\">-- error: expected term</span>\n</code></pre></div>",
        "id": 321981391,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1674023811
    },
    {
        "content": "<p>are there plans down the road to change that? this behavior seems surprising to me</p>",
        "id": 321987504,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674026882
    }
]