[
    {
        "content": "<p>We have activated the new compiler second phase. It has only one pass now, but we will be adding new passes in the next following days.<br>\nThe <code>.olean</code> files for the Lean 4 library now have an extra 70 Mb. This is a temporary overhead until we delete the old code generator.<br>\nWe are also planning to use a more compact representation for storing code in the .olean files.</p>",
        "id": 302671507,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1665068095
    },
    {
        "content": "<p>What are the plans for that more compact representation?</p>\n<p>Also have you tested/reenabled the JP context pass on Gabriel's example yet? If not shall I do it?</p>",
        "id": 302683231,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1665071134
    },
    {
        "content": "<blockquote>\n<p>What are the plans for that more compact representation?</p>\n</blockquote>\n<p>No concrete plans yet, we should discuss it in tomorrow's meeting. The plan is based on a simple observation: we don't use the locally nameless approach in the code generator and we already have an internalization step in the code generator. Since we have to internalize anyway, we could store the code in a more compact (serialized) format and \"decode\" it during internalization.</p>\n<blockquote>\n<p>Also have you tested/reenabled the JP context pass on Gabriel's example yet? If not shall I do it?</p>\n</blockquote>\n<p>I did not test it yet. I am still testing the <code>toMono</code> pass. The test suite is passing and we can compile lean with <code>toMono</code> enabled, but I found a few small issues today.</p>",
        "id": 302692630,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1665073698
    }
]