[
    {
        "content": "<p>Consider <code>Nat.any</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">Compiler.result</span><span class=\"o\">]</span> <span class=\"n\">size</span><span class=\"o\">:</span> <span class=\"mi\">9</span>\n    <span class=\"kd\">def</span> <span class=\"n\">Nat.any</span> <span class=\"n\">f</span> <span class=\"n\">x.1</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span>\n      <span class=\"n\">cases</span> <span class=\"n\">x.1</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span>\n      <span class=\"bp\">|</span> <span class=\"n\">Nat.zero</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"k\">let</span> <span class=\"n\">_x.2</span> <span class=\"o\">:=</span> <span class=\"n\">false</span><span class=\"bp\">;</span>\n        <span class=\"n\">return</span> <span class=\"n\">_x.2</span>\n      <span class=\"bp\">|</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n.3</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"k\">let</span> <span class=\"n\">_x.4</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.any</span> <span class=\"n\">f</span> <span class=\"n\">n.3</span><span class=\"bp\">;</span>\n        <span class=\"n\">cases</span> <span class=\"n\">_x.4</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span>\n        <span class=\"bp\">|</span> <span class=\"n\">Bool.false</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"k\">let</span> <span class=\"n\">_x.5</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"n\">n.3</span><span class=\"bp\">;</span>\n          <span class=\"n\">return</span> <span class=\"n\">_x.5</span>\n        <span class=\"bp\">|</span> <span class=\"n\">Bool.true</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"n\">return</span> <span class=\"n\">_x.4</span>\n</code></pre></div>\n<p>Aside from the fact that this is not tail recursive, not the possible lack of sharing in <code>f n.3</code>.</p>\n<p>It seems that this is something we could detect and rewrite as an LCNF pass, no?</p>",
        "id": 306762135,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1666997131
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">Nat.any</span> <span class=\"n\">f</span> <span class=\"n\">x.1</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span>\n      <span class=\"n\">cases</span> <span class=\"n\">x.1</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span>\n      <span class=\"bp\">|</span> <span class=\"n\">Nat.zero</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"k\">let</span> <span class=\"n\">_x.2</span> <span class=\"o\">:=</span> <span class=\"n\">false</span><span class=\"bp\">;</span>\n        <span class=\"n\">return</span> <span class=\"n\">_x.2</span>\n      <span class=\"bp\">|</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n.3</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"k\">let</span> <span class=\"n\">XXX</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"n\">n.3</span><span class=\"bp\">;</span>\n        <span class=\"k\">let</span> <span class=\"n\">_x.4</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.any</span> <span class=\"n\">XXX</span><span class=\"bp\">;</span>\n        <span class=\"n\">cases</span> <span class=\"n\">_x.4</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span>\n        <span class=\"bp\">|</span> <span class=\"n\">Bool.false</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"n\">return</span> <span class=\"n\">XXX</span>\n        <span class=\"bp\">|</span> <span class=\"n\">Bool.true</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"n\">return</span> <span class=\"n\">_x.4</span>\n</code></pre></div>",
        "id": 306762256,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1666997195
    },
    {
        "content": "<p>Isn't <code>Nat.any f n.3</code> something completely different than <code>f n.3</code> though?</p>",
        "id": 306763024,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1666997659
    },
    {
        "content": "<p>Note: it's not <code>Nat.any (f n.3)</code>.</p>",
        "id": 306763052,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1666997678
    }
]