[
    {
        "content": "<p>Hey, we were talking about this a bit in the Std meeting -- is it possible to have the top-level main thread block on a task non-busily?</p>\n<p>It seems like IO.wait is a busy loop, which is not ideal. Would it be possible for a <code>main</code> function to be allowed to be <code>IO (Task Unit)</code> instead of <code>IO Unit</code> so that it can asynchronously wait for other tasks?</p>",
        "id": 312906472,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1669746324
    },
    {
        "content": "<p>Why do you think <code>IO.wait</code> is a busy loop?</p>",
        "id": 312906863,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1669746468
    },
    {
        "content": "<p>It's certainly not ideal; it will wake up every time a task finishes.  But it's not a busy loop.</p>",
        "id": 312907181,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1669746562
    },
    {
        "content": "<p>Ohhhh, that is not what I thought, very cool. I'm not sure where I got the idea that it blocks. Maybe we should include that in the docstring for <code>IO.wait</code>.</p>\n<p>It still might be nice to allow <code>Task</code> toplevel -- from what we talked about it seems <code>IO.wait</code> is not deadlock-safe in general, whereas task binds are since the task manager tracks those dependencies. So a top-level task makes it the compiler's job to call the <code>IO.wait</code> and I can have it not appear as the last line of my <code>main</code> functions :)</p>",
        "id": 312911246,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1669747797
    },
    {
        "content": "<p>It blocks, but it doesn't busy loop. Those are separate things.</p>",
        "id": 312920913,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1669750095
    }
]