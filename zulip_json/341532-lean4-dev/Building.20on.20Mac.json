[
    {
        "content": "<p>(Moving over not to pollute the Weak Symbol thread)</p>\n<p>I have built Lean from source on Mac but some of the tests are failing.  After looking into it, the vast majority of the problems are caused by the linker trying to link <code>-lc++</code>, which is clang's version of the C++ standard library.<br>\nI followed the instructions for Mac but this issue persists (fwiw, not all the install instructions seem to work anymore: <code>brew install llvm --with-clang</code> appears not to be supported anymore?)</p>\n<p>Is this the intention or is my build misconfigured in some way?  clang can also use gcc's <code>libstdc++</code> and some people do.  Before I try to figure this out, I want to make sure i'm chasing the right problem.</p>\n<p>Thanks!</p>",
        "id": 302366519,
        "sender_full_name": "Tom",
        "timestamp": 1664927827
    },
    {
        "content": "<p>My experience so far:</p>\n<ul>\n<li>\n<p>I still haven't  been able to build natively on MacOS; the issue is still related to <code>-lc++</code>.  It seems cause by the fact that <code>leanc</code> doesn't set <code>-L</code> to the llvm lib location.  I've been reading through the CMakeLists.txt and tried using <code>LEANC_OPT</code> but that also didn't work</p>\n</li>\n<li>\n<p>I was able to finally build on MacOS using nix but then because I'm not familiar with it, I've not been able to find a version of binutils which contains <code>gold</code></p>\n</li>\n<li>\n<p>My Ubuntu server was still on 18.0 LTS, so Lean also didn't build, seemingly because of an older version of glibc.  I'm in the process of upgrading it to 22 LTS to see if that helps</p>\n</li>\n</ul>\n<p>If anybody has any suggestions regarding building on MacOS natively, I would welcome any feedback.</p>\n<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 302387605,
        "sender_full_name": "Tom",
        "timestamp": 1664946816
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515083\">@Tom</span> I believe CI is using the standard Xcode command line tools, whose <code>c++</code> even seems to default to <code>-lc++</code></p>",
        "id": 302410984,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1664958985
    },
    {
        "content": "<p>Ok, I'll try installing xcode on my mac; It turns out one can use libc++ on the mac but when you install llvm via brew, it's installed into a non-standard location not to interfere with the \"system\" install of clang and I've not been able to convince cmake to respect the -L/-R for the linker.  Seems the MacOS instructions are perhaps not current anymore?  Some comments in the makefiles seems to indicate that this may have been done on purpose?</p>\n<p>Just to make sure, I also tried installing the entire toolchain via conda and while I could build my own executables, ran into the same problems as above when building Lean.</p>\n<p>I had to go through two upgrades of my Linux box which took a while but now I'm at least able to get a build on Linux, too.</p>",
        "id": 302536080,
        "sender_full_name": "Tom",
        "timestamp": 1665000525
    },
    {
        "content": "<p>Oh yes, <code>osx-10.9.md</code> is as out of date as it sounds :)</p>",
        "id": 302536794,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1665000836
    },
    {
        "content": "<p>Strange.  I just went through, removed and reinstalled the xcode command line tools and still get the same errors in the tests.</p>",
        "id": 302580980,
        "sender_full_name": "Tom",
        "timestamp": 1665029984
    },
    {
        "content": "<p>Actually I was wrong above, all our Mac CI jobs use our custom LLVM toolchain. So the standard setup might indeed be broken.</p>",
        "id": 302605217,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1665045374
    },
    {
        "content": "<p>Ok, I'll see if I can figure out how the CI is setup and if I can replicate locally.  Thanks.</p>",
        "id": 302703781,
        "sender_full_name": "Tom",
        "timestamp": 1665077084
    },
    {
        "content": "<p>It would certainly be nice if it worked without any extra setup</p>",
        "id": 302712227,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1665079822
    }
]