[
    {
        "content": "<p>I want to write a tactic (a command and/or an attribute) that will autogenerate lemmas like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/differentiable.cexp\">docs#differentiable.cexp</a> from <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complex.has_deriv_at_exp\">docs#complex.has_deriv_at_exp</a></p>",
        "id": 215901911,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1604695689
    },
    {
        "content": "<p>Any hints will be very welcome.</p>",
        "id": 215901976,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1604695731
    },
    {
        "content": "<p>What are the parameters here? Should it work when <code>exp</code> is changed to a different function? Or for the different differentiability statements below?</p>",
        "id": 215902648,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1604696099
    },
    {
        "content": "<p>One possible example to follow is the <code>is_poly</code> attribute from the Witt vector project. You apply it to a theorem and it derives some related theorems in different forms, basically what you're looking for. <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/ring_theory/witt_vector/is_poly.lean#L444\">https://github.com/leanprover-community/mathlib/blob/master/src/ring_theory/witt_vector/is_poly.lean#L444</a></p>",
        "id": 215902729,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1604696161
    },
    {
        "content": "<p>It might not be a perfect comparison though.</p>",
        "id": 215902791,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1604696178
    },
    {
        "content": "<p>Yes, it should work for different infinitely smooth functions. Ideally, it should also work with functions like <code>log</code> automatically adding <code>â‰  0</code> assumptions but this is not required for the first version of the attribute.</p>",
        "id": 215915457,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1604704036
    }
]