[
    {
        "content": "<p>If I'm writing a tactic and I have a large proof term that will be used multiple times in the final proof term, is there any point using <code>note</code> to avoid the same duplicate large proof term appearing multiple times in the final proof. The added hypotheses won't be used by the user only internally.</p>\n<p>You obviously get exponential blow-up without doing this, but maybe it's okay. I think I remember <code>expr</code> has some efficient representation of proof terms that contain the same subterm lots of times.</p>",
        "id": 222495079,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1610485880
    },
    {
        "content": "<p>It's a good idea to do it, still. It's easy to undo subtree sharing by careless traversal but with an assumption, you're protected. It's also easier to take advantage of sharing in Lean code with an assumption</p>",
        "id": 222496365,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1610486558
    },
    {
        "content": "<p>Is there a name for this definition <code>n ← mk_fresh_name, note n none pr</code>? The lack of it made me think that it probably wasn't normal to do this all the time.</p>",
        "id": 222504028,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1610490109
    },
    {
        "content": "<p>I think you want <code>get_unused_name</code> instead. <code>mk_fresh_name</code> is for declarations.</p>",
        "id": 222505896,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1610491008
    },
    {
        "content": "<p>I think the most helpful function would be <code>local_proof</code>. It would be good to PR your own function that also generates names for you</p>",
        "id": 222506087,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1610491123
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> <a href=\"#narrow/stream/239415-metaprogramming-.2F.20tactics/topic/Should.20I.20use.20.60note.60.20invisibly/near/222504028\">said</a>:</p>\n<blockquote>\n<p>Is there a name for this definition <code>n ← mk_fresh_name, note n none pr</code>? The lack of it made me think that it probably wasn't normal to do this all the time.</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.note_anon\">docs#tactic.note_anon</a></p>",
        "id": 222545652,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1610524382
    },
    {
        "content": "<p>Nice!</p>",
        "id": 222594847,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1610550936
    }
]