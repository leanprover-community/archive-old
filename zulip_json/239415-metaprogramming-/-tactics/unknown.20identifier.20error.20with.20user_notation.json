[
    {
        "content": "<p>Hello! What is the proper way to capture free variables by name in a <code>pexpr</code>? Why does <code>ok</code> work but not <code>bad</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">tactic.interactive.xₙ</span>\n  <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">interactive.parse</span> <span class=\"bp\">$</span> <span class=\"n\">lean.parser.tk</span> <span class=\"s2\">\"=\"</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">e₁</span> <span class=\"o\">:</span> <span class=\"n\">interactive.parse</span> <span class=\"n\">interactive.types.texpr</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n  <span class=\"n\">tactic.to_expr</span> <span class=\"bp\">```</span><span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">%%</span><span class=\"n\">e₁</span><span class=\"o\">)</span> <span class=\"bp\">&gt;&gt;=</span> <span class=\"n\">tactic.exact</span>\n\n<span class=\"kd\">reserve</span> <span class=\"kd\">prefix</span> <span class=\"bp\">`</span><span class=\"n\">xₙ</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">100</span>\n\n<span class=\"kd\">@[user_notation]</span>\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">mk_seq_macro</span>\n  <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">interactive.parse</span> <span class=\"bp\">$</span> <span class=\"n\">lean.parser.tk</span> <span class=\"s2\">\"xₙ\"</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">interactive.parse</span> <span class=\"bp\">$</span> <span class=\"n\">lean.parser.tk</span> <span class=\"s2\">\"=\"</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">e₂</span> <span class=\"o\">:</span> <span class=\"n\">interactive.parse</span> <span class=\"n\">interactive.types.texpr</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">lean.parser</span> <span class=\"n\">pexpr</span> <span class=\"o\">:=</span>\n  <span class=\"n\">pure</span> <span class=\"bp\">```</span><span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">%%</span><span class=\"n\">e₂</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">xₙ</span> <span class=\"bp\">=</span> <span class=\"n\">n</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">bad</span> <span class=\"o\">:=</span> <span class=\"n\">xₙ</span> <span class=\"bp\">=</span> <span class=\"n\">n</span>  <span class=\"c1\">-- unknown identifier 'n'</span>\n</code></pre></div>",
        "id": 269847918,
        "sender_full_name": "Etienne Laurin",
        "timestamp": 1643443248
    }
]