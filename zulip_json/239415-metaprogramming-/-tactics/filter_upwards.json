[
    {
        "content": "<p>The tactic <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.filter_upwards\">docs#tactic.interactive.filter_upwards</a> converts the goal to the form <code>∀ x, x ∈ t1 → ⋯ → x ∈ tn → x ∈ s</code>.  So it is followed 99% of the time (eg, every time at a random sample I took in mathlib) by <code>intros</code>.</p>\n<p>Perhaps we could have syntax <code>filter_upwards [...] with x h1 h2</code> which performs the <code>intros</code> step at the same time?</p>",
        "id": 268988548,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1642899571
    },
    {
        "content": "<p>sounds good to me. The <code>filter_upwards [...] e</code> syntax is also odd and could be replaced by <code>filter_upwards [...] using e</code></p>",
        "id": 268993481,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642907390
    },
    {
        "content": "<p>I've opened issue <a href=\"https://github.com/leanprover-community/mathlib/pull/11616\">#11616</a> for this and will try it in a few weeks if someone else doesn't get there first!</p>",
        "id": 268993692,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1642907700
    },
    {
        "content": "<p>May I give it a try? This is what I'm trying to learn at the moment <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 269016547,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642942867
    },
    {
        "content": "<p>When combining both improvements, should it be said <code>filter_upwards [...] with ... using ...</code> or <code>filter_upwards [...] using ... with ...</code>?</p>",
        "id": 269017919,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642944883
    },
    {
        "content": "<p>Ah, <code>using ...</code> tries to close the goal with <code>exact ...</code> so I'm guessing the former is more appropriate</p>",
        "id": 269019490,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642946876
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 269019529,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642946886
    },
    {
        "content": "<p>I'm noticing that there are more occurrences of <code>assume ...</code> after <code>filter_upwards [...]</code> than <code>intros ...</code></p>",
        "id": 269028200,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642957839
    },
    {
        "content": "<p>Maybe not more, but I can't tell which one occurs more often</p>",
        "id": 269028606,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642958453
    },
    {
        "content": "<p>Please don't forget to update the docstring.</p>",
        "id": 269028780,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642958655
    },
    {
        "content": "<p><code>assume</code> is the same as <code>intros</code> though :)</p>",
        "id": 269028901,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1642958833
    },
    {
        "content": "<p>You may also want to check for λ s after <code>filter_upwards</code>, since an <code>intros</code> can be replaced by <code>refine λ ..., ...</code>.  <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 269029060,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1642959014
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2494\">@maintainers</span> I've tried to keep track of these PRs but it's hard to know when they land. Can we have a rule that anything that adds a new interactive tactic or changes tactic syntax be tagged as <strong>modifies-tactic-syntax</strong>? That will make it easier to review these for mathport/mathlib4 updates</p>",
        "id": 269030213,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642960433
    },
    {
        "content": "<p>They should at least be tagged <code>meta</code>. I don't think there are that many PRs tagged with <code>meta</code>. Does that already help?</p>",
        "id": 269030298,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1642960511
    },
    {
        "content": "<p>It's only a small fraction of <code>meta</code> issues. I'm going through now and marking them</p>",
        "id": 269030724,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642960940
    },
    {
        "content": "<p>The bulk of the PR is finished: <a href=\"https://github.com/leanprover-community/mathlib/pull/11624\">#11624</a><br>\nI'm just fixing the errors that the CI tests find, but you can already check the changes.</p>",
        "id": 269040604,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642973990
    },
    {
        "content": "<p>And it's merged :)</p>",
        "id": 269239511,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643107938
    }
]