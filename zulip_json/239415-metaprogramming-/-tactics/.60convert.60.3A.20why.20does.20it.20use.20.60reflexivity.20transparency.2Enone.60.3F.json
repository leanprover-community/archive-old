[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.factorization</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">test</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">L.to_finset.prod</span> <span class=\"n\">id</span> <span class=\"bp\">∣</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">convert</span> <span class=\"n\">multiset.to_finset_prod_dvd_prod</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>With this <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> given by <span class=\"user-mention\" data-user-id=\"422543\">@Stuart Presnell</span> , we get an mvar issue. This basically cmes down to <code>congr'</code> going down the rabbit-hole and messing up an <code>mvar</code> assignment, and I'm not too sure why (I will try to debug this further ). However, if we replace the <code>reflexivity transparency.none</code> in <code>congr'</code> with <code>reflexivity</code>, it suddenly works again. Does anyone know why this decision was made? It was clearly on purpose, as the <code>orelse</code> chain ends with a full <code>reflexivity</code>.</p>\n<p>For reference, the <code>congr'</code> code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">congr'</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span>\n<span class=\"bp\">|</span> <span class=\"n\">o</span> <span class=\"o\">:=</span> <span class=\"n\">focus1</span> <span class=\"bp\">$</span>\n  <span class=\"n\">assumption</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">reflexivity</span> <span class=\"n\">transparency.none</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">by_proof_irrel</span> <span class=\"bp\">&lt;|&gt;</span>\n  <span class=\"o\">(</span><span class=\"n\">guard</span> <span class=\"o\">(</span><span class=\"n\">o</span> <span class=\"bp\">≠</span> <span class=\"n\">some</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">congr_core'</span> <span class=\"bp\">&gt;&gt;</span>\n    <span class=\"n\">all_goals'</span> <span class=\"o\">(</span><span class=\"n\">try</span> <span class=\"o\">(</span><span class=\"n\">congr'</span> <span class=\"o\">(</span><span class=\"n\">nat.pred</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">o</span><span class=\"o\">))))</span> <span class=\"bp\">&lt;|&gt;</span>\n  <span class=\"n\">reflexivity</span>\n</code></pre></div>",
        "id": 269882595,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643483572
    },
    {
        "content": "<p>previous discussion: <a href=\"#narrow/stream/113488-general/topic/goals.20accomplished.2C.20but.20tactic.20failed\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/goals.20accomplished.2C.20but.20tactic.20failed</a></p>",
        "id": 269882612,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643483592
    },
    {
        "content": "<p>oh, this doesn't fix it, only fixes it if you <code>convert using (very large nat)</code>. I don't understand why at all.</p>",
        "id": 269882795,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643483776
    },
    {
        "content": "<p>sorry, let me be clear. my suggested fix vs current state:</p>\n<ul>\n<li><code>convert</code>: both fail</li>\n<li><code>convert using small_nat</code>: both succeed</li>\n<li><code>convert using large_nat</code>: mine succeeds, original fails</li>\n</ul>",
        "id": 269882863,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643483876
    }
]