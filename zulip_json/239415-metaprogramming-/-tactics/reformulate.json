[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> so you think you could offer us a variation on <code>library_search</code> that would search only for lemmas asserting the goal or the targeted assumption is equivalent to something else? For instance, if my goal is uniform continuity of a function between metric spaces, then I want to type <code>reformulate</code> and see a list of suggestions including <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric.uniform_continuous_iff\">docs#metric.uniform_continuous_iff</a> (ideally suggestions would be clickable and include the reformulated goal), and the same with <code>reformulate at h</code>.</p>",
        "id": 207819856,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598258767
    },
    {
        "content": "<p>I heard someone talk about a work-in-progress <code>rw_hint</code> that seemed like the same idea</p>",
        "id": 207836241,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598271742
    },
    {
        "content": "<p>This also sounds like the core part of <code>rewrite_search</code>, but with a human doing the search part</p>",
        "id": 207836874,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598272122
    },
    {
        "content": "<p>No, I'm asking for a much stupider thing, no recursion into subterm involved.</p>",
        "id": 207837835,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598272774
    },
    {
        "content": "<p>In principle I'm mostly targeting the case of \"here are ten definitions of the same thing, I don't want to know which one is <em>the</em> definition\".</p>",
        "id": 207837968,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598272848
    },
    {
        "content": "<p>This sounds like <code>suggest</code> but filtered to only <code>iff.mp/mpr</code> applications, right?</p>",
        "id": 207838017,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598272895
    },
    {
        "content": "<p>And also working on hypotheses.</p>",
        "id": 207838023,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598272901
    },
    {
        "content": "<p>Yes, but it would return only relevant stuff.</p>",
        "id": 207838089,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598272934
    },
    {
        "content": "<p>I guess \"return only relevant stuff\" is something one can make incremental progress on by improving the heuristic for ranking by relevance</p>",
        "id": 207844440,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598276739
    },
    {
        "content": "<p>Ranking by the number of new goals generated seems like a good metric. An application of <code>iff.mp</code> that results in no extra goals seems like a reformulation, by definition.</p>",
        "id": 207844618,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598276829
    },
    {
        "content": "<p>There is no ranking involved in my proposal. If the tactic only matches exactly the goal (or assumption), relevance is automatic (modulo side condition), that's the point.</p>",
        "id": 207954923,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598357728
    },
    {
        "content": "<p>Then I don't understand your comment here:<br>\n<span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/239415-metaprogramming-.2F.20tactics/topic/reformulate/near/207838089\">said</a>:</p>\n<blockquote>\n<p>Yes, but it would return only relevant stuff.</p>\n</blockquote>\n<p>It sounds like you're exactly describing <code>suggest</code> filtered to only <code>iff.mp/mpr</code> applications, also working on hypotheses.</p>",
        "id": 207956304,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598358721
    },
    {
        "content": "<p>Yes, that's why I hope it would be a trivial exercise for Scott (or anyone understand how suggest works).</p>",
        "id": 207956920,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598359120
    },
    {
        "content": "<p>Well, there is extra credit if the tactic displays what the new goal/assumption would be, and I don't think suggest does that.</p>",
        "id": 207956953,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598359157
    },
    {
        "content": "<p>If we have 10 equivalent definitions, then probably we have a <code>tfae</code>, not many <code>iff</code>s.</p>",
        "id": 210287887,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600274210
    },
    {
        "content": "<p>The tactic would be useful even if we have a couple of iff. And, more importantly, they can have different assumptions. For instance uniform continuity can be reformulated differently for general uniform spaces, metric spaces, normed spaces.</p>",
        "id": 210290861,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600275733
    },
    {
        "content": "<p>I meant that the tactic should show <code>tfae.get</code> too</p>",
        "id": 210291393,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600275980
    }
]