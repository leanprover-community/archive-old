[
    {
        "content": "<p>Is there an existing way to spell <code>evalConstCheck</code> without the <code>eval</code>? Basically</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">constCheck</span> <span class=\"o\">(</span><span class=\"n\">env</span> <span class=\"o\">:</span> <span class=\"n\">Environment</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">constName</span> <span class=\"n\">typeName</span> <span class=\"o\">:</span> <span class=\"n\">Name</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">env.find</span><span class=\"bp\">?</span> <span class=\"n\">constName</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span>      <span class=\"bp\">=&gt;</span> <span class=\"n\">throw</span> <span class=\"o\">(</span><span class=\"s2\">\"unknown constant '\"</span> <span class=\"bp\">++</span> <span class=\"n\">toString</span> <span class=\"n\">constName</span> <span class=\"bp\">++</span> <span class=\"s2\">\"'\"</span><span class=\"o\">)</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">info</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"k\">match</span> <span class=\"n\">info.type</span> <span class=\"k\">with</span>\n      <span class=\"bp\">|</span> <span class=\"n\">Expr.const</span> <span class=\"n\">c</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">c</span> <span class=\"bp\">==</span> <span class=\"n\">typeName</span>\n      <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throw</span> <span class=\"s2\">\"not a constant\"</span>\n</code></pre></div>\n<p>I feel like this is a really common function, and I'm just drawing a blank on the name...!</p>",
        "id": 319737260,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1672994004
    }
]