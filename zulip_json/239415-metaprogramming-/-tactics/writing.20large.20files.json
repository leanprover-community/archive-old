[
    {
        "content": "<p>Once again I'm back to trying to get a reliable leancrawler, to explore the liquid tensor experiment code. But as usual I'm hitting completely random failure to handle large datasets. I tried using <code>tactic.trace</code>and redirecting output to a file and I tried using the io monads. But in all cases some data simply disappear. It's very clear with io where the file simply stop in the middle a line. With trace there are missing lines. I'd be really grateful if someone competent could have a look. I put a compiled LTE at <a href=\"https://www.imo.universite-paris-saclay.fr/~pmassot/liquid.tar.bz2\">https://www.imo.universite-paris-saclay.fr/~pmassot/liquid.tar.bz2</a>, together with <code>stats.lean</code> in the project root folder to see what I mean. That version tried the io with list split version that is used in dc-gen.</p>",
        "id": 240803938,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1622448331
    },
    {
        "content": "<p>The challenge is to get a well-formed yaml file containing 73954 lines starting with<code>Name: \"</code>.</p>",
        "id": 240804029,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1622448389
    },
    {
        "content": "<p>I often use the <code>--json</code> flag for this sort of thing.  Does that help?</p>",
        "id": 240833395,
        "sender_full_name": "Jason Rute",
        "timestamp": 1622467574
    },
    {
        "content": "<p>Although if both tracing and IO both loose data, that probably won't help.</p>",
        "id": 240834024,
        "sender_full_name": "Jason Rute",
        "timestamp": 1622467923
    },
    {
        "content": "<p>Another thing I've run across is that compiling Lean takes a lot of memory.  (Are you tracing during compiling?)  If your machine doesn't have enough memory, Lean might crash halfway through and you will be missing data.  Have you checked that it is exiting properly?  (If running from a python process you can look at the return code.)</p>",
        "id": 240834242,
        "sender_full_name": "Jason Rute",
        "timestamp": 1622468076
    },
    {
        "content": "<p>Forget about my compiling comment.  I see you are just looping over the environment.  (I got so caught up in the hacks I did to make the lean proof recording project work, that I forget there are other more standard ways to get information out of Lean.)  I guess my comment about Lean exiting halfway through could still be true though.</p>",
        "id": 240835129,
        "sender_full_name": "Jason Rute",
        "timestamp": 1622468582
    },
    {
        "content": "<p>You may want to look at <a href=\"https://github.com/jesse-michael-han/lean-step-public\">https://github.com/jesse-michael-han/lean-step-public</a>.  It does something similar, extracting a similarly large amount of data from the lean environment.  I'm not aware of similar issues with missing data.  It is a big project, so you may want to ask <span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span> for pointers.</p>",
        "id": 240838729,
        "sender_full_name": "Jason Rute",
        "timestamp": 1622470674
    },
    {
        "content": "<p>iirc that repository writes huge amounts of JSON-formatted data (up to thousands of datapoints per declaration for all the tens of thousands of declarations in mathlib) so you could probably copy-paste that code and then instantly convert it to yaml afterwards</p>",
        "id": 240840962,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1622471923
    },
    {
        "content": "<p>Thanks, I'll have a look.</p>",
        "id": 240850578,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1622477706
    },
    {
        "content": "<p>I remember I proposed a change to doc-gen to have it write the json to a file instead of stdout, but it was rejected as being too slow.</p>",
        "id": 240866483,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622490885
    },
    {
        "content": "<p>Perhaps that's not as relevant as I think it is. Gabriel alluded to a problem in this comment: <a href=\"https://github.com/leanprover-community/doc-gen/pull/99#issuecomment-730216929\">https://github.com/leanprover-community/doc-gen/pull/99#issuecomment-730216929</a></p>",
        "id": 240866612,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622491016
    }
]