[
    {
        "content": "<p>Hi all, I wrote the following tactics:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kd\">universes</span> <span class=\"n\">u1</span> <span class=\"n\">u2</span>\n<span class=\"kd\">class</span> <span class=\"n\">incidence_geometry</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">point</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u1</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">line</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u2</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">online</span> <span class=\"o\">:</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">line</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sameside</span> <span class=\"o\">:</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">line</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">not_online_of_sameside</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">},</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">line</span><span class=\"o\">},</span> <span class=\"n\">sameside</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">L</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span><span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">incidence_geometry</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">incidence_geometry_ℝ_ℝ</span> <span class=\"o\">:</span> <span class=\"n\">incidence_geometry</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">point</span> <span class=\"o\">:=</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"c1\">-- p = (x, y)</span>\n  <span class=\"n\">line</span> <span class=\"o\">:=</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"c1\">-- a x + b y = c ↔ (a, b, c)</span>\n  <span class=\"n\">online</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">sameside</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">not_online_of_sameside</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n   <span class=\"o\">}</span>\n\n<span class=\"kd\">variables</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">incidence_geometry</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">neq_of_online_offline</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">line</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">aL</span> <span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bL</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">ab</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">ab</span> <span class=\"n\">at</span> <span class=\"n\">aL</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">bL</span> <span class=\"n\">aL</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">side</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">L</span><span class=\"o\">:</span> <span class=\"n\">line</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acL</span><span class=\"o\">:</span> <span class=\"n\">sameside</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">≠</span> <span class=\"n\">b</span>\n<span class=\"o\">:=(</span><span class=\"n\">neq_of_online_offline</span> <span class=\"n\">bL</span> <span class=\"o\">(</span><span class=\"n\">not_online_of_sameside</span> <span class=\"n\">acL</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">exact_list</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span> <span class=\"bp\">→</span>  <span class=\"n\">tactic</span> <span class=\"n\">unit</span>\n<span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span> <span class=\"n\">tactic.fail</span> <span class=\"s2\">\"no matching expression found\"</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">hs</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">do</span> <span class=\"o\">{</span>\n<span class=\"n\">tactic.applyc</span> <span class=\"bp\">``</span><span class=\"n\">neq_of_online_offline</span><span class=\"o\">,</span>\n<span class=\"n\">tactic.exact</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">tactic.assumption</span>\n<span class=\"o\">}</span>\n<span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">exact_list</span> <span class=\"n\">hs</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">exact_list2</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span> <span class=\"bp\">→</span>  <span class=\"n\">tactic</span> <span class=\"n\">unit</span>\n<span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span> <span class=\"n\">tactic.fail</span> <span class=\"s2\">\"no matching expression found\"</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">hs</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">do</span> <span class=\"o\">{</span>\n<span class=\"n\">tactic.applyc</span> <span class=\"bp\">``</span><span class=\"n\">side</span><span class=\"o\">,</span>\n<span class=\"n\">tactic.exact</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">tactic.assumption</span>\n<span class=\"o\">}</span>\n<span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">exact_list2</span> <span class=\"n\">hs</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">neq</span><span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"k\">do</span>\n<span class=\"n\">hs</span> <span class=\"bp\">←</span>  <span class=\"n\">tactic.local_context</span><span class=\"o\">,</span>\n<span class=\"o\">(</span><span class=\"n\">exact_list</span> <span class=\"n\">hs</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">exact_list2</span> <span class=\"n\">hs</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">neqtest</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">L</span><span class=\"o\">:</span> <span class=\"n\">line</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acL</span><span class=\"o\">:</span> <span class=\"n\">sameside</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">L</span><span class=\"o\">)</span>  <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">neq</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">neqtest2</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">point</span> <span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">L</span><span class=\"o\">:</span> <span class=\"n\">line</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">aL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span><span class=\"kd\">by</span> <span class=\"n\">neq</span>\n</code></pre></div>\n<p>Basically, I made a tactic that tries the theorems <code>side</code> and <code>neq_of_online_offline</code> consecutively. However, I had to write <code>exact_list2</code> in addition to <code>exact_list</code> in order to try both theorems. I feel like I'm missing an easy way to try as many theorems as I want with just two meta programs. Is there a way to make this work more efficiently?</p>",
        "id": 300884588,
        "sender_full_name": "Andre Hernandez-Espiet (Rutgers)",
        "timestamp": 1664220025
    },
    {
        "content": "<p>Have you looked at <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#apply_rules\">tactic#apply_rules</a> ?</p>",
        "id": 300884766,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664220104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"407577\">@Andre Hernandez-Espiet (Rutgers)</span> I looked a little more at your use case and it seems like you need to backtrack, not just apply the first lemma that fits.  So you want the generalization <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#solve_by_elim\">tactic#solve_by_elim</a> of <code>apply_rules</code>.  Here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">incidence_geometry</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">point</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">line</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">online</span> <span class=\"o\">:</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">line</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sameside</span> <span class=\"o\">:</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">line</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">not_online_of_sameside</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">},</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">line</span><span class=\"o\">},</span> <span class=\"n\">sameside</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">L</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span><span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span>\n\n<span class=\"kn\">export</span> <span class=\"n\">incidence_geometry</span> <span class=\"o\">(</span><span class=\"n\">online</span> <span class=\"n\">sameside</span> <span class=\"n\">not_online_of_sameside</span><span class=\"o\">)</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">incidence_geometry</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">i.point</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">i.line</span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">neq_of_online_offline</span> <span class=\"o\">(</span><span class=\"n\">aL</span> <span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bL</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span>   <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">ab</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">ab</span> <span class=\"n\">at</span> <span class=\"n\">aL</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">bL</span> <span class=\"n\">aL</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">side</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acL</span><span class=\"o\">:</span> <span class=\"n\">sameside</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">neq_of_online_offline</span> <span class=\"n\">bL</span> <span class=\"o\">(</span><span class=\"n\">not_online_of_sameside</span> <span class=\"n\">acL</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n\n<span class=\"sd\">/-- Tactic for deducing disequalities among points. -/</span>\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">solve_by_elim</span> <span class=\"o\">[</span><span class=\"n\">neq_of_online_offline</span><span class=\"o\">,</span> <span class=\"n\">side</span><span class=\"o\">]]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acL</span><span class=\"o\">:</span> <span class=\"n\">sameside</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">neq</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">aL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">neq</span>\n</code></pre></div>",
        "id": 300890019,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664222351
    },
    {
        "content": "<p>(Note: work on asking questions with <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> -- everything in your question involving the reals was irrelevant.)</p>",
        "id": 300890245,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664222441
    },
    {
        "content": "<p>In practice, you probably want something extensible, to which you can add more relevant lemmas as they accumulate.  You can do this using the <code>solve_by_elim</code> option which brings in all lemmas marked with a certain attribute:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[user_attribute]</span>\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">point_neq</span> <span class=\"o\">:</span> <span class=\"n\">user_attribute</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">point_neq</span><span class=\"o\">,</span>\n  <span class=\"n\">descr</span> <span class=\"o\">:=</span> <span class=\"s2\">\"lemmas usable to prove disequalities of points\"</span> <span class=\"o\">}</span>\n\n<span class=\"sd\">/-- Tactic for deducing disequalities among points. -/</span>\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">solve_by_elim</span> <span class=\"k\">with</span> <span class=\"n\">point_neq</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 300891893,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664223146
    },
    {
        "content": "<p>Now tag each relevant lemma with <code>@[point_neq]</code> as you prove it.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[point_neq]</span> <span class=\"kd\">theorem</span> <span class=\"n\">side</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acL</span><span class=\"o\">:</span> <span class=\"n\">sameside</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">neq_of_online_offline</span> <span class=\"n\">bL</span> <span class=\"o\">(</span><span class=\"n\">not_online_of_sameside</span> <span class=\"n\">acL</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n</code></pre></div>",
        "id": 300891992,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664223186
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407577\">Andre Hernandez-Espiet (Rutgers)</span> has marked this topic as unresolved.</p>",
        "id": 300912878,
        "sender_full_name": "Notification Bot",
        "timestamp": 1664233240
    },
    {
        "content": "<p>I am going more with the Euclidean side. Working with Euclid's elements.</p>",
        "id": 300912967,
        "sender_full_name": "Andre Hernandez-Espiet (Rutgers)",
        "timestamp": 1664233305
    },
    {
        "content": "<p>Also, I feel like I'm missing something very silly. Why doesn't the example get proven by <code>neq</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">incidence_geometry</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">point</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">line</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">online</span> <span class=\"o\">:</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">line</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"n\">point</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"c1\">-- Betweenness</span>\n<span class=\"o\">(</span><span class=\"n\">online_2_of_B</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">point</span><span class=\"o\">},</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">line</span><span class=\"o\">},</span> <span class=\"n\">B</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span> <span class=\"bp\">→</span> <span class=\"n\">online</span> <span class=\"n\">c</span> <span class=\"n\">L</span> <span class=\"bp\">→</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span>\n\n<span class=\"kn\">export</span> <span class=\"n\">incidence_geometry</span> <span class=\"o\">(</span><span class=\"n\">online</span> <span class=\"n\">B</span> <span class=\"n\">online_2_of_B</span><span class=\"o\">)</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">incidence_geometry</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span><span class=\"o\">:</span> <span class=\"n\">i.point</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">i.line</span><span class=\"o\">}</span>\n\n<span class=\"kd\">@[user_attribute]</span>\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">point_neq</span> <span class=\"o\">:</span> <span class=\"n\">user_attribute</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">point_neq</span><span class=\"o\">,</span>\n  <span class=\"n\">descr</span> <span class=\"o\">:=</span> <span class=\"s2\">\"lemmas usable to prove disequalities of points\"</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">solve_by_elim</span> <span class=\"k\">with</span> <span class=\"n\">point_neq</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[point_neq]</span> <span class=\"kd\">theorem</span> <span class=\"n\">neq_of_online_offline</span> <span class=\"o\">(</span><span class=\"n\">aL</span> <span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bL</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span>   <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">ab</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">ab</span> <span class=\"n\">at</span> <span class=\"n\">aL</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">bL</span> <span class=\"n\">aL</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">@[point_neq]</span> <span class=\"kd\">theorem</span> <span class=\"n\">bet_nq</span> <span class=\"o\">(</span><span class=\"n\">aL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cL</span><span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">online</span> <span class=\"n\">c</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Bet</span><span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">a</span> <span class=\"n\">d</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"bp\">≠</span> <span class=\"n\">d</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">neq_of_online_offline</span> <span class=\"o\">(</span><span class=\"n\">online_2_of_B</span> <span class=\"n\">Bet</span> <span class=\"n\">aL</span> <span class=\"n\">bL</span><span class=\"o\">)</span> <span class=\"n\">cL</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">aL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">a</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bL</span><span class=\"o\">:</span> <span class=\"n\">online</span> <span class=\"n\">b</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cL</span><span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">online</span> <span class=\"n\">c</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Bet</span><span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">a</span> <span class=\"n\">d</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"bp\">≠</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">neq</span>\n</code></pre></div>",
        "id": 300913125,
        "sender_full_name": "Andre Hernandez-Espiet (Rutgers)",
        "timestamp": 1664233405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"407577\">@Andre Hernandez-Espiet (Rutgers)</span> Increasing the \"max depth\" seems to work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">solve_by_elim</span> <span class=\"k\">with</span> <span class=\"n\">point_neq</span> <span class=\"o\">{</span> <span class=\"n\">max_depth</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span> <span class=\"o\">}]</span>\n</code></pre></div>",
        "id": 300917204,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664236012
    },
    {
        "content": "<p>For this small example this works. However, for my longer code I then get the error <code>excessive memory consumption detected at 'expression equality test' (potential solution: increase memory consumption threshold)</code> Any ideas on how to increase the threshold?</p>",
        "id": 300927254,
        "sender_full_name": "Andre Hernandez-Espiet (Rutgers)",
        "timestamp": 1664244249
    },
    {
        "content": "<p>I went to vscode's settings and changed the memory limit from 2GB to 12GB and it still gives the same issue, so this doesn't seem to be it...</p>",
        "id": 301056691,
        "sender_full_name": "Andre Hernandez-Espiet (Rutgers)",
        "timestamp": 1664296389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"407577\">@Andre Hernandez-Espiet (Rutgers)</span> Maybe something is looping ... I don't know but in any case I don't think it's a metaprogramming-specific issue; you could isolate it and ask on <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a>.</p>",
        "id": 301239663,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664372829
    }
]