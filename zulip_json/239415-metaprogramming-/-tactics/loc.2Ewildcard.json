[
    {
        "content": "<p>Dear All,</p>\n<p>should <code>loc.wildcard</code> include the current goal as well?  That is, if I want to apply a tactic <code>at *</code>, I should get both <code>local_context</code> and <code>target</code>, right?</p>\n<p><del>Is there a single command that returns <code>local_context ++ target</code>?</del><br>\nEDIT: This part is somewhat nonsense, since, even though <code>local_context</code> appears to have type <code>list expr</code> and <code>target</code> appears to have type <code>expr</code>, I think that <code>local_context</code> are the <em>names</em> of the variables in the context, while <code>target</code> is the <em>type</em> of the goal.</p>\n<p>The question of whether <code>tactic at *</code> should mean all hypotheses <em>and also</em> the target still holds!</p>\n<p>Thanks!</p>",
        "id": 280055968,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650886727
    },
    {
        "content": "<p>yes, <code>at *</code> means all hypotheses and the target</p>",
        "id": 280109124,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1650910891
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/interactive.loc.apply/src\">src#interactive.loc.apply</a> contains the reasoning about this case. You should usually use this instead of destructuring <code>loc</code> directly</p>",
        "id": 280109147,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1650910908
    },
    {
        "content": "<p>Ah, i did not know.  I did something, maybe I'll have to change it a little bit.</p>",
        "id": 280110155,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650911440
    }
]