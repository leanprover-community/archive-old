[
    {
        "content": "<p>I'm working with building interface between LEAN and Python for automated theorem proving and trying to extract information and setting the proving environment, but many difficulties emerge. </p>\n<ol>\n<li>Is there any metaprogramming method to declare that \"the current proof is within a specific namespace\" like we declare \"namespace\" and \"end\" in lean file? To my knowledge there is only <code>tactic.set_env (env.execute_open some_namespaces)</code> in <code>init/meta/tactic.lean</code> with seems behave like <code>open</code>. </li>\n<li>Is there any metaprogramming method to make declaration <code>open_locale</code>?</li>\n<li>Is there any metaprogramming method to collect declared alias information? <br>\nAny reply or explaination would be appreciated! And if anyone want to build this project with me please contact me <code>xinhj@mail2.sysu.edu.cn</code>, thanks!</li>\n</ol>",
        "id": 303752436,
        "sender_full_name": "Huajian Xin",
        "timestamp": 1665630896
    },
    {
        "content": "<p>You might want to do your interface for Lean 4 instead of Lean 3. Both because Lean 3 will be obsolete soon-ish and because the metaprogramming API of Lean 4 is a lot more expressive than that of Lean 3.</p>",
        "id": 303836761,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1665669129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256311\">Jannis Limperg</span> <a href=\"#narrow/stream/239415-metaprogramming-.2F-tactics/topic/namespace.2C.20alias.20and.20open_locale/near/303836761\">said</a>:</p>\n<blockquote>\n<p>You might want to do your interface for Lean 4 instead of Lean 3. Both because Lean 3 will be obsolete soon-ish and because the metaprogramming API of Lean 4 is a lot more expressive than that of Lean 3.</p>\n</blockquote>\n<p>Thanks! Good suggestions</p>",
        "id": 303953935,
        "sender_full_name": "Huajian Xin",
        "timestamp": 1665714720
    },
    {
        "content": "<p>My recommended path is:</p>\n<ul>\n<li>Read <a href=\"https://leanprover.github.io/functional_programming_in_lean/\">https://leanprover.github.io/functional_programming_in_lean/</a></li>\n<li>Read <a href=\"https://github.com/arthurpaulino/lean4-metaprogramming-book\">https://github.com/arthurpaulino/lean4-metaprogramming-book</a></li>\n<li>Have a look at <a href=\"https://github.com/PatrickMassot/lean4-game-server\">https://github.com/PatrickMassot/lean4-game-server</a> for inspiration about how to interact with Lean 4 in a non-editor way</li>\n</ul>\n<p>Of course this includes asking tons of questions in <a href=\"#narrow/stream/270676-lean4\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4</a> when needed</p>",
        "id": 303976495,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665732681
    }
]