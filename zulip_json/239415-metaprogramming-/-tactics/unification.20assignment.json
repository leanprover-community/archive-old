[
    {
        "content": "<p>Given a type <code>target : expr</code> and a type <code>given : expr</code> which unify (i.e. <code>unify given target</code> evaluates to <code>tt</code>), is it possible to retrieve the metavariable assignments made for <code>given</code> in the course of unification?</p>\n<p>Reason: I would like to construct terms of type <code>target</code>, and do so by checking if declarations <code>given</code> allow one to produce such terms. To actually construct the term, I need to supply <code>given</code> with the correct arguments.</p>",
        "id": 282253470,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1652451649
    },
    {
        "content": "<p>I.e. what I am trying to do is more or less to achieve the effect of <code>apply given</code>, but non-interactively.</p>",
        "id": 282255396,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1652452447
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.apply\">docs#tactic.apply</a> and its variants don't do what you want?</p>",
        "id": 282255915,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1652452683
    },
    {
        "content": "<p>maybe :D<br>\nI am in a <code>tactic expr</code>, so how would I set the main goal?</p>",
        "id": 282257020,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1652453117
    },
    {
        "content": "<p>Ah, <code>tactic.change target ff</code> seems to be there for that</p>",
        "id": 282257560,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1652453331
    },
    {
        "content": "<p>No, but then I'd get <code>@id true ...</code> in my proof term with <code>tactic.result</code></p>",
        "id": 282258457,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1652453671
    },
    {
        "content": "<p>So <code>tactic.set_goals</code> maybe</p>",
        "id": 282258765,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1652453800
    },
    {
        "content": "<p>If you just want to set the goal (to an mvar you already have lying around), <code>set_goals</code>.</p>\n<p><code>change target</code> requires that the main goal is defeq to <code>target</code>.</p>",
        "id": 282261941,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1652455137
    }
]