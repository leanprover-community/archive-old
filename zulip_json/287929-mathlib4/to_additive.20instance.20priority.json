[
    {
        "content": "<p>I want to fix my earlier hacky solution of the instance priority in <code>to_additive</code>, but the file <code>Algebra.Group.OrderSynonym</code> fails with some very weird messages (see <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/3562129264/jobs/5983590994\">https://github.com/leanprover-community/mathlib4/actions/runs/3562129264/jobs/5983590994</a> ). I've checked what my code is doing and it sets the correct priority, so I suspect there is yet another bug in <code>to_additive</code></p>",
        "id": 312564094,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669617770
    },
    {
        "content": "<p>oh and there seems to be bug in <code>to_additive</code> that primed names cause issues (<code>@[to_additive OrderDual.SMul']</code> is not doing anything)</p>",
        "id": 312564681,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669618058
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/765\">mathlib4#765</a></p>",
        "id": 312586099,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669628025
    },
    {
        "content": "<p>This is not a bug in <code>to_additive</code>, just a few errors with the usage of <code>to_additive</code> in relation to automatically generated <code>instance</code> names. I pushed a fix.</p>",
        "id": 312600966,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669633087
    },
    {
        "content": "<p>I cannot reproduce your last bug. I think you were not seeing any output from <code>@[to_additive? ...]</code> since the declaration already exists.  Note: after <a href=\"https://github.com/leanprover-community/mathlib4/pull/718\">mathlib4#718</a> <code>@[to_additive? ...]</code> should always give some output.</p>",
        "id": 312602493,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669633539
    },
    {
        "content": "<p>thanks for looking into it - should be align the <code>to_additive</code> version as well?</p>",
        "id": 312610235,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669636355
    },
    {
        "content": "<p>as for the primed variables: I've printf debugged <code>to_additive</code> to see whether the instance priority was set correctly and for the primed variables there was no output and hovering over the name in <code>to_additive</code> also gave nothing</p>",
        "id": 312610440,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669636445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/287929-mathlib4/topic/to_additive.20instance.20priority/near/312610235\">said</a>:</p>\n<blockquote>\n<p>thanks for looking into it - should be align the <code>to_additive</code> version as well?</p>\n</blockquote>\n<p>I don't know. It's never done, but I expect we indeed do need that as well (which means we're probably missing hundreds of <code>#align</code>'s)</p>",
        "id": 312624675,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669641196
    },
    {
        "content": "<p>I've been aligning all the additive versions. It's definitely necessary if the non-additive version needed aligning.</p>",
        "id": 312624899,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669641289
    },
    {
        "content": "<p>In what instances does one need to align the instance names? In general, most instances do not get referenced by name.</p>",
        "id": 312625145,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669641372
    },
    {
        "content": "<p>I align instances that are manually named as well as parent projections for classes which extend other classes as these are most likely to be referenced by name.</p>",
        "id": 312625646,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669641556
    }
]