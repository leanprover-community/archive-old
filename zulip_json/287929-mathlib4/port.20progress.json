[
    {
        "content": "<p>I'm about to test a bot that may post regularly to this thread. Expect some noise as I convince cron to work.</p>",
        "id": 309423399,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668323187
    },
    {
        "content": "<p>Total files in mathlib:            2725<br>\nLongest import chain in mathlib:   145<br>\nPorted files in mathlib:           30 (1.1% of total)<br>\nPorted lines in mathlib:           9160 (1.0% of total)<br>\nLongest unported chain in mathlib: 135</p>",
        "id": 309423508,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668323307
    },
    {
        "content": "<p>Total files in mathlib:            2725<br>\nLongest import chain in mathlib:   145<br>\nPorted files in mathlib:           30 (1.1% of total)<br>\nPorted lines in mathlib:           9160 (1.0% of total)<br>\nLongest unported chain in mathlib: 135</p>",
        "id": 309423752,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668323553
    },
    {
        "content": "<p>Total files in mathlib:            2725<br>\nLongest import chain in mathlib:   145<br>\nPorted files in mathlib:           30 (1.1% of total)<br>\nPorted lines in mathlib:           9160 (1.0% of total)<br>\nLongest unported chain in mathlib: 135</p>",
        "id": 309424040,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668323856
    },
    {
        "content": "<p>Thanks cron, once a day will do nicely from now on!</p>",
        "id": 309424128,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668323942
    },
    {
        "content": "<p>If anyone would like to see the longest unported chain, please run <code>leanproject port-progress</code> inside mathlib. I'm happy to take suggestions on a useful way for the bot to post this.</p>",
        "id": 309424271,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668324090
    },
    {
        "content": "<p>nit: maybe have the bot format as</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Total files in mathlib</td>\n<td>2725</td>\n</tr>\n<tr>\n<td>Longest import chain in mathlib</td>\n<td>145</td>\n</tr>\n<tr>\n<td>Ported files in mathlib</td>\n<td>30 (1.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines in mathlib</td>\n<td>9160 (1.0% of total)</td>\n</tr>\n<tr>\n<td>Longest unported chain in mathlib</td>\n<td>135</td>\n</tr>\n</tbody>\n</table>",
        "id": 309441831,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668338022
    },
    {
        "content": "<p>The bot just runs <code>leanproject port-progress | head -n 5 | zulip-send ...</code>, and there's not really room for formatting in there. :-)</p>",
        "id": 309444932,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668340080
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> This should do it:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>leanproject port-progress | head -n 5 | awk 'BEGIN{ FS=\":\"; print \"| | |\\n|--|--|\"} {print \"| \" $1 \": | \" $2 \" |\"}' | zulip-send ...\n</code></pre></div>",
        "id": 309446077,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1668340897
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Total files in mathlib:</td>\n<td>2726</td>\n</tr>\n<tr>\n<td>Longest import chain in mathlib:</td>\n<td>145</td>\n</tr>\n<tr>\n<td>Ported files in mathlib:</td>\n<td>30 (1.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines in mathlib:</td>\n<td>9160 (1.0% of total)</td>\n</tr>\n<tr>\n<td>Longest unported chain in mathlib:</td>\n<td>135</td>\n</tr>\n</tbody>\n</table>",
        "id": 309446641,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668341210
    },
    {
        "content": "<p>I would have suggested a <code>--markdown</code> flag to <code>port-progress</code>, but I guess that works too...</p>",
        "id": 309457172,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668346921
    },
    {
        "content": "<p>I do love awk</p>",
        "id": 309469645,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668353990
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Total files in mathlib:</td>\n<td>2732</td>\n</tr>\n<tr>\n<td>Longest import chain in mathlib:</td>\n<td>142</td>\n</tr>\n<tr>\n<td>Ported files in mathlib:</td>\n<td>30 (1.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines in mathlib:</td>\n<td>9046 (1.0% of total)</td>\n</tr>\n<tr>\n<td>Longest unported chain in mathlib:</td>\n<td>132</td>\n</tr>\n</tbody>\n</table>",
        "id": 309483755,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668362529
    },
    {
        "content": "<p>could the \"ported files\" and \"ported lines\" lines be changed to something like <code>30 / 2732 = 1.1%</code>? That way you can also see the number of total lines in mathlib and trendline that as well instead of trying to reconstruct it from the 1.1%</p>",
        "id": 309484695,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668363066
    },
    {
        "content": "<p><a href=\"https://tqft.net/mathlib/analysis/normed_space/star/gelfand_duality\">file#analysis/normed_space/star/gelfand_duality</a> is our new \"champion\", ending the longest unported import chain.</p>",
        "id": 309506183,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668378534
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>30/2732</td>\n<td>(1.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>9046/914410</td>\n<td>(1.0% of total)</td>\n</tr>\n<tr>\n<td>Longest unported import chain:</td>\n<td>132/142</td>\n<td>(7.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 309506398,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668378670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, this is in <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/139\">https://github.com/leanprover-community/mathlib-tools/pull/139</a>. I can probably have my bot run off the branch for a while, to avoid cutting too many releases.</p>",
        "id": 309506594,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668378822
    },
    {
        "content": "<p>I'm not sure about this new display. On my phone I can see the information in the text version because it wraps line whereas the table version requires painful scrolling</p>",
        "id": 309506902,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668379057
    },
    {
        "content": "<p>This isn't a strong opinion however.</p>",
        "id": 309506917,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668379071
    },
    {
        "content": "<p>Releasing mathlibtools isn't super time consuming but doing it several times a week is maybe a bit excessive. If you and your bot are the only user of some new feature then we can probably wait to batch features a bit.</p>",
        "id": 309507018,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668379145
    },
    {
        "content": "<p>If we're separating progress into a third column, we might as well remove the brackets (and maybe the \"of total\"/\"of progress\")</p>",
        "id": 309507029,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379158
    },
    {
        "content": "<p>That being said, I'm also very happy if I can help the port by doing grunt releasing work on pypi</p>",
        "id": 309507068,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1668379179
    },
    {
        "content": "<p>well, one of the divisions is calculated differently from the others so it might be a bit confusing</p>",
        "id": 309507077,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379192
    },
    {
        "content": "<p>We could also cut down the descriptions a bit \"longest unported import chain\" -&gt; \"longest chain\" would make it almost fit I think.</p>",
        "id": 309507141,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668379219
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/309507077\">said</a>:</p>\n<blockquote>\n<p>well, one of the divisions is calculated differently from the others so it might be a bit confusing</p>\n</blockquote>\n<p><code>Longgest unported chain: 10/142</code> sounds like a better phrasing to me anyway</p>",
        "id": 309507185,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379271
    },
    {
        "content": "<p>but <code>10</code> isn't a measure of anything there</p>",
        "id": 309507210,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379293
    },
    {
        "content": "<p>these are not related chains</p>",
        "id": 309507224,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379310
    },
    {
        "content": "<p>the longest chain in mathlib has length 142, and the longest chain of unported files has length 132</p>",
        "id": 309507274,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379330
    },
    {
        "content": "<p>Then why are we even printing progress on this if it doesn't mean anything?</p>",
        "id": 309507358,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379387
    },
    {
        "content": "<p>it's comparing the heights of the two posets which is a meaningful measure</p>",
        "id": 309507366,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379402
    },
    {
        "content": "<p>but the difference of heights isn't itself the height of something</p>",
        "id": 309507404,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379437
    },
    {
        "content": "<p>A better stat would be the number of unported files below the longest chain, but I think we're bikeshedding here</p>",
        "id": 309507457,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379452
    },
    {
        "content": "<p>Yes. :-)</p>",
        "id": 309507475,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668379466
    },
    {
        "content": "<p>isn't that going to be almost everything?</p>",
        "id": 309507498,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379495
    },
    {
        "content": "<p>I don't see how that's any less meaning ful than longest path! (as opposed to longest unported path)</p>",
        "id": 309507548,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379537
    },
    {
        "content": "<p>if we assume infinite bandwidth, after 132 rounds of PR merging all of mathlib will be ported</p>",
        "id": 309507638,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379586
    },
    {
        "content": "<p>Yeah, so 142 is meaningless <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 309507651,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379606
    },
    {
        "content": "<p>and the progress is too</p>",
        "id": 309507657,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379618
    },
    {
        "content": "<p>142 is how many rounds there would be starting from scratch</p>",
        "id": 309507659,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379619
    },
    {
        "content": "<p>Further, 142 will change over time!</p>",
        "id": 309507671,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668379631
    },
    {
        "content": "<p>If people continue doing refactoring work on mathlib3 to remove spurious imports, that number will decrease.</p>",
        "id": 309507688,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668379650
    },
    {
        "content": "<p>In fact, it has already dropped some.</p>",
        "id": 309507695,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668379655
    },
    {
        "content": "<p>yeah, it's important to have both numbers because they chase each other</p>",
        "id": 309507696,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379655
    },
    {
        "content": "<p>the number of files went up though</p>",
        "id": 309507705,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668379666
    },
    {
        "content": "<p>And this is exactly why I've included the 142. :-)</p>",
        "id": 309507710,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668379672
    },
    {
        "content": "<p>Uh, I thought you were arguing for removing it <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 309507758,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668379689
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/309506183\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://tqft.net/mathlib/analysis/normed_space/star/gelfand_duality\">file#analysis/normed_space/star/gelfand_duality</a> is our new \"champion\", ending the longest unported import chain.</p>\n</blockquote>\n<p>I guess it's my turn to wear the scarlet \"A\" <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> ? I'll have a look at the chain to see if anything stands out.</p>",
        "id": 309518417,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668388460
    },
    {
        "content": "<p>And unfortunately it's about to be superseded because of <a href=\"https://github.com/leanprover-community/mathlib/pull/17164\">#17164</a> ... <span aria-label=\"embarrassed\" class=\"emoji emoji-1f633\" role=\"img\" title=\"embarrassed\">:embarrassed:</span></p>",
        "id": 309518503,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668388533
    },
    {
        "content": "<p>Total files in mathlib:            2743<br>\nLongest import chain in mathlib:   134<br>\nPorted files in mathlib:           34 (1.2% of total)<br>\nPorted lines in mathlib:           10584 (1.2% of total)<br>\nLongest unported chain in mathlib: 124</p>",
        "id": 309918355,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668448921
    },
    {
        "content": "<p>Where's our pretty tables?</p>",
        "id": 309921037,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1668449766
    },
    {
        "content": "<p>Oops. I have two open PRs against mathlib-tools. I guess I had run <code>pip3 install .</code> against the other one, and my bot ran using that.</p>",
        "id": 310077532,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668458343
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/2744</td>\n<td>(1.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10767/913983</td>\n<td>(1.2% of total)</td>\n</tr>\n<tr>\n<td>Longest unported import chain:</td>\n<td>124/134</td>\n<td>(7.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310089440,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668463024
    },
    {
        "content": "<p>Finally had a chance to look at this long chain. <code>topology.noetherian_space</code> was a bit surprising to me, but I'm not really familiar at all with that part of the library. Ultimately though, this chain requires Liouville's theorem and the Cauchy integral formula, so it's bound to be rather long (I'm not sure exactly how long).The pieces after that are expected I think. It seems that there is a lot of roaming around in topology and measure theory <em>maybe</em> some of which can be short-circuited, but I'm not at all sure about that.</p>",
        "id": 310093868,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668464783
    },
    {
        "content": "<p>Perhaps we could prove that the exponential function is convex without appealing to its derivative.  Then</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>analysis.convex.specific_functions\n</code></pre></div>\n<p>would probably not need to import the chain</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>'analysis.normed_space.operator_norm', 'analysis.normed_space.multilinear', 'analysis.normed_space.bounded_linear_maps', 'analysis.calculus.fderiv', 'analysis.calculus.deriv', 'analysis.calculus.local_extr', 'analysis.calculus.mean_value', 'analysis.calculus.cont_diff', 'analysis.calculus.inverse', 'analysis.special_functions.exp_deriv', 'analysis.special_functions.complex.log_deriv', 'analysis.special_functions.pow_deriv', 'analysis.convex.specific_functions'\n</code></pre></div>",
        "id": 310095441,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668465399
    },
    {
        "content": "<p>what is the full chain?</p>",
        "id": 310095580,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668465462
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"bp\">'</span><span class=\"n\">logic.equiv.defs'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.synonym'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.compare'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.monotone'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.lattice'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.bounded_order'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.order.monoid.defs'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.order.sub.defs'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.order.group.defs'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.order.ring.defs'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.order.ring.canonical'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.nat.order.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.nat.order.lemmas'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.group_power.ring'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.group_power.order'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.nat.pow'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.group_power.lemmas'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.group_power.default'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.list.big_operators'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.list.count'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.list.lattice'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.list.nodup'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.list.dedup'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.list.perm'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.multiset.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">algebra.big_operators.multiset'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.multiset.bind'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.multiset.powerset'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.multiset.nodup'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.multiset.dedup'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.multiset.finset_ops'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.finset.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.finset.card'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.finset.option'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.finset.lattice'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.finset.powerset'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.fintype.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.finset.sort'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">data.set.finite'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.conditionally_complete_lattice'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.copy'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.filter.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.filter.prod'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.filter.bases'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.filter.at_top_bot'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.filter.cofinite'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">order.filter.ultrafilter'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.tactic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.order'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.maps'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.constructions'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.continuous_on'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.bases'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.subset_properties'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.connected'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.separation'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.dense_embedding'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.homeomorph'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.continuous_function.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.sets.opens'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.sets.closeds'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.noetherian_space'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.quasi_separated'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.sets.compacts'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.group'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.ring'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.field'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.order.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.order.intermediate_value'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.order.compact'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.metric_space.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.metric_space.lipschitz'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.metric_space.antilipschitz'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.metric_space.isometry'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed.group.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed.group.infinite_sum'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed.field.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed_space.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed.order.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.locally_convex.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.locally_convex.balanced_core_hull'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.locally_convex.bounded'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.uniform_convergence'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">topology.algebra.module.strong_topology'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed_space.operator_norm'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed_space.multilinear'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed_space.bounded_linear_maps'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.calculus.fderiv'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.calculus.deriv'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.calculus.local_extr'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.calculus.mean_value'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.calculus.cont_diff'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.calculus.inverse'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.special_functions.exp_deriv'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.special_functions.complex.log_deriv'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.special_functions.pow_deriv'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.convex.specific_functions'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.mean_inequalities'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.integral.mean_inequalities'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.function.simple_func_dense'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.function.strongly_measurable.basic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.function.ae_eq_fun'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.function.lp_space'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.function.lp_order'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.function.l1_space'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.function.simple_func_dense_lp'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.integral.set_to_l1'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.integral.bochner'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.integral.set_integral'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.constructions.prod'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.group.measure'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.constructions.pi'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.measure.lebesgue'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.measure.haar_lebesgue'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.integral.interval_integral'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.special_functions.integrals'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.special_functions.non_integrable'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">measure_theory.integral.circle_integral'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.complex.cauchy_integral'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.complex.liouville'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.complex.polynomial'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed_space.spectrum'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed_space.star.spectrum'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">analysis.normed_space.star.gelfand_duality'</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 310095686,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668465495
    },
    {
        "content": "<p>If we merge <a href=\"https://github.com/leanprover-community/mathlib/pull/17507\">#17507</a> (just sayin') then <code>leanproject import-graph</code> will automatically annotate these long import chains according to modules with are not really used.</p>",
        "id": 310096909,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466086
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (data.rat.order)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>29/126</td>\n<td>(23.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10397/39435</td>\n<td>(26.4% of total)</td>\n</tr>\n<tr>\n<td>Longest unported chain:</td>\n<td>16/26</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310097271,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668466241
    },
    {
        "content": "<p>do we have something which can make displays like the one I made before, with <code>*</code> in front of unused modules?</p>",
        "id": 310097285,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466248
    },
    {
        "content": "<p>sweet, from 1% to 23%</p>",
        "id": 310097356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466282
    },
    {
        "content": "<p>At present only graphical. Nothing text mode.</p>",
        "id": 310097364,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466284
    },
    {
        "content": "<p>Ah -- notice the new header</p>",
        "id": 310097383,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466292
    },
    {
        "content": "<p>what does it mean?</p>",
        "id": 310097400,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466301
    },
    {
        "content": "<p>This is progress up to <code>data.rat.order</code>.</p>",
        "id": 310097429,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466313
    },
    {
        "content": "<p>I thought having some intermediate milestones might be encouraging / useful.</p>",
        "id": 310097489,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466326
    },
    {
        "content": "<p>I can easily modify (after <a href=\"https://github.com/leanprover-community/mathlib/pull/17507\">#17507</a>) <code>leanproject port-progress</code> so that it prints the longest chain, annotated with <code>*</code>s. It is already printing the longest chain, and elsewhere in <code>leanproject</code> is code to compute the <code>*</code>s.</p>",
        "id": 310097670,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466428
    },
    {
        "content": "<p>How about putting the longest unported chain, with the <code>*</code>, in a <code>&lt;details&gt;</code> after the table?</p>",
        "id": 310097800,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466472
    },
    {
        "content": "<p>I guess that won't be a one-liner though</p>",
        "id": 310097884,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466512
    },
    {
        "content": "<p>Sure. I can alternatively add a hyperlink.</p>",
        "id": 310097889,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466518
    },
    {
        "content": "<p>It's not entirely clear to me that making the longest chain shorter is actually worthwhile progress. Just because it represents some sort of inf for the porting process doesn't imply that if we make it shorter it will actually make porting happen more quickly</p>",
        "id": 310097896,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1668466522
    },
    {
        "content": "<p>do you have something to link to?</p>",
        "id": 310097909,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466526
    },
    {
        "content": "<p>I'm about to add a hyperlink to the rendered import-graph.</p>",
        "id": 310097957,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466549
    },
    {
        "content": "<p>making the chain shorter is refactoring work which makes it easier to reach particular targets</p>",
        "id": 310098024,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466567
    },
    {
        "content": "<p>This will include the <code>*</code> information (as grey shading).</p>",
        "id": 310098027,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466569
    },
    {
        "content": "<p>I think reporting the longest chain is quite useful: it gives people constructive work to be doing on the mathlib3 side. :-)</p>",
        "id": 310098120,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466608
    },
    {
        "content": "<p>I'm not sure that watching the chain over time is that useful though</p>",
        "id": 310098135,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466616
    },
    {
        "content": "<p>I agree. But I want to make sure it is easy for people to look at the chain.</p>",
        "id": 310098207,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466643
    },
    {
        "content": "<p>once you have done some work to optimize a chain, it's usually better to go find a different chain elsewhere in the hierarchy</p>",
        "id": 310098215,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466648
    },
    {
        "content": "<p>but the longest chain is at least easy to pinpoint</p>",
        "id": 310098280,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466676
    },
    {
        "content": "<p>I understand that, but if we have ten things to do and we decide to rearrange stuff to make the first thing quicker to do but the total longer to do, are we really gaining anything? We still have to port all the files, regardless of how much extra work you want to put in rearranging them. I understand it's important to get linarith working quickly but I don't understand why it's important to make the borel cantelli lemma rely on fewer imports</p>",
        "id": 310098357,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1668466695
    },
    {
        "content": "<p>I think it is important for the future that we get mathlib's dependency creep under control</p>",
        "id": 310098433,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466732
    },
    {
        "content": "<p><code>leanproject import-graph --from tactic.basic --to interesting_target --show-unused</code> will show you a picture of whatever chain you like.</p>",
        "id": 310098439,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466735
    },
    {
        "content": "<p>I've stated adding <code>assert_not_exists</code> statements in my refactoring PRs, exactly to constrain import creep. But it is hard to do this well.</p>",
        "id": 310098505,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466776
    },
    {
        "content": "<p>The mathlib4 dependency hierarchy is going to look significantly different from mathlib once everything shakes out</p>",
        "id": 310098555,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466801
    },
    {
        "content": "<p>Kevin, there is also a parallelisation argument. If we're optimistic about the number of people porting / number of simultaneous PRs we can cope with, broader shallower trees are better.</p>",
        "id": 310098625,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466818
    },
    {
        "content": "<p>because std is taking a bunch of the low level files and tactics need to be more stratified in order to optimize <code>precompiledModules</code> behavior</p>",
        "id": 310098696,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466852
    },
    {
        "content": "<p>I suspect the borel cantelli lemmas is also limiting our CI times.</p>",
        "id": 310098711,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668466857
    },
    {
        "content": "<p>note that it's not the borel cantelli lemma in particular we care about, but rather every file downstream of the refactored import edges</p>",
        "id": 310098898,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466938
    },
    {
        "content": "<p>the borel cantelli lemma is just a single target we can easily point to which holds up a big chain of imports</p>",
        "id": 310098988,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668466981
    },
    {
        "content": "<p>the fact that it's a long chain means it's more likely to have unnecessary linearization in it</p>",
        "id": 310099061,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668467014
    },
    {
        "content": "<p>I'm just saying that it's not immediately obvious to me that shortening the depth definitely means shortening the length of the port and it might lengthen it. On the other hand if you can see other reasons for doing it then go ahead!</p>",
        "id": 310099075,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1668467019
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-15/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>29/126</td>\n<td>(23.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10397/39435</td>\n<td>(26.4% of total)</td>\n</tr>\n<tr>\n<td>Longest unported chain:</td>\n<td>16/26</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310101149,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668467853
    },
    {
        "content": "<p>Kevin, I agree that it's probably not worth paying attention to the longest chain in a month or so, but I think focused effort up front to clean up the hierarchy could be useful.</p>",
        "id": 310101569,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668468076
    },
    {
        "content": "<p>Notice that I contributed to the chain (specifically the link analysis.complex.liouville -&gt; polynomial) by golfing the fundamental theorem of algebra using Liouville (<a href=\"https://github.com/leanprover-community/mathlib/pull/17343\">#17343</a>). I wonder what the import graph looks like before and after the PR. However it's near the end of the chain, and the next file analysis.normed_space.spectrum does need algebraic closedness of C, so it needs the algebraic hierarchy up to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_alg_closed\">docs#is_alg_closed</a>, but maybe it doesn't need that much complex analysis.</p>",
        "id": 310102536,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1668468576
    },
    {
        "content": "<p>I played with the tool, speculatively deleting various imports (without compiling, or checking that my proposed file-reorganization or more-elementary-reproofs actually worked).  I conjecture that one could get the Gelfand duality chain from 124 down to 114, something like</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>['logic.equiv.defs', 'order.synonym', 'order.compare', 'order.monotone', 'order.lattice', 'order.bounded_order', 'algebra.order.monoid.defs', 'algebra.order.sub.defs', 'algebra.order.group.defs', 'algebra.order.ring.defs', 'algebra.order.ring.canonical', 'data.nat.order.basic', 'data.nat.order.lemmas', 'algebra.group_power.ring', 'algebra.group_power.order', 'data.nat.pow', 'algebra.group_power.lemmas', 'algebra.group_power.default', 'data.list.big_operators', 'data.list.count', 'data.list.lattice', 'data.list.nodup', 'data.list.dedup', 'data.list.perm', 'data.multiset.basic', 'algebra.big_operators.multiset', 'data.multiset.bind', 'data.multiset.powerset', 'data.multiset.nodup', 'data.multiset.dedup', 'data.multiset.finset_ops', 'data.finset.basic', 'data.finset.card', 'data.finset.option', 'data.finset.lattice', 'data.finset.powerset', 'data.fintype.basic', 'data.finset.sort', 'data.set.finite', 'order.conditionally_complete_lattice', 'order.copy', 'order.filter.basic', 'order.filter.prod', 'order.filter.bases', 'order.filter.lift', 'order.filter.small_sets', 'topology.basic', 'topology.tactic', 'topology.order', 'topology.maps', 'topology.constructions', 'topology.continuous_on', 'topology.bases', 'topology.subset_properties', 'topology.connected', 'topology.separation', 'topology.dense_embedding', 'topology.homeomorph', 'topology.continuous_function.basic', 'topology.sets.opens', 'topology.sets.closeds', 'topology.noetherian_space', 'topology.quasi_separated', 'topology.sets.compacts', 'topology.algebra.group', 'topology.algebra.ring', 'topology.algebra.field', 'topology.algebra.order.basic', 'topology.algebra.order.intermediate_value', 'topology.algebra.order.compact', 'topology.metric_space.basic', 'topology.metric_space.lipschitz', 'topology.metric_space.antilipschitz', 'topology.metric_space.isometry', 'analysis.normed.group.basic', 'analysis.normed.group.infinite_sum', 'analysis.normed.field.basic', 'analysis.normed_space.basic', 'analysis.asymptotics.asymptotics', 'analysis.asymptotics.theta', 'analysis.special_functions.exp', 'analysis.special_functions.trigonometric.basic', 'analysis.special_functions.trigonometric.angle', 'analysis.special_functions.complex.arg', 'analysis.special_functions.complex.log', 'analysis.special_functions.pow', 'analysis.convex.specific_functions', 'analysis.mean_inequalities', 'measure_theory.integral.mean_inequalities', 'measure_theory.function.simple_func_dense', 'measure_theory.function.strongly_measurable.basic', 'measure_theory.function.ae_eq_fun', 'measure_theory.function.lp_space', 'measure_theory.function.lp_order', 'measure_theory.function.l1_space', 'measure_theory.function.simple_func_dense_lp', 'measure_theory.integral.set_to_l1', 'measure_theory.integral.bochner', 'measure_theory.integral.set_integral', 'measure_theory.constructions.prod', 'measure_theory.group.measure', 'measure_theory.constructions.pi', 'measure_theory.measure.lebesgue', 'measure_theory.measure.haar_lebesgue', 'measure_theory.integral.interval_integral', 'analysis.special_functions.integrals', 'analysis.special_functions.non_integrable', 'measure_theory.integral.circle_integral', 'analysis.complex.cauchy_integral', 'analysis.complex.liouville', 'analysis.complex.polynomial', 'analysis.normed_space.spectrum', 'analysis.normed_space.star.spectrum', 'analysis.normed_space.star.gelfand_duality']\n</code></pre></div>\n<p>Past this it is difficult.  Observations:</p>\n<ul>\n<li>measure theory unifies the integral (considered in L^1 spaces) with L^p spaces, and so needs a full theory of raising to the power of p, even though the construction \"raise to the power of 1\" is much more elementary than the construction \"raise to the power of p\"</li>\n<li>the construction of raising to the power of p is itself not done directly using <code>data.complex.exponential</code> (which is a low-level file), but also requires the construction of trig functions, because the junk value chosen for a negative power is <code>exp (y log x) cos (πy)</code>.  And trig functions require a lot of topology (one chooses pi by the intermediate value theorem).</li>\n</ul>",
        "id": 310105496,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668469948
    },
    {
        "content": "<p>The first difficulty seems like a reasonable choice. The second one is a bit unfortunate. :-)</p>",
        "id": 310106571,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668470542
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-15/all.pdf\">mathlib port progress</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/2747</td>\n<td>(1.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10767/914414</td>\n<td>(1.2% of total)</td>\n</tr>\n<tr>\n<td>Longest unported chain:</td>\n<td>125/135</td>\n<td>(7.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310107760,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668471215
    },
    {
        "content": "<p>FYI: <code>analysis.normed_space.spectrum</code> needs a <em>bunch</em> of complex analysis, including a direct application of Liouville's theorem, so the FTA golf into a separate file is no big deal.</p>",
        "id": 310111835,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668473976
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-15/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>29/126</td>\n<td>(23.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10397/39435</td>\n<td>(26.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-15/data.rat.order\">Longest unported chain</a>:</td>\n<td>16/26</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310124263,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668485085
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-15/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>26/75</td>\n<td>(34.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>9637/26110</td>\n<td>(36.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-15/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>10/20</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310124506,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668485312
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-15/all.pdf\">all</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/2749</td>\n<td>(1.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10767/913469</td>\n<td>(1.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-15/all\">Longest unported chain</a>:</td>\n<td>125/135</td>\n<td>(7.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310127687,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668488053
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/310124506\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-15/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>The first row shouldn't be restricted to the first column, I think.</p>",
        "id": 310128472,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1668488778
    },
    {
        "content": "<p>I think vanilla markdown doesn't support that.</p>",
        "id": 310128637,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668488886
    },
    {
        "content": "<p>Then maybe don't include the first row in the table.</p>",
        "id": 310128708,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1668488958
    },
    {
        "content": "<p>meh</p>",
        "id": 310128761,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668488998
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-15/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>31/527</td>\n<td>(5.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10457/211423</td>\n<td>(4.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-15/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>71/81</td>\n<td>(12.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310128839,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668489021
    },
    {
        "content": "<p>I could just drop the words <code>mathlib port progress</code>. But I'm finding it hard to care about the whitespace. :-)</p>",
        "id": 310128844,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668489024
    },
    {
        "content": "<p>Or you could put the file name in the second column</p>",
        "id": 310128934,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1668489085
    },
    {
        "content": "<p>Okay, I did that.</p>",
        "id": 310129470,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668489525
    },
    {
        "content": "<p>The graphs linked in the progress reports indicate files which \"aren't really used\" in a faint gray. Can people distinguish these?</p>",
        "id": 310129629,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668489630
    },
    {
        "content": "<p>The graph for <code>topology.metric_space.basic</code> is <em>covered</em> with gray. If anyone wants to have a go at cleaning up imports there ...</p>",
        "id": 310129663,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668489657
    },
    {
        "content": "<p>fyi: I am splitting of some parts of <code>topology.algebra.order.basic</code></p>",
        "id": 310164549,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668506126
    },
    {
        "content": "<p>that is a monstrum of 3000 lines and should be split anyways</p>",
        "id": 310164776,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668506198
    },
    {
        "content": "<p>Oh actually I have thoughts about this one specifically</p>",
        "id": 310166593,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668506806
    },
    {
        "content": "<p>I am only moving out the linear ordered field, this seems to be very sensible - there were quite a few files that never used the field parts</p>",
        "id": 310166736,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668506852
    },
    {
        "content": "<p>The first half has no algebra in it, so it shouldn't be in <code>topology.algebra.order</code>, but rather <code>topology.order</code></p>",
        "id": 310166741,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668506855
    },
    {
        "content": "<p>I think then our refactors are disjoint enough to not cause problems</p>",
        "id": 310166929,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668506903
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17549\">#17549</a></p>",
        "id": 310167137,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668506981
    },
    {
        "content": "<p>Okay, I will do the split I want myself <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 310167376,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668507056
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17549\">#17549</a> looks good to me. <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> , is that compatible with your plans?</p>",
        "id": 310201976,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1668519439
    },
    {
        "content": "<p>This looks very fine</p>",
        "id": 310203530,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668519826
    },
    {
        "content": "<p>Do we have something like a list of who is working on which file somewhere? I would like to start working on the port, avoiding duplicating the efforts...</p>",
        "id": 310240812,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668530289
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status</a></p>",
        "id": 310240939,
        "sender_full_name": "David Renshaw",
        "timestamp": 1668530326
    },
    {
        "content": "<p>I think this is on the wiki, but you can get it with the <code>port-status</code> script too.</p>",
        "id": 310240992,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668530342
    },
    {
        "content": "<p>and for tactics <a href=\"https://github.com/leanprover-community/mathlib4/issues/430\">https://github.com/leanprover-community/mathlib4/issues/430</a></p>",
        "id": 310241064,
        "sender_full_name": "David Renshaw",
        "timestamp": 1668530359
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 310241172,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668530387
    },
    {
        "content": "<p>Do we also have a script which shows which files are ready to be ported (because their imports have already been ported)?</p>",
        "id": 310241442,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668530465
    },
    {
        "content": "<p>There was some discussion of such a thing at some point, but I haven't been following this thread closely enough to remember whether it actually happened. And I would also like to start working on porting (once I can find some time)</p>",
        "id": 310241571,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668530507
    },
    {
        "content": "<p>That is part of the <code>port-status</code> output</p>",
        "id": 310241952,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668530627
    },
    {
        "content": "<p><code>leanproject import-graph</code> also has some port-related features now (like node highlighting)</p>",
        "id": 310242080,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668530658
    },
    {
        "content": "<p>So suppose I want to work on <code>algebra.pempty_instances</code> (chosen at random). Is it OK to open a WIP PR to inform everybody that I am working on it?</p>",
        "id": 310242787,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668530871
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> You should edit the wiki:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status</a></p>",
        "id": 310242966,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668530913
    },
    {
        "content": "<p>(from <code>No</code> to <code>No: wip riccardo</code>)</p>",
        "id": 310243053,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668530942
    },
    {
        "content": "<p>I think open the WIP PR can in any case be useful. A beginner in Lean4 (like me) will probably be quite slow, but maybe the file I am on is needed for something more important, and with the PR people can work on it.</p>",
        "id": 310243297,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668531009
    },
    {
        "content": "<p>(The advantage of editing the wiki is that then your <code>WIP riccardo</code> message will be displayed when other people who are looking for a task run the port-status script.  So it serves a different function from opening the PR.)</p>",
        "id": 310243525,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668531083
    },
    {
        "content": "<p>Sure, I totally agree editing the wiki is useful. I just don't want to block someone else because I am slow.</p>",
        "id": 310243846,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668531171
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/310241952\">said</a>:</p>\n<blockquote>\n<p>That is part of the <code>port-status</code> output</p>\n</blockquote>\n<p>Should this info be displayed in the wiki?</p>",
        "id": 310243853,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668531172
    },
    {
        "content": "<p>Probably a good idea, but which wiki do you mean?</p>",
        "id": 310244395,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668531321
    },
    {
        "content": "<p>The port status wiki</p>",
        "id": 310244585,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668531363
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status</a></p>",
        "id": 310244611,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668531370
    },
    {
        "content": "<p>Well, I suppose if this list changes very frequently, then maybe it shouldn't be displayed there.</p>",
        "id": 310244758,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668531424
    },
    {
        "content": "<p>I think not, because it is regenerated each time.</p>",
        "id": 310244773,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668531429
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 310244864,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668531461
    },
    {
        "content": "<p>yeah I noticed it (and edited my message)</p>",
        "id": 310244890,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668531472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span>, the pdf that is generated also highlights nodes in a green \"port complete\", blue \"PR exists\", and neonish blue \"all direct parents have port complete\"</p>",
        "id": 310245096,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668531524
    },
    {
        "content": "<p>What PDF are you referring to? The script didn't generate any PDF for me.</p>",
        "id": 310245203,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668531559
    },
    {
        "content": "<p>ah: <code>leanproject import-graph --to algebra.order.ring.defs --exclude-tactics algebra.order.ring.pdf --port-status --reduce</code></p>",
        "id": 310245281,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668531586
    },
    {
        "content": "<p>the crucial flag there is <code>--port-status</code></p>",
        "id": 310245311,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668531597
    },
    {
        "content": "<p>That, or a similar command, is what is used to make those links up top like <a href=\"https://tqft.net/mathlib4/2022-11-15/algebra.order.field.defs.pdf\">https://tqft.net/mathlib4/2022-11-15/algebra.order.field.defs.pdf</a></p>",
        "id": 310245512,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668531644
    },
    {
        "content": "<p>I misunderstood what Adam was asking.  I thought he was suggesting adding a sentence like \"You can see the current list of port-able files (which is autogenerated by the information on this wiki page) by running the script <code>scripts/port-status.py</code> in mathlib\" to the page<br>\n<a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status</a><br>\nMaybe this wouldn't hurt?</p>",
        "id": 310245618,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668531681
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 310245619,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668531682
    },
    {
        "content": "<p>Of course, that script is reading the wiki page, so before you add anything you should either read the script to see what it's doing or else ask someone who knows to make sure that where you add it doesn't break the script. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 310246273,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668531867
    },
    {
        "content": "<p>Indeed, I was hoping someone more confident would take on that task for me :)</p>",
        "id": 310246406,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668531901
    },
    {
        "content": "<p>So the workflow is to generate the graph, look for a cyan node, assess portability, then what?</p>\n<p>Generate a PR, mark that on the wiki page? Is the overall flow documented anywhere?</p>",
        "id": 310246513,
        "sender_full_name": "Arien Malec",
        "timestamp": 1668531929
    },
    {
        "content": "<p>If you want to get started porting, see here: <a href=\"https://github.com/leanprover-community/mathlib4/wiki\">https://github.com/leanprover-community/mathlib4/wiki</a></p>",
        "id": 310246921,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668532033
    },
    {
        "content": "<p>You won't hurt the wiki! So I've added that sentence and a reference to a <code>leanproject</code> invocation too</p>",
        "id": 310247010,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668532057
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span>  to see which files you might want to port, you want to run the <code>port-status</code> script inside mathlib.</p>",
        "id": 310247016,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668532059
    },
    {
        "content": "<p>The video is  very helpful</p>",
        "id": 310247019,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668532061
    },
    {
        "content": "<p>By the way, Yakov, did you ever implement this?</p>\n<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/287929-mathlib4/topic/some.20useful.20automation/near/307016762\">said</a>:</p>\n<blockquote>\n<p>Anyway, to make <code>ready</code> defer to <code>PR</code>, one just has to add two lines here: <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/67f1bda7637d17a9f765ecade305d3f9ffc93e7c/mathlibtools/lib.py#L1047-L1050\">https://github.com/leanprover-community/mathlib-tools/blob/67f1bda7637d17a9f765ecade305d3f9ffc93e7c/mathlibtools/lib.py#L1047-L1050</a><br>\nSpecifically:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">not</span> <span class=\"n\">target_node.get</span><span class=\"o\">(</span><span class=\"s2\">\"status\"</span><span class=\"o\">):</span>\n  <span class=\"n\">continue</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>I think it would be helpful (it's another thing that I'm not confident enough to touch myself).</p>",
        "id": 310247446,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668532168
    },
    {
        "content": "<p>My <code>start porting</code> flow is -- generate the graph. Either pick a cyan node, or a white node that has parents that are blue. Update my mathlib3port clone via a <code>git pull</code>. Copy the file I care about in mathlib4 like <code>cp ../mathlib3port/Mathbin/Logic/Equiv/Basic.lean Mathlib/Logic/Equiv/</code>, possible having to do a <code>mkdir</code>. Add the file to <code>Mathlib.lean</code>, go to the file, rename <code>Mathbin</code> to <code>Mathlib</code>, <code>git checkout -b pechersky/port-logic-equiv-basic; git add ...; git commit; git push ...</code>, make a PR, change the wiki.</p>",
        "id": 310247724,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668532257
    },
    {
        "content": "<p>Can we add a TLDR section to <a href=\"https://github.com/leanprover-community/mathlib4/wiki\">https://github.com/leanprover-community/mathlib4/wiki</a> (or elsewhere) with approximately what Yakov said?</p>",
        "id": 310248043,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668532355
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> I haven't yet. I'd like to refactor the coloring a little so that it's easier to express our logic, which is why I have <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/137\">https://github.com/leanprover-community/mathlib-tools/pull/137</a>. That refactor will allow us to tag ready nodes with \"ready\", and more cleanly have the logic of what ready overrides or not</p>",
        "id": 310248047,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668532358
    },
    {
        "content": "<p>Also don't forget to record the mathlib SHA in that workflow <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span></p>",
        "id": 310248181,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532411
    },
    {
        "content": "<p>In particular, I hope this refactored logic is clearer: <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/137/files#diff-51e32bc74d90e9d3fbf16a3cee752c906ce94722236bf3cc539fbba76b286ec1R37-R44\">https://github.com/leanprover-community/mathlib-tools/pull/137/files#diff-51e32bc74d90e9d3fbf16a3cee752c906ce94722236bf3cc539fbba76b286ec1R37-R44</a></p>",
        "id": 310248190,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668532412
    },
    {
        "content": "<p>Yes, of course. I was describing just how to start on the port!</p>",
        "id": 310248260,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668532441
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> which mathlib SHA should we take? Presumably the one used by math3port? But how do I find which mathlib3 SHA corresponds to the current mathlib3port I have?</p>",
        "id": 310248365,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668532461
    },
    {
        "content": "<p>No, I mean when you git pull mathlib3port and pick a starting point, it is important to record what version you based your port on, that's the only part we can't automate</p>",
        "id": 310248486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532500
    },
    {
        "content": "<p>It should be in the commit message for mathlib3port</p>",
        "id": 310248545,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532510
    },
    {
        "content": "<p>All I see in the log is <code>bump to nightly-2022-11-14</code></p>",
        "id": 310248777,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668532565
    },
    {
        "content": "<p>One suggested addition to that workflow: I've been making my first commit just the raw mathport output.  The idea is that this would give a better diff for reviewers to look at.  See e.g. <a href=\"https://github.com/leanprover-community/mathlib4/pull/585\">mathlib4#585</a>.  Can the people who are doing port reviews comment on whether this is indeed useful?</p>",
        "id": 310248798,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668532570
    },
    {
        "content": "<p>well, it is the mathport nightly name, but that is good enough</p>",
        "id": 310248816,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532575
    },
    {
        "content": "<p>we still need to improve the workflow here but some information is better than none</p>",
        "id": 310248928,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532608
    },
    {
        "content": "<p>But don't we want the actual mathlib3 SHA so that we can verify it later?</p>",
        "id": 310248951,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668532615
    },
    {
        "content": "<p>we do</p>",
        "id": 310248966,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532620
    },
    {
        "content": "<p>I  believe the mathlib SHA is stored in a file on that mathport nightly releasee</p>",
        "id": 310249111,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532664
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/310248043\">said</a>:</p>\n<blockquote>\n<p>Can we add a TLDR section to <a href=\"https://github.com/leanprover-community/mathlib4/wiki\">https://github.com/leanprover-community/mathlib4/wiki</a> (or elsewhere) with approximately what Yakov said?</p>\n</blockquote>\n<p>Yes please, this conversation is already becoming too technical to follow <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 310249265,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668532698
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> , don't suppose I can get you to improve the mathlib3port CI to put the file with the mathlib SHA in either the commit message or in the root of the mathlib3port repo?</p>",
        "id": 310249713,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532833
    },
    {
        "content": "<p>having to download a 200MB .tar.gz just to find this info feels really unnecesssary</p>",
        "id": 310249839,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668532870
    },
    {
        "content": "<p>Which 200M tar.gz is the info in?</p>",
        "id": 310250571,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668533085
    },
    {
        "content": "<p>(I just noticed that we create a <code>rev</code> file but then only tar the <code>.tlean</code> and <code>.ast.json</code> files...)</p>",
        "id": 310251931,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668533450
    },
    {
        "content": "<p>I thought it was in the produced mathlib3-synport but maybe I'm misremembering your earlier comments about the <code>rev</code> file</p>",
        "id": 310253669,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668533974
    },
    {
        "content": "<p>I thought so too... but apparently it was excluded from the tarball all this time.</p>",
        "id": 310255985,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668534707
    },
    {
        "content": "<p>is the rev in the CI log?</p>",
        "id": 310256564,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668534905
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> <span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/310247446\">said</a>:</p>\n<blockquote>\n<p>By the way, Yakov, did you ever implement this?</p>\n</blockquote>\n<p>Scott implemented this in <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/133\">mathlib-tools#133</a>, so it's fixed in the newest version of mathlib-tools.</p>",
        "id": 310256765,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1668534968
    },
    {
        "content": "<p>Yes, it's in the CI log.  And soon it's also going to be in the tarballs as intended.</p>",
        "id": 310256838,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668534994
    },
    {
        "content": "<p>the release notes are also a good place to put it</p>",
        "id": 310256942,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668535026
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-16/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>31/528</td>\n<td>(5.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10457/211869</td>\n<td>(4.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-16/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>71/81</td>\n<td>(12.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310258475,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668535491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  or <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> : could you post the SHAs from the last few nightly releases somewhere, or tell me where I can find them?</p>",
        "id": 310293169,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668546705
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathport/actions/runs/3459238046/jobs/5774422152\">https://github.com/leanprover-community/mathport/actions/runs/3459238046/jobs/5774422152</a> should have the revision for the 11/14 nightly.</p>",
        "id": 310293366,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668546778
    },
    {
        "content": "<p>If you wait a couple of hours, we should also hopefully have an <code>upstream-rev</code> file in mathlib3port.</p>",
        "id": 310293449,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668546802
    },
    {
        "content": "<p>Thanks. In case anyone else needs it the SHA for the 11/14 nightly is: <code>aab56fd783b265168f660d6b46709961153c4c20</code></p>",
        "id": 310293746,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668546909
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-16/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>26/75</td>\n<td>(34.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>9637/26113</td>\n<td>(36.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-16/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>10/20</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310314299,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668555773
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-16/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>29/128</td>\n<td>(22.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10397/40185</td>\n<td>(25.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-16/data.rat.order\">Longest unported chain</a>:</td>\n<td>16/26</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310314720,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668555993
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-16/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>23/97</td>\n<td>(23.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>8711/36359</td>\n<td>(24.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-16/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>28/37</td>\n<td>(24.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310315128,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668556206
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-16/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>28/229</td>\n<td>(12.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10323/84925</td>\n<td>(12.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-16/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>36/46</td>\n<td>(21.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310315473,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668556426
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-16/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>31/528</td>\n<td>(5.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10457/211934</td>\n<td>(4.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-16/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>71/81</td>\n<td>(12.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310315870,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668556664
    },
    {
        "content": "<p>if a gray file is imported in the target file that means that this import is completely unnecessary (modulo transitive imports), right?</p>",
        "id": 310316890,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668557197
    },
    {
        "content": "<p>Mathlib usually doesn't have completely unnecessary imports. Rather, what happens is that <code>A -&gt; B -&gt; C</code> because <code>B</code> has theorems <code>B1</code>  and <code>B2</code> and <code>C</code> needs <code>B2</code> and <code>B1</code> needs <code>A</code> but <code>C</code> doesn't use <code>A</code></p>",
        "id": 310316988,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557278
    },
    {
        "content": "<p>this is fixed by splitting <code>B</code> into two files <code>B1, B2</code>, so that you get <code>A -&gt; B1</code> and <code>B2 -&gt; C</code> and hence <code>C</code> no longer transitively imports <code>A</code></p>",
        "id": 310317119,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557345
    },
    {
        "content": "<p>hmm, but if I remove <code>topology.uniform_space.complete_separated</code> from the imports in <code>topology.metric_space.basic</code> it compiles just fine</p>",
        "id": 310317279,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668557438
    },
    {
        "content": "<p>Yes, that happens too. :-)</p>",
        "id": 310317298,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668557452
    },
    {
        "content": "<p>You may find this makes someone unhappy downstream, in which case you simply add the import back in there.</p>",
        "id": 310317326,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668557468
    },
    {
        "content": "<p>Oh, I thought we had a linter for that but maybe not</p>",
        "id": 310317343,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557477
    },
    {
        "content": "<p>I would have guessed we had a linter for that</p>",
        "id": 310317348,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668557482
    },
    {
        "content": "<p>It wouldn't be too hard to modify this module_refs program to calculate all unnecessary direct import edges</p>",
        "id": 310317390,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557515
    },
    {
        "content": "<p>In particular if you just run <code>scripts/modules_used.lean X</code>, and diff that with the imports of <code>X</code>, it should be telling you direct imports that can be removed.</p>",
        "id": 310317522,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668557585
    },
    {
        "content": "<p>how about making a CI job for that? :)</p>",
        "id": 310317561,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557615
    },
    {
        "content": "<p>That's probably somewhat expensive to run across all of mathlib.</p>",
        "id": 310317567,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668557619
    },
    {
        "content": "<p>I'm not sure we want it in every CI run. But we could decide that later.</p>",
        "id": 310317593,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668557634
    },
    {
        "content": "<p>Sorry, I meant a one-off job</p>",
        "id": 310317659,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557649
    },
    {
        "content": "<p>I think you can speed it up a bit by collecting all results simultaneously</p>",
        "id": 310317709,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557678
    },
    {
        "content": "<p>plus, you don't need to follow recursive references: since there are no intermediate files in a direct import, some declaration in <code>B</code> must directly reference some declaration in <code>A</code> for the <code>A -&gt; B</code> import to be necessary</p>",
        "id": 310317820,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668557751
    },
    {
        "content": "<p>Is the set of direct imports of a module available to lean 3 code? Does leanproject get this info by reading import lines?</p>",
        "id": 310318289,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668558033
    },
    {
        "content": "<p>There is <code>lean --deps</code> on the command line.</p>",
        "id": 310318774,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668558353
    },
    {
        "content": "<p>and leanproject calls that</p>",
        "id": 310318782,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668558357
    },
    {
        "content": "<p>afaik it's not otherwise available</p>",
        "id": 310318834,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668558365
    },
    {
        "content": "<p>I think if we don't care about efficiency it's just a few lines in bash to achieve this with existing code.</p>",
        "id": 310318876,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668558389
    },
    {
        "content": "<p>I'm happy to do that, but if you're doing it without following recursive references I won't duplicate!</p>",
        "id": 310318897,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668558414
    },
    {
        "content": "<p><code>lean --deps</code> gives me transitive dependencies in my tests</p>",
        "id": 310320634,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668559578
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-16/all.pdf\">all</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/2753</td>\n<td>(1.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10767/914005</td>\n<td>(1.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-16/all\">Longest unported chain</a>:</td>\n<td>125/135</td>\n<td>(7.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310320702,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668559655
    },
    {
        "content": "<p>Here's a program that does the hard part of the work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">system.io</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">decls_used_in</span> <span class=\"o\">:</span> <span class=\"n\">declaration</span> <span class=\"bp\">→</span> <span class=\"n\">name_set</span> <span class=\"bp\">→</span> <span class=\"n\">name_set</span>\n<span class=\"bp\">|</span> <span class=\"n\">d</span> <span class=\"n\">ns</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">process</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">name_set</span> <span class=\"o\">:=</span>\n    <span class=\"n\">v.fold</span> <span class=\"n\">ns</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">e</span> <span class=\"n\">_</span> <span class=\"n\">ns</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">e.is_constant</span> <span class=\"k\">then</span> <span class=\"n\">ns.insert</span> <span class=\"n\">e.const_name</span> <span class=\"k\">else</span> <span class=\"n\">ns</span> <span class=\"k\">in</span>\n  <span class=\"k\">match</span> <span class=\"n\">d</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">declaration.defn</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">v</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">process</span> <span class=\"n\">v</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">declaration.thm</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">v</span><span class=\"o\">)</span>      <span class=\"o\">:=</span> <span class=\"n\">process</span> <span class=\"n\">v.get</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">ns</span>\n  <span class=\"kd\">end</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">io</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">env</span> <span class=\"bp\">←</span> <span class=\"n\">io.run_tactic</span> <span class=\"n\">tactic.get_env</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">map</span> <span class=\"o\">:=</span> <span class=\"n\">env.fold</span> <span class=\"o\">(</span><span class=\"n\">native.rb_map.mk</span> <span class=\"n\">string</span> <span class=\"n\">name_set</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span> <span class=\"n\">map</span><span class=\"o\">,</span>\n    <span class=\"k\">match</span> <span class=\"n\">env.decl_olean</span> <span class=\"n\">d.to_name</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">tgt</span> <span class=\"o\">:=</span> <span class=\"n\">map.insert</span> <span class=\"n\">tgt</span> <span class=\"o\">(</span><span class=\"n\">decls_used_in</span> <span class=\"n\">d</span> <span class=\"o\">((</span><span class=\"n\">map.find</span> <span class=\"n\">tgt</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">get_or_else</span> <span class=\"n\">mk_name_set</span><span class=\"o\">))</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"o\">:=</span> <span class=\"n\">map</span>\n    <span class=\"kd\">end</span><span class=\"o\">),</span>\n  <span class=\"n\">map.mfold</span> <span class=\"o\">()</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">mod</span> <span class=\"n\">ns</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"k\">do</span>\n    <span class=\"n\">io.print_ln</span> <span class=\"n\">sformat</span><span class=\"bp\">!</span><span class=\"s2\">\"module: {mod}\"</span><span class=\"o\">,</span>\n    <span class=\"k\">let</span> <span class=\"n\">mods</span> <span class=\"o\">:=</span> <span class=\"n\">ns.fold</span> <span class=\"o\">(</span><span class=\"n\">native.mk_rb_set</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"n\">mods</span><span class=\"o\">,</span> <span class=\"k\">match</span> <span class=\"n\">env.decl_olean</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">tgt</span> <span class=\"o\">:=</span> <span class=\"n\">mods.insert</span> <span class=\"n\">tgt</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"o\">:=</span> <span class=\"n\">mods</span>\n    <span class=\"kd\">end</span><span class=\"o\">),</span>\n    <span class=\"n\">mods.mfold</span> <span class=\"o\">()</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">mod</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"k\">do</span>\n      <span class=\"n\">io.print_ln</span> <span class=\"n\">sformat</span><span class=\"bp\">!</span><span class=\"s2\">\"needs: {mod}\"</span>\n</code></pre></div>",
        "id": 310320785,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668559711
    },
    {
        "content": "<p>Ok, I should have known you were going to do it. :-)</p>",
        "id": 310320949,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668559815
    },
    {
        "content": "<p>This will report the module name followed by every module that it directly references (which is hopefully a superset of the direct imports and a subset of the transitive imports). By taking the set difference of \"direct imports - reported imports\" we get some useful data</p>",
        "id": 310320961,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668559825
    },
    {
        "content": "<p>Okay, I will hook that up.</p>",
        "id": 310321007,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668559863
    },
    {
        "content": "<p>Okay, here's the preliminary output: <a href=\"https://gist.github.com/semorrison/e136333cce63c8ffcc080a8997f2a6da\">https://gist.github.com/semorrison/e136333cce63c8ffcc080a8997f2a6da</a></p>",
        "id": 310324958,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668562693
    },
    {
        "content": "<p>This is not super-duper useful, because often one needs to replace the unneeded import by some of its transitive dependencies, rather than just deleting an unneeded import.</p>",
        "id": 310324994,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668562726
    },
    {
        "content": "<p>I was just about to say, you can also derive what transitive imports you need to reintroduce from this data</p>",
        "id": 310325030,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668562753
    },
    {
        "content": "<p>Yes.</p>",
        "id": 310325051,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668562763
    },
    {
        "content": "<p>But it's not quite as trivial as the first step I did. :-)</p>",
        "id": 310325062,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668562776
    },
    {
        "content": "<p>do you have the unfiltered output of the lean program?</p>",
        "id": 310325119,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668562809
    },
    {
        "content": "<p>If I had both the import graph and the direct-use graph I could throw them in mathematica or something to do the graph munging</p>",
        "id": 310325162,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668562854
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/7wR_5nieYfXsN9M8YdXLRBsW/reqs.gz\">reqs.gz</a></p>",
        "id": 310325292,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668562970
    },
    {
        "content": "<p>I'm already processing it  / comparing with existing imports in mathematica.</p>",
        "id": 310325308,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668562984
    },
    {
        "content": "<p>So I can continue doing that. (But if you want to do it too, please let me know so I stop. :-)</p>",
        "id": 310325343,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563020
    },
    {
        "content": "<p>Eh, I'll let you do it if you have the data</p>",
        "id": 310325360,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668563036
    },
    {
        "content": "<p>this will be a great PR, it is a low hanging fruit that will pay huge dividends across the library</p>",
        "id": 310325544,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668563172
    },
    {
        "content": "<p>Okay, it's looking good. A few spot checks seem to be working out.</p>",
        "id": 310326132,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563664
    },
    {
        "content": "<p>Should I try to minimize diffs? i.e. preserving order of existing imports where possible?</p>",
        "id": 310326183,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563723
    },
    {
        "content": "<p>or is it okay if for any file where I need to touch the import block I completely replace it with alphabetised imports?</p>",
        "id": 310326250,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563777
    },
    {
        "content": "<p>alphabetizing sounds fine to me</p>",
        "id": 310326321,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668563868
    },
    {
        "content": "<p>This is going to touch 1497 / 2854 files in mathlib, if all goes well. :-)</p>",
        "id": 310326397,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563903
    },
    {
        "content": "<p>You have to be careful with tactic imports though, I assume you are already handling that</p>",
        "id": 310326411,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668563918
    },
    {
        "content": "<p>Yes. I'm ignoring them in the processing. So the replacement process will fish them out, and tack them onto the new import list.</p>",
        "id": 310326441,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563946
    },
    {
        "content": "<p>So far I've only done about 5 spot checks, so things will presumably still go horribly wrong.</p>",
        "id": 310326466,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563969
    },
    {
        "content": "<p>I mean that tactics are falsely marked as unused</p>",
        "id": 310326469,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668563974
    },
    {
        "content": "<p>which could affect your graph calculation</p>",
        "id": 310326492,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668563996
    },
    {
        "content": "<p>Yes -- so I'll just preserve all the current <code>import tactic.*</code> lines.</p>",
        "id": 310326497,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668563998
    },
    {
        "content": "<p>how are the new imports being calculated?</p>",
        "id": 310326571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668564026
    },
    {
        "content": "<p>needed \\ transitive imports of needed</p>",
        "id": 310326581,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668564043
    },
    {
        "content": "<p>I would add direct imports which are needed to that list</p>",
        "id": 310326667,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668564116
    },
    {
        "content": "<p>that way you aren't unnecessarily eliminating transitive dependencies</p>",
        "id": 310326719,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668564133
    },
    {
        "content": "<p>not sure if that helps with the diff</p>",
        "id": 310326765,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668564183
    },
    {
        "content": "<p>Actually if you take the list of direct imports, subtract unneeded ones, then append \"needed \\ transitive imports of needed\", it will avoid the superfluous reordering as well</p>",
        "id": 310326977,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668564331
    },
    {
        "content": "<p>Okay, so the new procedure for new imports is:</p>\n<ul>\n<li>take the existing imports, keeping only those that are <code>tactic.*</code>, <code>meta.*</code>, or are needed</li>\n<li>then add everything in (needed \\ transitive imports of needed)</li>\n<li>finally, remove duplicates without reordering</li>\n</ul>",
        "id": 310327723,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668564936
    },
    {
        "content": "<p>I think that matches the discussion so far. It will touch 1340 files.</p>",
        "id": 310327737,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668564958
    },
    {
        "content": "<p>gah, mathematica is munging unicode. :-)</p>",
        "id": 310328128,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668565233
    },
    {
        "content": "<p>I don't have permission for <code>mathlib</code> but  I started work on the very small <code>data.char</code>, PR <a href=\"https://github.com/leanprover-community/mathlib/pull/609\">#609</a></p>",
        "id": 310328170,
        "sender_full_name": "Arien Malec",
        "timestamp": 1668565280
    },
    {
        "content": "<blockquote>\n<p>could you post the SHAs from the last few nightly releases somewhere, or tell me where I can find them?</p>\n</blockquote>\n<p>They are now available in the <code>upstream-rev</code> file in <code>mathlib3port</code>, the commit message, and the README: <a href=\"https://github.com/leanprover-community/mathlib3port\">https://github.com/leanprover-community/mathlib3port</a></p>",
        "id": 310328551,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1668565628
    },
    {
        "content": "<p>Ah, so this procedure is missing some tactics imports. I think I need to also add (all transitively imported tactics which are not implied by other imports).</p>",
        "id": 310329700,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668566578
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span> do you mind if I just push to your branch? I had just done this file and I can fix the errors.</p>",
        "id": 310329925,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668566776
    },
    {
        "content": "<p>awesome</p>",
        "id": 310329954,
        "sender_full_name": "Arien Malec",
        "timestamp": 1668566803
    },
    {
        "content": "<p>Yes, that was what I was afraid of. Basically, pretend that all <code>tactic.*</code> files are in the needed list for every module</p>",
        "id": 310330743,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668567534
    },
    {
        "content": "<p>I think you can combine that with the transitive reduction part, just add all transitively imported tactic.* files to \"needed\" for the purpose of the rest of the computation</p>",
        "id": 310330898,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668567619
    },
    {
        "content": "<p>Yes, this part seems okay now.</p>",
        "id": 310331495,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668568137
    },
    {
        "content": "<p>I've discovered a problem with the original data, actually.</p>",
        "id": 310331505,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668568145
    },
    {
        "content": "<p>We need to follow the <code>@[ancestor]</code> tag, as well as just inspecting declarations for references.</p>",
        "id": 310331513,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668568161
    },
    {
        "content": "<p>I'm hoping I can just patch this up by hand.</p>",
        "id": 310331530,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668568178
    },
    {
        "content": "<p>Hmm, there are quite a few problems caused by the <code>@[ancestor]</code> issue. Continuing by hand for now, but ...</p>",
        "id": 310332106,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668568720
    },
    {
        "content": "<p>There are also a certain number of imports which are only need for notation.</p>",
        "id": 310332369,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668569007
    },
    {
        "content": "<p>what's the <code>@[ancestor]</code> issue?</p>",
        "id": 310336736,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668572705
    },
    {
        "content": "<p>I would have expected that if <code>A</code> extends <code>B</code> as a class, there will be some reference to <code>B</code> in the declared parent instance</p>",
        "id": 310336856,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668572763
    },
    {
        "content": "<p>With <code>old_structure_cmd</code> unfortunately that's not the case. :-(</p>",
        "id": 310337096,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668572934
    },
    {
        "content": "<p>Okay, <a href=\"https://github.com/leanprover-community/mathlib/pull/17568\">#17568</a> touches 595 files in mathlib, but I think does it.</p>",
        "id": 310431629,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668611555
    },
    {
        "content": "<p>Should we just don't merge anything else for a couple of hours and merge this immediately?</p>",
        "id": 310433913,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668612155
    },
    {
        "content": "<p>I went through all the non-import changes (using <code>git diff c34a1aa4263bdf585dd705508c11d3b75836049e | grep '^[+-]' | grep -v '^[-+]import'</code>) and have just a few comments. If it builds, let's merge!</p>",
        "id": 310435736,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1668612594
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-17/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>26/75</td>\n<td>(34.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>9642/26118</td>\n<td>(36.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-17/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>10/20</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310467516,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668621882
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-17/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>29/128</td>\n<td>(22.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10410/40198</td>\n<td>(25.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-17/data.rat.order\">Longest unported chain</a>:</td>\n<td>16/26</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310468177,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668622093
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-17/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>23/97</td>\n<td>(23.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>8719/36367</td>\n<td>(24.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-17/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>28/37</td>\n<td>(24.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310468782,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668622300
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-17/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>28/229</td>\n<td>(12.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10336/85027</td>\n<td>(12.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-17/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>36/46</td>\n<td>(21.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310469439,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668622515
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-17/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>31/513</td>\n<td>(6.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10474/206781</td>\n<td>(5.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-17/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>69/79</td>\n<td>(12.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310470099,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668622744
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress <a href=\"https://tqft.net/mathlib4/2022-11-17/all.pdf\">all</a></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/2755</td>\n<td>(1.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10784/913656</td>\n<td>(1.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-17/all\">Longest unported chain</a>:</td>\n<td>123/133</td>\n<td>(7.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310478130,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668625302
    },
    {
        "content": "<p><code>port-status.py</code> lists <code>algebra.order.hom.basic</code> as ready to port, but I don't think it is, since it imports <code>tactic.positivity</code>.</p>",
        "id": 310643905,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668701621
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112165\">rss-bot</span> <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib4.3Amaster/near/310540298\">said</a>:</p>\n<blockquote>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib4/commit/1049885d394463e56c2d7a4c72e9e701ca9b9fc3\">feat: <code>positivity</code> tactic</a></strong> (<a href=\"https://github.com/leanprover-community/mathlib4/pull/578\">mathlib4#578</a>)</p>\n<ul>\n<li>[x] depends on <a href=\"https://github.com/leanprover-community/mathlib/pull/574\">#574</a></li>\n</ul>\n<p>Implements the <code>positivity</code> tactic core, plus several of the <code>positivity</code> extensions. Most of the remaining extensions are blocked on theory files.</p>\n<p>Co-authored-by: Scott Morrison &lt;<a href=\"mailto:scott.morrison@gmail.com\">scott.morrison@gmail.com</a>&gt;</p>\n<p>Authored-by: <a href=\"https://github.com/digama0\">digama0</a> <a href=\"https://github.com/leanprover-community/mathlib4/commit/1049885d394463e56c2d7a4c72e9e701ca9b9fc3\">(commit)</a></p>\n</blockquote>",
        "id": 310644052,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668701658
    },
    {
        "content": "<p>ops, I need to update my master branch</p>",
        "id": 310644224,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668701706
    },
    {
        "content": "<p>How do I <code>#lint</code> in mathlib 4?</p>",
        "id": 310659798,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668706065
    },
    {
        "content": "<p><code>#lint</code> works for me.</p>",
        "id": 310661594,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668706556
    },
    {
        "content": "<p>you need <code>Std.Tactic.Lint</code>imported I guess</p>",
        "id": 310661698,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1668706578
    },
    {
        "content": "<p>The wiki says to add</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Tactic.Lint.Frontend</span>\n<span class=\"kn\">import</span> <span class=\"n\">Std.Tactic.Lint.Misc</span>\n</code></pre></div>",
        "id": 310661737,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668706591
    },
    {
        "content": "<p>Ah, I was missing <code>Frontend</code>. Thanks.</p>",
        "id": 310661812,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1668706622
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th>algebra.order.field.defs</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>26/73</td>\n<td>(35.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>9670/25739</td>\n<td>(37.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>9/19</td>\n<td>(52.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310667402,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668708288
    },
    {
        "content": "<p>Has the port-progress bot stopped generating and hosting the PDF import graph?  (It was still doing this yesterday.). That was a useful feature.</p>",
        "id": 310667719,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668708389
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th>data.rat.order</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>30/126</td>\n<td>(23.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10625/39668</td>\n<td>(26.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/data.rat.order\">Longest unported chain</a>:</td>\n<td>15/25</td>\n<td>(40.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310668122,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668708514
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th>category_theory.limits.yoneda</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>22/95</td>\n<td>(23.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>7871/35513</td>\n<td>(22.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>27/36</td>\n<td>(25.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310668855,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668708737
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th>data.fintype.basic</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>29/221</td>\n<td>(13.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>11013/84854</td>\n<td>(13.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>33/43</td>\n<td>(23.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310669500,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668708960
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th>topology.metric_space.basic</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>33/500</td>\n<td>(6.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>11339/206207</td>\n<td>(5.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>66/76</td>\n<td>(13.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310670242,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668709198
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th>all</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>38/2755</td>\n<td>(1.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>11672/913532</td>\n<td>(1.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/all\">Longest unported chain</a>:</td>\n<td>116/126</td>\n<td>(7.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310677828,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668711610
    },
    {
        "content": "<p>Oh... when I changed the table format I didn't update the regex that was inserting the links.</p>",
        "id": 310713825,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668725179
    },
    {
        "content": "<p>(insert obligatory link to SO...)</p>",
        "id": 310713851,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668725193
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-18/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>26/73</td>\n<td>(35.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>9670/25739</td>\n<td>(37.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>9/19</td>\n<td>(52.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310729826,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668732549
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-18/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>30/126</td>\n<td>(23.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10625/39668</td>\n<td>(26.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/data.rat.order\">Longest unported chain</a>:</td>\n<td>15/25</td>\n<td>(40.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310730202,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668732782
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-18/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>22/95</td>\n<td>(23.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>7871/35513</td>\n<td>(22.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>27/36</td>\n<td>(25.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310730566,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668733025
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-18/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>30/221</td>\n<td>(13.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>11084/84854</td>\n<td>(13.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>33/43</td>\n<td>(23.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310730953,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668733259
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-18/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>36/500</td>\n<td>(7.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>12113/206285</td>\n<td>(5.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>66/76</td>\n<td>(13.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310731371,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668733511
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-18/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>41/2756</td>\n<td>(1.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>12450/913326</td>\n<td>(1.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-18/all\">Longest unported chain</a>:</td>\n<td>116/126</td>\n<td>(7.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310734917,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668735917
    },
    {
        "content": "<p>Feature request: Could we add mathlib4 curves to the graphs at<br>\n<a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a><br>\nof number of files and number of lines over time?  That is, display mathlib3 and mathlib4 on the same graph.</p>",
        "id": 310791821,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668768624
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-19/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>33/73</td>\n<td>(45.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>13400/25823</td>\n<td>(51.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-19/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310879882,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668794674
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-19/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>37/126</td>\n<td>(29.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14359/39756</td>\n<td>(36.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-19/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310880550,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668794889
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-19/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>27/90</td>\n<td>(30.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10548/30300</td>\n<td>(34.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-19/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>26/36</td>\n<td>(27.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310881082,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668795099
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-19/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>37/185</td>\n<td>(20.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14818/73234</td>\n<td>(20.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-19/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310881670,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668795306
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-19/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>43/510</td>\n<td>(8.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15859/205604</td>\n<td>(7.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-19/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310882336,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668795531
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-19/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>49/2769</td>\n<td>(1.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16389/912462</td>\n<td>(1.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-19/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 310900791,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668798034
    },
    {
        "content": "<p>Huh, why is <code>order.lattice</code> not showing up in bright blue in these graphs? It looks like it should be ready to port.</p>",
        "id": 310925231,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668807202
    },
    {
        "content": "<p>It probably has some dependency which is getting hidden in the output</p>",
        "id": 310925402,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668807276
    },
    {
        "content": "<p>Maybe the tool realized it needed tactic ports? Either that or the typo on the wiki page that I've fixed (I forgot the \"no\" before \"wip\")</p>",
        "id": 310926089,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1668807559
    },
    {
        "content": "<p>Ah, typo would explain it.</p>",
        "id": 310926348,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668807662
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>33/73</td>\n<td>(45.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>13403/25826</td>\n<td>(51.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311052651,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668881136
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>37/126</td>\n<td>(29.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14362/39759</td>\n<td>(36.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311053133,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668881403
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>27/90</td>\n<td>(30.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10551/30303</td>\n<td>(34.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>26/36</td>\n<td>(27.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311053564,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668881665
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>37/185</td>\n<td>(20.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14821/73237</td>\n<td>(20.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311054078,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668881932
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>43/510</td>\n<td>(8.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15862/205622</td>\n<td>(7.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311054510,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668882219
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>49/2770</td>\n<td>(1.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16396/912497</td>\n<td>(1.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311060433,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668885950
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/73</td>\n<td>(47.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>13647/30688</td>\n<td>(44.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311085960,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668906733
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>39/126</td>\n<td>(31.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14606/49374</td>\n<td>(29.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311086140,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668906937
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>27/90</td>\n<td>(30.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10551/30303</td>\n<td>(34.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>26/36</td>\n<td>(27.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311086338,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668907139
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>39/186</td>\n<td>(21.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15065/83481</td>\n<td>(18.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311086526,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668907343
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/511</td>\n<td>(8.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16106/223920</td>\n<td>(7.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311086708,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668907567
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-20/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>51/2771</td>\n<td>(1.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16640/955250</td>\n<td>(1.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-20/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311088882,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668909992
    },
    {
        "content": "<p>If anyone is looking for things to do on the mathlib3 side, clicking on the \"longest unported chain\" links above, and identifying if there are file splits / lemma rearrangements that can remove the need (or delay the import) of files marked with <code>-</code>, could be helpful.</p>",
        "id": 311090276,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668911529
    },
    {
        "content": "<p>The longest chain overall is still to <code>analysis.normed_space.star.gelfand_duality</code>, but it has impressively few files marked <code>-</code> now.</p>",
        "id": 311090300,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668911552
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-21/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>37/73</td>\n<td>(50.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15070/30688</td>\n<td>(49.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311168748,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668967431
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-21/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>42/126</td>\n<td>(33.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16109/49379</td>\n<td>(32.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311169078,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668967636
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-21/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>28/90</td>\n<td>(31.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10680/30303</td>\n<td>(35.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311169362,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668967838
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-21/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>42/186</td>\n<td>(22.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16568/83486</td>\n<td>(19.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311169662,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668968044
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-21/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/511</td>\n<td>(9.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17759/223933</td>\n<td>(7.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311169938,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668968264
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-21/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>60/2771</td>\n<td>(2.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18819/955260</td>\n<td>(2.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311174171,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668970706
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (algebra.order.field.defs)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>36/73</td>\n<td>(49.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18630/33252</td>\n<td>(56.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>11/19</td>\n<td>(42.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311197220,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668988630
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (data.rat.order)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>83/126</td>\n<td>(65.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>36152/51951</td>\n<td>(69.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311197508,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668988834
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (category_theory.limits.yoneda)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>62/90</td>\n<td>(68.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22152/32832</td>\n<td>(67.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>9/36</td>\n<td>(75.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311197804,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668989036
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (data.fintype.basic)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>143/186</td>\n<td>(76.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>69870/86128</td>\n<td>(81.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>11/39</td>\n<td>(71.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311198041,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668989241
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (topology.metric_space.basic)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>460/511</td>\n<td>(90.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>209186/226635</td>\n<td>(92.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-21/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>11/76</td>\n<td>(85.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311198259,
        "sender_full_name": "port-progress bot",
        "timestamp": 1668989455
    },
    {
        "content": "<p>Sorry, recent updates seem to have completely borked the port-progress-bot, and I'm about to get on a plane.</p>",
        "id": 311198347,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668989534
    },
    {
        "content": "<p>It seems that it has everything backwards.:-)</p>",
        "id": 311198996,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668990236
    },
    {
        "content": "<p>I think something nasty happened with <code>algebra.order.absolute_value</code>. The port status script marks it as ready to port, since it's only import, <code>algebra.order.hom.basic</code> is ported (this is correct). The problem is that <code>algebra.order.hom.basic</code> imports <code>tactic.positivity</code> (both in mathlib3 and mathlib4). But now the two diverge, in mathlib3 the imports are</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic.norm_num</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.order.field.power</span>\n</code></pre></div>\n<p>while in mathlib4 are</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Positivity.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.NormNum.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Init.Data.Int.Order</span>\n</code></pre></div>\n<p>(this is the whole <code>Mathlib/Tactic/Positivity</code> file). The point is that <code>algebra/hom/group.lean</code> is transitively imported in <code>algebra.order.absolute_value</code> (and really needed, already in the first declaration), while this file is not ported.</p>\n<p>What should we do? It's not easy to fix the import in <code>Mathlib/Tactic/Positivity</code>, since the real ones do not exist.</p>",
        "id": 311248898,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669024691
    },
    {
        "content": "<p>the simple fix would be to add <code>import algebra.hom.group</code> to <code>algebra.order.absolute_value</code></p>",
        "id": 311252223,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669026006
    },
    {
        "content": "<p>alternatively, the port-status program could look at transitive imports when deciding that a file is ready to port. I guess there is a reason it is not already doing so, e.g. this includes a bunch of unnecessary stuff</p>",
        "id": 311252356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669026062
    },
    {
        "content": "<p>In this concrete case I think it is enough to add a note in the port-status page</p>",
        "id": 311252374,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669026070
    },
    {
        "content": "<p>I don't if we can do something more sistematic</p>",
        "id": 311252397,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669026083
    },
    {
        "content": "<p>I mean, pulling in and accidentally relying on transitive imports is an issue that comes up all the time</p>",
        "id": 311252466,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669026113
    },
    {
        "content": "<p>I don't think the solution should be to add imports to <code>Mathlib.Tactic.Positivity</code>, the original imports were too much anyway</p>",
        "id": 311252649,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669026174
    },
    {
        "content": "<p>Hrm, this was fixed in <code>leanproject import-graph --exclude-tactics</code> already, that shows that <code>algebra.order.absolute_value</code> depends on an absolute spaghetti of unported files</p>",
        "id": 311252787,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669026225
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/LiwOGRxPgvO43aNhCeNt6SjX/Screenshot-from-2022-11-21-11-24-00.png\"><img src=\"/user_uploads/3121/LiwOGRxPgvO43aNhCeNt6SjX/Screenshot-from-2022-11-21-11-24-00.png\"></a></div>",
        "id": 311252910,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669026264
    },
    {
        "content": "<p>An in between alternative would be to \"inline\" the imports of tactic files when determining the \"direct\" imports of a file</p>",
        "id": 311253045,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669026308
    },
    {
        "content": "<p>(<code>positivity</code> pulls in <code>norm_num</code> which needs <code>data.rat.cast</code> which needs... a lot)</p>",
        "id": 311253092,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669026322
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/311252787\">said</a>:</p>\n<blockquote>\n<p>Hrm, this was fixed in <code>leanproject import-graph --exclude-tactics</code> already, that shows that <code>algebra.order.absolute_value</code> depends on an absolute spaghetti of unported files</p>\n</blockquote>\n<p>Maybe the script needs to be updated? It is still shown, at least for me.</p>",
        "id": 311253196,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669026352
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-tools/commit/76edd6f66c23e9f4cbd0b7d9d0484d928d839b4e\">https://github.com/leanprover-community/mathlib-tools/commit/76edd6f66c23e9f4cbd0b7d9d0484d928d839b4e</a></p>",
        "id": 311253220,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669026361
    },
    {
        "content": "<p>I think we previously discussed a divergence between <code>port_status.py</code> and <code>leanproject</code></p>",
        "id": 311253358,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669026402
    },
    {
        "content": "<p>Yes we did, <a href=\"#narrow/stream/287929-mathlib4/topic/Do.20port.20status.20scripts.20belong.20in.20mathlibtools.20or.20mathlib.3F/near/311073629\">here</a></p>",
        "id": 311257411,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669027928
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/311253220\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib-tools/commit/76edd6f66c23e9f4cbd0b7d9d0484d928d839b4e\">https://github.com/leanprover-community/mathlib-tools/commit/76edd6f66c23e9f4cbd0b7d9d0484d928d839b4e</a></p>\n</blockquote>\n<p>This commit has not been released, so almost no one is using this code</p>",
        "id": 311257495,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669027960
    },
    {
        "content": "<p>Which is an argument in favor of moving all this stuff out of mathlibtools</p>",
        "id": 311257527,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669027978
    },
    {
        "content": "<p>I missed that discussion. I don't have an opinion, but we should surely have only one tool.</p>",
        "id": 311258527,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669028368
    },
    {
        "content": "<p>Again, if the only problem is I don't have time to review mathlibtools PR then anyone should feel free to merge PRs that don't touch the core functionalities (around the olean cache). If you need me to release a new version to pypi then simply tell me.</p>",
        "id": 311259436,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1669028692
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (algebra.order.field.defs)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>41/79</td>\n<td>(51.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>20121/34881</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>11/19</td>\n<td>(42.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311437827,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669053872
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (data.rat.order)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>85/128</td>\n<td>(66.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>36754/52553</td>\n<td>(69.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311438484,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669054084
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (category_theory.limits.yoneda)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>62/90</td>\n<td>(68.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22152/32832</td>\n<td>(67.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>9/36</td>\n<td>(75.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311439019,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669054292
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (data.fintype.basic)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>143/186</td>\n<td>(76.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>69874/86132</td>\n<td>(81.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>11/39</td>\n<td>(71.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311439576,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669054497
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (topology.metric_space.basic)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>460/511</td>\n<td>(90.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>209275/226724</td>\n<td>(92.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>11/76</td>\n<td>(85.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311440215,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669054713
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress (all)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>2709/2770</td>\n<td>(97.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>939750/958259</td>\n<td>(98.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/all\">Longest unported chain</a>:</td>\n<td>11/126</td>\n<td>(91.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311440851,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669054928
    },
    {
        "content": "<p>Wow! We ported a few thousand files really quickly? And people said this would take a while. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 311441776,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669055208
    },
    {
        "content": "<p>yeah I pulled an all-nighter on Sunday, I was pretty annoyed that I had to go to sleep when there were just 61 files to go. OK not really.</p>",
        "id": 311442834,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669055523
    },
    {
        "content": "<p>Ah, I was hoping to get off the plane and someone would have diagnosed this. :-)</p>",
        "id": 311497017,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669075607
    },
    {
        "content": "<p>These reports are created using <code>leanproject --port-progress</code>, if someone wants to have a look.</p>",
        "id": 311497087,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669075656
    },
    {
        "content": "<p>Sorry, been busy with other things.</p>",
        "id": 311498176,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669076336
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"kd\">def</span> <span class=\"n\">delete_ported</span><span class=\"o\">(</span><span class=\"n\">self</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"bp\">'</span><span class=\"n\">ImportGraph'</span><span class=\"o\">:</span>\n        <span class=\"s2\">\"\"\"Delete all nodes marked as ported during port_status\"\"\"</span>\n        <span class=\"n\">H</span> <span class=\"bp\">=</span> <span class=\"n\">self.subgraph</span><span class=\"o\">({</span><span class=\"n\">node</span> <span class=\"n\">for</span> <span class=\"n\">node</span><span class=\"o\">,</span> <span class=\"n\">attrs</span> <span class=\"k\">in</span> <span class=\"n\">self.nodes</span><span class=\"o\">(</span><span class=\"n\">data</span><span class=\"bp\">=</span><span class=\"n\">True</span><span class=\"o\">)</span>\n                          <span class=\"k\">if</span> <span class=\"n\">attrs.get</span><span class=\"o\">(</span><span class=\"s2\">\"status\"</span><span class=\"o\">)</span> <span class=\"n\">and</span> <span class=\"n\">attrs.get</span><span class=\"o\">(</span><span class=\"s2\">\"status\"</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ported</span><span class=\"o\">})</span>\n        <span class=\"n\">H.base_path</span> <span class=\"bp\">=</span> <span class=\"n\">self.base_path</span>\n        <span class=\"n\">return</span> <span class=\"n\">H</span>\n</code></pre></div>\n<p>I think this is missing a <code>not</code>!</p>",
        "id": 311499343,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669077109
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-tools/pull/151\">https://github.com/leanprover-community/mathlib-tools/pull/151</a></p>",
        "id": 311499446,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669077167
    },
    {
        "content": "<p>Looks good running locally. I've asked the bot to run again.</p>",
        "id": 311500369,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669077843
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-22/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>38/79</td>\n<td>(48.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14776/34898</td>\n<td>(42.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311500624,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669078065
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-22/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>43/128</td>\n<td>(33.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15819/52574</td>\n<td>(30.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311500917,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669078271
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-22/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>28/90</td>\n<td>(31.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10684/32837</td>\n<td>(32.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311501245,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669078474
    },
    {
        "content": "<p>the links to the pdf seem to be broken</p>",
        "id": 311501304,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669078505
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-22/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>43/186</td>\n<td>(23.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16278/86159</td>\n<td>(18.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311501523,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669078680
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-22/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>51/511</td>\n<td>(10.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17473/226793</td>\n<td>(7.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311501899,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669078897
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-22/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>61/2770</td>\n<td>(2.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18545/958364</td>\n<td>(1.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-22/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311502231,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669079136
    },
    {
        "content": "<p>The pdf links are curently broken because <code>leanproject import-graph X.pdf</code> fails with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Node</span> <span class=\"n\">names</span> <span class=\"n\">and</span> <span class=\"n\">attributes</span> <span class=\"n\">should</span> <span class=\"n\">not</span> <span class=\"n\">contain</span> <span class=\"s2\">\":\"</span> <span class=\"n\">unless</span> <span class=\"n\">they</span> <span class=\"n\">are</span> <span class=\"n\">quoted</span> <span class=\"k\">with</span> <span class=\"s2\">\"\"</span><span class=\"bp\">.</span>\n<span class=\"n\">For</span> <span class=\"kd\">example</span> <span class=\"n\">the</span> <span class=\"n\">string</span> <span class=\"bp\">'</span><span class=\"kn\">attribute</span><span class=\"o\">:</span><span class=\"n\">data1'</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">written</span> <span class=\"n\">as</span> <span class=\"bp\">'</span><span class=\"s2\">\"attribute:data1\"</span><span class=\"bp\">'.</span>\n</code></pre></div>\n<p>I suspect this came from <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/149\">https://github.com/leanprover-community/mathlib-tools/pull/149</a>, but won't have a chance to look until tomorrow.</p>",
        "id": 311519590,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669094277
    },
    {
        "content": "<p>It still works locally for me, strange.</p>",
        "id": 311579290,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669119422
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">base</span><span class=\"o\">)</span> <span class=\"bp\">➜</span>  <span class=\"n\">mathlib</span> <span class=\"n\">git</span><span class=\"o\">:(</span><span class=\"n\">master</span><span class=\"o\">)</span> <span class=\"n\">leanproject</span> <span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph</span> <span class=\"c1\">--to algebra.order.ring.defs --exclude-tactics algebra.order.ring.pdf --port-status --mathlib4 ~/math/mathlib4 --reduce</span>\n<span class=\"o\">(</span><span class=\"n\">base</span><span class=\"o\">)</span> <span class=\"bp\">➜</span>  <span class=\"n\">mathlib</span> <span class=\"n\">git</span><span class=\"o\">:(</span><span class=\"n\">master</span><span class=\"o\">)</span> <span class=\"n\">wslview</span> <span class=\"n\">algebra.order.ring.pdf</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/3121/hcclPVlhaJhAbUBwrcj-M-Vg/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/hcclPVlhaJhAbUBwrcj-M-Vg/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/hcclPVlhaJhAbUBwrcj-M-Vg/image.png\"></a></div>",
        "id": 311650444,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669132345
    },
    {
        "content": "<p>And the links are clickable</p>",
        "id": 311650465,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669132353
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>39/79</td>\n<td>(49.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14865/34898</td>\n<td>(42.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311680318,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669141384
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>44/128</td>\n<td>(34.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15908/52580</td>\n<td>(30.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311680970,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669141593
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>40/125</td>\n<td>(32.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15032/52149</td>\n<td>(28.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311681617,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669141798
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>28/90</td>\n<td>(31.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10684/32837</td>\n<td>(32.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311682441,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669142006
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>44/188</td>\n<td>(23.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16367/86326</td>\n<td>(19.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311683026,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669142220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>, <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/137\">mathlib-tools#137</a> unintentionally clobbered the <code>--show-unused</code> flag.</p>",
        "id": 311683027,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669142220
    },
    {
        "content": "<p>Previously, in the presence of <code>--show-unused</code> it was finding the unused imports, and setting their fillcolor to grey. Then the <code>--port-status</code> flag was overwriting the colors, but it wasn't actually overwriting anything that was still white.</p>",
        "id": 311683197,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669142281
    },
    {
        "content": "<p>Now <code>--port-status</code> simply overwrites the fill colors that <code>--show-unused</code> had produced.</p>",
        "id": 311683291,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669142302
    },
    {
        "content": "<p>Would you be able to fix that?</p>",
        "id": 311683325,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669142315
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>52/511</td>\n<td>(10.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17562/226885</td>\n<td>(7.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311683790,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669142452
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/311579290\">said</a>:</p>\n<blockquote>\n<p>It still works locally for me, strange.</p>\n</blockquote>\n<p>I couldn't get it to work, but after <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/152\">https://github.com/leanprover-community/mathlib-tools/pull/152</a> it's fine.</p>",
        "id": 311684475,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669142696
    },
    {
        "content": "<p>Could you check that that works at your end?</p>",
        "id": 311684502,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669142706
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>62/2773</td>\n<td>(2.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18634/959275</td>\n<td>(1.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311690489,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669144745
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-tools/pull/153\">https://github.com/leanprover-community/mathlib-tools/pull/153</a></p>",
        "id": 311747361,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669173258
    },
    {
        "content": "<p>That fixes the <code>--show-unused</code> clobber</p>",
        "id": 311747370,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669173272
    },
    {
        "content": "<p>And yes, links work locally for me</p>",
        "id": 311747374,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669173279
    },
    {
        "content": "<p>Great, thanks! Running <code>port-progress-bot</code> using <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/153\">mathlib-tools#153</a> now.</p>",
        "id": 311747535,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669173410
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>39/79</td>\n<td>(49.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14865/34898</td>\n<td>(42.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311747796,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669173629
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-23/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/128</td>\n<td>(35.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16008/52580</td>\n<td>(30.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-23/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311748021,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669173836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>, hmm, those last two were running with your PR, but it still seems the gray is being clobbered.</p>",
        "id": 311748240,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669173981
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/DdO1vwnf0YLZVWNWAMSfMZe6/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/DdO1vwnf0YLZVWNWAMSfMZe6/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/DdO1vwnf0YLZVWNWAMSfMZe6/image.png\"></a></div>",
        "id": 311748254,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669174002
    },
    {
        "content": "<p>I see gray for 2 nodes there, green for one, white for the last</p>",
        "id": 311748261,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669174012
    },
    {
        "content": "<p>Oh! My browser had a cached version.</p>",
        "id": 311748570,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669174229
    },
    {
        "content": "<p>Ah, but we need a slightly more complicated logic, I think.</p>",
        "id": 311748574,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669174238
    },
    {
        "content": "<p>cache invalidation and off by one errors, the three hard things about programming</p>",
        "id": 311748581,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669174251
    },
    {
        "content": "<p>Green/Dark blue/Light blue should all clobber gray.</p>",
        "id": 311748583,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669174256
    },
    {
        "content": "<p>It's just white that shouldn't clobber gray.</p>",
        "id": 311748596,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669174268
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>  will make happen</p>",
        "id": 311748608,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669174282
    },
    {
        "content": "<p>I think maybe similarly with <code>--mathlib4</code>: there's no point showing the red outline for files that have already been ported.</p>",
        "id": 311748742,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669174420
    },
    {
        "content": "<p>OK, try it now</p>",
        "id": 311751728,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669176952
    },
    {
        "content": "<p>Is it correct that we now have a bot that add the \"frozen file\" header in mathlib automatically? I am thinking of <a href=\"https://github.com/leanprover-community/mathlib/pull/17686\">#17686</a></p>",
        "id": 311810728,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669205206
    },
    {
        "content": "<p>It is not quite automatic. It makes the PR, but someone needs to double check it and hit merge. The last commit it made was incorrect, so perhaps it is still a WIP. :-)</p>",
        "id": 311823440,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669209403
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>39/79</td>\n<td>(49.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14865/34898</td>\n<td>(42.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311824645,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669209762
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17630\">#17630</a> I'd appreciate a review on this, which should make the task of checking which files are still in sync far easier.</p>",
        "id": 311825212,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1669209961
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/128</td>\n<td>(35.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16008/52580</td>\n<td>(30.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311825273,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669209972
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>41/125</td>\n<td>(32.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15132/52149</td>\n<td>(29.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311826065,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669210181
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/311825212\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17630\">#17630</a> I'd appreciate a review on this, which should make the task of checking which files are still in sync far easier.</p>\n</blockquote>\n<p>I just tested it, and it looks good. But the <code>1 &lt; len(argv)</code> is a bit hacky.</p>",
        "id": 311826445,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1669210283
    },
    {
        "content": "<p>I think you could even just enable this by default.</p>",
        "id": 311826478,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1669210299
    },
    {
        "content": "<p><span aria-label=\"racecar\" class=\"emoji emoji-1f3ce\" role=\"img\" title=\"racecar\">:racecar:</span>, just wrote the same thing on the PR.</p>",
        "id": 311826582,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669210324
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>28/90</td>\n<td>(31.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10684/32837</td>\n<td>(32.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311826741,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669210387
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/188</td>\n<td>(23.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16467/86326</td>\n<td>(19.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311827351,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669210602
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>54/511</td>\n<td>(10.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17899/226885</td>\n<td>(7.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311827996,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669210834
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>69/2773</td>\n<td>(2.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>19679/959511</td>\n<td>(2.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311836589,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669213489
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>39/79</td>\n<td>(49.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14865/34898</td>\n<td>(42.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311878116,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669226663
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/128</td>\n<td>(35.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16008/52580</td>\n<td>(30.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311878693,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669226875
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>41/125</td>\n<td>(32.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15132/52149</td>\n<td>(29.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311879236,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669227086
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>28/90</td>\n<td>(31.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>10684/32837</td>\n<td>(32.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311879786,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669227291
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>46/188</td>\n<td>(24.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16633/86326</td>\n<td>(19.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311880430,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669227500
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>55/511</td>\n<td>(10.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18065/226885</td>\n<td>(8.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311881068,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669227727
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-24/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>69/2773</td>\n<td>(2.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>19679/959511</td>\n<td>(2.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-24/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 311891716,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669230361
    },
    {
        "content": "<p><code>logic.embedding.basic</code> and <code>data.finite.defs</code> are newly available for porting.</p>",
        "id": 311904606,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669236166
    },
    {
        "content": "<p>I'll do <code>logic.embedding.basic</code></p>",
        "id": 311906004,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669236867
    },
    {
        "content": "<p>The problem with <a href=\"https://github.com/leanprover-community/mathlib/pull/17686\">#17686</a> is not that the bot was broken, but that the yaml file was wrong!</p>",
        "id": 311906756,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669237188
    },
    {
        "content": "<p>I'll update the bot today or tomorrow to make it more obvious when that happens</p>",
        "id": 311906890,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669237230
    },
    {
        "content": "<p><code>data.finite.defs</code> looks doable for me.</p>",
        "id": 311907628,
        "sender_full_name": "Arien Malec",
        "timestamp": 1669237551
    },
    {
        "content": "<p>Wait -- <code>logic.embedding.basic</code> seems to need <code>tactic.lift</code> which doesn't seem to be ported? There's some instance of <code>can_lift</code> early on. Do I just skip it?</p>",
        "id": 311908202,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669237832
    },
    {
        "content": "<p>Yes, we've been skipping instances for <code>lift</code>.</p>",
        "id": 311912675,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669240219
    },
    {
        "content": "<p>Are open PRs supposed to be marked \"Yes\" in the port status page?</p>",
        "id": 311916393,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669242592
    },
    {
        "content": "<p>I just noticed that <a href=\"https://github.com/leanprover-community/mathlib/pull/17686\">https://github.com/leanprover-community/mathlib/pull/17686</a> (which is on the queue) adds a \"ported\" comment to a file that actually isn't ported yet, but rather just has a PR open</p>",
        "id": 311916547,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669242623
    },
    {
        "content": "<p>Open PRs should be \"no wip\"</p>",
        "id": 311916786,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669242748
    },
    {
        "content": "<p>Looking more closely, this is the gray area where it's on the mathlib4 queue</p>",
        "id": 311916864,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669242815
    },
    {
        "content": "<p>It should have a PR number but not have Yes</p>",
        "id": 311921108,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669245764
    },
    {
        "content": "<p>Right now the syntax is stringly typed, if we switch to the other format (check the wiki for the new page) I think it'll be clearer</p>",
        "id": 311921142,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669245811
    },
    {
        "content": "<p>I have been using bors merge and then switching to Yes before waiting for it to actually hit master. Hopefully this hasn't caused to many problems. I can be more conservative if so.</p>",
        "id": 311930560,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669254487
    },
    {
        "content": "<p>bors failed on <a href=\"https://github.com/leanprover-community/mathlib/pull/17686\">#17686</a>, should we try again? Maybe merging master</p>",
        "id": 311962587,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669277752
    },
    {
        "content": "<p>I'd just retry</p>",
        "id": 311967608,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669279841
    },
    {
        "content": "<p>we should fix the timeout/slowdown in <code>linear_algebra/matrix/sesquilinear_form.lean:322:0</code></p>",
        "id": 311968006,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669280001
    },
    {
        "content": "<p>I am having a look</p>",
        "id": 311971237,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669281199
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>: no, no problems caused; just surprised to see the bot mention an open PR</p>",
        "id": 311971783,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669281416
    },
    {
        "content": "<p>It would be great if someone could review <a href=\"https://github.com/leanprover-community/mathlib/pull/17693\">#17693</a>, since otherwise the old version of the bot will run at 0 UTC tonight and clobber the output that's currently in <a href=\"https://github.com/leanprover-community/mathlib/pull/17686\">#17686</a>.</p>",
        "id": 311971910,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669281481
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17705\">#17705</a> for the timeout. I think squeezing the simp is enough.</p>",
        "id": 311976193,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669283143
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-25/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>43/79</td>\n<td>(54.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17756/34927</td>\n<td>(50.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-25/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312063633,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669313084
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-25/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/128</td>\n<td>(39.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>19376/52607</td>\n<td>(36.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-25/data.rat.order\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312064191,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669313296
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-25/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>46/125</td>\n<td>(36.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18500/52181</td>\n<td>(35.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-25/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>12/25</td>\n<td>(52.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312064652,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669313506
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-25/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>31/90</td>\n<td>(34.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>12267/32866</td>\n<td>(37.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-25/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312065068,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669313711
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-25/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>52/188</td>\n<td>(27.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>20072/86176</td>\n<td>(23.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-25/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>26/39</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312065519,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669313921
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-25/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>61/512</td>\n<td>(11.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>21504/226950</td>\n<td>(9.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-25/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>63/76</td>\n<td>(17.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312065955,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669314146
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-25/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>76/2774</td>\n<td>(2.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23221/959618</td>\n<td>(2.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-25/all\">Longest unported chain</a>:</td>\n<td>113/126</td>\n<td>(10.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312070895,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669316624
    },
    {
        "content": "<p>Is it doable to have a script that update the hash in <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-status</a> if the <code>diff</code> is only</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>+&gt; THIS FILE IS SYNCHRONIZED WITH MATHLIB4.\n+&gt; https://github.com/leanprover-community/mathlib4/pull/*\n+&gt; Any changes to this file require a corresponding PR to mathlib4.\n+\n</code></pre></div>\n<p>Currently <code>port_status.py</code> gives several results like that, and we are sure that in these cases updating the hash cannot hurt.</p>",
        "id": 312152111,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669371036
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-26/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/79</td>\n<td>(57.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>19315/35065</td>\n<td>(55.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-26/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312236455,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669399487
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-26/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>54/128</td>\n<td>(42.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>21411/52772</td>\n<td>(40.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-26/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312236977,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669399703
    },
    {
        "content": "<p>I don't think we should even both updating <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-status</a>, we should just report the file as unchanged</p>",
        "id": 312237483,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669399913
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-26/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/125</td>\n<td>(40.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>20535/52346</td>\n<td>(39.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-26/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312237508,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669399922
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-26/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>32/90</td>\n<td>(35.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>13364/32890</td>\n<td>(40.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-26/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312237936,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669400133
    },
    {
        "content": "<p>Looks like <code>algebra.order.sub.defs</code> and <code>order.min_max</code> are up for grabs now</p>",
        "id": 312238265,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669400281
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-26/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>56/184</td>\n<td>(30.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22115/85605</td>\n<td>(25.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-26/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/38</td>\n<td>(36.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312238396,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669400343
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-26/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>65/516</td>\n<td>(12.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23555/227232</td>\n<td>(10.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-26/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>59/73</td>\n<td>(19.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312238792,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669400567
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-26/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>80/2778</td>\n<td>(2.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>25296/960957</td>\n<td>(2.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-26/all\">Longest unported chain</a>:</td>\n<td>109/123</td>\n<td>(11.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312243886,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669402914
    },
    {
        "content": "<p>Can somebody show me an example of exactly what to type to generate one of these pdfs? I've read the manual but I must be understanding what path to file looks like or something, and I couldn't see an example in the manual</p>",
        "id": 312363365,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669476722
    },
    {
        "content": "<p>I'm in Ubuntu and happy to install anything</p>",
        "id": 312363779,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669476891
    },
    {
        "content": "<p>Not at my laptop right now, so I can't promise it's exact, but something like <code>leanproject import-graph --to data.nat.basic --no-tactics someNameForOutputFile.pdf</code></p>",
        "id": 312369602,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669479618
    },
    {
        "content": "<p>It's --exclude-tactics and you want --port-status too.</p>",
        "id": 312370072,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669479890
    },
    {
        "content": "<p>The port-progress-bot is running:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>leanproject import-graph --to $target --exclude-tactics --reduce --port-status --show-unused --mathlib4 $tmp_dir/mathlib4 $graph_dir/$today/$target.pdf\n</code></pre></div>",
        "id": 312371904,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669480800
    },
    {
        "content": "<p><code>--reduce</code> is very helpful for making readable graphs. It removes all the transitively redundant edges.</p>",
        "id": 312372012,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669480836
    },
    {
        "content": "<p><code>--show-unused</code> shades files which are not directly required by the <code>--to</code> file in grey. They indicate places where some refactoring might be useful!</p>",
        "id": 312372062,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669480865
    },
    {
        "content": "<p><code>--mathlib4 &lt;dir&gt;</code> outlines in red any unported files that nevertheless exist as adhoc ports in the mathlib4 repo.</p>",
        "id": 312372102,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669480893
    },
    {
        "content": "<p><code>--port-status</code> is the flag that highlights things in</p>\n<ul>\n<li>green: already ported</li>\n<li>light blue: ready to port</li>\n<li>darker blue: PR open, please review</li>\n</ul>",
        "id": 312372221,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669480947
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>buzzard@buster:~/lean-projects/mathlib$ leanproject import-graph --to src/topology/uniform_space/compare_reals.lean --exclude-tactics --reduce --port-status --show-unused --mathlib4 ~/tmp/mathlib4 compare_reals.pdf\nUsage: leanproject import-graph <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>OUTPUT<span class=\"o\">]</span>\nTry <span class=\"s2\">\"leanproject import-graph -h\"</span> <span class=\"k\">for</span> help.\n\nError: no such option: --show-unused\nbuzzard@buster:~/lean-projects/mathlib$ leanproject --version\nleanproject, version <span class=\"m\">1</span>.3.0\nbuzzard@buster:~/lean-projects/mathlib$\n</code></pre></div>\n<p>Help me I am stupid. I cannot get this thing to work</p>",
        "id": 312375053,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669482419
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>buzzard@buster:~/lean-projects/mathlib$ leanproject import-graph --to topology.uniform_space.compare_reals --exclude-tactics --reduce --port-status --show-unused --mathlib4 ~/tmp/mathlib4 compare_reals.pdf\nUsage: leanproject import-graph <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>OUTPUT<span class=\"o\">]</span>\nTry <span class=\"s2\">\"leanproject import-graph -h\"</span> <span class=\"k\">for</span> help.\n\nError: no such option: --show-unused\nbuzzard@buster:~/lean-projects/mathlib$\n</code></pre></div>",
        "id": 312375127,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669482477
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>leanproject import-graph --to data.nat.basic --exclude-tactics --port-status datanatbasic.pdf\n</code></pre></div>\n<p>This works for me :-) But I get no colours.</p>",
        "id": 312376991,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669483524
    },
    {
        "content": "<p>I find you have to run it inside the <code>src/</code> directory.</p>",
        "id": 312377556,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669483826
    },
    {
        "content": "<p>You may need to update <code>mathlib-tools</code>, possibly even by checking out <code>master</code> and running <code>pip3 install .</code> or equivalent.</p>",
        "id": 312377595,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669483853
    },
    {
        "content": "<p><code>pip3 install git+https://github.com/leanprover-community/mathlib-tools</code> I think.</p>",
        "id": 312377786,
        "sender_full_name": "Arien Malec",
        "timestamp": 1669483970
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-27/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>46/79</td>\n<td>(58.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>19522/35065</td>\n<td>(55.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-27/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312380862,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669485875
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-27/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>58/128</td>\n<td>(45.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22366/52776</td>\n<td>(42.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-27/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312381255,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669486084
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-27/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>54/125</td>\n<td>(43.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>21490/52350</td>\n<td>(41.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-27/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312381591,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669486290
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-27/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>33/90</td>\n<td>(36.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>13571/32890</td>\n<td>(41.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-27/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312381927,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669486495
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-27/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>60/184</td>\n<td>(32.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23070/85609</td>\n<td>(26.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-27/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/38</td>\n<td>(36.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312382266,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669486704
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-27/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>69/508</td>\n<td>(13.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24510/225082</td>\n<td>(10.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-27/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>57/71</td>\n<td>(19.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312382665,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669486930
    },
    {
        "content": "<p><code>leanproject import-graph --to data.set.basic --exclude-tactics --reduce --port-status --show-unused data_set_basic.pdf</code><br>\nis still giving me no colours :-(</p>",
        "id": 312383178,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669487262
    },
    {
        "content": "<p>Kevin, did you uninstall mathlibtools and then reinstall from source?</p>",
        "id": 312385206,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669488620
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-27/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>84/2779</td>\n<td>(3.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>26251/961117</td>\n<td>(2.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-27/all\">Longest unported chain</a>:</td>\n<td>108/122</td>\n<td>(11.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312386438,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669489354
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">buzzard</span><span class=\"bp\">@</span><span class=\"n\">buster</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">$</span> <span class=\"n\">which</span> <span class=\"n\">mathlibtools</span>\n<span class=\"n\">buzzard</span><span class=\"bp\">@</span><span class=\"n\">buster</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">$</span> <span class=\"n\">pip3</span> <span class=\"n\">install</span> <span class=\"n\">git</span><span class=\"bp\">+</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">tools</span>\n<span class=\"n\">Collecting</span> <span class=\"n\">git</span><span class=\"bp\">+</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">tools</span>\n  <span class=\"n\">Cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">tools</span> <span class=\"n\">to</span> <span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">pip</span><span class=\"bp\">-</span><span class=\"n\">req</span><span class=\"bp\">-</span><span class=\"n\">build</span><span class=\"bp\">-</span><span class=\"mi\">73</span><span class=\"n\">wrnf7t</span>\n  <span class=\"n\">Running</span> <span class=\"n\">command</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"bp\">-</span><span class=\"n\">q</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">tools</span> <span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">pip</span><span class=\"bp\">-</span><span class=\"n\">req</span><span class=\"bp\">-</span><span class=\"n\">build</span><span class=\"bp\">-</span><span class=\"mi\">73</span><span class=\"n\">wrnf7t</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">Click</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3</span><span class=\"bp\">/</span><span class=\"n\">dist</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">PyGithub</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">55</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">PyYAML</span><span class=\"bp\">&gt;=</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">13</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3</span><span class=\"bp\">/</span><span class=\"n\">dist</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">atomicwrites</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">certifi</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3</span><span class=\"bp\">/</span><span class=\"n\">dist</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2019</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">28</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">gitpython</span><span class=\"bp\">&gt;=</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">11</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">27</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">networkx</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">pydot</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">requests</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3</span><span class=\"bp\">/</span><span class=\"n\">dist</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">22</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">toml</span><span class=\"bp\">&gt;=</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">tqdm</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">pynacl</span><span class=\"bp\">&gt;=</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">PyGithub</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">deprecated</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">PyGithub</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">13</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">pyjwt</span><span class=\"bp\">&gt;=</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">PyGithub</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">gitdb</span><span class=\"bp\">&lt;</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"bp\">&gt;=</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">gitpython</span><span class=\"bp\">&gt;=</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">9</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">pyparsing</span><span class=\"bp\">&gt;=</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">pydot</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">cffi</span><span class=\"bp\">&gt;=</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">pynacl</span><span class=\"bp\">&gt;=</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-&gt;</span><span class=\"n\">PyGithub</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">15</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">wrapt</span><span class=\"bp\">&lt;</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"bp\">&gt;=</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">10</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">deprecated</span><span class=\"bp\">-&gt;</span><span class=\"n\">PyGithub</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">14</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">smmap</span><span class=\"bp\">&lt;</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"bp\">&gt;=</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">gitdb</span><span class=\"bp\">&lt;</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"bp\">&gt;=</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">-&gt;</span><span class=\"n\">gitpython</span><span class=\"bp\">&gt;=</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"o\">:</span> <span class=\"n\">pycparser</span> <span class=\"k\">in</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">buzzard</span><span class=\"bp\">/.</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">python3.8</span><span class=\"bp\">/</span><span class=\"n\">site</span><span class=\"bp\">-</span><span class=\"n\">packages</span> <span class=\"o\">(</span><span class=\"k\">from</span> <span class=\"n\">cffi</span><span class=\"bp\">&gt;=</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">-&gt;</span><span class=\"n\">pynacl</span><span class=\"bp\">&gt;=</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-&gt;</span><span class=\"n\">PyGithub</span><span class=\"bp\">-&gt;</span><span class=\"n\">mathlibtools</span><span class=\"bp\">==</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">21</span><span class=\"o\">)</span>\n<span class=\"n\">Building</span> <span class=\"n\">wheels</span> <span class=\"n\">for</span> <span class=\"n\">collected</span> <span class=\"n\">packages</span><span class=\"o\">:</span> <span class=\"n\">mathlibtools</span>\n  <span class=\"n\">Building</span> <span class=\"n\">wheel</span> <span class=\"n\">for</span> <span class=\"n\">mathlibtools</span> <span class=\"o\">(</span><span class=\"n\">setup.py</span><span class=\"o\">)</span> <span class=\"bp\">...</span> <span class=\"n\">done</span>\n  <span class=\"n\">Created</span> <span class=\"n\">wheel</span> <span class=\"n\">for</span> <span class=\"n\">mathlibtools</span><span class=\"o\">:</span> <span class=\"n\">filename</span><span class=\"bp\">=</span><span class=\"n\">mathlibtools</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">py3</span><span class=\"bp\">-</span><span class=\"n\">none</span><span class=\"bp\">-</span><span class=\"n\">any.whl</span> <span class=\"n\">size</span><span class=\"bp\">=</span><span class=\"mi\">32333</span> <span class=\"n\">sha256</span><span class=\"bp\">=</span><span class=\"mi\">03155</span><span class=\"n\">bc7342ea6eed34dff78752f72e6b4e525bcfe323098d2ffe4f4ec390c07</span>\n  <span class=\"n\">Stored</span> <span class=\"k\">in</span> <span class=\"n\">directory</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">pip</span><span class=\"bp\">-</span><span class=\"n\">ephem</span><span class=\"bp\">-</span><span class=\"n\">wheel</span><span class=\"bp\">-</span><span class=\"n\">cache</span><span class=\"bp\">-</span><span class=\"n\">x770e9pg</span><span class=\"bp\">/</span><span class=\"n\">wheels</span><span class=\"bp\">/</span><span class=\"n\">f6</span><span class=\"bp\">/</span><span class=\"n\">e0</span><span class=\"bp\">/</span><span class=\"mi\">22</span><span class=\"bp\">/</span><span class=\"n\">e72429590e4b7ea5a0aa076e96f5d0673c84c830db7a5e86e2</span>\n<span class=\"n\">Successfully</span> <span class=\"n\">built</span> <span class=\"n\">mathlibtools</span>\n<span class=\"n\">Installing</span> <span class=\"n\">collected</span> <span class=\"n\">packages</span><span class=\"o\">:</span> <span class=\"n\">mathlibtools</span>\n<span class=\"n\">Successfully</span> <span class=\"n\">installed</span> <span class=\"n\">mathlibtools</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">buzzard</span><span class=\"bp\">@</span><span class=\"n\">buster</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph</span> <span class=\"c1\">--to data.set.basic --exclude-tactics --reduce --port-status --show-unused data_set_basic2.pdf</span>\n<span class=\"n\">evince</span> <span class=\"n\">data_set_basic2.pdf</span>\n<span class=\"n\">buzzard</span><span class=\"bp\">@</span><span class=\"n\">buster</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">$</span> <span class=\"n\">evince</span> <span class=\"n\">data_set_basic2.pdf</span>\n</code></pre></div>\n<p>gives me no colours <span aria-label=\"anguish\" class=\"emoji emoji-1f62b\" role=\"img\" title=\"anguish\">:anguish:</span></p>",
        "id": 312392003,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669493164
    },
    {
        "content": "<p>try <code>scripts/mk_all.sh</code>?</p>",
        "id": 312400017,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669500019
    },
    {
        "content": "<p>Kevin, if you run the command to save a dot file instead of a pdf, what does that file look like?</p>",
        "id": 312404603,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669503845
    },
    {
        "content": "<p>I always end up with pixelated PDFs with the usual command</p>",
        "id": 312404880,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669504101
    },
    {
        "content": "<p>My hypothesis is that this Mario's and Kevin's issue is due to the graphviz library that's on their system, that is implicitly used by leanproject</p>",
        "id": 312407829,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669506918
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>46/79</td>\n<td>(58.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>19522/35065</td>\n<td>(55.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>7/19</td>\n<td>(63.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312501560,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669572267
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>59/128</td>\n<td>(46.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22461/52776</td>\n<td>(42.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312501912,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669572475
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>55/125</td>\n<td>(44.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>21585/52350</td>\n<td>(41.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312502305,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669572682
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>33/90</td>\n<td>(36.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>13571/32890</td>\n<td>(41.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312502700,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669572890
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>61/184</td>\n<td>(33.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23165/85609</td>\n<td>(27.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/38</td>\n<td>(36.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312503012,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669573101
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>70/508</td>\n<td>(13.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24605/225082</td>\n<td>(10.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>57/71</td>\n<td>(19.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312503339,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669573328
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>85/2779</td>\n<td>(3.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>26346/961126</td>\n<td>(2.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/all\">Longest unported chain</a>:</td>\n<td>108/122</td>\n<td>(11.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312507312,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669575593
    },
    {
        "content": "<p>What does the 108/122 mean under longest unported chain (in \"all\").</p>",
        "id": 312523758,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1669587252
    },
    {
        "content": "<p>There are 108 files in the chain left to port (so we have ported 14 of them).</p>",
        "id": 312524077,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669587518
    },
    {
        "content": "<p>It's kind of backwards from the rest of the port progress information.</p>",
        "id": 312524088,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669587533
    },
    {
        "content": "<p>Technically it is not really a fraction. It means that the longest import chain in mathlib3 is 122 files long, and then once you remove all the ported files the longest chain is 108 files long. That chain need not be a subset of the original chain!</p>",
        "id": 312524624,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669587994
    },
    {
        "content": "<p>Hmmm. when I click the longest imported chain, some files have <code>-</code> next to them. Is that supposed to mean that no declaration from that file was used in a later file? If that's the case, then I think there's a bug; maybe it's not picking up on instances which are used? In particular, <code>analysis.complex.polynomial</code> includes the fact <code>is_alg_closed ℂ</code> which gets used in <code>analysis.normed_space.spectrum</code>in the declaration <code>map_polynomial_aeval</code> which uses <code>map_polynomial_aeval_of_nonempty</code> which has an argument of <code>is_alg_closed</code>.</p>",
        "id": 312525550,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669588680
    },
    {
        "content": "<p>If you remove that import then that declaration complains.</p>",
        "id": 312525650,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669588720
    },
    {
        "content": "<p>Or is the point that this declaration <code>map_polynomial_aeval</code> doesn't get used in <code>gelfand_duality.lean</code> and hence the import <code>analysis.complex.polynomial</code> wasn't necessary for declarations in that file?</p>",
        "id": 312525783,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669588814
    },
    {
        "content": "<p>Yes, it's only about what is used in the very last file in the chain.</p>",
        "id": 312525976,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669588983
    },
    {
        "content": "<p>So if you see</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">-</span> <span class=\"n\">A</span>\n  <span class=\"n\">B</span>\n  <span class=\"n\">C</span>\n</code></pre></div>\n<p>then it may well be that <code>B</code> needs <code>A</code>. However <code>C</code> only uses parts of <code>B</code> that do not need <code>A</code>!</p>",
        "id": 312526015,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669589029
    },
    {
        "content": "<p>Right, and that's not always something we want to change.</p>",
        "id": 312526085,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669589060
    },
    {
        "content": "<p>There is a known bug, however, which is that this analysis does not follow the <code>@[ancestor]</code> tag, so when using <code>old_structure_cmd</code> it will miss dependencies on parent classes.</p>",
        "id": 312526090,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669589067
    },
    {
        "content": "<p>That's right: a <code>-</code> is not a certain sign that anything is wrong.</p>",
        "id": 312526103,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669589082
    },
    {
        "content": "<p>but a long chain of them is suspicious.</p>",
        "id": 312526114,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669589089
    },
    {
        "content": "<p>A few new porting targets available:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.group_with_zero.semiconj</span>\n<span class=\"n\">algebra.ring.commute</span>\n<span class=\"n\">algebra.regular.basic</span>\n</code></pre></div>\n<p>I've been trying to stay on top of <a href=\"https://bit.ly/3cKk3ld\">#queue4</a>, but I suspect there are a bunch of mislabelled PRs out there too. If anyone notices PRs that are ready for review but not marked as such, please remind the authors about labelling! :-)</p>",
        "id": 312528128,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669590838
    },
    {
        "content": "<p>Ooh I never knew about <a href=\"https://bit.ly/3cKk3ld\">#queue4</a> ! So we're finally into algebra?</p>",
        "id": 312530435,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669593105
    },
    {
        "content": "<p>Just mentioning this here so more people see it, and take heart: on <a href=\"https://github.com/leanprover-community/mathlib4/pull/757\">mathlib4#757</a>, Jireh's PR description is \"porting notes: another perfect shot by mathport!\"</p>",
        "id": 312538498,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669600821
    },
    {
        "content": "<p>We're blazing along today.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.group_with_zero.commute</span>\n</code></pre></div>\n<p>is now available.</p>",
        "id": 312539887,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669602167
    },
    {
        "content": "<p>I see <a href=\"https://github.com/leanprover-community/mathlib4/pull/728\">mathlib4#728</a> <code>order.min_max</code> has been merged, but the wiki still shows</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>order.min_max: 'No mathlib4##728 71ca477041bcd6d7c745fe555dc49735c12944b7'\n</code></pre></div>\n<p>Is this intentional or should I update?</p>",
        "id": 312540080,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669602373
    },
    {
        "content": "<p>Update please!</p>",
        "id": 312540562,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669602864
    },
    {
        "content": "<p>Ideally the <code>port_status.py</code> script would tell us something about the status of PRs (e.g. merged, help-wanted, awaiting-review).</p>",
        "id": 312540583,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669602905
    },
    {
        "content": "<p>Maybe ideally the wiki would record the hash and the PR number and the <code>port_status.py</code>script would work out everything else (no <code>Yes</code> or <code>No</code> to fall out of date)</p>",
        "id": 312540698,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669603044
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>51/78</td>\n<td>(65.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>20957/35064</td>\n<td>(59.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>5/19</td>\n<td>(73.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312546377,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669603331
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>68/127</td>\n<td>(53.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24374/52775</td>\n<td>(46.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312546533,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669603541
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>64/124</td>\n<td>(51.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23498/52349</td>\n<td>(44.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/25</td>\n<td>(56.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312546751,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669603749
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>34/90</td>\n<td>(37.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>13815/32890</td>\n<td>(42.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312546952,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669603968
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>70/183</td>\n<td>(38.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>25078/85608</td>\n<td>(29.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/38</td>\n<td>(36.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312547155,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669604179
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>79/507</td>\n<td>(15.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>26518/225094</td>\n<td>(11.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>57/71</td>\n<td>(19.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312547346,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669604408
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-28/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>94/2779</td>\n<td>(3.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>28259/961139</td>\n<td>(2.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-28/all\">Longest unported chain</a>:</td>\n<td>108/122</td>\n<td>(11.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312549747,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669606653
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/312539887\">said</a>:</p>\n<blockquote>\n<p>We're blazing along today.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.group_with_zero.commute</span>\n</code></pre></div>\n<p>is now available.</p>\n</blockquote>\n<p>PRed with a green tick as <a href=\"https://github.com/leanprover-community/mathlib4/pull/762\">mathlib4#762</a>, it should be easy to review, there were virtually no issues.</p>",
        "id": 312549967,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669606890
    },
    {
        "content": "<p>Note that the \"ported to mathlib4\" comment bot will be inactive until <a href=\"https://github.com/leanprover-community/mathlib/pull/17737\">#17737</a> is merged</p>",
        "id": 312620575,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669639872
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>54/80</td>\n<td>(67.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22085/35053</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>5/19</td>\n<td>(73.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312688799,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669658671
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>71/130</td>\n<td>(54.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>25519/52867</td>\n<td>(48.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312689500,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669658886
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>67/127</td>\n<td>(52.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24643/52441</td>\n<td>(47.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312690196,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669659097
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/90</td>\n<td>(38.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14428/31569</td>\n<td>(45.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312690945,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669659303
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>75/186</td>\n<td>(40.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>26333/85700</td>\n<td>(30.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/39</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312691655,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669659514
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>84/510</td>\n<td>(16.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>27773/225208</td>\n<td>(12.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>57/72</td>\n<td>(20.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312692390,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669659740
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>100/2782</td>\n<td>(3.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>29612/961374</td>\n<td>(3.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/all\">Longest unported chain</a>:</td>\n<td>108/123</td>\n<td>(12.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312699785,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669661970
    },
    {
        "content": "<p>Exciting, there are quite a few files ready to port:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">order.heyting.basic</span>\n<span class=\"n\">algebra.order.monoid.cancel.defs</span>\n<span class=\"n\">algebra.order.monoid.canonical.defs</span>\n<span class=\"n\">data.prod.lex</span>\n<span class=\"n\">data.sigma.order</span>\n<span class=\"n\">data.psigma.order</span>\n</code></pre></div>",
        "id": 312727950,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669672342
    },
    {
        "content": "<p>If it goes well, <code>order.heyting.basic</code>, <code>order.boolean_algebra</code>, <code>order.symm_diff</code> and <code>data.set.basic</code> form a chain than potentially can be ported in one go.</p>",
        "id": 312728312,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669672477
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>57/80</td>\n<td>(71.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22708/35053</td>\n<td>(64.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>5/19</td>\n<td>(73.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312737874,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669676621
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-29/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>75/130</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>26210/52867</td>\n<td>(49.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-29/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312738308,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669676831
    },
    {
        "content": "<p>Is there an off-by-one error in the port progress bot?  The longest unported chain for <code>algebra.order.field.defs</code> shows as containing six files.</p>",
        "id": 312738363,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669676864
    },
    {
        "content": "<p>I think it's measuring the length of the path in edges, rather than vertices.</p>",
        "id": 312739669,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669677555
    },
    {
        "content": "<p>I can easily add one to both numbers. :-)</p>",
        "id": 312739688,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669677569
    },
    {
        "content": "<p>The real progress is having a chain short enough to count.</p>",
        "id": 312740006,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669677723
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-30/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>57/80</td>\n<td>(71.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>22708/34896</td>\n<td>(65.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-30/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>5/19</td>\n<td>(73.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312902241,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669745038
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-11-30/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>75/130</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>26210/52644</td>\n<td>(49.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-11-30/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 312903053,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669745262
    },
    {
        "content": "<p>Could someone take a quick look at <a href=\"https://github.com/leanprover-community/mathlib/pull/17756\">#17756</a> (warning: python code)? The bot that adds synchronized labels still has some teething issues, but I'm hoping this will be the last one for a while</p>",
        "id": 313031621,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669805615
    },
    {
        "content": "<p>seems fine; I do worry about this approach of adding comments, though, as it means that we have to do extra verification every time these comments are added</p>",
        "id": 313043429,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1669809727
    },
    {
        "content": "<p>I feel the same way, but we've already started down that path...</p>",
        "id": 313062077,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669815689
    },
    {
        "content": "<p>At any rate, it's easy to build a tool that removes the comment again before asking <code>git</code> if anything has changed</p>",
        "id": 313062124,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669815705
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-01/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>58/80</td>\n<td>(72.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23644/34953</td>\n<td>(67.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-01/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>5/19</td>\n<td>(73.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313120413,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669831437
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-01/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>79/130</td>\n<td>(60.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>27636/52657</td>\n<td>(52.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-01/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313121211,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669831658
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-01/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>74/127</td>\n<td>(58.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>26445/52251</td>\n<td>(50.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-01/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313121953,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669831873
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-01/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/90</td>\n<td>(38.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14428/31569</td>\n<td>(45.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-01/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313122700,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669832091
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-01/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>83/186</td>\n<td>(44.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>28307/85581</td>\n<td>(33.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-01/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/39</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313123428,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669832317
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-01/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>97/511</td>\n<td>(19.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>30464/225026</td>\n<td>(13.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-01/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>57/72</td>\n<td>(20.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313124162,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669832545
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-01/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>112/2786</td>\n<td>(4.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>32205/962434</td>\n<td>(3.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-01/all\">Longest unported chain</a>:</td>\n<td>108/123</td>\n<td>(12.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313125166,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669832798
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>, the code that is meant to outline nodes in red if there is an existing ad-hoc port in mathlib4 seems to have gone out of control, and is highlighting lots of already ported nodes. Could you look into this? Not super high priority.</p>",
        "id": 313126090,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669833044
    },
    {
        "content": "<p>If anyone is looking for something easy to do to contribute to the port, I left a bunch of review comments on <a href=\"https://github.com/leanprover-community/mathlib4/pull/772\">https://github.com/leanprover-community/mathlib4/pull/772</a>.</p>",
        "id": 313127044,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669833316
    },
    {
        "content": "<p>Getting that merged would open up several files.</p>",
        "id": 313127129,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669833345
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-tools/blob/master/mathlibtools/lib.py#L1077\">https://github.com/leanprover-community/mathlib-tools/blob/master/mathlibtools/lib.py#L1077</a><br>\nThat should be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">node</span><span class=\"o\">[</span><span class=\"s2\">\"status\"</span><span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">ported</span><span class=\"o\">:</span>\n  <span class=\"n\">continue</span>\n<span class=\"k\">if</span> <span class=\"n\">node_name</span> <span class=\"k\">in</span> <span class=\"n\">existing_files</span><span class=\"o\">:</span>\n  <span class=\"n\">node</span><span class=\"o\">[</span><span class=\"s2\">\"color\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"s2\">\"red\"</span>\n</code></pre></div>",
        "id": 313139641,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669837068
    },
    {
        "content": "<p>Could you PR that?</p>",
        "id": 313145385,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669838858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I think <a href=\"https://github.com/leanprover-community/mathlib4/pull/772\">mathlib4#772</a> is ready to merge, if you want</p>",
        "id": 313147300,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669839533
    },
    {
        "content": "<p>If anyone would like to adopt <a href=\"https://github.com/leanprover-community/mathlib4/pull/804\">https://github.com/leanprover-community/mathlib4/pull/804</a>, which ports <code>Order.Hom.Basic</code>, that would be great.</p>",
        "id": 313147616,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669839669
    },
    {
        "content": "<p>That one seems to have some weird typeclass issues, however. (Note sure if they are related to those on the \"instance loop?\" thread here.)</p>",
        "id": 313147711,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669839719
    },
    {
        "content": "<p>Another easy PR to take over is <a href=\"https://github.com/leanprover-community/mathlib4/pull/793\">https://github.com/leanprover-community/mathlib4/pull/793</a>, which ports <code>Order.Heyting</code>, and I think only needs linting but is otherwise pretty good.</p>",
        "id": 313147827,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669839755
    },
    {
        "content": "<p>Oh, no, it has other problems too. :-) There are a few failing proofs.</p>",
        "id": 313147913,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669839782
    },
    {
        "content": "<p>And we need to comment out the <code>pi_instance</code> and <code>refine_struct</code> proofs and do them by hand.</p>",
        "id": 313147947,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669839794
    },
    {
        "content": "<p>These tactics are coming soon, so we should keep the proofs in as comments, but to make sure we get through these files quickly I think it's best if we just work around the absence of these tactics for now.</p>",
        "id": 313148069,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669839834
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-tools/pull/154\">mathlib-tools#154</a></p>",
        "id": 313149139,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669840202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313147616\">said</a>:</p>\n<blockquote>\n<p>If anyone would like to adopt <a href=\"https://github.com/leanprover-community/mathlib4/pull/804\">https://github.com/leanprover-community/mathlib4/pull/804</a>, which ports <code>Order.Hom.Basic</code>, that would be great.</p>\n</blockquote>\n<p>Uh, is that supposed to error with <code>PANIC at Lean.Meta.whnfEasyCases Lean.Meta.WHNF:305:22: unreachable code has been reached</code>?</p>",
        "id": 313151310,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669840931
    },
    {
        "content": "<p>If you feel like producing a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> that demonstrates that PANIC, it will definitely be a Lean 4 bug. :-)</p>",
        "id": 313151474,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669841008
    },
    {
        "content": "<p>(Often these PANICs in half ported files disappear mysteriously once you fix a few errors earlier in the file, but nevertheless they are bugs, and deserve to be squashed. Producing the <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> can be a bit trial-and-error when starting with a big file full of other errors, however!)</p>",
        "id": 313151637,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669841058
    },
    {
        "content": "<p>I started poking at <a href=\"https://github.com/leanprover-community/mathlib4/pull/804\">mathlib4#804</a>, but most of the errors gave me a headache, so I just fixed the simplest ones</p>",
        "id": 313154938,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669842144
    },
    {
        "content": "<p>Currently reading for porting are:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">data.int.units</span>\n<span class=\"n\">data.nat.bits</span>\n<span class=\"n\">algebra.order.sub.canonical</span>\n<span class=\"n\">order.rel_iso.group</span>\n<span class=\"n\">data.psigma.order</span>\n</code></pre></div>\n<p>There are also two PRs that could use attention:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">combinatorics.quiver.basic</span>    <span class=\"c1\">-- mathlib4#749 needs review; this has the start of category theory as well</span>\n<span class=\"n\">order.heyting.basic</span>    <span class=\"c1\">-- mathlib4#793 needs documentation</span>\n</code></pre></div>",
        "id": 313165932,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669845919
    },
    {
        "content": "<p>Wait, did someone port <code>data.sigma.order</code> <em>without</em> porting <code>data.psigma.order</code> simultaneously?</p>",
        "id": 313169531,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1669847396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>, I think you just got one file ported, one free <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 313169747,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1669847443
    },
    {
        "content": "<p>I'd really appreciate some docstrings on <a href=\"https://github.com/leanprover-community/mathlib4/pull/665\">mathlib4#665</a> - it should be easy for someone who knows streams!</p>",
        "id": 313182522,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1669853732
    },
    {
        "content": "<p>Looking at <code>data.nat.bits</code>, it depends on <code>nat.bit</code> that used to be defined in core in <code>init.data.nat.bitwise</code> but Lean 4 doesn't have a <code>Nat.bit</code> equivalent.</p>",
        "id": 313193484,
        "sender_full_name": "Arien Malec",
        "timestamp": 1669861849
    },
    {
        "content": "<p>It looks like <code>algebra.order.sub.canonical</code> is incorrectly marked as ready, it requires <code>algebra.order.monoid.canonical.defs</code> which I don't think has been ported.</p>",
        "id": 313248390,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669891423
    },
    {
        "content": "<p>It's ported in <a href=\"https://github.com/leanprover-community/mathlib4/pull/778\">https://github.com/leanprover-community/mathlib4/pull/778</a>, which failed to merge a few hours ago</p>",
        "id": 313250489,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669891999
    },
    {
        "content": "<p>Ah, Scott fixed the issue but then didn't kick it on the queue again. Anyone around who can?</p>",
        "id": 313251416,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669892343
    },
    {
        "content": "<p>I kicked on the queue.</p>",
        "id": 313251685,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669892433
    },
    {
        "content": "<p>Thank you, I think I'll try to port <code>algebra.order.sub.canonical</code> once <a href=\"https://github.com/leanprover-community/mathlib4/pull/778\">mathlib4#778</a> is merged.</p>",
        "id": 313252814,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669892787
    },
    {
        "content": "<p>It's merged.</p>",
        "id": 313253279,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669892987
    },
    {
        "content": "<p>It's also completely fine to branch off an existing PR, and start work before that PR has been merged.</p>",
        "id": 313293659,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669905308
    },
    {
        "content": "<p>In fact, we're still seeing lots of bottle-necking (because of our typeclass issues in <a href=\"http://algebra.hom.group\">algebra.hom.group</a>), so getting ahead of the curve by porting stuff based on open PRs could be really helpful.</p>",
        "id": 313293775,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669905344
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-02/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>61/80</td>\n<td>(76.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24781/35033</td>\n<td>(70.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-02/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>5/19</td>\n<td>(73.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313340640,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669917866
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-02/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>83/130</td>\n<td>(63.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>29565/52701</td>\n<td>(56.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-02/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313341254,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669918064
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-02/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>77/127</td>\n<td>(60.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>28148/52164</td>\n<td>(54.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-02/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313341913,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669918262
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-02/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>35/90</td>\n<td>(38.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>14444/31585</td>\n<td>(45.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-02/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>25/36</td>\n<td>(30.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313342575,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669918458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313031621\">said</a>:</p>\n<blockquote>\n<p>Could someone take a quick look at <a href=\"https://github.com/leanprover-community/mathlib/pull/17756\">#17756</a> (warning: python code)? The bot that adds synchronized labels still has some teething issues, but I'm hoping this will be the last one for a while</p>\n</blockquote>\n<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span>; I've already merged the PR generated by this PR!</p>",
        "id": 313342859,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669918550
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-02/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>86/186</td>\n<td>(46.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>30022/85506</td>\n<td>(35.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-02/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/39</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313343179,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669918657
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-02/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>103/513</td>\n<td>(20.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>32567/225297</td>\n<td>(14.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-02/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>57/72</td>\n<td>(20.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313343752,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669918867
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-02/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>119/2791</td>\n<td>(4.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>34397/963743</td>\n<td>(3.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-02/all\">Longest unported chain</a>:</td>\n<td>108/123</td>\n<td>(12.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313344632,
        "sender_full_name": "port-progress bot",
        "timestamp": 1669919100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313342859\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313031621\">said</a>:</p>\n<blockquote>\n<p>Could someone take a quick look at <a href=\"https://github.com/leanprover-community/mathlib/pull/17756\">#17756</a> (warning: python code)? The bot that adds synchronized labels still has some teething issues, but I'm hoping this will be the last one for a while</p>\n</blockquote>\n<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span>; I've already merged the PR generated by this PR!</p>\n</blockquote>\n<p>I placed this on the maintainer queue. It seemed fine to me, and even if there is some problem, we'll find out about it when reviewing the PRs it generates.</p>",
        "id": 313358388,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669922958
    },
    {
        "content": "<p>I don't see <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/nat/even_odd_rec.lean\">data.nat.even_odd_rec</a> in the <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status/\">port-status</a>.. what happened to it?</p>",
        "id": 313482040,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669981849
    },
    {
        "content": "<p>It has probably been removed in <a href=\"https://github.com/leanprover-community/mathlib/pull/17759\">#17759</a> or because of that</p>",
        "id": 313488360,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669984168
    },
    {
        "content": "<p>I think the yaml would have to get copy pasted in</p>",
        "id": 313504752,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1669989377
    },
    {
        "content": "<p>Actually, this is broken at the moment! <code>scripts/port_status.py</code> produces <code>port_status.yaml</code> locally, which you used to be able to copy and paste into <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a>.</p>",
        "id": 313520371,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669993954
    },
    {
        "content": "<p>However it now produces yaml in a different format, and which moreover is broken:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">topology.algebra.order.filter</span><span class=\"o\">:</span> <span class=\"bp\">!!</span><span class=\"n\">python</span><span class=\"bp\">/</span><span class=\"n\">object</span><span class=\"o\">:</span><span class=\"n\">mathlibtools.file_status.FileStatus</span>\n  <span class=\"n\">comments</span><span class=\"o\">:</span> <span class=\"bp\">''</span>\n  <span class=\"n\">mathlib3_hash</span><span class=\"o\">:</span> <span class=\"n\">null</span>\n  <span class=\"n\">mathlib4_pr</span><span class=\"o\">:</span> <span class=\"n\">null</span>\n  <span class=\"n\">ported</span><span class=\"o\">:</span> <span class=\"n\">false</span>\n</code></pre></div>",
        "id": 313520514,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669993992
    },
    {
        "content": "<p>We should sort this out sooner rather than later, as mathlib3 refactoring efforts are generating new files.</p>",
        "id": 313520660,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669994036
    },
    {
        "content": "<p>(Some of which we will want to port in the next week or so.)</p>",
        "id": 313520752,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669994049
    },
    {
        "content": "<p>I noticed that <code>port_status.py</code> is not picking up some dependencies. For example, <code>data.string.basic</code> indirectly depends on <code>data.string.defs</code> but it's still marked as ready to port.</p>",
        "id": 313521062,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1669994131
    },
    {
        "content": "<p>This is (probably) a known problem where the import is transitive via a tactic file.</p>",
        "id": 313521331,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669994198
    },
    {
        "content": "<p>Solutions:</p>\n<ol>\n<li>add the import explicitly in mathlib3</li>\n<li>hope this problem becomes irrelevant soon, once we're done with the files that are imported by tactics files.</li>\n</ol>",
        "id": 313521468,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669994243
    },
    {
        "content": "<p>In this case, the only missing requirement for <code>data.string.defs</code> is already PRed so it's going go pop up soon anyway.</p>",
        "id": 313522722,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1669994586
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> what needs to happen to fix the new and broken yaml?</p>",
        "id": 313523318,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669994746
    },
    {
        "content": "<p>I'm not sure. At some point we still want (I think?) to switch to the \"new\" yaml format. But I've lost track of what is required to do that. <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>?</p>\n<p>There are two things that need doing:</p>\n<ol>\n<li>make sure the <code>port_status.yaml</code> that is output locally is correct for the new format.</li>\n<li>make sure all the tools that read <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a> can cope with the new format.</li>\n</ol>",
        "id": 313523689,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669994838
    },
    {
        "content": "<p>I have an example wiki page of how it'd be: <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status-new\">https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status-new</a></p>",
        "id": 313523870,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669994883
    },
    {
        "content": "<p>And there is code to make the page look like that. The code exists for reading that new format.</p>",
        "id": 313523922,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669994900
    },
    {
        "content": "<p>Okay, so do we just have to press merge somewhere?</p>",
        "id": 313523963,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669994914
    },
    {
        "content": "<p>Presumably something in our fragile tooling will break, so it would be good to hit merge on a day when there is availability from you and/or Eric to patch up scripts. :-)</p>",
        "id": 313524069,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669994941
    },
    {
        "content": "<p>There's a little bit of a staging problem -- making sure that the defaults are updated in several places at the same time. So it is communication with <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> on updating the mathlib scripts</p>",
        "id": 313524127,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669994956
    },
    {
        "content": "<p>Right!</p>",
        "id": 313524153,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1669994960
    },
    {
        "content": "<p>Or we move everything into mathlib / into mathlibtools, so that the staging problem disappears</p>",
        "id": 313529938,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669996489
    },
    {
        "content": "<p>(where the latter option pushes the staging problem onto the users who has to remember to update mathlibtools)</p>",
        "id": 313529982,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669996508
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>61/80</td>\n<td>(76.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24781/35033</td>\n<td>(70.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>5/19</td>\n<td>(73.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313557813,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670004270
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>86/130</td>\n<td>(66.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>31458/52701</td>\n<td>(59.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/data.rat.order\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313558435,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670004471
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>80/127</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>30041/52164</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>11/26</td>\n<td>(57.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313559096,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670004669
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>42/90</td>\n<td>(46.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15814/31585</td>\n<td>(50.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>20/36</td>\n<td>(44.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313559803,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670004866
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>89/186</td>\n<td>(47.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>31915/85511</td>\n<td>(37.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>24/39</td>\n<td>(38.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313560450,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670005067
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>106/517</td>\n<td>(20.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>34460/225572</td>\n<td>(15.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>57/72</td>\n<td>(20.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313561192,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670005278
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>136/2795</td>\n<td>(4.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>38223/964090</td>\n<td>(4.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/all\">Longest unported chain</a>:</td>\n<td>111/126</td>\n<td>(11.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313561938,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670005512
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>58/73</td>\n<td>(79.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23999/31812</td>\n<td>(75.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>4/19</td>\n<td>(78.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313595417,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670017959
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>86/131</td>\n<td>(65.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>31458/52633</td>\n<td>(59.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/data.rat.order\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313595930,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670018191
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>80/128</td>\n<td>(62.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>30041/52093</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313596438,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670018430
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>100/307</td>\n<td>(32.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>33921/120374</td>\n<td>(28.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/data.real.basic\">Longest unported chain</a>:</td>\n<td>31/48</td>\n<td>(35.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313597080,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670018659
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>42/90</td>\n<td>(46.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>15814/31585</td>\n<td>(50.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>20/36</td>\n<td>(44.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313597510,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670018865
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-03/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>89/187</td>\n<td>(47.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>31915/85440</td>\n<td>(37.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-03/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/39</td>\n<td>(43.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313597946,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670019074
    },
    {
        "content": "<p>Hot off the press ready for porting:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">order.symm_diff</span>\n<span class=\"n\">algebra.group.with_one.defs</span>\n<span class=\"n\">combinatorics.quiver.connected_component</span>\n<span class=\"n\">order.heyting.boundary</span>\n</code></pre></div>\n<p>The first two are pretty important, the second two not so important (but great if you want something low pressure to practice on :-)</p>",
        "id": 313608637,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670024308
    },
    {
        "content": "<p>I think the most pressing task at the moment is someone having a good look at <a href=\"https://github.com/leanprover-community/mathlib4/pull/804\">https://github.com/leanprover-community/mathlib4/pull/804</a>, porting <code>Order.Hom.Basic</code>. It is very much not working at the moment, and typeclass inferences involving <code>FunLike</code> are failing. I haven't had a chance to look much, so I don't know if this is just instances set up badly, or deeper problems that will involve extracting a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> to send to the Lean 4 devs.</p>",
        "id": 313608875,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670024452
    },
    {
        "content": "<p>I'm pretty close to offline for the next 48 hours, and likely won't have a chance to look at this.</p>",
        "id": 313608929,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670024481
    },
    {
        "content": "<p>Having already started on the now-not-existing <code>algebra.group.with_one</code> I'd like to claim <code>algebra.group.with_one.defs</code> :-)</p>",
        "id": 313609514,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670024816
    },
    {
        "content": "<p>hopefully the porting opens up a bit more once we have a good chunk of the basic algebra done.</p>",
        "id": 313610644,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1670025575
    },
    {
        "content": "<p>And here it comes: freshly available for porting:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.divisibility.basic</span>\n<span class=\"n\">algebra.ring.basic</span>\n<span class=\"n\">algebra.hom.commute</span>\n</code></pre></div>",
        "id": 313611280,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670025887
    },
    {
        "content": "<p>Also just checking in on </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.group.type_tags</span>    <span class=\"c1\">-- WIP by @Vtec234 6eb334bd8f3433d5b08ba156b8ec3e6af47e1904</span>\n<span class=\"n\">algebra.hom.equiv.basic</span>    <span class=\"c1\">-- WIP @winstonyin 76171581280d5b5d1e2d1f4f37e5420357bdc636</span>\n</code></pre></div>\n<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> and <span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin</span>, if you want to put up PRs for these, even if they are nothing more than the output of mathport and marked as WIP, it's probably easier for us to track and/or help out with problems.</p>",
        "id": 313611504,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670026020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313611280\">said</a>:</p>\n<blockquote>\n<p>And here it comes: freshly available for porting:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.divisibility.basic</span>\n<span class=\"n\">algebra.ring.basic</span>\n<span class=\"n\">algebra.hom.commute</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p><code>algebra.ring.basic</code> was very easy - I have no idea what to do with the ad-hoc version. If someone wants to take a look: <a href=\"https://github.com/leanprover-community/mathlib4/pull/830\">mathlib4#830</a></p>",
        "id": 313618441,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1670030643
    },
    {
        "content": "<p>I’ll PR <code>algebra.hom.equiv.basic</code> in a few hours. There was a broken type class issue there a couple days ago that was traced back to <code>algebra.hom.group</code>. Hopefully it’s fixed by recent Lean4 patches.</p>",
        "id": 313619805,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670031690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span>, if everything compiles and tests correctly without the ad hoc file, you can just drop it.</p>",
        "id": 313622674,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670033823
    },
    {
        "content": "<p>It's possible that some of it is needed for tactic files, however.</p>",
        "id": 313622691,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670033836
    },
    {
        "content": "<p>Moritz, if there is stuff in the ad hoc version which is necessary, I would just put them in a temporary file which will later be removed once we port that material.</p>",
        "id": 313628329,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670039243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>, there's a separate thread about this, title \"Algebra.Ring.Basic\". Since there are now duplicated instances, we probably better fix it sooner rather than later.</p>",
        "id": 313628407,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670039333
    },
    {
        "content": "<p>Yeah sorry, I was just reading it.</p>",
        "id": 313628424,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670039359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313611280\">said</a>:</p>\n<blockquote>\n<p>And here it comes: freshly available for porting:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.divisibility.basic</span>\n<span class=\"n\">algebra.ring.basic</span>\n<span class=\"n\">algebra.hom.commute</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>I just finished up a port of <code>algebra.divisibility.basic</code>, there were very few fixes it needed so it went very quick.</p>\n<p>Can I get non-master pushing rights to mathlib4? My github username is <code>mpenciak</code></p>",
        "id": 313629505,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1670040365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313611504\">said</a>:</p>\n<blockquote>\n<p>Also just checking in on </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.group.type_tags</span>    <span class=\"c1\">-- WIP by @Vtec234 6eb334bd8f3433d5b08ba156b8ec3e6af47e1904</span>\n<span class=\"n\">algebra.hom.equiv.basic</span>    <span class=\"c1\">-- WIP @winstonyin 76171581280d5b5d1e2d1f4f37e5420357bdc636</span>\n</code></pre></div>\n<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> and <span class=\"user-mention silent\" data-user-id=\"416472\">Winston Yin</span>, if you want to put up PRs for these, even if they are nothing more than the output of mathport and marked as WIP, it's probably easier for us to track and/or help out with problems.</p>\n</blockquote>\n<p>Done! I initially parked it on the wiki before beginning to fixup the port. Would you rather people always make a PR as soon as possible with just the mathport outputs and do the fixups afterwards?</p>",
        "id": 313630220,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1670041096
    },
    {
        "content": "<p>I can report that <code>combinatorics.quiver.connected_component</code> is ugly</p>",
        "id": 313635527,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670046831
    },
    {
        "content": "<p>I have an initial cleanup but suspect the typing and other issues here are going to be beyond my capabilities.</p>",
        "id": 313635583,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670046859
    },
    {
        "content": "<p>happy to push the PR as is (I've cleaned up naming and fixed some of the obvious issues) but I'll have to pass on to someone to address the ugly.</p>",
        "id": 313635724,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670047028
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> I've been making PRs immediately when I start to port, and marking them WIP. This has several advantages as far as I can see. Firstly you can do the boring job of noting the mathlib3 commit immediately, and not a few days later when you've forgotten which commit it was. Secondly it's a powerful way of making it known that you're working on the file, it's easier to spot because there are far fewer mathlib4 PRs than there are lines of code in the horrible port status wiki file. Thirdly while you're at it you can make the mathlib3 PR freezing the file and cross reference the PR and now you've done pretty much all the admin work necessary. I copy the autopprted file over, fix the imports, add <code>set_option autoImplicit false -- **TODO** remove this</code> and just push and PR and then get going and keep pushing as I go.</p>",
        "id": 313643461,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670053601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, there's no need to make PRs to mathlib freezing files anymore. This is taken care of by a bot.</p>",
        "id": 313680311,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670071636
    },
    {
        "content": "<p>Unfortunately the bot is still slightly broken... Fix is at <a href=\"https://github.com/leanprover-community/mathlib/pull/17797\">#17797</a>, hopefully the last one for a while. Every time I make an assumption about the format of our docstrings, I end up being wrong!</p>",
        "id": 313682384,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670072473
    },
    {
        "content": "<p>Oh so that's now the default way to do this? I thought the bot was just angrily picking up the pieces when the humans didn't do what they were told.</p>",
        "id": 313682389,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670072477
    },
    {
        "content": "<p>The bot is better because it doesn't even run a CI job (why bother checking comments compile?)</p>",
        "id": 313682449,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670072501
    },
    {
        "content": "<p>Well one synch comment PR I made didn't compile ;-) (<a href=\"https://github.com/leanprover-community/mathlib/pull/17082\">#17082</a>)</p>",
        "id": 313682744,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670072614
    },
    {
        "content": "<p>Bors will still run CI on it before the merge actually goes through.</p>",
        "id": 313683072,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670072742
    },
    {
        "content": "<p>The bot is already mentioned at <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki\">https://github.com/leanprover-community/mathlib4/wiki/Porting-wiki</a>, but I've removed the comment that asks you to replace the SHA with the one after the comment was added now that <code>port_status</code> knows to ignore it</p>",
        "id": 313683253,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670072792
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>58/73</td>\n<td>(79.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>23999/31812</td>\n<td>(75.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>4/19</td>\n<td>(78.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313718849,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670090671
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>89/131</td>\n<td>(67.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>33160/52648</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/data.rat.order\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313719170,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670090878
    },
    {
        "content": "<p>The true \"longest unported chain\" for algebra.order.field.defs,</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>algebra.group_with_one.defs\nalgebra.order.monoid_with_zero.defs\nalgebra.order.ring.defs\nalgebra.order.field.defs\n</code></pre></div>\n<p>is now shorter than some unported chain involving base material which is not actually needed:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>- data.rbtree.init\n- data.rbmap.basic\n  data.list.defs\n  data.string.defs\n  tactic.core\n</code></pre></div>\n<p>Is it possible to modify the \"longest unported chain\" script so that it requires that the chain actually end at the target file?</p>",
        "id": 313719225,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670090894
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>83/128</td>\n<td>(64.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>31743/52108</td>\n<td>(60.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313719434,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670091084
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>96/232</td>\n<td>(41.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>34432/92135</td>\n<td>(37.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/33</td>\n<td>(54.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313719837,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670091293
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/90</td>\n<td>(50.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16286/31612</td>\n<td>(51.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313720230,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670091498
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-tools/pull/155\">https://github.com/leanprover-community/mathlib-tools/pull/155</a></p>",
        "id": 313720570,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670091683
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>92/187</td>\n<td>(49.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>33617/85495</td>\n<td>(39.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/39</td>\n<td>(43.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313720599,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670091707
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>110/520</td>\n<td>(21.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>36190/225594</td>\n<td>(16.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/72</td>\n<td>(23.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313720931,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670091927
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-04/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>143/2803</td>\n<td>(5.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40449/964761</td>\n<td>(4.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-04/all\">Longest unported chain</a>:</td>\n<td>109/126</td>\n<td>(13.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313721262,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670092171
    },
    {
        "content": "<p>The port-progress pdfs for some porting targets (eg topology.metric_space.basic) aren't being generated, and when I run the command locally I get the error</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Node names and attributes should not contain \":\" unless they are quoted with \"\".\nFor example the string 'attribute:data1' should be written as '\"attribute:data1\"'.\nPlease refer https://github.com/pydot/pydot/issues/258\n</code></pre></div>\n<p>Is this due to incorrectly-formatted lines in the porting status wiki?  If so, any idea what it would be?</p>",
        "id": 313722652,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670093088
    },
    {
        "content": "<p>Sounds like it's an escaping bug in our graph output generation</p>",
        "id": 313723140,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670093505
    },
    {
        "content": "<p>I'm currently working on porting <code>order.symm_diff</code>, and I'm running into something that should probably be fixed in mathport: the syntax for calc blocks seems to be systematically broken. This shows up, for example, in the proof of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/symm_diff_symm_diff_left\">docs#symm_diff_symm_diff_left</a>. I can fix it by putting braces around the <code>rw</code> statement, but I don't actually know what style we are going for here.</p>\n<p>The PR is <a href=\"https://github.com/leanprover-community/mathlib4/pull/842\">mathlib4#842</a>.</p>",
        "id": 313727561,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1670096598
    },
    {
        "content": "<p>I conjecture it is <br>\n<code>algebra.order.absolute_value: 'No: incorrectly marked as ready: needs algebra.hom.group'</code></p>",
        "id": 313751636,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670116754
    },
    {
        "content": "<p>and it is the colon after 'ready' that is somehow ending up in an attribute</p>",
        "id": 313751665,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670116780
    },
    {
        "content": "<p>There are also a <code>Yes :</code> and a <code>No :</code> that could be the problem.</p>",
        "id": 313751731,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670116824
    },
    {
        "content": "<p>I will just clean up all of them and hope for the best.</p>",
        "id": 313751742,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670116839
    },
    {
        "content": "<p>I think we have <code>algebra.hom.group</code> now anyway  :-)</p>",
        "id": 313751797,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670116919
    },
    {
        "content": "<p>Okay, I deleted that comment.</p>",
        "id": 313752168,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670117296
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> :  I assume the problem you are running into is the one discussed in this issue:<br>\n<a href=\"https://github.com/leanprover/lean4/pull/1844\">#1844</a><br>\nThe comments at the end seem to indicate that no final decision has been made about how calc proofs should be formatted.</p>",
        "id": 313753944,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1670119179
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"453098\">@Dan Velleman</span> Thanks! In that case I'll just go ahead and do something that works to avoid holding up the port over this.</p>",
        "id": 313755414,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1670120416
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>58/73</td>\n<td>(79.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24042/31867</td>\n<td>(75.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>4/19</td>\n<td>(78.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313840561,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670177072
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>89/131</td>\n<td>(67.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>33203/52716</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/data.rat.order\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313840922,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670177279
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>83/128</td>\n<td>(64.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>31786/52176</td>\n<td>(60.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313841346,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670177484
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>96/229</td>\n<td>(41.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>34475/91237</td>\n<td>(37.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/33</td>\n<td>(54.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313841686,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670177694
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/90</td>\n<td>(50.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16329/31655</td>\n<td>(51.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313841978,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670177899
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>92/187</td>\n<td>(49.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>33660/85563</td>\n<td>(39.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/39</td>\n<td>(43.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313842298,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670178107
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>110/519</td>\n<td>(21.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>36233/225647</td>\n<td>(16.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/72</td>\n<td>(23.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313842621,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670178334
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-05/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>143/2804</td>\n<td>(5.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40492/965201</td>\n<td>(4.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-05/all\">Longest unported chain</a>:</td>\n<td>109/126</td>\n<td>(13.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 313846124,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670180579
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>59/73</td>\n<td>(80.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>24393/31900</td>\n<td>(76.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>4/19</td>\n<td>(78.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314092783,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670263477
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>90/131</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>33610/52810</td>\n<td>(63.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/data.rat.order\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314093553,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670263683
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>84/128</td>\n<td>(65.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>32189/52267</td>\n<td>(61.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314094172,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670263887
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>97/229</td>\n<td>(42.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>34882/91340</td>\n<td>(38.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/33</td>\n<td>(54.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314094841,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670264097
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>45/90</td>\n<td>(50.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>16329/31655</td>\n<td>(51.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314095525,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670264301
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>93/187</td>\n<td>(49.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>34063/85684</td>\n<td>(39.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/39</td>\n<td>(43.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314096173,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670264509
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>111/519</td>\n<td>(21.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>36640/225864</td>\n<td>(16.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/72</td>\n<td>(23.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314096960,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670264733
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-06/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>144/2804</td>\n<td>(5.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40899/965905</td>\n<td>(4.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-06/all\">Longest unported chain</a>:</td>\n<td>109/126</td>\n<td>(13.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314104446,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670266957
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 314166160,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670299247
    },
    {
        "content": "<p>Would it be possible to track also <code>data.nat.prime</code>?</p>",
        "id": 314179541,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1670309787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314166160\">said</a>:</p>\n<blockquote>\n<p>The current list of immediate porting candidates is:</p>\n<p>High priority:</p>\n<ul>\n<li><code>group_theory.group_action.defs</code>    --  just some naming issues to clean up in <a href=\"https://github.com/leanprover-community/mathlib4/pull/854\">mathlib4#854</a></li>\n</ul>\n</blockquote>\n<p>Ready for review again</p>",
        "id": 314194149,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670317318
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>63/75</td>\n<td>(84.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>27450/31938</td>\n<td>(85.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>3/19</td>\n<td>(84.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314292522,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670349876
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>101/133</td>\n<td>(75.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>39022/52864</td>\n<td>(73.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.rat.order\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314293202,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670350083
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>96/130</td>\n<td>(73.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>37667/52321</td>\n<td>(72.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314293835,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670350290
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>115/286</td>\n<td>(40.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40746/111562</td>\n<td>(36.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.prime\">Longest unported chain</a>:</td>\n<td>32/49</td>\n<td>(34.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314294482,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670350502
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>110/231</td>\n<td>(47.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40395/91394</td>\n<td>(44.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/33</td>\n<td>(54.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314295164,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670350713
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>46/90</td>\n<td>(51.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17419/31687</td>\n<td>(55.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314295769,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670350920
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>105/189</td>\n<td>(55.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>39541/85738</td>\n<td>(46.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/39</td>\n<td>(43.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314296400,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670351128
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/521</td>\n<td>(23.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42157/225922</td>\n<td>(18.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/72</td>\n<td>(23.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314297080,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670351353
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>159/2809</td>\n<td>(5.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>46618/966941</td>\n<td>(4.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/all\">Longest unported chain</a>:</td>\n<td>113/130</td>\n<td>(13.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314307428,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670354209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span>, I added <code>data.nat.prime</code> to the output of the port progress bot. As you can see from looking at the graph or the \"longest unported chain\", there is a lot of import reduction that could be done on the mathlib3 side to reduce this dependency graph. <code>data.nat.prime</code> is still far enough off that there's time if someone wants to do some of this refactoring now.</p>",
        "id": 314323134,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670359465
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>63/75</td>\n<td>(84.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>27450/31938</td>\n<td>(85.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>3/19</td>\n<td>(84.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314342151,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670367159
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>102/133</td>\n<td>(76.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>39568/52864</td>\n<td>(74.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.rat.order\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314343030,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670367524
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>97/130</td>\n<td>(74.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>38213/52321</td>\n<td>(73.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>9/26</td>\n<td>(65.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314343652,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670367754
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>116/286</td>\n<td>(40.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>41292/111562</td>\n<td>(37.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.nat.prime\">Longest unported chain</a>:</td>\n<td>32/49</td>\n<td>(34.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314344163,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670368000
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>111/231</td>\n<td>(48.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40941/91394</td>\n<td>(44.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/33</td>\n<td>(54.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314344657,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670368239
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>46/90</td>\n<td>(51.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17419/31687</td>\n<td>(55.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314345174,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670368477
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>106/189</td>\n<td>(56.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40087/85738</td>\n<td>(46.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/39</td>\n<td>(43.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314345678,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670368709
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>126/521</td>\n<td>(24.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42757/225987</td>\n<td>(18.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/72</td>\n<td>(23.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314346156,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670368955
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314323134\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span>, I added <code>data.nat.prime</code> to the output of the port progress bot. As you can see from looking at the graph or the \"longest unported chain\", there is a lot of import reduction that could be done on the mathlib3 side to reduce this dependency graph. <code>data.nat.prime</code> is still far enough off that there's time if someone wants to do some of this refactoring now.</p>\n</blockquote>\n<p>Thanks. It would be nice if this lands before my course starts (beginning of January) and this is also my milestone for switching from binport for a couple of things.</p>\n<p>Never having contributed to mathlib3 I am hesitant to reduce imports myself as I may mess things up.</p>",
        "id": 314355949,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1670373520
    },
    {
        "content": "<p>I think it is very unlikely <code>data.nat.prime</code> will be done by the end of December. I haven't looked to see how much the requirements could be shrunk by refactoring, but as is I don't see all of the finiteness stuff done until at least late January. (Pinging <span class=\"user-mention\" data-user-id=\"504487\">@Sarah Smith</span> as I know she wants to keep track of requirements for people who are teaching.)</p>",
        "id": 314356535,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670373862
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314355949\">said</a>:</p>\n<blockquote>\n<p>Never having contributed to mathlib3 I am hesitant to reduce imports myself as I may mess things up.</p>\n</blockquote>\n<p>There's no danger of a rogue proposal breaking mathlib, if this is what you are worried about -- there are a number of automated checks that get run before a proposed change is accepted!</p>",
        "id": 314356896,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670374123
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314356535\">said</a>:</p>\n<blockquote>\n<p>(Pinging <span class=\"user-mention silent\" data-user-id=\"504487\">Sarah Smith</span> as I know she wants to keep track of requirements for people who are teaching.)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> You continue to read my mind from across the globe, thank you Scott</p>",
        "id": 314357133,
        "sender_full_name": "Sarah Smith",
        "timestamp": 1670374278
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-07/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>163/2811</td>\n<td>(5.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47547/967324</td>\n<td>(4.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-07/all\">Longest unported chain</a>:</td>\n<td>111/130</td>\n<td>(14.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314359308,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670375569
    },
    {
        "content": "<p>Thanks for the information. I will work around this. I just need good examples of basic mathematics (including algorithms) and since <code>Nat.gcd</code> and its basic properties are in Lean 4 itself I can just define primes and use them.</p>",
        "id": 314364161,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1670378961
    },
    {
        "content": "<p>I've opened a PR for Data.Set.Basic at <a href=\"https://github.com/leanprover-community/mathlib4/pull/892\">https://github.com/leanprover-community/mathlib4/pull/892</a></p>",
        "id": 314369907,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670383185
    },
    {
        "content": "<p>It has many errors, but skimming through what remains it seems they are for a great variety of reasons. This is good news, because it means anyone who wants to can work on it. Please feel free to scroll down to a random point in the file and start work. :-)</p>",
        "id": 314369972,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670383237
    },
    {
        "content": "<p>This is not particularly important, but trying to run the port progress script locally I'm running into some issues:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>~/MathlibPort/mathlib/src ❯ leanproject import-graph --to ring_theory.mv_polynomial.basic --port-status --exclude-tactics out.pdf\n<span class=\"k\">while</span> parsing a block mapping\n  <span class=\"k\">in</span> <span class=\"s2\">\"&lt;byte string&gt;\"</span>, line <span class=\"m\">19</span>, column <span class=\"m\">1</span>:\n    algebra.abs: Yes mathlib4#477 c4 ...\n    ^\nexpected &lt;block end&gt;, but found <span class=\"s1\">'&lt;scalar&gt;'</span>\n  <span class=\"k\">in</span> <span class=\"s2\">\"&lt;byte string&gt;\"</span>, line <span class=\"m\">322</span>, column <span class=\"m\">28</span>:\n    algebra.order.group.prod: <span class=\"s1\">'No'</span>\n                               ^\n</code></pre></div>\n<p>It seems like the script is running into issues parsing the port-status YAML file.</p>\n<p>The following runs fine: <code>leanproject import-graph --to ring_theory.mv_polynomial.basic out.pdf</code>, but it'd be nice to have some coloration :(</p>\n<p>EDIT: I may have totally borked something, because now even the <code>port_status.py</code> script is breaking with a yaml parsing error</p>\n<p>(Weirdly, running with <code>--exclude-tactics</code> also returns an error: <code>'algebra.order.monoid.units'</code>)</p>\n<p>EDIT2: This may be related to the added <code>algebra.order.group.order_iso</code> line? <br>\n<a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status/_compare/9c2bc022783594980df80f786404a0dbf452c487...20a5d7d9a87647c3cd50697d34b9d086b0fff92b\">https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status/_compare/9c2bc022783594980df80f786404a0dbf452c487...20a5d7d9a87647c3cd50697d34b9d086b0fff92b</a></p>",
        "id": 314376712,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1670388316
    },
    {
        "content": "<p>Right -- that line doesn't end in a <code> '</code></p>",
        "id": 314388127,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670396392
    },
    {
        "content": "<p>looks like it was typoed for a <code>;</code></p>",
        "id": 314388378,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670396486
    },
    {
        "content": "<p>Fixed.</p>",
        "id": 314388845,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670396744
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314355949\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314323134\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span>, I added <code>data.nat.prime</code> to the output of the port progress bot. As you can see from looking at the graph or the \"longest unported chain\", there is a lot of import reduction that could be done on the mathlib3 side to reduce this dependency graph. <code>data.nat.prime</code> is still far enough off that there's time if someone wants to do some of this refactoring now.</p>\n</blockquote>\n<p>Thanks. It would be nice if this lands before my course starts (beginning of January) and this is also my milestone for switching from binport for a couple of things.</p>\n<p>Never having contributed to mathlib3 I am hesitant to reduce imports myself as I may mess things up.</p>\n</blockquote>\n<p>I'm removing the dependency on finite stuff in  <a href=\"https://github.com/leanprover-community/mathlib/pull/17840\">#17840</a></p>",
        "id": 314416139,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670406730
    },
    {
        "content": "<p>Or most of it - it still depends on a bunch of list stuff</p>",
        "id": 314416208,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670406757
    },
    {
        "content": "<p>I've also got <a href=\"https://github.com/leanprover-community/mathlib/compare/reduce-nat-prime-imports-aggressively\">a branch</a> that removes the list dependencies at the expense of moving <code>nat.factors</code> and the <code>norm_num</code> extension out of <code>data.nat.prime</code>, but that's for after I get <a href=\"https://github.com/leanprover-community/mathlib/pull/17840\">#17840</a> compiling</p>",
        "id": 314426534,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670410172
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/898\">https://github.com/leanprover-community/mathlib4/pull/898</a> is ready to land after the merge conflicts got fixed - just needs someone to tell bors</p>",
        "id": 314495067,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670429081
    },
    {
        "content": "<p>I took it upon myself (I've never been sure whether the author officially has the right to do this ...)</p>",
        "id": 314495862,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670429249
    },
    {
        "content": "<p>Hmm, maybe bors is stuck.</p>",
        "id": 314503250,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670431137
    },
    {
        "content": "<p>Seems like it's building now</p>",
        "id": 314504676,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670431458
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>66/75</td>\n<td>(88.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>27842/31954</td>\n<td>(87.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>1/19</td>\n<td>(94.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314523354,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670436279
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>107/133</td>\n<td>(80.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40246/52635</td>\n<td>(76.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/data.rat.order\">Longest unported chain</a>:</td>\n<td>7/26</td>\n<td>(73.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314524109,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670436492
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>106/131</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>39110/52386</td>\n<td>(74.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>7/27</td>\n<td>(74.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314524742,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670436702
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>127/287</td>\n<td>(44.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42536/111631</td>\n<td>(38.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/data.nat.prime\">Longest unported chain</a>:</td>\n<td>30/50</td>\n<td>(40.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314525490,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670436918
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>121/232</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>41981/91463</td>\n<td>(45.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/data.real.basic\">Longest unported chain</a>:</td>\n<td>14/34</td>\n<td>(58.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314526274,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670437135
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17673/31691</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314527024,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670437344
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>115/190</td>\n<td>(60.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40984/85803</td>\n<td>(47.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>20/40</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314527655,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670437556
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>137/522</td>\n<td>(26.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>44005/226076</td>\n<td>(19.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>53/73</td>\n<td>(27.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314528464,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670437786
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>177/2817</td>\n<td>(6.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>49585/968556</td>\n<td>(5.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/all\">Longest unported chain</a>:</td>\n<td>111/131</td>\n<td>(15.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314539789,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670440598
    },
    {
        "content": "<p>We are very very close to our first goal!</p>\n<ul>\n<li><code>algebra.order.ring.defs</code> is open and ready for porting</li>\n<li><code>algebra.order.field.defs</code> has no other prerequisites, so potentially can be done at the same time</li>\n<li><code>algebra.order.ring.canonical</code> and  then <code>data.nat.order.basic</code> can also be done immediately once <code>algebra.order.ring.defs</code> is ready.</li>\n</ul>",
        "id": 314575330,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670454166
    },
    {
        "content": "<p>There is lots of stuff available for porting today:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">data.set.basic</span>                   <span class=\"c1\">-- contributions welcome mathlib4#892</span>\n<span class=\"n\">algebra.order.ring.defs</span>\n<span class=\"n\">algebra.order.with_zero</span>\n<span class=\"n\">algebra.order.group.abs</span>          <span class=\"c1\">-- just needs a merge? mathlib4#896</span>\n<span class=\"n\">algebra.hom.group_instances</span>\n<span class=\"n\">algebra.order.monoid.with_top</span>    <span class=\"c1\">-- WIP Jon Eugster</span>\n<span class=\"n\">algebra.group.opposite</span>\n<span class=\"n\">algebra.group_with_zero.units.lemmas</span>\n<span class=\"n\">algebra.order.group.inj_surj</span>\n<span class=\"n\">algebra.group.ulift</span>\n<span class=\"n\">ring_theory.coprime.basic</span>        <span class=\"c1\">-- mathlib4#899</span>\n<span class=\"n\">algebra.ring.idempotents</span>\n<span class=\"n\">order.hom.bounded</span>                <span class=\"c1\">-- mathlib4#888</span>\n<span class=\"n\">algebra.euclidean_domain.basic</span>\n<span class=\"n\">algebra.order.group.type_tags</span>\n<span class=\"n\">algebra.hom.equiv.type_tags</span>\n<span class=\"n\">algebra.order.hom.monoid</span>\n<span class=\"n\">algebra.group.with_one.basic</span>\n<span class=\"n\">combinatorics.quiver.cast</span>\n<span class=\"n\">algebra.order.sub.basic</span>\n</code></pre></div>\n<p>We may be through the bottleneck now, so please invite your friends along. :-)</p>",
        "id": 314576049,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670454533
    },
    {
        "content": "<p>What is our second goal? I've been using the pdfs for inspiration rather than the port status script.</p>",
        "id": 314578624,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670455960
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/892\">mathlib4#892</a> would be best left until a new mathport output is available</p>",
        "id": 314579871,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670456728
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, <code>data.rat.order</code> is the primary short term goal. It will be very helpful for people teaching next semester in Lean 4 if that is done by the new year.  It feels completely plausible.</p>",
        "id": 314583403,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670459026
    },
    {
        "content": "<p>I made a start on <code>algebra.order.ring.defs</code> at <a href=\"https://github.com/leanprover-community/mathlib4/pull/905\">mathlib4#905</a>. Anyone is welcome to work on it.</p>",
        "id": 314586888,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670461462
    },
    {
        "content": "<p>It's now ready for review.</p>",
        "id": 314601939,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670473929
    },
    {
        "content": "<p>and includes <code>algebra.order.field.defs</code>, since it is trivial.</p>",
        "id": 314602403,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670474402
    },
    {
        "content": "<p>and <code>algebra.order.ring.canonical</code>.</p>",
        "id": 314602834,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670474740
    },
    {
        "content": "<p>algebra.group.ulift was super trivial -- feels good!</p>",
        "id": 314603006,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670474902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span>, could you add the additive versions of the #aligns? This will be automated soon.</p>",
        "id": 314603773,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670475590
    },
    {
        "content": "<p>Don't see instructions on the wiki -- what's the Zulip thread?</p>",
        "id": 314604377,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670475939
    },
    {
        "content": "<p>This? <a href=\"#narrow/stream/287929-mathlib4/topic/.23align.20and.20to_additive/near/314364635\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.23align.20and.20to_additive/near/314364635</a></p>",
        "id": 314604956,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670476272
    },
    {
        "content": "<p>Would you be able to add this to the wiki?</p>",
        "id": 314605449,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670476605
    },
    {
        "content": "<p>Done -- is there a way to interrogate Lean to see the exact naming? Or does it require knowledge of the <code>to_additive</code> algorithm? It's clear when <code>mul_foo</code> gets renamed to <code>add_foo</code>, but I see <code>inv</code>, <code>smul</code>, <code>pow</code> attributes &amp; I don't have a clear mental model for what <code>to_additive</code> does there.</p>",
        "id": 314606274,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670477199
    },
    {
        "content": "<p>You can hover over the <code>to_additive</code> keyword to find the additivized name on the Lean 4 side.</p>",
        "id": 314607233,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670477944
    },
    {
        "content": "<p>There is not a trivial way to look it up on the Lean 3 side. Usually you can quickly guess it from the other three names, however. Also, if you're really stuck you can go the mathlib itself and add a <code>?</code> to <code>to_additive</code>, and it will print the name it is choosing.</p>\n<p>This will all go away soon when mathport gains the ability to do it automatically.</p>",
        "id": 314607321,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670478008
    },
    {
        "content": "<p>Also found:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"kd\">def</span> <span class=\"n\">nameDict</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"bp\">→</span> <span class=\"n\">List</span> <span class=\"n\">String</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"one\"</span>         <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"zero\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"mul\"</span>         <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"smul\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"vadd\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"inv\"</span>         <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"neg\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"div\"</span>         <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"sub\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"prod\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"sum\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"hmul\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"hadd\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"hsmul\"</span>       <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"hvadd\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"hdiv\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"hsub\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"hpow\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"hsmul\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"finprod\"</span>     <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"finsum\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"pow\"</span>         <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"smul\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"npow\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"nsmul\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"zpow\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"zsmul\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"monoid\"</span>      <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Monoid\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"submonoid\"</span>   <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Submonoid\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"group\"</span>       <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Group\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"subgroup\"</span>    <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Subgroup\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"semigroup\"</span>   <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Semigroup\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"magma\"</span>       <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Magma\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"haar\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Haar\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"prehaar\"</span>     <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Prehaar\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"unit\"</span>        <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Unit\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"s2\">\"units\"</span>       <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"s2\">\"add\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Units\"</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"n\">x</span>             <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 314611179,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670480672
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314586888\">said</a>:</p>\n<blockquote>\n<p>I made a start on <code>algebra.order.ring.defs</code> at <a href=\"https://github.com/leanprover-community/mathlib4/pull/905\">mathlib4#905</a>. Anyone is welcome to work on it.</p>\n</blockquote>\n<p>This looks good to me! If one more person with a bit more porting experience then me can look it over, then I'm happy to kick it on the queue.</p>",
        "id": 314617184,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1670484116
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314426534\">said</a>:</p>\n<blockquote>\n<p>I've also got <a href=\"https://github.com/leanprover-community/mathlib/compare/reduce-nat-prime-imports-aggressively\">a branch</a> that removes the list dependencies at the expense of moving <code>nat.factors</code> and the <code>norm_num</code> extension out of <code>data.nat.prime</code>, but that's for after I get <a href=\"https://github.com/leanprover-community/mathlib/pull/17840\">#17840</a> compiling</p>\n</blockquote>\n<p>This is now <a href=\"https://github.com/leanprover-community/mathlib/pull/17854\">#17854</a></p>",
        "id": 314672837,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670505171
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/algebra.order.field.defs.pdf\">algebra.order.field.defs</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>68/75</td>\n<td>(90.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>28848/31966</td>\n<td>(90.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/algebra.order.field.defs\">Longest unported chain</a>:</td>\n<td>1/19</td>\n<td>(94.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314737512,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670522668
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>112/134</td>\n<td>(83.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>41757/52684</td>\n<td>(79.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.rat.order\">Longest unported chain</a>:</td>\n<td>7/27</td>\n<td>(74.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314738269,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670522883
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>110/132</td>\n<td>(83.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40618/52456</td>\n<td>(77.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>8/28</td>\n<td>(71.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314738951,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670523098
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>128/221</td>\n<td>(57.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>43595/89069</td>\n<td>(48.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.prime\">Longest unported chain</a>:</td>\n<td>14/34</td>\n<td>(58.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314739676,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670523318
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>128/233</td>\n<td>(54.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>43780/91550</td>\n<td>(47.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/35</td>\n<td>(57.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314740396,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670523537
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17677/31695</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314741218,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670523749
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>120/191</td>\n<td>(62.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42510/85882</td>\n<td>(49.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>21/41</td>\n<td>(48.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314742009,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670523965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I ported <code>order.ring.defs</code> yesterday (it compiles) but the tricky thing is removing the ad hoc port <code>order.ring</code></p>",
        "id": 314742268,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670524044
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 314742302,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670524057
    },
    {
        "content": "<p>Oops never mind, looks like you’ve merged your PR already</p>",
        "id": 314742775,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670524191
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>145/524</td>\n<td>(27.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>45974/226176</td>\n<td>(20.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>54/74</td>\n<td>(27.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314742799,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670524198
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>186/2822</td>\n<td>(6.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>51637/969537</td>\n<td>(5.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/all\">Longest unported chain</a>:</td>\n<td>112/132</td>\n<td>(15.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314751366,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670526840
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>113/134</td>\n<td>(84.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42049/52695</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.rat.order\">Longest unported chain</a>:</td>\n<td>7/27</td>\n<td>(74.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314815330,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670558156
    },
    {
        "content": "<p>The port progress bot now produces graphs that omit all files which have been ported, and all their children have been ported.</p>\n<p>This now makes the graphs much less cluttered (we're making progress!) and easier to see what we need to be working on to achieve the next targets.</p>",
        "id": 314815559,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670558363
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>113/134</td>\n<td>(84.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42049/52695</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.rat.order\">Longest unported chain</a>:</td>\n<td>7/27</td>\n<td>(74.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314815834,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670558539
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>111/132</td>\n<td>(84.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40898/52455</td>\n<td>(78.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>8/28</td>\n<td>(71.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314816205,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670558757
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>119/156</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42043/61245</td>\n<td>(68.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.prime\">Longest unported chain</a>:</td>\n<td>10/30</td>\n<td>(66.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314816503,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670558971
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>130/233</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>44251/91549</td>\n<td>(48.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/35</td>\n<td>(57.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314816832,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670559189
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17677/31695</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314817220,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670559404
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>121/192</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42790/85921</td>\n<td>(49.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/42</td>\n<td>(47.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314817584,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670559629
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>149/524</td>\n<td>(28.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>46585/225456</td>\n<td>(20.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/75</td>\n<td>(26.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314817845,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670559865
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>192/2827</td>\n<td>(6.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>52472/969650</td>\n<td>(5.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/all\">Longest unported chain</a>:</td>\n<td>114/134</td>\n<td>(14.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314821978,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670563294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314525490\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-08/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>127/287</td>\n<td>(44.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42536/111631</td>\n<td>(38.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-08/data.nat.prime\">Longest unported chain</a>:</td>\n<td>30/50</td>\n<td>(40.0% progress)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/314816503\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>119/156</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42043/61245</td>\n<td>(68.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-09/data.nat.prime\">Longest unported chain</a>:</td>\n<td>10/30</td>\n<td>(66.7% progress)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>That looks a bit more attainable now. I don't see much remaining that would obviously help reduce dependencies</p>",
        "id": 314827967,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670567678
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>113/134</td>\n<td>(84.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42049/52695</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/data.rat.order\">Longest unported chain</a>:</td>\n<td>7/27</td>\n<td>(74.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314951160,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670609077
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>111/132</td>\n<td>(84.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40898/52455</td>\n<td>(78.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>8/28</td>\n<td>(71.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314951790,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670609283
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>120/156</td>\n<td>(76.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42532/61245</td>\n<td>(69.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/data.nat.prime\">Longest unported chain</a>:</td>\n<td>10/30</td>\n<td>(66.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314952449,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670609491
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>131/233</td>\n<td>(56.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>44740/91588</td>\n<td>(48.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/35</td>\n<td>(57.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314953123,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670609701
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17677/31695</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314953865,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670609906
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>121/192</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42790/85973</td>\n<td>(49.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/42</td>\n<td>(47.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314954547,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670610113
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>152/525</td>\n<td>(29.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47313/224644</td>\n<td>(21.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/75</td>\n<td>(26.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314955273,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670610339
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-10/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>195/2831</td>\n<td>(6.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>53200/969836</td>\n<td>(5.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-10/all\">Longest unported chain</a>:</td>\n<td>115/135</td>\n<td>(14.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 314963713,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670613015
    },
    {
        "content": "<p>I have made some PRs to reduce the dependencies of <code>data.fintype.basic</code><br>\n<a href=\"https://github.com/leanprover-community/mathlib/pull/17880\">#17880</a>: <code>data.set.lattice</code> and its dependencies (also reduces the longest unported chain of mathlib)<br>\n<a href=\"https://github.com/leanprover-community/mathlib/pull/17886\">#17886</a>:  <code>int.order.basic</code><br>\n<a href=\"https://github.com/leanprover-community/mathlib/pull/17887\">#17887</a>:  <code>data.list.of_fn</code> and its dependencies<br>\n<a href=\"https://github.com/leanprover-community/mathlib/pull/17888\">#17888</a>:  <code>data.multiset.powerset</code> and <code>data.list.sublists</code> (also reduces the longest unported chain of mathlib)</p>",
        "id": 315072418,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1670676448
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>113/134</td>\n<td>(84.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42052/52698</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/data.rat.order\">Longest unported chain</a>:</td>\n<td>7/27</td>\n<td>(74.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315111874,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670695483
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>111/132</td>\n<td>(84.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40898/52455</td>\n<td>(78.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>8/28</td>\n<td>(71.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315112211,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670695690
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>120/156</td>\n<td>(76.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42532/61245</td>\n<td>(69.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/data.nat.prime\">Longest unported chain</a>:</td>\n<td>10/30</td>\n<td>(66.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315112527,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670695900
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>131/233</td>\n<td>(56.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>44743/91593</td>\n<td>(48.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/35</td>\n<td>(57.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315112865,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670696111
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17677/31695</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315113198,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670696318
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>121/192</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42790/85973</td>\n<td>(49.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>22/42</td>\n<td>(47.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315113509,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670696528
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>152/525</td>\n<td>(29.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47316/224685</td>\n<td>(21.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>55/75</td>\n<td>(26.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315113847,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670696752
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-11/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>195/2832</td>\n<td>(6.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>53203/969953</td>\n<td>(5.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-11/all\">Longest unported chain</a>:</td>\n<td>115/135</td>\n<td>(14.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315117753,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670699334
    },
    {
        "content": "<p>Do I understand this correctly: grey nodes suggest room for improvement in the way these files are imported by other files, not that there's something wrong with these files themselves?</p>",
        "id": 315154651,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670728692
    },
    {
        "content": "<p>Yes. A node is marked grey is no declarations in it are used in the target file. This usually means we have something like:</p>\n<ul>\n<li>Three files, A, B, C, with C the \"target file\".</li>\n<li>B imports A</li>\n<li>C imports B</li>\n<li>but C only depends on parts of B which did not depend on A.<br>\nThen A will be marked in gray.</li>\n</ul>\n<p>It suggests that it may be possible to split B into B and B', with B importing A and C importing B'. This may not necessarily be a good idea, but fairly often is.</p>",
        "id": 315179679,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670750507
    },
    {
        "content": "<p>Long strings of gray files (which are displayed as long strings of files prefixed with <code>-</code> in the \"longest unported chain\" links) are particularly suspicious.</p>",
        "id": 315179752,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670750534
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>113/134</td>\n<td>(84.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42066/52712</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/data.rat.order\">Longest unported chain</a>:</td>\n<td>7/27</td>\n<td>(74.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315239490,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670781897
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>111/132</td>\n<td>(84.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>40904/52461</td>\n<td>(78.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>8/28</td>\n<td>(71.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315239955,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670782116
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>120/156</td>\n<td>(76.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42550/61263</td>\n<td>(69.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/data.nat.prime\">Longest unported chain</a>:</td>\n<td>10/30</td>\n<td>(66.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315240445,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670782338
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>131/233</td>\n<td>(56.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>44765/91650</td>\n<td>(48.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/data.real.basic\">Longest unported chain</a>:</td>\n<td>15/35</td>\n<td>(57.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315240915,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670782562
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17677/31695</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315241242,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670782781
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>121/183</td>\n<td>(66.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>42800/82721</td>\n<td>(51.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>21/41</td>\n<td>(48.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315241655,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670783004
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>152/525</td>\n<td>(29.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47358/224698</td>\n<td>(21.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>54/74</td>\n<td>(27.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315242059,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670783242
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>195/2834</td>\n<td>(6.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>53253/970192</td>\n<td>(5.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/all\">Longest unported chain</a>:</td>\n<td>114/134</td>\n<td>(14.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315247619,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670786441
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-12/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>115/134</td>\n<td>(85.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>44237/52712</td>\n<td>(83.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-12/data.rat.order\">Longest unported chain</a>:</td>\n<td>6/27</td>\n<td>(77.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315277333,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670811086
    },
    {
        "content": "<p>Did the bot die?</p>",
        "id": 315298379,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1670827542
    },
    {
        "content": "<p>Oops, didn't realise I'd cause confusion. I asked for a one-off run as I wanted to see the new graph. :-)</p>",
        "id": 315301299,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670829056
    },
    {
        "content": "<p>Maybe I'll update the bot to update the graphs more often, but only post once a day.</p>",
        "id": 315301331,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670829073
    },
    {
        "content": "<p>Suggestions for anyone looking for a porting task, and who would like advice for identifying the highest priority work:</p>\n<ol>\n<li>\n<p>Click on the latest link to <a href=\"https://tqft.net/mathlib4/latest/data.rat.order.pdf\"><code>data.rat.order</code></a> posted by the <a href=\"#narrow/sender/563195-port-progress-bot\">port-progress-bot</a>, and</p>\n<ul>\n<li>Help out with any open PRs (you can just click on a dark blue node)<ul>\n<li>in particular currently both <a href=\"https://github.com/leanprover-community/mathlib4/pull/938\"><code>Data.Int.Order.Basic</code></a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/958\"><code>Algebra.Hom.Ring</code></a> need assistance.</li>\n</ul>\n</li>\n<li>Start the port of any open file (those nodes in light blue)<ul>\n<li>in particular anyone can start on <code>data.nat.gcd.basic</code>. </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>repeat the same for the other targets that port-progress-bot posts about, e.g. <a href=\"https://tqft.net/mathlib4/latest/data.fintype.basic.pdf\"><code>data.fintype.basic</code></a>.</p>\n</li>\n<li>\n<p>review the output of <a href=\"https://math.commelin.net/files/port_status.html\"><code>scripts/port_status.sh</code></a> and work on something from that.</p>\n<ul>\n<li>In particular <code>data.list.basic</code> and <code>data.set.n_ary</code> (possibly also <code>data.set.prod</code> and <code>data.set.function</code> in the same PR) are now ready to port, and high priority.</li>\n</ul>\n</li>\n</ol>",
        "id": 315325863,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670838833
    },
    {
        "content": "<p>Could someone give bors another kick on <a href=\"https://github.com/leanprover-community/mathlib4/pull/955\">https://github.com/leanprover-community/mathlib4/pull/955</a>?</p>",
        "id": 315329174,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670839916
    },
    {
        "content": "<p>Tomorrow we'll have a mathlib4 afternoon in Orsay with Floris, Joël, Riccardo and I. Hopefully we'll find useful things to try.</p>",
        "id": 315334350,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670841468
    },
    {
        "content": "<p>Hopefully the graphs now update every two hours (but only get a new URL each day), so are usable to find out what's coming up next.</p>",
        "id": 315334989,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670841668
    },
    {
        "content": "<p>Re Data.Int.Order.Basic: as far as I can see the main decision to make right now is whether we are going to ask the Lean 4 devs to change their definition of <code>div</code> and <code>mod</code> on <code>Int</code>, or whether we are going to work around this ourselves. Looks like Leo is still on vacation.</p>",
        "id": 315338406,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670842798
    },
    {
        "content": "<p>What difference is there?</p>",
        "id": 315339413,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670843104
    },
    {
        "content": "<p>See <a href=\"https://leanprover-community.github.io/mathlib4_docs/Std/Data/Int/Basic.html\">https://leanprover-community.github.io/mathlib4_docs/Std/Data/Int/Basic.html</a></p>",
        "id": 315340122,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670843327
    },
    {
        "content": "<p><code>One or more equations did not get rendered due to their size.</code> <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 315340291,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670843399
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- lean 3</span>\n<span class=\"k\">#eval</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">5</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"bp\">-</span><span class=\"mi\">2</span> <span class=\"c1\">-- 3</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- lean 4</span>\n<span class=\"k\">#eval</span> <span class=\"bp\">-</span><span class=\"mi\">5</span> <span class=\"bp\">/</span> <span class=\"bp\">-</span><span class=\"mi\">2</span> <span class=\"c1\">-- 2</span>\n</code></pre></div>",
        "id": 315340356,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670843408
    },
    {
        "content": "<p>Oh no</p>",
        "id": 315340386,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670843420
    },
    {
        "content": "<p>Lean 4 is on the right side of history here, right? We want <code>a + b / c = (a * c + b) / c</code>, or am I wrong?</p>",
        "id": 315340554,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670843492
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/341532-lean4-dev/topic/.5BRFC.5D.20Int.2Ediv.20convention/near/296956937\">https://leanprover.zulipchat.com/#narrow/stream/341532-lean4-dev/topic/.5BRFC.5D.20Int.2Ediv.20convention/near/296956937</a> for an in-depth discussion.</p>",
        "id": 315341228,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670843721
    },
    {
        "content": "<p>Oh no, I see</p>",
        "id": 315341939,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670843980
    },
    {
        "content": "<p>Re Algebra.Hom.Ring : right now this seems to be a file which has been half-ported. I am scared to just start at the first error and press on -- this file has just been advertised as needing help, so for all I know someone else has already fixed up the next 100 lines and is about to push. I far prefer trying to fix up the last few errors in a file which are causing problems, when I'm leaping into a file which someone else has claimed.</p>",
        "id": 315342927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670844301
    },
    {
        "content": "<p>My Lean time has been rather fragmented for the last few days and this is precisely why I didn't claim a file during that time -- I didn't want to fix the capitalisation in half the file and then have to stop for 2 days and then fix 1/2 of the remainder and then stop for another day whilst other people look on thinking \"we need this file and it's still hugely broken\". When Imperial's term is over in 4 days' time I'll be able to go back to claiming files.</p>",
        "id": 315343227,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670844404
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>118/134</td>\n<td>(88.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>46281/52718</td>\n<td>(87.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/data.rat.order\">Longest unported chain</a>:</td>\n<td>5/27</td>\n<td>(81.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315427500,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670868280
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>116/132</td>\n<td>(87.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>44821/52467</td>\n<td>(85.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>6/28</td>\n<td>(78.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315428200,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670868496
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>128/156</td>\n<td>(82.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47428/61269</td>\n<td>(77.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/data.nat.prime\">Longest unported chain</a>:</td>\n<td>8/30</td>\n<td>(73.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315428888,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670868712
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>140/233</td>\n<td>(60.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>49724/91666</td>\n<td>(54.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/data.real.basic\">Longest unported chain</a>:</td>\n<td>13/35</td>\n<td>(62.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315429649,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670868924
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17677/31695</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315430402,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670869131
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>126/183</td>\n<td>(68.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>46717/82740</td>\n<td>(56.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>19/41</td>\n<td>(53.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315431208,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670869341
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>162/525</td>\n<td>(30.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>52370/224722</td>\n<td>(23.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>52/74</td>\n<td>(29.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315431916,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670869564
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-13/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>212/2835</td>\n<td>(7.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>58840/970763</td>\n<td>(6.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-13/all\">Longest unported chain</a>:</td>\n<td>112/134</td>\n<td>(16.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315440111,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670872166
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <code>Algebra.Hom.Ring</code> is completely ported except for two <code>simp</code> lint errors. Would anyone like to take a crack at them? <a href=\"https://github.com/leanprover-community/mathlib4/pull/958\">mathlib4#958</a></p>",
        "id": 315498785,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670896997
    },
    {
        "content": "<p>We're getting very close to <a href=\"https://tqft.net/mathlib4/2022-12-13/data.rat.order.pdf\"><code>data.rat.order</code></a> now; hopefully in the next day or two.</p>\n<p>If anyone wants to take a look at <code>data.nat.cast.basic</code>, it is open for porting.</p>",
        "id": 315566059,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670930765
    },
    {
        "content": "<p>We are starting our mathlib4 hackaton in Orsay.</p>",
        "id": 315582800,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670936032
    },
    {
        "content": "<p>so tomorrow we have filters in mathlib4?</p>",
        "id": 315583009,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1670936084
    },
    {
        "content": "<p>We want to tackle:</p>\n<ul>\n<li>Floris:  data.nat.cast.basic</li>\n<li>Riccardo: algebra.field.basic</li>\n<li>Joël: algebra.group_power.ring</li>\n<li>Patrick: <a href=\"http://data.set.prod\">data.set.prod</a></li>\n</ul>",
        "id": 315583012,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670936085
    },
    {
        "content": "<p>Ah, I was just starting on <a href=\"http://data.set.prod\">data.set.prod</a>, <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span></p>",
        "id": 315583130,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670936120
    },
    {
        "content": "<p>No problem, I can switch</p>",
        "id": 315583205,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670936146
    },
    {
        "content": "<p>I'll do algebra.ring.opposite then</p>",
        "id": 315583491,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670936229
    },
    {
        "content": "<p><code>algebra.ring.opposite</code> is currently blocked by an issue with the <code>simps</code> attribute so I'll start on <code>data.set.sigma</code></p>",
        "id": 315610678,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670943569
    },
    {
        "content": "<p><code>data.set.basic </code> is waiting for an answer to <a href=\"#narrow/stream/287929-mathlib4/topic/referring.20to.20namespace.20in.20theorem.20name\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/referring.20to.20namespace.20in.20theorem.20name</a> so I'll start on <code>logic.embedding.set</code></p>",
        "id": 315630756,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670948866
    },
    {
        "content": "<p>I'll do <code>data.set.bool_indicator</code> now.</p>",
        "id": 315641480,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670951747
    },
    {
        "content": "<p>The first Orsay mathlib4 hackaton is now over. We ported 10 files!</p>",
        "id": 315649038,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670953806
    },
    {
        "content": "<p>We wait for all the people in the Paris area!</p>",
        "id": 315649275,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670953875
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>120/134</td>\n<td>(89.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47452/52727</td>\n<td>(90.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/data.rat.order\">Longest unported chain</a>:</td>\n<td>4/27</td>\n<td>(85.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315652050,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670954681
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>118/132</td>\n<td>(89.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>45687/52545</td>\n<td>(86.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>5/28</td>\n<td>(82.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315652784,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670954894
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>131/156</td>\n<td>(84.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48889/61347</td>\n<td>(79.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/data.nat.prime\">Longest unported chain</a>:</td>\n<td>7/30</td>\n<td>(76.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315653498,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670955109
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>147/233</td>\n<td>(63.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>52022/91744</td>\n<td>(56.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/data.real.basic\">Longest unported chain</a>:</td>\n<td>12/35</td>\n<td>(65.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315654317,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670955323
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17677/31695</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315655002,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670955532
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>131/183</td>\n<td>(71.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47859/82818</td>\n<td>(57.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>18/41</td>\n<td>(56.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315655712,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670955742
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>169/525</td>\n<td>(32.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>54668/224783</td>\n<td>(24.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>51/74</td>\n<td>(31.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315656414,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670955967
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-14/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>219/2843</td>\n<td>(7.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>61138/971375</td>\n<td>(6.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-14/all\">Longest unported chain</a>:</td>\n<td>113/136</td>\n<td>(16.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315664805,
        "sender_full_name": "port-progress bot",
        "timestamp": 1670958545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/315649038\">said</a>:</p>\n<blockquote>\n<p>The first Orsay mathlib4 hackaton is now over. We ported 10 files!</p>\n</blockquote>\n<p>I saw your message about starting the hackaton, got motivated and installed lean 4 for the first time. I verified my installation by porting my first (very small) file. Overall, the installation was smooth and mathport did all the porting work. The porting wiki is great <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 315670412,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1670960254
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> (and others) please remember to include the mathlib3 sha that you are using as the basis for your port in the PR description. This sha is available (amongst other places) in the README of <code>mathport</code>.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/988\">https://github.com/leanprover-community/mathlib4/pull/988</a> is currently missing a sha</p>",
        "id": 315686623,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670965762
    },
    {
        "content": "<p>Further, please remember to include your PR number, in the format mathlib4#nnn, in the <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> wiki page.</p>\n<p>If the file is not already there (e.g. for <a href=\"https://github.com/leanprover-community/mathlib4/pull/988\">https://github.com/leanprover-community/mathlib4/pull/988</a>, which ports data.set.bool_indicator), please add the line yourself. This will happen for newly introduced files in mathlib.</p>",
        "id": 315686890,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670965845
    },
    {
        "content": "<p>Sent 8 PRs to bors, delegated another 4, and sent a few back to authors!</p>",
        "id": 315690102,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670967130
    },
    {
        "content": "<p><code>Data.Int.Cast.Lemmas</code> is up as a PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/995\">mathlib4#995</a>. I've done most of the cleanup, but there are few broken proofs that need attention. This is on the critical path to <code>Data.Rat.Order</code>.</p>",
        "id": 315717152,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670979289
    },
    {
        "content": "<p>I've started on <code>Data.Rat.Defs</code> as <a href=\"https://github.com/leanprover-community/mathlib4/pull/998\">mathlib4#998</a>. I've done the first pass, but many many proofs are still broken. I think this is probably the highest priority file for now, and could use multiple eyes. Just start somewhere and fix errors. :-)</p>",
        "id": 315721139,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670982015
    },
    {
        "content": "<p>One of you lucky ducks is going to get <a href=\"https://github.com/leanprover-community/mathlib4/pull/1000\">mathlib4#1000</a> soon</p>",
        "id": 315721784,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670982455
    },
    {
        "content": "<p>Today's advice about what to work on:</p>\n<ul>\n<li>We are super close to <code>Data.Rat.Order</code>, but <a href=\"https://github.com/leanprover-community/mathlib4/pull/998\">mathlib4#998</a> for <code>Data.Rat.Defs</code> still needs a lot of work. There are many independent problems, so I would encourage anyone with some time today to have a look at this and push any fixes you can.</li>\n<li>After that, I think <code>Data.List.Basic</code> is an important target, which Chris has started in <a href=\"https://github.com/leanprover-community/mathlib4/pull/996\">mathlib4#996</a>. Again, it has many problems, and could do with many helpers!</li>\n<li>\n<p>Otherwise, please look at the port-progress-bot graphs for your favourite file, and either:</p>\n<ol>\n<li>ideally, go help out with an open PR (shaded dark blue) </li>\n<li>otherwise, open a new PR (light blue files)</li>\n</ol>\n</li>\n</ul>",
        "id": 315807818,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671021341
    },
    {
        "content": "<p>Taking a look at <code>Data.Rat.Defs</code> for the next 15 mins or so</p>",
        "id": 315830598,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671027817
    },
    {
        "content": "<p>note that <code>Data.Rat.Defs</code> is expected to be harder than the usual port since <code>Rat</code> has been redefined</p>",
        "id": 315832447,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671028318
    },
    {
        "content": "<p>or actually maybe <code>Data.Rat.Defs</code> is easy, just #aligns and <code>Data.Rat.Basic</code> is the hard one</p>",
        "id": 315832629,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671028371
    },
    {
        "content": "<p>Is <code>Rat</code> in Std now?</p>",
        "id": 315833069,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671028501
    },
    {
        "content": "<p>yes</p>",
        "id": 315836424,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671029346
    },
    {
        "content": "<p>Oh, is that why <code>injection</code> fails?</p>",
        "id": 315839545,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671030179
    },
    {
        "content": "<p>data.list.basic is <a href=\"https://github.com/leanprover-community/mathlib4/pull/966\">mathlib4#966</a></p>",
        "id": 315870860,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671038251
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/134</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48762/52747</td>\n<td>(92.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/data.rat.order\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315880906,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671041078
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>119/131</td>\n<td>(90.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>46260/52260</td>\n<td>(88.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>4/27</td>\n<td>(85.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315881692,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671041293
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>137/156</td>\n<td>(87.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>51065/61376</td>\n<td>(83.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/data.nat.prime\">Longest unported chain</a>:</td>\n<td>6/29</td>\n<td>(79.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315884682,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671041509
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>158/233</td>\n<td>(67.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>55024/91803</td>\n<td>(59.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/data.real.basic\">Longest unported chain</a>:</td>\n<td>11/34</td>\n<td>(67.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315885393,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671041720
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17697/31715</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315886083,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671041927
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>135/183</td>\n<td>(73.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>49488/82863</td>\n<td>(59.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315886813,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671042137
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>191/525</td>\n<td>(36.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>58414/224862</td>\n<td>(26.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315887466,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671042362
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-15/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>253/2843</td>\n<td>(8.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>66687/971624</td>\n<td>(6.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-15/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 315895871,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671044856
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/134</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48823/52808</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.rat.order\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316105534,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671127430
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>120/131</td>\n<td>(91.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>47665/52309</td>\n<td>(91.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>3/27</td>\n<td>(88.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316106347,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671127646
    },
    {
        "content": "<p>These graphs are getting ridiculously small now</p>",
        "id": 316106607,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671127709
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>138/156</td>\n<td>(88.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>52506/61461</td>\n<td>(85.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.prime\">Longest unported chain</a>:</td>\n<td>5/29</td>\n<td>(82.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316107199,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671127862
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>165/233</td>\n<td>(70.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>58572/91940</td>\n<td>(63.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.real.basic\">Longest unported chain</a>:</td>\n<td>10/34</td>\n<td>(70.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316107963,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671128076
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17722/31740</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316108628,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671128285
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>137/183</td>\n<td>(74.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>52172/82949</td>\n<td>(62.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316109307,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671128495
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>200/525</td>\n<td>(38.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>62272/225123</td>\n<td>(27.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316110087,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671128720
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>266/2844</td>\n<td>(9.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>71430/972360</td>\n<td>(7.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316119153,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671131448
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316106607\">said</a>:</p>\n<blockquote>\n<p>These graphs are getting ridiculously small now</p>\n</blockquote>\n<p>When <code>data.rat.order</code> and <code>data.nat.choose.basic</code> are ported, we need more targets to track!  Maybe <code>linear_algebra.basic</code>?</p>",
        "id": 316130785,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671135148
    },
    {
        "content": "<p>What is the command to generate say <code>data.real.basic.pdf</code>? Using <code>leanproject</code> I always get huge graphs (and with less colors).</p>",
        "id": 316138587,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671137742
    },
    {
        "content": "<p>The bot is running:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>leanproject import-graph --to $target --exclude-tactics --reduce --port-status --exclude-ported --show-unused --mathlib4 $tmp_dir/mathlib4 $graph_dir/$today/$target.pdf\n</code></pre></div>",
        "id": 316142167,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671138912
    },
    {
        "content": "<p>I get</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error: no such option: --exclude-ported\n</code></pre></div>\n<p>I have <code>leanproject</code> version 1.3.1, that I think is the last one, so this is maybe only in the github repo.</p>",
        "id": 316144811,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671139827
    },
    {
        "content": "<p>This option removes everything that has been ported, and whose children have been ported. It is what is making the graphs for targets we're almost done with small.</p>",
        "id": 316145799,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671140173
    },
    {
        "content": "<p>You can</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">git</span><span class=\"bp\">@</span><span class=\"n\">github.com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">tools.git</span>\n<span class=\"n\">cd</span> <span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">tools</span>\n<span class=\"n\">pip3</span> <span class=\"n\">install</span> <span class=\"bp\">.</span>\n</code></pre></div>\n<p>to get master. (Perhaps <code>pip install .</code>, depending on your system.)</p>",
        "id": 316145916,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671140222
    },
    {
        "content": "<p>Should I release a new version?</p>",
        "id": 316148621,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671141319
    },
    {
        "content": "<p>I think it's a good idea. There is discussion somewhere about not forcing people to manually update mathlib-tools (I mean, even more manually than via <code>pip</code>), and the graph is now way better than the file, especially if one has a target in mind.</p>",
        "id": 316149624,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671141682
    },
    {
        "content": "<p>Please enjoy version 1.3.2</p>",
        "id": 316150630,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671142043
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/134</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48823/52808</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.rat.order\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316175755,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671155556
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>121/131</td>\n<td>(92.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48244/52309</td>\n<td>(92.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316175986,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671155779
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>140/156</td>\n<td>(89.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>54274/61461</td>\n<td>(88.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.nat.prime\">Longest unported chain</a>:</td>\n<td>4/29</td>\n<td>(86.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316176253,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671156006
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>169/233</td>\n<td>(72.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>61013/91940</td>\n<td>(66.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.real.basic\">Longest unported chain</a>:</td>\n<td>8/34</td>\n<td>(76.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316176561,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671156235
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>141/183</td>\n<td>(77.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>54613/82949</td>\n<td>(65.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316176863,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671156463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316150630\">said</a>:</p>\n<blockquote>\n<p>Please enjoy version 1.3.2</p>\n</blockquote>\n<p>I still get an error for <code>--exclude-ported</code></p>",
        "id": 316176882,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671156481
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>153/215</td>\n<td>(71.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>57393/94179</td>\n<td>(60.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316177126,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671156691
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17722/31740</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316177405,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671156916
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>203/525</td>\n<td>(38.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64564/225113</td>\n<td>(28.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316177713,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671157157
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span>, can you show us your command line?</p>",
        "id": 316178016,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671157414
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ leanproject import-graph --to data.nat.prime --exclude-tactics --reduce --port-status --exclude-ported --show-unused --mathlib4 ~/dev/mathlib4 data.nat.prime.pdf\nUsage: leanproject import-graph <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>OUTPUT<span class=\"o\">]</span>\nTry <span class=\"s1\">'leanproject import-graph -h'</span> <span class=\"k\">for</span> help.\n\nError: No such option: --exclude-ported Did you mean --exclude-tactics?\n</code></pre></div>",
        "id": 316178048,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671157441
    },
    {
        "content": "<p>Hmm, I freshly reinstall mathlibtools and it is working for me.</p>",
        "id": 316178264,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671157607
    },
    {
        "content": "<p>What does <code>leanproject --version</code> give you?</p>",
        "id": 316178269,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671157613
    },
    {
        "content": "<p>It gives <code>1.3.0</code>.  This seems to be <code>pip</code> vs <code>pipx</code> problem at my end</p>",
        "id": 316178401,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671157739
    },
    {
        "content": "<p>Thanks. Upgrading with pip seems to have fixed it (seems because I ran out of RAM and should <code>get-cache</code> etc first).</p>",
        "id": 316179676,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671158742
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-16/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>270/2844</td>\n<td>(9.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>73717/972514</td>\n<td>(7.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-16/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316181785,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671160631
    },
    {
        "content": "<p>Is there a reason why <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=coe_nat_zsmul#doc\">docs4#coe_nat_zsmul</a> is not tagged <code>simp</code>?</p>",
        "id": 316220732,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671183182
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/coe_nat_zsmul\">docs#coe_nat_zsmul</a></p>",
        "id": 316221447,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671183431
    },
    {
        "content": "<p>Interesting! Because of the way attributes have changed I think it could in theory be the case that the lemma is tagged <code>@[simp]</code> later on and the docs don't notice. It's unfortunately really hard to see the attributes on a declaration in lean 4, for some reason. But I would guess that it's more likely that either it was forgotten or it didn't work (eg <code>simp</code> could already prove it). Did you try adding it and linting, or proving it with <code>simp</code>?</p>",
        "id": 316222322,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671183745
    },
    {
        "content": "<p>The linter does not complain, at least the one at the end of the file. I don't know it it's tagged <code>simp</code> somewhere, but in <code>Algebra.GroupPower.Lemmas</code> it's not (and a proof broke because of this).</p>",
        "id": 316223090,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671184050
    },
    {
        "content": "<p>Also, what am I supposed to do with lemmas like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zpow_bit0\">docs#zpow_bit0</a>? Should I just remove them or they should be ported anyway? There is a warning saying thy're deprecated. (This has surely been already discussed, sorry)</p>",
        "id": 316224796,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671184645
    },
    {
        "content": "<p>My instinct is just to not port them (and make a porting note saying you skipped them). I don't really see any reason for the functions <code>bit0</code> and <code>bit1</code> to exist any more. Re the simp, just add <code>@[simp]</code>, I've got no idea why it isn't there.</p>",
        "id": 316225030,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671184720
    },
    {
        "content": "<p>That's also my instict, but I see that a bunch of them are there, like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=bit0_add#doc\">docs4#bit0_add</a> (but no <code>bit0_neg</code> <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> ).</p>",
        "id": 316225311,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671184807
    },
    {
        "content": "<p>I personally would like to see <code>bit0</code> and <code>bit1</code> removed, they are just there for historical reasons and they confuse new users, so I don't see any reason to port them.</p>",
        "id": 316225602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671184921
    },
    {
        "content": "<p>It's a lot easier to throw them all out later than figure out which ones were ported and which ones weren't and restoring them manually if they turn out useful</p>",
        "id": 316225907,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671185018
    },
    {
        "content": "<p>Please keep them!</p>",
        "id": 316226279,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671185147
    },
    {
        "content": "<p>We've already had at least one round of adding back in omitted <code>bit0</code>/<code>bit1</code> lemmas that turned out needed by other lemmas.</p>",
        "id": 316226393,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671185186
    },
    {
        "content": "<p>OK :)</p>",
        "id": 316226745,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671185316
    },
    {
        "content": "<p>What happens to <code>data.nat.bits</code>? It is one of the two topmost dependencies for <code>order.filter.basic</code></p>",
        "id": 316226876,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671185365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316226876\">said</a>:</p>\n<blockquote>\n<p>What happens to <code>data.nat.bits</code>? It is one of the two topmost dependencies for <code>order.filter.basic</code></p>\n</blockquote>\n<p>It is also heading on one of the paths of <code>data.nat.prime</code>(which is getting close)</p>",
        "id": 316233657,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671187346
    },
    {
        "content": "<p>I think we just port it?</p>",
        "id": 316234547,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671187660
    },
    {
        "content": "<p>I believe <span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span> wanted to port this at some point.</p>",
        "id": 316239167,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671189175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316239167\">said</a>:</p>\n<blockquote>\n<p>I believe <span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> wanted to port this at some point.</p>\n</blockquote>\n<p>Yes. However I was told that due to changes in the meaning of <code>0</code> and <code>1</code> and a bunch of other reasons, this was not to be ported.</p>",
        "id": 316239333,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671189237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316239167\">said</a>:</p>\n<blockquote>\n<p>I believe <span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> wanted to port this at some point.</p>\n</blockquote>\n<p>Relevant threads:</p>\n<ol>\n<li><a href=\"#narrow/stream/287929-mathlib4/topic/data.2Enat.2Ebits/near/314112248\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/data.2Enat.2Ebits/near/314112248</a></li>\n<li><a href=\"#narrow/stream/287929-mathlib4/topic/status.20of.20data.2Enat.2Ebits/near/313758255\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/status.20of.20data.2Enat.2Ebits/near/313758255</a></li>\n</ol>",
        "id": 316239779,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671189368
    },
    {
        "content": "<p>Yes, I saw those. The conclusion was eventually port to <code>Std</code>. But it seems that porting now to <code>Mathlib</code> will be useful.</p>",
        "id": 316239933,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671189428
    },
    {
        "content": "<p>okay, in that case I will get onto it this Saturday.</p>",
        "id": 316242358,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671190230
    },
    {
        "content": "<p>I think the appropriate way to deal with <code>bit0</code> and <code>bit1</code> lemmas is to port them, but <em>also mark them as deprecated</em>.</p>",
        "id": 316269183,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671198106
    },
    {
        "content": "<p>They're already marked deprecated I think.</p>",
        "id": 316269579,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671198238
    },
    {
        "content": "<p>Quick question: On what branch should i open the PR on mathlib4?</p>",
        "id": 316270597,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671198486
    },
    {
        "content": "<p>You can chose the name you want.</p>",
        "id": 316270791,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671198545
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span> remember to update the wiki from 'No' to 'No WIP ...' if you are working on this.</p>",
        "id": 316270997,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671198597
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316270791\">said</a>:</p>\n<blockquote>\n<p>You can chose the name you want.</p>\n</blockquote>\n<p>Github does not let me create a new branch when creating my pull request. I need to choose one of the existing branches. Screenshot below<br>\n<a href=\"/user_uploads/3121/NQM_4DlHz2VWEhqXfVS2IC-K/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/NQM_4DlHz2VWEhqXfVS2IC-K/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/NQM_4DlHz2VWEhqXfVS2IC-K/image.png\"></a></div>",
        "id": 316271430,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671198689
    },
    {
        "content": "<p>You should create the branch from the mathlib4 repository, not from your clone of it.</p>",
        "id": 316271646,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671198735
    },
    {
        "content": "<p>Or push your local work (on a branch) to the ml4 repo</p>",
        "id": 316271734,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671198754
    },
    {
        "content": "<p>Got it. PR link (<a href=\"https://github.com/leanprover-community/mathlib4/pull/1075\">https://github.com/leanprover-community/mathlib4/pull/1075</a>)</p>",
        "id": 316272926,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671199053
    },
    {
        "content": "<p>You should be pushing directly to the branch on mathlib4, and making a PR to master. For example, you can merge your PR into the mathlib4 branch and then make a PR to master from that.</p>",
        "id": 316274838,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671199555
    },
    {
        "content": "<p>Riccardo, I mean mark the <em>new</em> lemmas involving them as deprecated.</p>",
        "id": 316274843,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671199558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316274843\">said</a>:</p>\n<blockquote>\n<p>Riccardo, I mean mark the <em>new</em> lemmas involving them as deprecated.</p>\n</blockquote>\n<p>Sometimes useful lemmas about parity are proved indirectly using bits. We will want to retain these.</p>",
        "id": 316275079,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671199614
    },
    {
        "content": "<p>And the proofs of the new lemmas are fine. Just with terminology that should be changed.</p>",
        "id": 316275212,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671199651
    },
    {
        "content": "<p>For example, <code>theorem sq_pos_iff (a : R) : 0 &lt; a ^ 2 ↔ a ≠ 0</code> is something that should remain. The present proof goes via <code>bit0</code>.</p>",
        "id": 316275502,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671199734
    },
    {
        "content": "<p>Right, what I mean is that if <code>bit0</code> or <code>bit1</code> appear in the statements, then those lemmas should be deprecated. Appearing in the proofs only is fine.</p>",
        "id": 316275723,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671199797
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316274838\">said</a>:</p>\n<blockquote>\n<p>You should be pushing directly to the branch on mathlib4, and making a PR to master. For example, you can merge your PR into the mathlib4 branch and then make a PR to master from that.</p>\n</blockquote>\n<p>Ah okay, for now I have followed the safe option of not directly sending a PR to <code>master</code>. I push to my fork and then send a pull request from github. The PR is on a branch <code>data_nat_bits</code> following a pattern I observed on the mathlib4 repo</p>",
        "id": 316276153,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671199915
    },
    {
        "content": "<p>Two PRs will work fine too, but you should merge the first (i.e., the one onto your branch in mathlib4) yourself when you are ready and ask for a review of the second (onto master) when you are ready for that.</p>",
        "id": 316279418,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671200836
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/134</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48823/52808</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/data.rat.order\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316328454,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671213855
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>123/131</td>\n<td>(93.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48830/52309</td>\n<td>(93.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>1/27</td>\n<td>(96.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316329278,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671214093
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>142/156</td>\n<td>(91.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>54860/61461</td>\n<td>(89.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/data.nat.prime\">Longest unported chain</a>:</td>\n<td>3/29</td>\n<td>(89.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316330100,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671214334
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>174/233</td>\n<td>(74.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>61957/91940</td>\n<td>(67.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/data.real.basic\">Longest unported chain</a>:</td>\n<td>8/34</td>\n<td>(76.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316330947,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671214570
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>143/183</td>\n<td>(78.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>55199/82949</td>\n<td>(66.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316331757,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671214806
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>156/215</td>\n<td>(72.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>58238/94179</td>\n<td>(61.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316332595,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671215041
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>47/90</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17722/31740</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316333320,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671215271
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>212/525</td>\n<td>(40.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>66543/225113</td>\n<td>(29.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316334118,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671215520
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-17/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>282/2844</td>\n<td>(9.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76135/972603</td>\n<td>(7.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-17/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316343471,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671218572
    },
    {
        "content": "<p>Should grey files be ported? For example, if you see a grey file kind of high up in the graph with all its dependencies ported and not at the top of a long grey chain, should you just try to port it instead of waiting for/coming up with a refactor?</p>",
        "id": 316359898,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671224790
    },
    {
        "content": "<p>I would say that it depends on the utility of the refactor. So, perhaps, but not necessarily.</p>",
        "id": 316360014,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671224843
    },
    {
        "content": "<p>Hmm. Is there a way for me as a person unfamiliar with the lay of the land of mathlib dependencies to judge that? (Should I ask somewhere on a per-file basis?)</p>",
        "id": 316360470,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671225032
    },
    {
        "content": "<p>If not I'll just stick to attacking cyan bubbles :)</p>",
        "id": 316360481,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671225037
    },
    {
        "content": "<p>If you have a refactor in mind for a series of grey bubbles, I would suggest it here and see what people think.</p>",
        "id": 316360884,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671225208
    },
    {
        "content": "<p>If I don't have one in mind, but think that I can port a grey bubble without too much trouble, should I go for it?</p>",
        "id": 316361293,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671225356
    },
    {
        "content": "<p>Yes, I would. (Unless grey means that not all dependencies have been satisfied; does cyan override grey?)</p>",
        "id": 316362691,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1671225826
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316270997\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> remember to update the wiki from 'No' to 'No WIP ...' if you are working on this.</p>\n</blockquote>\n<p>Actually, I think people probably shouldn't be doing this. Just open a preliminary PR asap. We're soon not going to be using the <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> wiki at all, and it causes endless problems that people edit it in new and exciting ways that the tool can't understand. :-) For now I'd prefer the transitions to simply be:</p>\n<p><code>No</code>---&gt; <code>No mathlib4#nnn abcdef1234</code> ---&gt; <code>Yes mathlib4#nnn abcdef1234</code>.</p>",
        "id": 316376362,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671231824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316361293\">said</a>:</p>\n<blockquote>\n<p>If I don't have one in mind, but think that I can port a grey bubble without too much trouble, should I go for it?</p>\n</blockquote>\n<p>Yes, unless you are a mathlib3 expert who likes to refactor, you should just ignore the gray shading and port these files as you would any other.</p>",
        "id": 316376573,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671231911
    },
    {
        "content": "<p>If the refactors are too close to the porting wave, then they might cause more delays. In the end we have to port all files, so we don't really gain anything by refactoring (for the port at least). If the split/refactor is good regardless of the port, then it can be done before the porting wave hits it or afterwards.</p>",
        "id": 316386215,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671237905
    },
    {
        "content": "<p>Can we have <code>order.filter.basic</code> as a new port progress target when the natural numbers targets are reached?</p>",
        "id": 316386413,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671238052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316386215\">said</a>:</p>\n<blockquote>\n<p>If the refactors are too close to the porting wave, then they might cause more delays. In the end we have to port all files, so we don't really gain anything by refactoring (for the port at least). If the split/refactor is good regardless of the port, then it can be done before the porting wave hits it or afterwards.</p>\n</blockquote>\n<p>I am working on <code>data.nat.bits</code> and some of its dependencies. I don't expect to be finished until tomorrow night. I apologise if I am holding things up.</p>",
        "id": 316389172,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671240197
    },
    {
        "content": "<p>Just a heads up to everyone about current top priorities for the port.</p>\n<ol>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/998\"><code>Data.Rat.Defs</code></a>: <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is working on <code>add_def'</code>. Anyone could have a look at <code>mul_def</code> and <code>inv_def</code>, and either fix the proofs or ask Mario to do them too.</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/966\"><code>Data.List.Basic</code></a>: this file is huge, and broken all over, and is the biggest blocker to important progress. Pick a random section and hack away, please. This one will take a lot of work.</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/1053\"><code>Order.CompleteLattice</code></a> is also blocking lots of important ports, however this one is nearly done: if someone could lint, and double check names, we should be close to merging this one. </li>\n<li>We have a lot on the <a href=\"https://bit.ly/3cKk3ld\">#queue4</a>, which I'll try to get to tonight, but if other maintainers could try to clear this a bit that would be great.</li>\n</ol>",
        "id": 316415212,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671264127
    },
    {
        "content": "<p>I do not like this approach of \"fix data.list.basic\". I find it very depressing to work on something and then to discover that someone else did it too -- I value my time and don't like seeing it wasted, and it's happened twice before to me. What is a better workflow? This is all moot today because I'm at a family do all day but in general I'm interested in better ways to manage situations like this because term is over now and I really want to help. Can we perhaps have a dedicated thread for every \"active\" file and people working on it should post to the thread saying things like \"ok I've just pulled and I'm looking at lines 1234-2000 for the next hour\"?</p>",
        "id": 316420159,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671267609
    },
    {
        "content": "<p>The <a href=\"https://bit.ly/3cKk3ld\">#queue4</a> job is of course certainly something I could do; my comments above don't apply to this important task</p>",
        "id": 316420312,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671267691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, okay, lets use <a href=\"#narrow/stream/287929-mathlib4/topic/Data.2EList.2EBasic\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Data.2EList.2EBasic</a>.</p>",
        "id": 316422158,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671268669
    },
    {
        "content": "<p>Another approach to this problem is to commit really often (like every error you fix). We squash merge, so there's no downside to having a complicated git history. Whoever commits more frequently wins. :-)</p>",
        "id": 316422522,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671268866
    },
    {
        "content": "<p>Then you also need to pull the branch every time you are about to fix an error</p>",
        "id": 316424474,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671270029
    },
    {
        "content": "<p>Or just notice that someone pushed after fixing at most one error (because you get notified when you try to push).</p>",
        "id": 316425337,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671270499
    },
    {
        "content": "<p>Then it would be nice if people learn to type <code>git pull --rebase</code>.</p>",
        "id": 316427652,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671271568
    },
    {
        "content": "<p>So that the history isn't needlessly awful.</p>",
        "id": 316427700,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671271593
    },
    {
        "content": "<p>I have to admit I've never understood why people care about histories when we are just squashing the PR immediately afterwards.</p>",
        "id": 316428597,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671271980
    },
    {
        "content": "<p>Rewriting history when multiple people are working is just making life miserable, no?</p>",
        "id": 316428711,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272033
    },
    {
        "content": "<p>The only downside I've ever felt was that it takes up space on the PR page when there are lots of commits.</p>",
        "id": 316428839,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272066
    },
    {
        "content": "<p><code>git pull --rebase</code> only rewrites local history.</p>",
        "id": 316428877,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671272088
    },
    {
        "content": "<p>So it doesn't make the life of other people miserable</p>",
        "id": 316428891,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671272098
    },
    {
        "content": "<p>But the whole point of my suggestion was that you push your branch after fixing each individual lemma. So there is never any \"local history\".</p>",
        "id": 316428955,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272134
    },
    {
        "content": "<p>There is one commit of local history.</p>",
        "id": 316429034,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671272151
    },
    {
        "content": "<p>And with <code>git pull --rebase</code> you make the commit appear at the end of the current global history.</p>",
        "id": 316429181,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671272183
    },
    {
        "content": "<p>And what does the <code>--rebase</code> do? Oh, you mean it avoids having a little diamond in the history.</p>",
        "id": 316429196,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272189
    },
    {
        "content": "<p>I'm still unsure how that could be worth having to type <code> --rebase</code>... :-)</p>",
        "id": 316429247,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272217
    },
    {
        "content": "<p>Well, at least with my config, the alternative is that I have to agree to a merge commit.</p>",
        "id": 316429285,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671272237
    },
    {
        "content": "<p>Ah, sure, I guess that is two extra keystrokes.</p>",
        "id": 316429319,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272253
    },
    {
        "content": "<p>(for me, an editor pops up, and I hit cmd-w to make it go away again)</p>",
        "id": 316429450,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272306
    },
    {
        "content": "<p>I have <code>mul_def</code> in the <code>Data.Rat.Defs</code> down to the following gory goal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">⊢</span> <span class=\"n\">Int.div</span> <span class=\"n\">n₁</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Nat.gcd</span> <span class=\"o\">(</span><span class=\"n\">Int.natAbs</span> <span class=\"n\">n₁</span><span class=\"o\">)</span> <span class=\"n\">d₂</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Int.div</span> <span class=\"n\">n₂</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Nat.gcd</span> <span class=\"n\">d₁</span> <span class=\"o\">(</span><span class=\"n\">Int.natAbs</span> <span class=\"n\">n₂</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">d₁</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">d₂</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n  <span class=\"n\">n₁</span> <span class=\"bp\">*</span> <span class=\"n\">n₂</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">d₂</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Nat.gcd</span> <span class=\"o\">(</span><span class=\"n\">Int.natAbs</span> <span class=\"n\">n₁</span><span class=\"o\">)</span> <span class=\"n\">d₂</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">d₁</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">Nat.gcd</span> <span class=\"n\">d₁</span> <span class=\"o\">(</span><span class=\"n\">Int.natAbs</span> <span class=\"n\">n₂</span><span class=\"o\">))))</span>\n</code></pre></div>",
        "id": 316429537,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272347
    },
    {
        "content": "<p>It is \"just\" commutativity and associativity of multiplication and exact division in <code>ℤ</code>.</p>",
        "id": 316429565,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272366
    },
    {
        "content": "<p>You can teach git that <code>git p</code> means <code>git pull --rebase</code>.</p>",
        "id": 316429934,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671272543
    },
    {
        "content": "<p>Okay, I'll try :-)</p>",
        "id": 316430110,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671272652
    },
    {
        "content": "<p>There's also</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">config</span> <span class=\"n\">pull.rebase</span> <span class=\"n\">true</span>\n</code></pre></div>",
        "id": 316430849,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671273033
    },
    {
        "content": "<p>Add <code>--global</code> to affect all repos</p>",
        "id": 316430894,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671273063
    },
    {
        "content": "<p>Okay, I've finished <code>mul_def</code> and <code>inv_def</code> in <code>Data.Rat.Defs</code>.</p>",
        "id": 316432716,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671274022
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/134</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48823/52808</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/data.rat.order\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316493620,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671300306
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/data.nat.choose.basic.pdf\">data.nat.choose.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/131</td>\n<td>(94.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>49191/52309</td>\n<td>(94.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/data.nat.choose.basic\">Longest unported chain</a>:</td>\n<td>1/27</td>\n<td>(96.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316493916,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671300482
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>142/156</td>\n<td>(91.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>54860/61461</td>\n<td>(89.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/data.nat.prime\">Longest unported chain</a>:</td>\n<td>3/29</td>\n<td>(89.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316494343,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671300716
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>174/233</td>\n<td>(74.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>61957/91940</td>\n<td>(67.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/data.real.basic\">Longest unported chain</a>:</td>\n<td>8/34</td>\n<td>(76.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316494803,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671300951
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>143/183</td>\n<td>(78.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>55199/82949</td>\n<td>(66.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316495192,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671301184
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>157/215</td>\n<td>(73.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>58599/94179</td>\n<td>(62.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316495629,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671301419
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>48/92</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17705/31944</td>\n<td>(55.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316496149,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671301649
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>213/525</td>\n<td>(40.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>66904/225113</td>\n<td>(29.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316496697,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671301898
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>286/2845</td>\n<td>(10.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76956/972853</td>\n<td>(7.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316501409,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671304896
    },
    {
        "content": "<p>Looking at the distance to <code>data.complex.basic</code> from <code>data.real.basic</code>, is there a good reason that <code>data.real.sqrt</code> imports so much of topology?</p>",
        "id": 316509466,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671310401
    },
    {
        "content": "<p>it's defined in terms of exp most likely</p>",
        "id": 316509555,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671310469
    },
    {
        "content": "<p>oh, it looks like I made an abortive attempt to do it direct from <code>cau_seq</code> but others made it there in the meantime and defined it using abstract nonsense</p>",
        "id": 316509730,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671310610
    },
    {
        "content": "<p>see the comments around <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.sqrt/src\">src#real.sqrt</a></p>",
        "id": 316509824,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671310674
    },
    {
        "content": "<p>looks like it used to be in <code>data.real.basic</code> and it got moved in <a href=\"https://github.com/leanprover-community/mathlib/commit/461865b\">https://github.com/leanprover-community/mathlib/commit/461865b</a></p>",
        "id": 316510031,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671310808
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- `x ↦ x ^ n` as an order isomorphism of `ℝ≥0`. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">pow_order_iso</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span> <span class=\"bp\">≃</span><span class=\"n\">o</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"n\">strict_mono.order_iso_of_surjective</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">strict_mono_on_pow</span> <span class=\"n\">hn.bot_lt</span> <span class=\"o\">(</span><span class=\"n\">zero_le</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">zero_le</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">$</span>\n  <span class=\"o\">(</span><span class=\"n\">continuous_id.pow</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">surjective</span> <span class=\"o\">(</span><span class=\"n\">tendsto_pow_at_top</span> <span class=\"n\">hn</span><span class=\"o\">)</span> <span class=\"bp\">$</span>\n    <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">order_bot.at_bot_eq</span><span class=\"o\">,</span> <span class=\"n\">pos_iff_ne_zero</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>is in <code>topology.nnreal.instances</code> (so imports a lot of topology, and as you can see the proof uses continuity) and sqrt on <code>nnreal</code> is now defined to be the inverse of x \\mapsto x^2, and then sqrt on real is defined using this.</p>",
        "id": 316510130,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671310873
    },
    {
        "content": "<p>I'm inclined to revert 461865b just to take the dependencies out of <code>real.sqrt</code> and use the order_iso thing to prove continuity</p>",
        "id": 316510240,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671310933
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316501409\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-18/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>286/2845</td>\n<td>(10.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76956/972853</td>\n<td>(7.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-18/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>We reached the 10% files milestone! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 316514852,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671314335
    },
    {
        "content": "<p><code>data.nat.choose.basic</code> is already ported but it appears on all of these progress reports.</p>",
        "id": 316526700,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1671323719
    },
    {
        "content": "<p>I'll take <code>data.nat.choose.basic</code> off the list.</p>",
        "id": 316561621,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671356713
    },
    {
        "content": "<p>Why don't you add data.complex.basic? Not for any particular reason (so if there is a file which should be added for a good reason then add that instead). The reason I suggest it is that it was pointed out yesterday that this file unnecessarily imports a shedload of topology, so it will focus the mind.</p>",
        "id": 316563831,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671358204
    },
    {
        "content": "<p>but then the import tree looks horrible. it might be better to have files that have tractable import trees</p>",
        "id": 316565281,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671359120
    },
    {
        "content": "<p>I wondered whether instead it would inspire people to pull the topology out :-)</p>",
        "id": 316584579,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671368408
    },
    {
        "content": "<p>Or even better, work on topology!</p>",
        "id": 316584610,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671368419
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/134</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48823/52808</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/data.rat.order\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316620676,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671386655
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>142/156</td>\n<td>(91.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>54860/61461</td>\n<td>(89.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/data.nat.prime\">Longest unported chain</a>:</td>\n<td>3/29</td>\n<td>(89.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316621057,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671386889
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>176/233</td>\n<td>(75.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>63420/91940</td>\n<td>(69.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/data.real.basic\">Longest unported chain</a>:</td>\n<td>8/34</td>\n<td>(76.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316621445,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671387127
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>144/183</td>\n<td>(78.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>56564/82949</td>\n<td>(68.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316621842,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671387361
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>158/215</td>\n<td>(73.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59964/94179</td>\n<td>(63.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316622229,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671387598
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>177/279</td>\n<td>(63.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>62898/110912</td>\n<td>(56.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316622584,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671387833
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>48/92</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17705/31944</td>\n<td>(55.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316622902,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671388064
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>215/525</td>\n<td>(41.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68367/225126</td>\n<td>(30.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316623285,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671388314
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-19/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>288/2845</td>\n<td>(10.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>78419/973149</td>\n<td>(8.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-19/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316628706,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671391474
    },
    {
        "content": "<p>If anyone feels like doing it, it looks quite straightforward to remove the finiteness import from <code>order.filter.basic</code> (of course you need to move all the lemmas mentioning finiteness out to <code>order.filter.finite</code>, but there is no collateral damage).</p>",
        "id": 316636318,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671396556
    },
    {
        "content": "<p>FWIW, Patrick previously <a href=\"#narrow/stream/287929-mathlib4/topic/data.2Eset.2Efinite/near/310300191\">argued</a> against removing the finiteness import from <code>order.filter.basic</code>.</p>",
        "id": 316643992,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671402777
    },
    {
        "content": "<p>I also don't see the point of trying to make the path to <code>filter.basic</code> shorter. We'll need to port finiteness anyway and, as far as I can tell, having filters sooner won't give us anything since they are not needed for any tactic or urgent teaching. As far as I can tell, getting general purposes tactics and teaching are the only urgent targets.</p>",
        "id": 316653822,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671412047
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>124/134</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>48823/52808</td>\n<td>(92.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/data.rat.order\">Longest unported chain</a>:</td>\n<td>2/27</td>\n<td>(92.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316800735,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671473102
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>144/156</td>\n<td>(92.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>56055/61461</td>\n<td>(91.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/data.nat.prime\">Longest unported chain</a>:</td>\n<td>3/29</td>\n<td>(89.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316801346,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671473337
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/233</td>\n<td>(77.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>65503/91940</td>\n<td>(71.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/data.real.basic\">Longest unported chain</a>:</td>\n<td>8/34</td>\n<td>(76.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316802018,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671473576
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>144/183</td>\n<td>(78.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>56564/82976</td>\n<td>(68.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316802716,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671473812
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>160/215</td>\n<td>(74.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>61289/94221</td>\n<td>(65.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316803298,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671474049
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/279</td>\n<td>(64.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64561/110939</td>\n<td>(58.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316803995,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671474285
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>48/92</td>\n<td>(52.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>17705/31944</td>\n<td>(55.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>19/36</td>\n<td>(47.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316804701,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671474517
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>219/525</td>\n<td>(41.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70450/225203</td>\n<td>(31.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316805607,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671474767
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-20/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>295/2846</td>\n<td>(10.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81013/973772</td>\n<td>(8.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-20/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 316814012,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671477776
    },
    {
        "content": "<p><code>data.real.cau_seq</code> is now available for porting!  It should be a fun one.</p>",
        "id": 316859987,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671498442
    },
    {
        "content": "<p>If anyone is looking for suggestions about high priority work at this moment:</p>\n<ul>\n<li><code>Data.Rat.Order</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1116\">mathlib4#1116</a> appears to have just one more sorry, which I think is just a matter of basic logic.</li>\n<li><code>Data.Nat.Bits</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1095\">mathlib4#1095</a> needs polishing/review/merging</li>\n<li><code>Data.List.Basic</code> still needs a fair bit of work (I think?)</li>\n</ul>",
        "id": 316933553,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671537601
    },
    {
        "content": "<p>I'm going to work on Data.Rat.Order now</p>",
        "id": 316933689,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671537629
    },
    {
        "content": "<p>After those:</p>\n<ul>\n<li>helping out on any of the open PRs linked from <a href=\"https://tqft.net/mathlib4/latest/data.real.basic.pdf\">https://tqft.net/mathlib4/latest/data.real.basic.pdf</a></li>\n</ul>",
        "id": 316934018,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671537749
    },
    {
        "content": "<p><code>Data.Fin.Basic</code> is extremely long (~3000 loc) and has lots of errors still</p>",
        "id": 316938755,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671539342
    },
    {
        "content": "<p>I pushed some stuff to</p>\n<blockquote>\n<p>feat: port Algebra.Hom.Aut <a href=\"https://github.com/leanprover-community/mathlib/pull/1111\">#1111</a> </p>\n</blockquote>\n<p>cc <span class=\"user-mention\" data-user-id=\"329754\">@Antoine Labelle</span></p>",
        "id": 316945559,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671541503
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/data.rat.order.pdf\">data.rat.order</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>126/134</td>\n<td>(94.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>49464/52808</td>\n<td>(93.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/data.rat.order\">Longest unported chain</a>:</td>\n<td>1/27</td>\n<td>(96.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317007690,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671559460
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>145/156</td>\n<td>(92.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>57089/61461</td>\n<td>(92.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/data.nat.prime\">Longest unported chain</a>:</td>\n<td>3/29</td>\n<td>(89.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317008431,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671559695
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>186/233</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68256/91940</td>\n<td>(74.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/data.real.basic\">Longest unported chain</a>:</td>\n<td>8/34</td>\n<td>(76.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317009179,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671559931
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>146/183</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>57663/82976</td>\n<td>(69.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317009929,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671560164
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>162/215</td>\n<td>(75.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>62388/94221</td>\n<td>(66.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317010619,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671560399
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>186/279</td>\n<td>(66.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67314/110939</td>\n<td>(60.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317011313,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671560633
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>49/92</td>\n<td>(53.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18038/31944</td>\n<td>(56.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317012122,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671560863
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>229/525</td>\n<td>(43.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74858/225203</td>\n<td>(33.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317013029,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671561110
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>309/2846</td>\n<td>(10.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>86118/973772</td>\n<td>(8.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317022388,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671564100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317007690\">said</a>:</p>\n<blockquote>\n<p>| mathlib port progress   | <a href=\"https://tqft.net/mathlib4/2022-12-21/data.rat.order.pdf\">data.rat.order</a>    |                 |</p>\n</blockquote>\n<p>I just kicked this one on the queue. Not sure why it's listed as 126/134.</p>",
        "id": 317027091,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671565509
    },
    {
        "content": "<p>Is it to do with some random early files which are in <code>Std</code> and are not being ported, or something?</p>",
        "id": 317029228,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671566254
    },
    {
        "content": "<p>We hit our <del>first</del> second milestone, <code>data.rat.order</code> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 317033084,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671567734
    },
    {
        "content": "<p>What are the milestones? (It's not the first item on Scott's list of targets... he's already removed others before.)</p>",
        "id": 317033634,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671567923
    },
    {
        "content": "<p>oh, I guess I missed that / forgot</p>",
        "id": 317033804,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671567991
    },
    {
        "content": "<p>ah right, <code>algebra.order.field.defs</code> is a previous major milestone, so this is our second</p>",
        "id": 317033989,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671568070
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316526700\">said</a>:</p>\n<blockquote>\n<p><code>data.nat.choose.basic</code> is already ported but it appears on all of these progress reports.</p>\n</blockquote>\n<p>This one was ticked of recently as well.</p>",
        "id": 317034406,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671568227
    },
    {
        "content": "<p>Oh, I thought that one was still ahead</p>",
        "id": 317034452,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671568247
    },
    {
        "content": "<p>even better</p>",
        "id": 317034485,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671568260
    },
    {
        "content": "<p>Thanks to some great work by <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> and <span class=\"user-mention\" data-user-id=\"243791\">@David Renshaw</span>, <code>polyrith</code> and <code>tauto</code> are now available in mathlib4!</p>",
        "id": 317085449,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671600296
    },
    {
        "content": "<p><code>tauto</code> will see some further improvements after <a href=\"https://github.com/leanprover/lean4/pull/1963\">lean4#1963</a> is resolved, so please don't rush off to restore all the <code>-- Porting note: tauto</code>s quite yet. :-)</p>",
        "id": 317085453,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671600299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Could you please add <code>algebra.order.floor</code> as a target? It's a node with high in-degree.</p>",
        "id": 317132381,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671620782
    },
    {
        "content": "<blockquote>\n<p>and <code>tauto</code> are now available in mathlib4!</p>\n</blockquote>\n<p>And note that mathlib4's <code>tauto</code> does not try to apply symmetry lemmas, so it's not yet quite as powerful as mathlib3's <code>tauto</code>.  Once the <code>solve_by_elim</code> improvements in <a href=\"https://github.com/leanprover-community/mathlib4/pull/856\">https://github.com/leanprover-community/mathlib4/pull/856</a> land, the gap will be closed somewhat.</p>",
        "id": 317146586,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671625663
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-21/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>176/196</td>\n<td>(89.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>65501/75353</td>\n<td>(86.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-21/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317147296,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671625917
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>147/156</td>\n<td>(94.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>57609/61673</td>\n<td>(93.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/data.nat.prime\">Longest unported chain</a>:</td>\n<td>1/29</td>\n<td>(96.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317217367,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671645902
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>192/235</td>\n<td>(81.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>69575/92386</td>\n<td>(75.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/data.real.basic\">Longest unported chain</a>:</td>\n<td>8/34</td>\n<td>(76.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317218240,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671646136
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317217367\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>147/156</td>\n<td>(94.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>57609/61673</td>\n<td>(93.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/data.nat.prime\">Longest unported chain</a>:</td>\n<td>1/29</td>\n<td>(96.6% progress)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>Does this mean the only remaining blocker is nat.sqrt?</p>",
        "id": 317218987,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671646357
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>146/183</td>\n<td>(79.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>57909/83012</td>\n<td>(69.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317219023,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671646366
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>176/196</td>\n<td>(89.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>65747/75389</td>\n<td>(87.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317219798,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671646599
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>162/215</td>\n<td>(75.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>62634/94257</td>\n<td>(66.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317220505,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671646832
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>189/279</td>\n<td>(67.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68094/110975</td>\n<td>(61.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317221268,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671647063
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317222106,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671647293
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>237/576</td>\n<td>(41.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76807/243115</td>\n<td>(31.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317222961,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671647537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317222961\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>237/576</td>\n<td>(41.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76807/243115</td>\n<td>(31.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>A new challenge appeared!</p>",
        "id": 317223379,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671647679
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>235/525</td>\n<td>(44.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76140/225283</td>\n<td>(33.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317223685,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671647783
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317223685\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>235/525</td>\n<td>(44.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76140/225283</td>\n<td>(33.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>Two new challenges!</p>",
        "id": 317225125,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671648214
    },
    {
        "content": "<p>Can I put in a request (<a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/316130785\">again</a>) for <code>linear_algebra.basic</code> as another new challenge?</p>",
        "id": 317225536,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671648331
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>319/2847</td>\n<td>(11.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>88221/975125</td>\n<td>(9.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317233627,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671651002
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-22/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>213/386</td>\n<td>(55.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72918/153439</td>\n<td>(47.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-22/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317262164,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671662883
    },
    {
        "content": "<p>Just a heads up to everyone that the port-progress-bot will not be running between the 23rd and 30th.</p>",
        "id": 317262579,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671663082
    },
    {
        "content": "<p>is it going skiing?</p>",
        "id": 317262641,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671663109
    },
    {
        "content": "<p>If someone would like to adopt it, the necessary steps are:</p>\n<ul>\n<li>have someplace that can host the PDF files, that a script running in cron can push to without interaction.</li>\n<li>a server that can run a script from cron, on which <code>leanproject import-graph</code> works properly (some people report getting low-resolution images).</li>\n</ul>",
        "id": 317262737,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671663154
    },
    {
        "content": "<p>Maybe it's time for another doomed attempt at my end to actually get my computer to produce these graphs myself.</p>",
        "id": 317262764,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671663174
    },
    {
        "content": "<p>I can likely get this working on GitHub actions when I get some time</p>",
        "id": 317262846,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671663224
    },
    {
        "content": "<p>Ok so I've got closer than ever before:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>buzzard@brutus:~/lean-projects/mathlib/scripts$ leanproject --version\nleanproject, version <span class=\"m\">1</span>.3.2\nbuzzard@brutus:~/lean-projects/mathlib/scripts$ leanproject import-graph --to algebra.order.floor --exclude-tactics --reduce --port-status --exclude-ported --show-unused --mathlib4 ~/dev/mathlib4 algebra.order.floor.pdf\n</code></pre></div>\n<p>works but gives me the attached pdf <a href=\"/user_uploads/3121/IovWhDXf6ervZbHbcwow0Scv/algebra.order.floor.pdf\">algebra.order.floor.pdf</a> which  has far more nodes in it than <a href=\"https://tqft.net/mathlib4/2022-12-22/algebra.order.floor.pdf\">the pdf file posted a few hours ago</a>. What am I doing wrong?</p>",
        "id": 317264121,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671663823
    },
    {
        "content": "<p>Are you running on an ancient mathlib?</p>",
        "id": 317264428,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671663990
    },
    {
        "content": "<p><code>algebra.group.with_one</code> doesn't exist anymore, it was split a while back.</p>",
        "id": 317264464,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671664012
    },
    {
        "content": "<p>ha ha I'm on a branch (I was reviewing mathlib3 PRs earlier) and the branch was coming off a super-old master :-)</p>",
        "id": 317265906,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671664793
    },
    {
        "content": "<p>It works! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> Have a nice holiday port-progress-bot! And thanks Scott!</p>",
        "id": 317266453,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671665098
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317033084\">said</a>:</p>\n<blockquote>\n<p>We hit our <del>first</del> second milestone, <code>data.rat.order</code> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n</blockquote>\n<p>We had to pause on <code>positivity</code> and <code>norm_num</code>(still needs division) until <code>data.rat.order</code> ported <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> but they can be completed now! Would anyone <span class=\"user-group-mention\" data-user-group-id=\"323441\">@mathlib mentees</span>  be interested in finishing these? Here are placeholder issues: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1100\">1100</a>, <a href=\"https://github.com/leanprover-community/mathlib4/issues/1101\">1101</a>, and <a href=\"https://github.com/leanprover-community/mathlib4/issues/1102\">1102</a></p>",
        "id": 317273090,
        "sender_full_name": "Sarah Smith",
        "timestamp": 1671669701
    },
    {
        "content": "<p>when trying to run the port status script, I get this error a lot:</p>\n<p><a href=\"/user_uploads/3121/ffi7AeEWtCldkXQVVDXY53mc/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ffi7AeEWtCldkXQVVDXY53mc/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/ffi7AeEWtCldkXQVVDXY53mc/image.png\"></a></div><p>do people know why this is? <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  I think you wrote this</p>",
        "id": 317273182,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671669767
    },
    {
        "content": "<p>Your <code>git</code> is more than a year old</p>",
        "id": 317273313,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671669879
    },
    {
        "content": "<p>yikes</p>",
        "id": 317274550,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671670815
    },
    {
        "content": "<p>wait no, it's on 2.39.0</p>",
        "id": 317274679,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671670933
    },
    {
        "content": "<p>Oh hmm</p>",
        "id": 317274855,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671082
    },
    {
        "content": "<p>What OS?</p>",
        "id": 317274875,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671106
    },
    {
        "content": "<p>macos</p>",
        "id": 317274889,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671671122
    },
    {
        "content": "<p>Does it work for you on gitpod?</p>",
        "id": 317274909,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671145
    },
    {
        "content": "<p>how can I run the script on gitpod? i pretty much just edit lean on gitpod</p>",
        "id": 317274916,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671671162
    },
    {
        "content": "<p>and lean3 at that</p>",
        "id": 317274959,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671671169
    },
    {
        "content": "<p>You can open the vscode terminal in gitpod and then you have a command line</p>",
        "id": 317275020,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671255
    },
    {
        "content": "<p>And at least for the mathlib3 gitpod that will already have everything installed</p>",
        "id": 317275144,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671346
    },
    {
        "content": "<p>yeah okay it did work (although i did need to <code>pip3 install mathlibtools</code>)</p>",
        "id": 317275291,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671671463
    },
    {
        "content": "<p>tracking down a changelog for git itself is challenging as well :/</p>",
        "id": 317275378,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671671525
    },
    {
        "content": "<p>Is the git version there older or newer?</p>",
        "id": 317275417,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671577
    },
    {
        "content": "<p>(I'll split this zulip thread when I'm on my laptop tomorrow)</p>",
        "id": 317275433,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671594
    },
    {
        "content": "<p>2.37.2</p>",
        "id": 317275454,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671671623
    },
    {
        "content": "<p>Can you downgrade on your Mac / install a newer version on gitpod? Just to check if it's a git change or some weird platform thing</p>",
        "id": 317275590,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671671716
    },
    {
        "content": "<p>gitpod's <code>apt-get</code> doesn't have a new version and <code>brew</code> doesn't have an old one :) what a happy state of affairs. let me ask to see if other people can repro</p>",
        "id": 317276130,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671672238
    },
    {
        "content": "<p><a href=\"https://raw.githubusercontent.com/git/git/master/Documentation/RelNotes/2.39.0.txt\">Git 2.39 release notes</a> say</p>\n<blockquote>\n<ul>\n<li>With a bit of header twiddling, use the native regexp library on<br>\n   macOS instead of the compat/ one.</li>\n</ul>\n</blockquote>",
        "id": 317276461,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671672525
    },
    {
        "content": "<p>Which makes me think it's a platform thing</p>",
        "id": 317276489,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671672558
    },
    {
        "content": "<p>well this is fun... now scripts have to deal with two different styles of regex</p>",
        "id": 317276590,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671672638
    },
    {
        "content": "<p>26 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/git.20error.20from.20port_status.20on.20macOS\">#mathlib4 &gt; git error from port_status on macOS</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 317277235,
        "sender_full_name": "Notification Bot",
        "timestamp": 1671673281
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317262641\">said</a>:</p>\n<blockquote>\n<p>is it going skiing?</p>\n</blockquote>\n<p>Waveski, maybe...</p>",
        "id": 317292781,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1671688160
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317262846\">said</a>:</p>\n<blockquote>\n<p>I can likely get this working on GitHub actions when I get some time</p>\n</blockquote>\n<p>If it doesn't work, I can probably run a cronjob on my server.</p>",
        "id": 317310497,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671698088
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"504487\">Sarah Smith</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317273090\">said</a>:</p>\n<blockquote>\n<p>We had to pause on <code>positivity</code> and <code>norm_num</code>(still needs division) until <code>data.rat.order</code> ported <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> but they can be completed now! Would anyone <span class=\"user-group-mention silent\" data-user-group-id=\"323441\">mathlib mentees</span>  be interested in finishing these? Here are placeholder issues: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1100\">1100</a>, <a href=\"https://github.com/leanprover-community/mathlib4/issues/1101\">1101</a>, and <a href=\"https://github.com/leanprover-community/mathlib4/issues/1102\">1102</a></p>\n</blockquote>\n<p>For anyone interested in doing the newly-available <code>positivity</code> extensions, let me record what I know.  They are harder than the corresponding Lean 3 extensions, because instead of using <code>mk_app</code> you have to work with <code>Qq</code>.  For example, compare the positivity extensions for addition in Lean 3:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/2f3994e1b117b1e1da49bcfb67334f33460c3ce4/src/tactic/positivity.lean#L417\">https://github.com/leanprover-community/mathlib/blob/2f3994e1b117b1e1da49bcfb67334f33460c3ce4/src/tactic/positivity.lean#L417</a><br>\nand in Lean 4:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Tactic/Positivity/Basic.lean#L62\">https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Tactic/Positivity/Basic.lean#L62</a></p>\n<p>So it would be great if someone who understands <code>Qq</code> can take this on.</p>",
        "id": 317422388,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671732064
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/156</td>\n<td>(94.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>57850/61663</td>\n<td>(93.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/data.nat.prime\">Longest unported chain</a>:</td>\n<td>1/29</td>\n<td>(96.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317422935,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671732236
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>178/196</td>\n<td>(90.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67438/75372</td>\n<td>(89.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317423554,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671732455
    },
    {
        "content": "<p>I just kicked <code>data.nat.prime</code> on the queue. Another target in the bag.</p>",
        "id": 317423845,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671732527
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>194/227</td>\n<td>(85.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>71374/85421</td>\n<td>(83.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317424306,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671732674
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>220/386</td>\n<td>(57.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76083/153413</td>\n<td>(49.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317424971,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671732894
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>147/183</td>\n<td>(80.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59540/83002</td>\n<td>(71.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317425610,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671733111
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>163/215</td>\n<td>(75.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64264/94246</td>\n<td>(68.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317426309,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671733330
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>192/279</td>\n<td>(68.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70181/110957</td>\n<td>(63.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317426941,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671733549
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317427621,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671733761
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>246/576</td>\n<td>(42.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>80325/243099</td>\n<td>(33.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317428282,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671733990
    },
    {
        "content": "<p>For people who are looking for things to port I would urge them to look at the pdfs rather than the output of the port script. Creating PRs which depend on other PRs is fine here, and some of the pdfs represent important goals which we want done sooner rather than later so that more people can use Lean 4 in their work.</p>",
        "id": 317428729,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671734148
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>244/525</td>\n<td>(46.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79658/225267</td>\n<td>(35.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317428915,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671734219
    },
    {
        "content": "<p>Aren't files at the top of <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> very likely to also be in those pdfs?</p>",
        "id": 317430281,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671734697
    },
    {
        "content": "<p>Anybody with a vague enthusiasm for porting the finiteness hierarchy is very welcome to pour in a lot of energy there. I think it's going to be one of the major next hurdles.</p>",
        "id": 317430498,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671734765
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317430281\">said</a>:</p>\n<blockquote>\n<p>Aren't files at the top of <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> very likely to also be in those pdfs?</p>\n</blockquote>\n<p>You would have thought so, wouldn't you! But sometimes the porting program can throw up some pretty random things.</p>",
        "id": 317436582,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671737019
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2022-12-23/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>333/2849</td>\n<td>(11.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>92744/975641</td>\n<td>(9.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2022-12-23/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317437412,
        "sender_full_name": "port-progress bot",
        "timestamp": 1671737283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> I can look at <code>positivity</code> tomorrow, if Mario or someone else has not already jumped on it.</p>",
        "id": 317453188,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671743700
    },
    {
        "content": "<p>Awesome!!</p>",
        "id": 317453245,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671743717
    },
    {
        "content": "<p>I will double-check which extensions are high-priority for me personally, but definitely division, inversion and absolute values.</p>",
        "id": 317453326,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671743751
    },
    {
        "content": "<p>I think <code>algebra.order.floor</code> might be ready to port.  It shows up with all sorts of crazy imports on</p>\n<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317423554\">said</a>:</p>\n<blockquote>\n<p>| mathlib port progress   | <a href=\"https://tqft.net/mathlib4/2022-12-23/algebra.order.floor.pdf\">algebra.order.floor</a> |                 |</p>\n</blockquote>\n<p>like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">data.tree</span>\n<span class=\"n\">algebra.order.field_power</span>\n<span class=\"n\">data.rat.cast</span>\n<span class=\"n\">data.meta_defs</span>\n</code></pre></div>\n<p>but its actual import list is only</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.int.lemmas</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.set.intervals.group</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.set.lattice</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.abel</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.linarith</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.positivity</span>\n</code></pre></div>\n<p>I think those other imports are transitive imports via the tactic files.  So they may well not be needed.</p>",
        "id": 317592728,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671809739
    },
    {
        "content": "<p>Or, at least, maybe it's blocked by <code>data.int.lemmas</code> (which itself is blocked by <a href=\"https://github.com/leanprover-community/mathlib4/pull/1159\">mathlib4#1159</a>), but not by all those other files.</p>",
        "id": 317593285,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671809905
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>178/196</td>\n<td>(90.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67438/75372</td>\n<td>(89.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317606236,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671814069
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>195/227</td>\n<td>(85.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>71554/85421</td>\n<td>(83.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317606660,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671814207
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>223/386</td>\n<td>(57.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76721/153413</td>\n<td>(50.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317606986,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671814340
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>147/183</td>\n<td>(80.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59540/83002</td>\n<td>(71.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317607310,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671814476
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>163/215</td>\n<td>(75.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64264/94246</td>\n<td>(68.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317607671,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671814608
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>193/279</td>\n<td>(69.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70343/110957</td>\n<td>(63.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317608076,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671814741
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317608540,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671814871
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>251/577</td>\n<td>(43.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81876/243311</td>\n<td>(33.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317608959,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671815010
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>249/525</td>\n<td>(47.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81209/225267</td>\n<td>(36.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-23/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317609292,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671815152
    },
    {
        "content": "<p>The graphs will start working in an hour or two, once another cron job kicks in.</p>",
        "id": 317610396,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671815540
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>178/196</td>\n<td>(90.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67438/75372</td>\n<td>(89.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317680803,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671864817
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>195/227</td>\n<td>(85.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>71554/85421</td>\n<td>(83.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317680910,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671864950
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>223/386</td>\n<td>(57.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76721/153413</td>\n<td>(50.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317681077,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671865087
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>147/183</td>\n<td>(80.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59540/83002</td>\n<td>(71.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317681235,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671865223
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>163/215</td>\n<td>(75.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64264/94246</td>\n<td>(68.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317681407,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671865355
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>193/279</td>\n<td>(69.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70343/110969</td>\n<td>(63.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317681609,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671865492
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317681819,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671865620
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>251/577</td>\n<td>(43.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81876/243323</td>\n<td>(33.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317682034,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671865764
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>249/525</td>\n<td>(47.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81209/225279</td>\n<td>(36.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317682219,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671865906
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>339/2851</td>\n<td>(11.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>94267/976193</td>\n<td>(9.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-24/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317682477,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671866097
    },
    {
        "content": "<p>The graphs don't appear to exist yet.</p>",
        "id": 317684591,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671867769
    },
    {
        "content": "<p>Hmm, there was a hiccup with the switch to lean 3.50.2</p>",
        "id": 317684730,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671867888
    },
    {
        "content": "<p>I'll run the graph script again</p>",
        "id": 317684737,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671867894
    },
    {
        "content": "<p>The list <code>The following files are marked as ported, but do not have a SYNCHRONIZED WITH MATHLIB4 label</code> is now huge. What happened to the script?</p>",
        "id": 317699339,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671876727
    },
    {
        "content": "<p>The yaml file PR numbers are now \"wrong\", so I'm wary of merging its output</p>",
        "id": 317700202,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671877186
    },
    {
        "content": "<p>Ideally it would not modify existing headers, but it's a pain to work on this script</p>",
        "id": 317700313,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671877221
    },
    {
        "content": "<p>The script was designed to make the mathlib3 headers match the yaml file</p>",
        "id": 317700343,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671877240
    },
    {
        "content": "<p>If the yaml file no longer contains the information we want in the headers, we should either add the information back or stop wanting it in the headers</p>",
        "id": 317700562,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671877332
    },
    {
        "content": "<p>I would be happy with just <code>SYNCHRONIZED WITH MATHLIB4</code> in a comment in the Lean 3 files.</p>",
        "id": 317700935,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671877532
    },
    {
        "content": "<p>I don't think the pointers to ml4 PRs are very important.</p>",
        "id": 317700973,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671877550
    },
    {
        "content": "<p>I agree. Sooner or later the PR that ported the file will be obsolete.</p>",
        "id": 317701139,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671877626
    },
    {
        "content": "<p>Let's update the script then to do that</p>",
        "id": 317701775,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671877961
    },
    {
        "content": "<p>That should be as simple as removing a line from the inserted comment, and removing the list of PRs from stdout</p>",
        "id": 317701969,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671878077
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67933/75372</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317805229,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671956287
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>198/227</td>\n<td>(87.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>73306/85421</td>\n<td>(85.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317805376,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671956424
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>230/386</td>\n<td>(59.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79474/153413</td>\n<td>(51.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317805528,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671956557
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59979/83002</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317805675,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671956691
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64703/94246</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317805821,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671956827
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>198/279</td>\n<td>(71.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72588/110969</td>\n<td>(65.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317805985,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671956962
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317806137,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671957090
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>259/577</td>\n<td>(44.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>84791/243323</td>\n<td>(34.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317806359,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671957229
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>256/525</td>\n<td>(48.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>83962/225279</td>\n<td>(37.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317806623,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671957375
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>348/2851</td>\n<td>(12.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>97300/976224</td>\n<td>(10.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-25/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317806980,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1671957566
    },
    {
        "content": "<p>The graphs don't exist, again--was it supposed to be fixed in general?</p>",
        "id": 317817014,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671964148
    },
    {
        "content": "<p>Maybe something is wrong with the cronjob...</p>",
        "id": 317827946,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671970566
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67933/75372</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317928864,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672047611
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>198/227</td>\n<td>(87.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>73306/85421</td>\n<td>(85.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317929088,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672047748
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>230/386</td>\n<td>(59.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79474/153413</td>\n<td>(51.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317929318,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672047886
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59979/83002</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317929637,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672048016
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64703/94246</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317929971,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672048152
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>198/279</td>\n<td>(71.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72588/110969</td>\n<td>(65.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317930201,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672048284
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317930428,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672048411
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>260/577</td>\n<td>(45.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>84837/243323</td>\n<td>(34.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317930668,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672048554
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>257/525</td>\n<td>(49.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>84008/225279</td>\n<td>(37.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317930935,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672048695
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>349/2851</td>\n<td>(12.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>97346/976237</td>\n<td>(10.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-26/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 317931221,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672048886
    },
    {
        "content": "<p>If someone want's to tell me whether I did <code>Vector3</code> right here: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1204\">https://github.com/leanprover-community/mathlib4/pull/1204</a> I'll happily start ramping up more PRs, the only reason I haven't yet is because I'm not sure whether what I did is what is expected so I didn't want to do lots of work that I have to revise later again because of a general mistake I'm making.</p>",
        "id": 317941374,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672054298
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67950/75389</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318047344,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127037
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>200/227</td>\n<td>(88.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74042/85438</td>\n<td>(86.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318047605,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127175
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>236/386</td>\n<td>(61.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81513/153430</td>\n<td>(53.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318047818,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127313
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59996/83019</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318048022,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127448
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64720/94263</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318048261,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127580
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>199/279</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72748/110986</td>\n<td>(65.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318048477,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127712
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318048700,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127847
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>269/577</td>\n<td>(46.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>87360/243478</td>\n<td>(35.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-27/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318048920,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672127988
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67950/75389</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318224258,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672221807
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>200/227</td>\n<td>(88.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74042/85438</td>\n<td>(86.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318224521,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672221943
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>236/386</td>\n<td>(61.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81513/153430</td>\n<td>(53.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318224847,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672222080
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59996/83019</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318225200,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672222215
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64720/94263</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318225540,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672222351
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>199/279</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72748/110986</td>\n<td>(65.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318225865,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672222483
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318226167,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672222614
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>269/577</td>\n<td>(46.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>87360/243478</td>\n<td>(35.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318226509,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672222758
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>266/525</td>\n<td>(50.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>86531/225434</td>\n<td>(38.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318226893,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672222905
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>360/2852</td>\n<td>(12.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>99942/976704</td>\n<td>(10.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-28/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318227375,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672223096
    },
    {
        "content": "<p>Who's getting us to 100,000 lines ported?</p>",
        "id": 318241132,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1672228448
    },
    {
        "content": "<p>Whoever fixes the final linting errors in <code>data.list.basic</code>?</p>",
        "id": 318242685,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672229064
    },
    {
        "content": "<p>(I'm offline for the next ~4 hrs.)</p>",
        "id": 318242730,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672229086
    },
    {
        "content": "<p>I am having a look</p>",
        "id": 318243279,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672229308
    },
    {
        "content": "<p>I've done a couple of them, but I am stuck on the others. Most of them about the LHS that can be simplified using results in <code>core/std</code>. In all cases replacing the LHS with the simplified version seems a bad idea, but using priority doesn't work (maybe results always apply first?).</p>",
        "id": 318259963,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672235820
    },
    {
        "content": "<p><code>simp</code> priority in Lean3 was not that useful, maybe it changed in Lean4, but in Lean3 it applied simp lemmas in order of the depth of the subexpression they applied to first, and then priority second or something like that</p>",
        "id": 318260457,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1672236012
    },
    {
        "content": "<p>To give a precise example, in <code>std</code> there is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">theorem</span> <span class=\"n\">getLast_eq_getLastD</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">l</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">getLast</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">::</span><span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"n\">h</span> <span class=\"bp\">=</span> <span class=\"n\">getLastD</span> <span class=\"n\">l</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>And this breaks</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">getLast_cons</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">l</span> <span class=\"bp\">≠</span> <span class=\"n\">nil</span><span class=\"o\">,</span> <span class=\"n\">getLast</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cons_ne_nil</span> <span class=\"n\">a</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">getLast</span> <span class=\"n\">l</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>with</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\">#check @List.getLast_cons /- Left-hand side simplifies from</span>\n  List.getLast <span class=\"o\">(</span>a :: l<span class=\"o\">)</span> <span class=\"o\">(</span>_ : a :: l ≠ <span class=\"o\">[])</span>\nto\n  List.getLastD l a\nusing\n  simp only <span class=\"o\">[</span>List.getLast_eq_getLastD<span class=\"o\">]</span>\nTry to change the left-hand side to the simplified term!\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>\n</code></pre></div>",
        "id": 318260992,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672236227
    },
    {
        "content": "<p>I don' think changing the LHS is a good idea</p>",
        "id": 318261132,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672236273
    },
    {
        "content": "<p>But when does <code>getLast_cons</code> apply as a <code>simp</code> lemma anyway. How would you infer <code>h : l ne nil</code>?</p>",
        "id": 318261750,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1672236499
    },
    {
        "content": "<p>I guess with some kind of <code>simp [h]</code> or <code>simp [*]</code></p>",
        "id": 318264045,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672237178
    },
    {
        "content": "<p>I feel like we don't have a clear path forward with this <code>simp</code> stuff. Is it unreasonable to hope that the simp set will be basically the same between mathlib 3 and mathlib 4? Are there too many other changes to how <code>simp</code> works for instance?</p>",
        "id": 318267249,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672238240
    },
    {
        "content": "<p>Obviously all we really care about is that <code>simp</code> still closes all the goals it used to close... but it's hard to know what effect removing specific <code>simp</code> lemmas would have.</p>",
        "id": 318267476,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672238310
    },
    {
        "content": "<p>Here the difference is the result in <code>std</code> I guess. We now have <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/Data/List/BasicAux.html#List.getLastD\">List.getLastD</a>, and I think the Lean3 analogue is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.ilast'\">docs#list.ilast'</a>, but there is no <code>simp</code> lemma analogue to <code>getLast_eq_getLastD</code>. So I think that is't not because <code>simp</code> is different, there is a new <code>simp</code> lemma.</p>",
        "id": 318268635,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672238708
    },
    {
        "content": "<p>Right. It's tempting to say: just get rid of all the new <code>simp</code> lemmas. But maybe it's not the right answer</p>",
        "id": 318268912,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672238804
    },
    {
        "content": "<p>in the presence of the new simp lemma, the equivalent of <code>getLast_cons</code> is <code>\\all h : l != [], getLastD a l = getLast l h</code></p>",
        "id": 318269213,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672238921
    },
    {
        "content": "<p>which does not look like a good global simp lemma, since while not properly looping would still fight against <code>getLast_eq_getLastD</code> when <code>l</code> is of the form <code>b :: l'</code> since <code>b :: l' != []</code> is simp-provable. I think this should just be used as a local simp lemma</p>",
        "id": 318269702,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239090
    },
    {
        "content": "<p>What about removing <code>simp</code> from <code>getLast_eq_getLastD</code>?</p>",
        "id": 318270184,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672239253
    },
    {
        "content": "<p>It seems like while there's a huge amount of porting remaining to be done is the wrong time to try to make large changes to the simp set?</p>",
        "id": 318270246,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672239276
    },
    {
        "content": "<p>I would like to discuss this in the context of concrete breakage, rather than adding any blanket rules along the lines of \"no new simp lemmas\"</p>",
        "id": 318270604,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239397
    },
    {
        "content": "<p>I don't think this is a large change to the simp set. <code>list.last</code> is a rarely used function</p>",
        "id": 318270716,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239439
    },
    {
        "content": "<p>I was going to say just the opposite--these questions are going to come up over and over (I think in Data.List.Basic there were already like 50 of these simp_nf linter errors?) and we need a way to make progress on them that doesn't depend on a fine analysis of each one individually</p>",
        "id": 318270802,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672239472
    },
    {
        "content": "<p>again, we can't make those judgments without staring at a few broken simp calls first</p>",
        "id": 318270945,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239505
    },
    {
        "content": "<p>we can roll things back if the fallout of some change looks to be too bad</p>",
        "id": 318271000,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239526
    },
    {
        "content": "<p>I agree a policy like \"no new simp lemmas\" is the wrong approach, but there has to be some kind of general goal</p>",
        "id": 318271015,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672239531
    },
    {
        "content": "<p>because otherwise I think we will waste a lot of time now contemplating what to do about simp lemmas, and also a lot of time later when all the simps break</p>",
        "id": 318271128,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672239569
    },
    {
        "content": "<p>I'd rather avoid at least one of those!</p>",
        "id": 318271202,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672239596
    },
    {
        "content": "<p>I think it's fine to lean toward keeping all the old annotations (in mathlib), and reverting changes in core/std that cause breakage, but std should not be explicitly backward compatibly tied to mathlib in the same way as mathlib4</p>",
        "id": 318271428,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239665
    },
    {
        "content": "<p>that's why <code>#align</code> directives are in mathlib4, not std, even for files that have been basically completely moved over</p>",
        "id": 318271538,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239704
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/318270802\">said</a>:</p>\n<blockquote>\n<p>(I think in Data.List.Basic there were already like 50 of these simp_nf linter errors?)</p>\n</blockquote>\n<p>By the way I have noticed this generally in lean 4, the simp_nf linter seems to fire a lot even when there have been no significant changes. I think it's detecting non-confluence in the original lean 3 simp set</p>",
        "id": 318272444,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672239997
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/318269213\">said</a>:</p>\n<blockquote>\n<p>in the presence of the new simp lemma, the equivalent of <code>getLast_cons</code> is <code>\\all h : l != [], getLastD a l = getLast l h</code></p>\n</blockquote>\n<p>thinking about this some more, I think it's not even a good simp lemma if you set aside the confluence issues - if I were in the middle of a proof I would rather have the LHS in the goal than the RHS, unless I wanted to specifically prove that the expression does not depend on <code>a</code>. The <code>h</code> argument is more problematic because it will block further rewrites</p>",
        "id": 318273202,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240290
    },
    {
        "content": "<p>In the <code>normalize</code> thread it sounded like that might be due in part to <code>simp</code> no longer applying the most recent <code>simp</code> lemmas first</p>",
        "id": 318273233,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672240301
    },
    {
        "content": "<p>it uses a discrimination tree instead of going over everything in order. This is a huge performance win, one of the main reasons we think lean 4 will be faster on mathlib, but it means you can't rely on declaration order as priority</p>",
        "id": 318273427,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240377
    },
    {
        "content": "<p>How hard would it be to collect the data of all simp lemmas that are actually used by a <code>simp</code> (without <code>only</code>) in mathlib 3?</p>",
        "id": 318273450,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672240385
    },
    {
        "content": "<p>as usual, that's the kind of thing that lean 4 makes trivial but requires heroic effort to extract in lean 3</p>",
        "id": 318273565,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240431
    },
    {
        "content": "<p>which is annoying when it's needed for a port</p>",
        "id": 318273583,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240440
    },
    {
        "content": "<p>we could squeeze all simps in mathlib by regex...?</p>",
        "id": 318273693,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240478
    },
    {
        "content": "<p>maybe with <code>lean -D trace.simplify.rewrite=true</code> and processing a few GBs of text?</p>",
        "id": 318273721,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672240499
    },
    {
        "content": "<p>The <code>squeeze_simp</code> tactic already implements most of that functionality, so it's just a matter of calling it everywhere</p>",
        "id": 318273840,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240553
    },
    {
        "content": "<p>unfortunately I think the error rate is too high for it to be applied at scale</p>",
        "id": 318273938,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240578
    },
    {
        "content": "<p>Ah yeah because you want to exclude explicitly-requested simp lemmas anyways</p>",
        "id": 318273951,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672240592
    },
    {
        "content": "<p>specifically, it often produces unparsable terms</p>",
        "id": 318273984,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240606
    },
    {
        "content": "<p>which is not really its fault, lean 3 has a roundtripping issue in general</p>",
        "id": 318274020,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672240625
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67950/75389</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318372582,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672301143
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>202/227</td>\n<td>(89.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74252/85438</td>\n<td>(86.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318372829,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672301280
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>238/386</td>\n<td>(61.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>82208/153441</td>\n<td>(53.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318373108,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672301413
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59996/83019</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318373278,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672301544
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64720/94263</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318373470,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672301677
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>199/279</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72748/110997</td>\n<td>(65.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318373665,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672301812
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>50/92</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18263/31944</td>\n<td>(57.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>18/36</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318373843,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672301940
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>274/577</td>\n<td>(47.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>88552/243489</td>\n<td>(36.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318374069,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672302083
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>271/525</td>\n<td>(51.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>87723/225445</td>\n<td>(38.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318374336,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672302225
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>367/2852</td>\n<td>(12.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>101497/976826</td>\n<td>(10.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-29/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318374686,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672302415
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67950/75389</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318532593,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672383470
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>203/227</td>\n<td>(89.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74353/85438</td>\n<td>(87.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318532754,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672383603
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>241/386</td>\n<td>(62.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>82739/153423</td>\n<td>(53.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318532938,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672383736
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59996/83019</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318533098,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672383872
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64720/94263</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318533236,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672384009
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>199/279</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72748/110997</td>\n<td>(65.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318533372,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672384145
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>51/92</td>\n<td>(55.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18439/31944</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>17/36</td>\n<td>(52.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318533509,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672384273
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>279/577</td>\n<td>(48.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>89279/243471</td>\n<td>(36.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318533619,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672384417
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>276/525</td>\n<td>(52.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>88450/225427</td>\n<td>(39.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318533735,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672384561
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>377/2852</td>\n<td>(13.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>102591/976808</td>\n<td>(10.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-30/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318534002,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672384751
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67950/75389</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318693964,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672468161
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>203/227</td>\n<td>(89.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74353/85438</td>\n<td>(87.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694075,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672468296
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>242/386</td>\n<td>(62.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>83491/153423</td>\n<td>(54.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694190,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672468433
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59996/83019</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694341,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672468566
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64720/94263</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694449,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672468700
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>199/279</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72748/110997</td>\n<td>(65.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694590,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672468836
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>51/92</td>\n<td>(55.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18439/31944</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>17/36</td>\n<td>(52.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694706,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672468968
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>281/577</td>\n<td>(48.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>90156/243469</td>\n<td>(37.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694815,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672469111
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>278/525</td>\n<td>(53.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>89327/225425</td>\n<td>(39.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318694927,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672469256
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>382/2852</td>\n<td>(13.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>103777/976783</td>\n<td>(10.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2022-12-31/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318695074,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1672469446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/317701969\">said</a>:</p>\n<blockquote>\n<p>That should be as simple as removing a line from the inserted comment, and removing the list of PRs from stdout</p>\n</blockquote>\n<p>Done in <a href=\"https://github.com/leanprover-community/mathlib/pull/18030\">#18030</a>.</p>",
        "id": 318762566,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672505772
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/data.nat.prime.pdf\">data.nat.prime</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>149/156</td>\n<td>(95.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>58545/61663</td>\n<td>(94.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/data.nat.prime\">Longest unported chain</a>:</td>\n<td>1/29</td>\n<td>(96.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318768539,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672509781
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67950/75389</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318768889,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672509997
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>203/227</td>\n<td>(89.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74353/85438</td>\n<td>(87.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318769171,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672510213
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>243/386</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>84230/153423</td>\n<td>(54.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318769406,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672510431
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59996/83019</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318769692,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672510644
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64720/94263</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318769941,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672510860
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>199/279</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72748/110997</td>\n<td>(65.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318770221,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672511075
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>51/92</td>\n<td>(55.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18439/31944</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>17/36</td>\n<td>(52.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318770505,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672511288
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>282/577</td>\n<td>(48.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>90895/243461</td>\n<td>(37.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318770807,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672511516
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>279/525</td>\n<td>(53.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>90066/225417</td>\n<td>(40.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318771168,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672511745
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-01/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>383/2853</td>\n<td>(13.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>104516/977206</td>\n<td>(10.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-01/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318775432,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672514824
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, my bot came back online this morning when this computer was plugged back in. We should turn one of the bots off ---  I don't know that there's any reason to prefer one or the other?</p>",
        "id": 318810671,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672543374
    },
    {
        "content": "<p>I'll turn mine off</p>",
        "id": 318832807,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672564272
    },
    {
        "content": "<p>Can Scott's bot get a nice profile picture?</p>",
        "id": 318838005,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672568231
    },
    {
        "content": "<p>A message was moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/synchronization.20label.20bot\">#mathlib4 &gt; synchronization label bot</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 318839447,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672569145
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>180/196</td>\n<td>(91.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67950/75389</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>3/31</td>\n<td>(90.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318890205,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672596233
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>203/227</td>\n<td>(89.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74353/85438</td>\n<td>(87.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/data.real.basic\">Longest unported chain</a>:</td>\n<td>6/34</td>\n<td>(82.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318890601,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672596449
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>246/386</td>\n<td>(63.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>85069/153423</td>\n<td>(55.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318890944,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672596665
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59996/83019</td>\n<td>(72.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318891306,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672596878
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64720/94263</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318891633,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672597094
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>199/279</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72748/110997</td>\n<td>(65.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318891920,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672597309
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>52/92</td>\n<td>(56.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18571/31944</td>\n<td>(58.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318892199,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672597519
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>286/577</td>\n<td>(49.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>92160/243461</td>\n<td>(37.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318892659,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672597748
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>282/525</td>\n<td>(53.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>90905/225417</td>\n<td>(40.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318892980,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672597976
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-02/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>388/2853</td>\n<td>(13.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>105913/977206</td>\n<td>(10.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-02/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 318897140,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672600768
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>181/196</td>\n<td>(92.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68053/75239</td>\n<td>(90.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319034718,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672682633
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>204/227</td>\n<td>(89.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>74449/85281</td>\n<td>(87.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319035074,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672682859
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>247/386</td>\n<td>(64.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>85148/153249</td>\n<td>(55.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319035544,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672683086
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59862/82885</td>\n<td>(72.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319035964,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672683301
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64575/94118</td>\n<td>(68.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319036396,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672683518
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>200/279</td>\n<td>(71.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>72841/110837</td>\n<td>(65.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319036744,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672683734
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18739/31897</td>\n<td>(58.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319037095,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672683946
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>289/577</td>\n<td>(50.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>93599/243287</td>\n<td>(38.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319037523,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672684175
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>285/525</td>\n<td>(54.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>92344/225227</td>\n<td>(41.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319079890,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672684402
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-03/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>400/2853</td>\n<td>(14.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>108648/976956</td>\n<td>(11.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-03/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319084616,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672687179
    },
    {
        "content": "<p>What is the strategy concerning changing the hash when we modify a ported file? Of course one is supposed to open a mathlib4 PR, but when should we modify the hash?</p>\n<p>I have maybe misunderstood something, but I think we should try to keep the list \"The following files have been modified since the commit at which they were verified\" not too long, otherwise it will become a mess.</p>",
        "id": 319235133,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672764301
    },
    {
        "content": "<p>I think we should build some better tooling to verify that there is no diff before changing those SHAs</p>",
        "id": 319237647,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672765086
    },
    {
        "content": "<blockquote>\n<p>Of course one is supposed to open a mathlib4 PR</p>\n</blockquote>\n<p>Are people doing this manually or with one-shot mode?</p>",
        "id": 319238037,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672765208
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>?</p>",
        "id": 319238068,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672765217
    },
    {
        "content": "<p>Is this is even possible? The current files have really been modified (sometimes with new theorems), so I am afraid a human check is needed.</p>",
        "id": 319238080,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672765220
    },
    {
        "content": "<p>You can have git construct a three-way merge between the commit that was ported and the most recent port</p>",
        "id": 319238225,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672765256
    },
    {
        "content": "<p>And then a human can review that diff in the form of a PR</p>",
        "id": 319238252,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672765263
    },
    {
        "content": "<p>I think people are doing it by hand (or maybe they've just forgot to do it and nobody noticed)</p>",
        "id": 319238267,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672765269
    },
    {
        "content": "<p>If so then I think our workflow is wrong; making people create the mathlib4 PR before merging the 3 PR means that we're doing things manually and likely to make a mess where mathport wouldn't.</p>",
        "id": 319238440,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672765315
    },
    {
        "content": "<p>Maybe having a gitpod container with mathport and mathlib4 preconfigured would encourage the use of one-shot mode?</p>",
        "id": 319238643,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672765367
    },
    {
        "content": "<p>I definitely agree that we should have better tooling for this process. I'm also not sure it is very urgent to do anything about it for now.<br>\nIt would be nice if we could distinguish cases where the mathlib 3 change really affects downstream modules, so that we can take care of just those promptly.</p>",
        "id": 319239310,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672765544
    },
    {
        "content": "<p>The current workflow seems to be opening both PR at the same time. Usually the mathlib4 got accepted first, with a comment like \"merge once the mathlib3 PR is accepted\". Then I think people just merge the mathlib4 PR, without changing the hash, and now the file is listed as modified, even if it's in sync.</p>",
        "id": 319239336,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672765552
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>184/196</td>\n<td>(93.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68605/75350</td>\n<td>(91.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319250560,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672769038
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>207/227</td>\n<td>(91.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75049/85440</td>\n<td>(87.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319251387,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672769265
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>252/386</td>\n<td>(65.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>87108/153490</td>\n<td>(56.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319252043,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672769495
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59913/82936</td>\n<td>(72.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319252703,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672769721
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64641/94185</td>\n<td>(68.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319253376,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672769940
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>203/279</td>\n<td>(72.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>73420/110975</td>\n<td>(66.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319254075,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672770160
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18754/31912</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319254763,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672770375
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>296/577</td>\n<td>(51.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>95818/243612</td>\n<td>(39.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319255447,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672770606
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>292/525</td>\n<td>(55.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>94551/225540</td>\n<td>(41.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319256102,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672770838
    },
    {
        "content": "<p>I also think this thread is a bad place to have these discussions</p>\n<p><a href=\"/user_uploads/3121/pfV4byu7fderrKSnVn_hQLue/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/pfV4byu7fderrKSnVn_hQLue/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/pfV4byu7fderrKSnVn_hQLue/image.png\"></a></div>",
        "id": 319256410,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672770948
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-04/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>414/2854</td>\n<td>(14.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>111848/977679</td>\n<td>(11.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-04/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319264392,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672773740
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319238037\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Of course one is supposed to open a mathlib4 PR</p>\n</blockquote>\n<p>Are people doing this manually or with one-shot mode?</p>\n</blockquote>\n<p>I've never used mathport. All the PRs I opened to mathlib4 were done manually.</p>",
        "id": 319274238,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672777578
    },
    {
        "content": "<p>30 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/mathport.20and.20forward-porting\">#mathlib4 &gt; mathport and forward-porting</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 319287072,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672783261
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>185/196</td>\n<td>(94.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68946/75350</td>\n<td>(91.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319442272,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672855449
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>208/227</td>\n<td>(91.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75390/85440</td>\n<td>(88.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319442939,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672855687
    },
    {
        "content": "<p>I kept waiting for data.fin.basic, but apparently that's only used in a single line in tactic.ring (re: floor)</p>",
        "id": 319443344,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1672855822
    },
    {
        "content": "<p>However, <code>data.int.lemmas</code> was genuinely a blocker for that, and it was only merged a few days ago.</p>",
        "id": 319443541,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672855909
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>256/386</td>\n<td>(66.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>88789/153490</td>\n<td>(57.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>37/60</td>\n<td>(38.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319443621,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672855926
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>148/183</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>59913/82936</td>\n<td>(72.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>17/40</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319444298,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672856157
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/215</td>\n<td>(76.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64641/94185</td>\n<td>(68.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>21/44</td>\n<td>(52.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319445094,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672856385
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>204/279</td>\n<td>(73.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>73761/110975</td>\n<td>(66.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/order.filter.basic\">Longest unported chain</a>:</td>\n<td>24/47</td>\n<td>(48.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319445749,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672856612
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18754/31912</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319446438,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672856836
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>300/577</td>\n<td>(52.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>97499/243612</td>\n<td>(40.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/data.complex.basic\">Longest unported chain</a>:</td>\n<td>56/79</td>\n<td>(29.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319447178,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672857077
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>296/525</td>\n<td>(56.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>96232/225540</td>\n<td>(42.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>50/73</td>\n<td>(31.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319447981,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672857324
    },
    {
        "content": "<p>I started thinking about the port the day Scott's video was announced on this Zulip, and the scale of the job became apparent to me very quickly. But now we are over half way towards many fundamental files; these figures are really exciting. It's also great to see <a class=\"stream\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4\">#mathlib4</a> being one of the most popular streams right now. I firmly believe that as the material gets more advanced, more people will start to help -- the idea being that a good way to read a random mathlib file about stuff you're interested in is to port it, and you'll learn a bit about Lean 4 along the way. Has anyone considered making a revision of the video?</p>",
        "id": 319450812,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672858256
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-05/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>423/2857</td>\n<td>(14.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>114607/978052</td>\n<td>(11.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-05/all\">Longest unported chain</a>:</td>\n<td>112/135</td>\n<td>(17.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319457630,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672860421
    },
    {
        "content": "<p>I've been not in the loop for a week now, but it seems to me that we need to get <code>data.list.basic</code> and <code>data.fin.basic</code> ported before it makes sense to convince more people to join the porting effort. The idea of updating has been discussed (on the porting meeting if I remember correctly), but someone has to put in the work.</p>",
        "id": 319484385,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1672871219
    },
    {
        "content": "<p>See <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> for some fresh files all the way at the top of the queue.</p>",
        "id": 319605160,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672931272
    },
    {
        "content": "<p>Data.List.Lemmas could have a conflict with std4/core I presume?</p>",
        "id": 319605589,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672931389
    },
    {
        "content": "<p>I dunno, but I'm afraid that it will</p>",
        "id": 319606056,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672931512
    },
    {
        "content": "<p>/me proceeds to cleverly avoid that file and ports infix instead</p>",
        "id": 319606228,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672931565
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>185/196</td>\n<td>(94.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68972/75376</td>\n<td>(91.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319641583,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672941841
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>208/227</td>\n<td>(91.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75422/85472</td>\n<td>(88.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319642309,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672942070
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>258/386</td>\n<td>(66.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>93103/153552</td>\n<td>(60.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>36/60</td>\n<td>(40.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319642938,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672942302
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>150/183</td>\n<td>(82.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>64206/82962</td>\n<td>(77.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>16/40</td>\n<td>(60.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319643687,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672942527
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>166/215</td>\n<td>(77.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68934/94211</td>\n<td>(73.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>20/44</td>\n<td>(54.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319644383,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672942747
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>206/279</td>\n<td>(73.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>78057/111004</td>\n<td>(70.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/order.filter.basic\">Longest unported chain</a>:</td>\n<td>23/47</td>\n<td>(51.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319645043,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672942966
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18754/31912</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319645690,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672943182
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>302/577</td>\n<td>(52.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>101813/243700</td>\n<td>(41.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/data.complex.basic\">Longest unported chain</a>:</td>\n<td>55/79</td>\n<td>(30.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319646456,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672943414
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319606228\">said</a>:</p>\n<blockquote>\n<p>/me proceeds to cleverly avoid that file and ports infix instead</p>\n</blockquote>\n<p>Can we get <a href=\"https://github.com/leanprover-community/mathlib/pull/18067\">#18067</a> in first?</p>",
        "id": 319646510,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672943429
    },
    {
        "content": "<p>I'm sure we can. I kicked it on the queue.</p>",
        "id": 319646884,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672943548
    },
    {
        "content": "<p>I'm done with the port modulo 1 theorem, 2 confusing things and 1 thing that's probably a bug so that's going to take a while still :D</p>",
        "id": 319646948,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672943573
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>298/525</td>\n<td>(56.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>100546/225628</td>\n<td>(44.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>49/73</td>\n<td>(32.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319647182,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672943646
    },
    {
        "content": "<p>Eric's PR adds 3 decls. Should be easy to port them (even manually, if we're in a hurry).</p>",
        "id": 319647233,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672943666
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-06/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>428/2857</td>\n<td>(15.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>119812/978436</td>\n<td>(12.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-06/all\">Longest unported chain</a>:</td>\n<td>111/135</td>\n<td>(17.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319656793,
        "sender_full_name": "port-progress bot",
        "timestamp": 1672946809
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319646510\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319606228\">said</a>:</p>\n<blockquote>\n<p>/me proceeds to cleverly avoid that file and ports infix instead</p>\n</blockquote>\n<p>Can we get <a href=\"https://github.com/leanprover-community/mathlib/pull/18067\">#18067</a> in first?</p>\n</blockquote>\n<p>so now that this is merged and I got my PR ready, how do I port your changes as well? Do I manually translate?</p>",
        "id": 319679011,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672955486
    },
    {
        "content": "<p>Or you wait till tomorrow, and grab them out of the nightly mathport file.</p>",
        "id": 319679221,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672955576
    },
    {
        "content": "<p>I shall do that.</p>",
        "id": 319679788,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672955823
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1380\">mathlib4#1380</a> is for <code>Data.List.BigOperators.Basic</code></p>",
        "id": 319766675,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673006201
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>185/196</td>\n<td>(94.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>68991/75395</td>\n<td>(91.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319832753,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673028235
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>209/228</td>\n<td>(91.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75725/85775</td>\n<td>(88.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319833365,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673028458
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>264/387</td>\n<td>(68.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>94934/153881</td>\n<td>(61.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>34/60</td>\n<td>(43.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319834049,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673028684
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>152/183</td>\n<td>(83.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>65060/82995</td>\n<td>(78.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>14/40</td>\n<td>(65.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319834677,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673028905
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>169/215</td>\n<td>(78.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70144/94253</td>\n<td>(74.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>18/44</td>\n<td>(59.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319835254,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673029121
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>209/279</td>\n<td>(74.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79267/111046</td>\n<td>(71.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/order.filter.basic\">Longest unported chain</a>:</td>\n<td>21/47</td>\n<td>(55.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319835982,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673029336
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18754/31912</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319836620,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673029547
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>307/577</td>\n<td>(53.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>103426/243811</td>\n<td>(42.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/data.complex.basic\">Longest unported chain</a>:</td>\n<td>53/79</td>\n<td>(32.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319837361,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673029772
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>303/525</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>102155/225735</td>\n<td>(45.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>47/73</td>\n<td>(35.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319838081,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673030004
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-07/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>439/2857</td>\n<td>(15.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>122214/978606</td>\n<td>(12.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-07/all\">Longest unported chain</a>:</td>\n<td>109/135</td>\n<td>(19.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319846329,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673032808
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> Algebra.Order.Floor is on the critical path to Data.Real.Basic.  It is now ready for review, modulo <a href=\"https://github.com/leanprover-community/mathlib4/pull/1392\">mathlib4#1392</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a>, both also awaiting review.  If anyone has review time today, they are worthy targets!</p>\n<p>Note <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a> is meta code.</p>",
        "id": 319986625,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673111619
    },
    {
        "content": "<p>1392 looks good to me <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span></p>",
        "id": 319987063,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673111868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> But you are only porting a part of a file there, do I understand that right?</p>",
        "id": 319987280,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673112004
    },
    {
        "content": "<p>If so, I'm wondering whether we should remove the porting header, so that it gets qualified as \"ad hoc\" port.</p>",
        "id": 319987957,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673112453
    },
    {
        "content": "<p>The rest is meta code, so I'm not sure if we'd ever port it, but either way is fine by me</p>",
        "id": 319988705,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673112939
    },
    {
        "content": "<p>What does the meta code do? I don't know this file.</p>",
        "id": 319989629,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673113520
    },
    {
        "content": "<p>If we decide that it doesn't need to be ported, we should record that decision in a comment.</p>",
        "id": 319989662,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673113549
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Is this a clear case?</p>",
        "id": 319989805,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673113642
    },
    {
        "content": "<p>which meta code?</p>",
        "id": 319989885,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673113696
    },
    {
        "content": "<p>there is a positivity extension for floor/ceil in <code>algebra.order.floor</code>, if that's what you're talking about. It should be ignored for the purpose of the port, and an issue should be made on mathlib4 to track it</p>",
        "id": 319990086,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673113820
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1392/commits/0a38ad8c57b9f734e5b57524caca665cd57fc380\">https://github.com/leanprover-community/mathlib4/pull/1392/commits/0a38ad8c57b9f734e5b57524caca665cd57fc380</a></p>",
        "id": 319990124,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673113839
    },
    {
        "content": "<p>oh that. This is all subsumed by stuff in lean 4 core</p>",
        "id": 319990176,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673113894
    },
    {
        "content": "<p>so unless you are using the theorems (and you really shouldn't, they are intended for tactic use only) the whole file can be skipped</p>",
        "id": 319990257,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673113934
    },
    {
        "content": "<p>Ok, let's add that as a big fat comment</p>",
        "id": 319990260,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673113938
    },
    {
        "content": "<p>Done, and merge-queued.</p>",
        "id": 319991071,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673114448
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>185/196</td>\n<td>(94.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>69124/75528</td>\n<td>(91.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319991382,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673114641
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>209/228</td>\n<td>(91.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75858/85908</td>\n<td>(88.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319991798,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673114860
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>264/387</td>\n<td>(68.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>95073/154095</td>\n<td>(61.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>34/60</td>\n<td>(43.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319992184,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673115080
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>152/183</td>\n<td>(83.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>65196/83155</td>\n<td>(78.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>14/40</td>\n<td>(65.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319992557,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673115297
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>169/215</td>\n<td>(78.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70280/94413</td>\n<td>(74.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>18/44</td>\n<td>(59.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319992912,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673115515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319986625\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> Algebra.Order.Floor is on the critical path to Data.Real.Basic.  It is now ready for review, modulo <a href=\"https://github.com/leanprover-community/mathlib4/pull/1392\">mathlib4#1392</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a>, both also awaiting review.  If anyone has review time today, they are worthy targets!</p>\n<p>Note <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a> is meta code.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> has merge conflicts apparently :-/</p>",
        "id": 319993090,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673115625
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>209/279</td>\n<td>(74.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79403/111257</td>\n<td>(71.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/order.filter.basic\">Longest unported chain</a>:</td>\n<td>21/47</td>\n<td>(55.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319993270,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673115733
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18757/31915</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319993560,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673115946
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319993090\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319986625\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> Algebra.Order.Floor is on the critical path to Data.Real.Basic.  It is now ready for review, modulo <a href=\"https://github.com/leanprover-community/mathlib4/pull/1392\">mathlib4#1392</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a>, both also awaiting review.  If anyone has review time today, they are worthy targets!</p>\n<p>Note <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a> is meta code.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> has merge conflicts apparently :-/</p>\n</blockquote>\n<p>Probably because 1392 merged?</p>",
        "id": 319993699,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673116009
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>307/577</td>\n<td>(53.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>103565/244035</td>\n<td>(42.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/data.complex.basic\">Longest unported chain</a>:</td>\n<td>53/79</td>\n<td>(32.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319993923,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673116180
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>303/525</td>\n<td>(57.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>102294/225959</td>\n<td>(45.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>47/73</td>\n<td>(35.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319994314,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673116415
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319993090\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/319986625\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> Algebra.Order.Floor is on the critical path to Data.Real.Basic.  It is now ready for review, modulo <a href=\"https://github.com/leanprover-community/mathlib4/pull/1392\">mathlib4#1392</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a>, both also awaiting review.  If anyone has review time today, they are worthy targets!</p>\n<p>Note <a href=\"https://github.com/leanprover-community/mathlib4/pull/1394\">mathlib4#1394</a> is meta code.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> has merge conflicts apparently :-/</p>\n</blockquote>\n<p>The merge conflicts are usually Mathlib.lean</p>",
        "id": 319995495,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673117151
    },
    {
        "content": "<p>It was the conflicts from review changes to <a href=\"https://github.com/leanprover-community/mathlib4/pull/1392\">mathlib4#1392</a>.  Fixed.</p>",
        "id": 319996431,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673117785
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-08/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>440/2857</td>\n<td>(15.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>123168/979576</td>\n<td>(12.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-08/all\">Longest unported chain</a>:</td>\n<td>109/135</td>\n<td>(19.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 319997373,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673118472
    },
    {
        "content": "<p><a href=\"https://math.commelin.net/files/port_status.html\">https://math.commelin.net/files/port_status.html</a> marks <code>algebra.hom.group_action</code> as portable so I just started it over here: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1424\">https://github.com/leanprover-community/mathlib4/pull/1424</a> but it is missing a dependency to <code>Mathlib.Algebra.GroupRingAction.Invariant</code>, did that thing move somewhere else or is this a bug in the port_status detector?</p>",
        "id": 320062492,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1673176437
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320062492\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://math.commelin.net/files/port_status.html\">https://math.commelin.net/files/port_status.html</a> marks <code>algebra.hom.group_action</code> as portable so I just started it over here: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1424\">https://github.com/leanprover-community/mathlib4/pull/1424</a> but it is missing a dependency to <code>Mathlib.Algebra.GroupRingAction.Invariant</code>, did that thing move somewhere else or is this a bug in the port_status detector?</p>\n</blockquote>\n<p>I'm guessing this is to do with <a href=\"https://github.com/leanprover-community/mathlib/pull/18092\">#18092</a>?</p>",
        "id": 320062953,
        "sender_full_name": "David Loeffler",
        "timestamp": 1673176759
    },
    {
        "content": "<p>Ah so the issue is that mathport did not run through yet? Can I run it locally for this single file somehow? Or shall I just wait until tomorrow then.</p>",
        "id": 320063239,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1673176904
    },
    {
        "content": "<p>Mathport now runs twice a day, so you only need to wait till 6 hours or so from now</p>",
        "id": 320064028,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673177399
    },
    {
        "content": "<p>Or manually remove the last 15 or so lines and the import from the mathported file</p>",
        "id": 320068532,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673180152
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>185/196</td>\n<td>(94.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>69128/75532</td>\n<td>(91.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320103738,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673201037
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>209/228</td>\n<td>(91.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75862/85912</td>\n<td>(88.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320104053,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673201256
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>258/366</td>\n<td>(70.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>94224/147738</td>\n<td>(63.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>26/52</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320104416,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673201475
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>152/183</td>\n<td>(83.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>65200/83197</td>\n<td>(78.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>14/40</td>\n<td>(65.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320104745,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673201690
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>169/215</td>\n<td>(78.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70284/94471</td>\n<td>(74.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>18/44</td>\n<td>(59.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320105024,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673201908
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>209/279</td>\n<td>(74.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79407/111315</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/order.filter.basic\">Longest unported chain</a>:</td>\n<td>21/47</td>\n<td>(55.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320105323,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673202126
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18765/31923</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320105575,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673202339
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>308/574</td>\n<td>(53.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>103667/243781</td>\n<td>(42.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/data.complex.basic\">Longest unported chain</a>:</td>\n<td>53/79</td>\n<td>(32.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320105886,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673202569
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>304/522</td>\n<td>(58.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>102396/225705</td>\n<td>(45.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>47/73</td>\n<td>(35.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320106215,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673202799
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-09/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>441/2857</td>\n<td>(15.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>123270/979965</td>\n<td>(12.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-09/all\">Longest unported chain</a>:</td>\n<td>101/127</td>\n<td>(20.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320108904,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673204620
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>185/196</td>\n<td>(94.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>69184/75588</td>\n<td>(91.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>2/31</td>\n<td>(93.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320290792,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673287438
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>210/228</td>\n<td>(92.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76433/85968</td>\n<td>(88.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320291614,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673287656
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>260/366</td>\n<td>(71.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>94850/147794</td>\n<td>(64.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>26/52</td>\n<td>(50.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320292366,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673287875
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>152/183</td>\n<td>(83.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>65256/83253</td>\n<td>(78.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>14/40</td>\n<td>(65.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320293095,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673288090
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>169/215</td>\n<td>(78.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70340/94527</td>\n<td>(74.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>18/44</td>\n<td>(59.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320293906,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673288309
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>209/279</td>\n<td>(74.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79463/111371</td>\n<td>(71.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/order.filter.basic\">Longest unported chain</a>:</td>\n<td>21/47</td>\n<td>(55.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320294696,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673288528
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18765/31923</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320295355,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673288740
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>312/574</td>\n<td>(54.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>104409/243842</td>\n<td>(42.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/data.complex.basic\">Longest unported chain</a>:</td>\n<td>53/79</td>\n<td>(32.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320296193,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673288970
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>306/522</td>\n<td>(58.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>103022/225761</td>\n<td>(45.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>47/73</td>\n<td>(35.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320297119,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673289198
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>447/2857</td>\n<td>(15.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>124395/980055</td>\n<td>(12.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/all\">Longest unported chain</a>:</td>\n<td>101/127</td>\n<td>(20.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320303946,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673291051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563195\">port-progress bot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320291614\">said</a>:</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-10/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>210/228</td>\n<td>(92.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>76433/85968</td>\n<td>(88.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-10/data.real.basic\">Longest unported chain</a>:</td>\n<td>5/34</td>\n<td>(85.3% progress)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>Now at 2 unported dependencies and five in progress: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1447\">mathlib4#1447</a> (needs review); <a href=\"https://github.com/leanprover-community/mathlib4/pull/1188\">mathlib4#1188</a>; <a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a> (needs review); <a href=\"https://github.com/leanprover-community/mathlib4/pull/1418\">mathlib4#1418</a>; <a href=\"https://github.com/leanprover-community/mathlib4/pull/1440\">mathlib4#1440</a> (needs help)</p>",
        "id": 320450124,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673357254
    },
    {
        "content": "<p>Note that <a href=\"https://github.com/leanprover-community/mathlib/pull/8146\">#8146</a> was intended to help with the port of <code>data/real/basic.lean</code> itself by removing the <code>refine_struct</code></p>",
        "id": 320452422,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673357896
    },
    {
        "content": "<p>Although it's hitting some odd typeclass problems I haven't yet had a chance to debug</p>",
        "id": 320452480,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673357915
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/18118\">#18118</a> is the first half of <a href=\"https://github.com/leanprover-community/mathlib/pull/8146\">#8146</a> and passes CI</p>",
        "id": 320493783,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673368817
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/algebra.order.floor.pdf\">algebra.order.floor</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>186/196</td>\n<td>(94.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70554/75786</td>\n<td>(93.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/algebra.order.floor\">Longest unported chain</a>:</td>\n<td>1/31</td>\n<td>(96.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320511411,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673373786
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>212/228</td>\n<td>(93.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>78645/86205</td>\n<td>(91.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/data.real.basic\">Longest unported chain</a>:</td>\n<td>2/34</td>\n<td>(94.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320512085,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673374008
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>271/366</td>\n<td>(74.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>98294/148021</td>\n<td>(66.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>23/52</td>\n<td>(55.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320512909,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673374229
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>160/183</td>\n<td>(87.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>67985/83264</td>\n<td>(81.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>11/40</td>\n<td>(72.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320513664,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673374447
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>178/215</td>\n<td>(82.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>73224/94537</td>\n<td>(77.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>15/44</td>\n<td>(65.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320514389,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673374668
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>217/279</td>\n<td>(77.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>82379/111569</td>\n<td>(73.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/order.filter.basic\">Longest unported chain</a>:</td>\n<td>18/47</td>\n<td>(61.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320515111,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673374888
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18765/31923</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320515893,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673375104
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>325/574</td>\n<td>(56.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>109838/244093</td>\n<td>(45.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/data.complex.basic\">Longest unported chain</a>:</td>\n<td>50/79</td>\n<td>(36.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320516746,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673375336
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>319/522</td>\n<td>(61.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>108451/226012</td>\n<td>(48.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>44/73</td>\n<td>(39.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320517535,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673375571
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-11/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>464/2857</td>\n<td>(16.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>130603/980453</td>\n<td>(13.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-11/all\">Longest unported chain</a>:</td>\n<td>97/127</td>\n<td>(23.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320523573,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673377413
    },
    {
        "content": "<p>Bam! 0.6% lines ported in one day.</p>",
        "id": 320524294,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673377590
    },
    {
        "content": "<p>Or reviewed :)</p>",
        "id": 320525574,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673378024
    },
    {
        "content": "<p>I have proposed this before, but if a scripting wizard wants to put together a %-of-mathlib-ported timeseries graph that updates every day, I think it would be very motivational.</p>",
        "id": 320525828,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673378096
    },
    {
        "content": "<p>Where does the script that generates the current output live?</p>",
        "id": 320525998,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673378154
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"563290\">@Lukas Miaskiwskyi</span> are you actively working on <a href=\"https://github.com/leanprover-community/mathlib4/pull/1462\">mathlib4#1462</a> still?</p>",
        "id": 320527440,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673378597
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320525998\">said</a>:</p>\n<blockquote>\n<p>Where does the script that generates the current output live?</p>\n</blockquote>\n<p>I believe it's <code>leanproject port-progress</code>, but it would also be nice to scrape this stream for the history.</p>",
        "id": 320527498,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673378612
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320527440\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"563290\">Lukas Miaskiwskyi</span> are you actively working on <a href=\"https://github.com/leanprover-community/mathlib4/pull/1462\">mathlib4#1462</a> still?</p>\n</blockquote>\n<p>Yep, this very moment, but I'm still at the very beginning with it</p>",
        "id": 320527822,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1673378702
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563290\">Lukas Miaskiwskyi</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320527822\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320527440\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"563290\">Lukas Miaskiwskyi</span> are you actively working on <a href=\"https://github.com/leanprover-community/mathlib4/pull/1462\">mathlib4#1462</a> still?</p>\n</blockquote>\n<p>Yep, this very moment, but I'm still at the very beginning with it</p>\n</blockquote>\n<p>Then I'll stop :)</p>\n<p>Should I push the changes I made locally?</p>",
        "id": 320529044,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673379074
    },
    {
        "content": "<p>Sure, go for it! Sorry for swiping it from you :D</p>",
        "id": 320529616,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1673379260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320527498\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320525998\">said</a>:</p>\n<blockquote>\n<p>Where does the script that generates the current output live?</p>\n</blockquote>\n<p>I believe it's <code>leanproject port-progress</code>, but it would also be nice to scrape this stream for the history.</p>\n</blockquote>\n<p>My thinking was that if <code>port-progress</code> is just scraping the repo in some way, then it might be easier than scraping the stream</p>",
        "id": 320529699,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673379294
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>~/data/math/port_progress/mathlib$ cat ~/bin/port-progress-bot.sh\n<span class=\"c1\"># You'd need the zulip command line client installed via `pip install zulip`</span>\n<span class=\"c1\"># and credentials for an account in `$TMP_DIR/zuliprc`.</span>\n\n<span class=\"nv\">TARGETS</span><span class=\"o\">=</span><span class=\"s2\">\"algebra.order.floor data.real.basic linear_algebra.basic data.fintype.basic algebra.big_operators.basic order.filter.basic category_theory.limits.yoneda data.complex.basic topology.metric_space.basic all\"</span>\n<span class=\"nv\">BASE_URL</span><span class=\"o\">=</span>https://math.commelin.net/files/mathlib4\n<span class=\"nv\">TMP_DIR</span><span class=\"o\">=</span>/home/jmc/data/math/port_progress\n<span class=\"nv\">GRAPH_DIR</span><span class=\"o\">=</span>/home/jmc/sites/math/files/mathlib4\n\nmkdir -p <span class=\"nv\">$TMP_DIR</span>\n<span class=\"nv\">today</span><span class=\"o\">=</span><span class=\"k\">$(</span>date -I<span class=\"k\">)</span>\nmkdir -p <span class=\"nv\">$GRAPH_DIR</span>/<span class=\"nv\">$today</span>/\n\n<span class=\"nb\">cd</span> <span class=\"nv\">$TMP_DIR</span>\n<span class=\"nb\">cd</span> mathlib\ngit clean -xfd\ngit pull\nleanpkg configure\nleanproject get-cache\nscripts/mk_all.sh\n\n<span class=\"nb\">cd</span> <span class=\"nv\">$GRAPH_DIR</span>\nln -sfn <span class=\"nv\">$today</span> latest\n\n<span class=\"nb\">cd</span> <span class=\"nv\">$TMP_DIR</span>/mathlib\n<span class=\"k\">for</span> target <span class=\"k\">in</span> <span class=\"nv\">$TARGETS</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n\n    leanproject port-progress --to <span class=\"nv\">$target</span> &gt; <span class=\"nv\">$target</span>.out\n    cat <span class=\"nv\">$target</span>.out <span class=\"p\">|</span> tail -n +6 &gt; <span class=\"nv\">$GRAPH_DIR</span>/<span class=\"nv\">$today</span>/<span class=\"nv\">$target</span>\n    cat <span class=\"nv\">$target</span>.out <span class=\"p\">|</span> <span class=\"se\">\\</span>\n      head -n <span class=\"m\">5</span> <span class=\"p\">|</span> <span class=\"se\">\\</span>\n      sed -e <span class=\"s2\">\"s%\\(mathlib port progress *| \\)\\([0-9a-z_\\.]*\\)%\\1[\\2](</span><span class=\"nv\">$BASE_URL</span><span class=\"s2\">/</span><span class=\"nv\">$today</span><span class=\"s2\">/\\2.pdf)%\"</span> <span class=\"p\">|</span> <span class=\"se\">\\</span>\n      sed -e <span class=\"s2\">\"s|\\(Longest unported chain\\)|[\\1](</span><span class=\"nv\">$BASE_URL</span><span class=\"s2\">/</span><span class=\"nv\">$today</span><span class=\"s2\">/</span><span class=\"nv\">$target</span><span class=\"s2\">)|\"</span> <span class=\"p\">|</span> <span class=\"se\">\\</span>\n      zulip-send -s mathlib4 --subject <span class=\"s2\">\"port progress\"</span> --config-file <span class=\"nv\">$TMP_DIR</span>/zuliprc\n\n<span class=\"k\">done</span>\n</code></pre></div>",
        "id": 320529870,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673379359
    },
    {
        "content": "<p>Pushed - over to you. Should have checked for the PR first :)</p>",
        "id": 320530012,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673379400
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, I've uploaded that at <a href=\"https://github.com/leanprover-community/mathlib-port-status/blob/main/scripts/port-progress-bot.sh\">https://github.com/leanprover-community/mathlib-port-status/blob/main/scripts/port-progress-bot.sh</a> so that it doesn't get lost</p>",
        "id": 320531570,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673379933
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320525828\">said</a>:</p>\n<blockquote>\n<p>I have proposed this before, but if a scripting wizard wants to put together a %-of-mathlib-ported timeseries graph that updates every day, I think it would be very motivational.</p>\n</blockquote>\n<p>Could these graphs be overlayed with the existing ones for number of files and number of lines on the stats page?</p>",
        "id": 320532949,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673380398
    },
    {
        "content": "<p>If people are around to review, I think we might be able to start on <code>data.real.basic</code> tomorrow. (I'm off for the night now, in any case)</p>",
        "id": 320536003,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673381445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320452422\">said</a>:</p>\n<blockquote>\n<p>Note that <a href=\"https://github.com/leanprover-community/mathlib/pull/8146\">#8146</a> was intended to help with the port of <code>data/real/basic.lean</code> itself by removing the <code>refine_struct</code></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> , did you see this?</p>",
        "id": 320536304,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673381564
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320532949\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320525828\">said</a>:</p>\n<blockquote>\n<p>I have proposed this before, but if a scripting wizard wants to put together a %-of-mathlib-ported timeseries graph that updates every day, I think it would be very motivational.</p>\n</blockquote>\n<p>Could these graphs be overlayed with the existing ones for number of files and number of lines on the stats page?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/310791821\">Indeed</a>.</p>",
        "id": 320558180,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673390057
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/pxWUR_h4oAmDJ2f11S1LbV_l/Screenshot-from-2023-01-11-09-15-33.png\"><img src=\"/user_uploads/3121/pxWUR_h4oAmDJ2f11S1LbV_l/Screenshot-from-2023-01-11-09-15-33.png\"></a></div>",
        "id": 320636730,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673424976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> is planning to touch up the final prereq.</p>",
        "id": 320637947,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673425173
    },
    {
        "content": "<p>Yeah, looks like another 9 hours before mathport picks up the parameter change</p>",
        "id": 320638205,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673425209
    },
    {
        "content": "<p>Can we trigger mathport CI manually?</p>",
        "id": 320654017,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673429541
    },
    {
        "content": "<p>Probably, but it's quite heavy I think.</p>",
        "id": 320654089,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673429569
    },
    {
        "content": "<p>But in this case, it's probably justified</p>",
        "id": 320654126,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673429585
    },
    {
        "content": "<p>On the other hand, I had one more data/real/basic refactor queued up</p>",
        "id": 320654249,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673429637
    },
    {
        "content": "<p>Then better do it quick :)</p>",
        "id": 320654348,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673429661
    },
    {
        "content": "<p>So I guess I have 6 hours or so to wrap that up</p>",
        "id": 320654353,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673429665
    },
    {
        "content": "<p>Optimistically <a href=\"https://github.com/leanprover-community/mathlib/pull/8146\">#8146</a> is now on track to pass CI, after working around an annoying norm_num bug</p>",
        "id": 320666931,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673433992
    },
    {
        "content": "<p><a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> updated after <code>List.Perm</code> got merged. Looking forward to the new graphs.</p>",
        "id": 320748084,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673455594
    },
    {
        "content": "<p><code>data.list.sublists</code> and <code>data.multiset.basic</code> are probably good targets</p>",
        "id": 320749409,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673455986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320638205\">said</a>:</p>\n<blockquote>\n<p>Yeah, looks like another 9 hours before mathport picks up the parameter change</p>\n</blockquote>\n<p>Mathport updated!</p>",
        "id": 320752478,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673456776
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>216/228</td>\n<td>(94.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79993/86236</td>\n<td>(92.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/data.real.basic\">Longest unported chain</a>:</td>\n<td>1/34</td>\n<td>(97.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320764007,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673460243
    },
    {
        "content": "<p>I'll do the merge now</p>",
        "id": 320764163,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673460294
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>277/366</td>\n<td>(75.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>101278/148082</td>\n<td>(68.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>20/52</td>\n<td>(61.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320764672,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673460464
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320752478\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320638205\">said</a>:</p>\n<blockquote>\n<p>Yeah, looks like another 9 hours before mathport picks up the parameter change</p>\n</blockquote>\n<p>Mathport updated!</p>\n</blockquote>\n<p>I'd propose that we just port data.real.basic now (unless something is fundamentally broken), rather than wait for more refactoring</p>",
        "id": 320764819,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673460497
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/183</td>\n<td>(89.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70097/83297</td>\n<td>(84.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>8/40</td>\n<td>(80.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320765356,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673460683
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>182/215</td>\n<td>(84.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75339/94573</td>\n<td>(79.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>12/44</td>\n<td>(72.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320766033,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673460904
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>222/279</td>\n<td>(79.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>84638/111609</td>\n<td>(75.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/order.filter.basic\">Longest unported chain</a>:</td>\n<td>15/47</td>\n<td>(68.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320766728,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673461124
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18765/31923</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320767476,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673461342
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>335/574</td>\n<td>(58.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>113550/244209</td>\n<td>(46.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/data.complex.basic\">Longest unported chain</a>:</td>\n<td>47/79</td>\n<td>(40.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320768129,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673461572
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>328/522</td>\n<td>(62.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>112069/226122</td>\n<td>(49.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>41/73</td>\n<td>(43.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320768867,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673461805
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320764163\">said</a>:</p>\n<blockquote>\n<p>I'll do the merge now</p>\n</blockquote>\n<p>Done in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1469\">https://github.com/leanprover-community/mathlib4/pull/1469</a>. There's one bug I caught in the original PR regarding a rename that isn't reflected in the #align. What should <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cau_seq.is_complete.is_complete\">docs#cau_seq.is_complete.is_complete</a> be called?</p>",
        "id": 320769466,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673462002
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/320764819\">said</a>:</p>\n<blockquote>\n<p>I'd propose that we just port data.real.basic now (unless something is fundamentally broken), rather than wait for more refactoring</p>\n</blockquote>\n<p>I think I now agree; <a href=\"https://github.com/leanprover-community/mathlib/pull/8146\">#8146</a> is proving more troublesome than expected, and the fallout in <code>real.lean</code> is now tiny. You'll have an annoying <code>refine_struct</code> which I recommend you replace with a regular structure and <code>sorry</code> all the proof fields. That will give you enough to port the rest of the file, and then hopefully by the time you have that I'll have <a href=\"https://github.com/leanprover-community/mathlib/pull/8146\">#8146</a> ready and can save you from the sorries</p>",
        "id": 320769968,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673462151
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-12/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>474/2858</td>\n<td>(16.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>134018/980816</td>\n<td>(13.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-12/all\">Longest unported chain</a>:</td>\n<td>95/127</td>\n<td>(25.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 320775114,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673463719
    },
    {
        "content": "<p><code>+ 0.4%</code></p>\n<p>More than I expected, frankly!</p>",
        "id": 320775756,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673463900
    },
    {
        "content": "<p>Can someone please remind me how to generate the longest unported chain in mathlib, like this page:<br>\n<a href=\"https://tqft.net/mathlib4/2023-01-12/all\">https://tqft.net/mathlib4/2023-01-12/all</a><br>\nI tried <code>leanproject port-progress</code> but after giving the length of the longest unported chain it hangs indefinitely (is it still working?).</p>",
        "id": 320801072,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673472607
    },
    {
        "content": "<p>Are all the oleans built? Even with them, it should be very slow.</p>",
        "id": 320801280,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1673472697
    },
    {
        "content": "<p>~30 minutes on my machine (you can see the gaps between the port-progress-bot posting: it is working full-time in between posts).</p>",
        "id": 320801397,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1673472732
    },
    {
        "content": "<p>Ah, no they're not.  I was trying some speculative import-rearrangement to see what it would do to the chain.</p>",
        "id": 320801403,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673472734
    },
    {
        "content": "<p>I think it used not to need the oleans?  A couple of months ago I was able to play this game and inspect what the new longest chain was:<br>\n<a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/310105496\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/port.20progress/near/310105496</a></p>",
        "id": 320801578,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673472810
    },
    {
        "content": "<p>Maybe computing the longest chain to a particular target, rather than all, will be faster?</p>",
        "id": 320802847,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1673473323
    },
    {
        "content": "<p>No, same behaviour with <code>leanproject port-progress --to analysis.normed_space.star.gelfand_duality</code>.</p>",
        "id": 320802965,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673473379
    },
    {
        "content": "<p>Is there functionality just to compute the longest chain, without inspecting its port progress?  Maybe that's what I was using before.</p>",
        "id": 320803024,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673473404
    },
    {
        "content": "<p>Doesn't seem to be.</p>",
        "id": 320803189,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1673473458
    },
    {
        "content": "<p>one thing i noticed was that <code>leanproject port-progress</code> is re-using the tooling that lints for unnecessary imports... which seems like an odd choice, since presumably going through the entire AST is much more intensive than just parsing each file's imports and doing it based on that graph</p>",
        "id": 320805656,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1673474415
    },
    {
        "content": "<p>If you don't care about the <code>-</code> markers then I would guess removing <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/636708a040c8fe074175c7d74548c8464bb1cc90/mathlibtools/leanproject.py#L403\">this line</a> would speed it up a lot</p>",
        "id": 320805815,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673474490
    },
    {
        "content": "<p>Aha!  And indeed that line was <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/140\">added</a> since last time I experimented.</p>",
        "id": 320808256,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673475591
    },
    {
        "content": "<p>Hiding it behind a flag is probably a reasonable compromise</p>",
        "id": 320808670,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673475764
    },
    {
        "content": "<p>I also wonder if we can construct this information faster from the tlean export we hand to trepplein</p>",
        "id": 320808786,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673475830
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>216/228</td>\n<td>(94.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>79993/86267</td>\n<td>(92.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/data.real.basic\">Longest unported chain</a>:</td>\n<td>1/34</td>\n<td>(97.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321001274,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673546693
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>164/183</td>\n<td>(89.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>70103/83329</td>\n<td>(84.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>8/40</td>\n<td>(80.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321002122,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673546921
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>182/215</td>\n<td>(84.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75345/94605</td>\n<td>(79.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>12/44</td>\n<td>(72.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321002870,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673547148
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>222/279</td>\n<td>(79.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>84644/111641</td>\n<td>(75.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/order.filter.basic\">Longest unported chain</a>:</td>\n<td>15/47</td>\n<td>(68.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321003738,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673547371
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18765/31923</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321004359,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673547586
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>277/366</td>\n<td>(75.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>101298/148135</td>\n<td>(68.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>20/52</td>\n<td>(61.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321005058,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673547805
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>336/574</td>\n<td>(58.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>113649/244345</td>\n<td>(46.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/data.complex.basic\">Longest unported chain</a>:</td>\n<td>47/79</td>\n<td>(40.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321005809,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673548034
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>328/522</td>\n<td>(62.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>112089/226189</td>\n<td>(49.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>41/73</td>\n<td>(43.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321006598,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673548267
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-13/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>478/2860</td>\n<td>(16.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>135104/981191</td>\n<td>(13.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-13/all\">Longest unported chain</a>:</td>\n<td>94/126</td>\n<td>(25.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321011939,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673549980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  <a href=\"https://github.com/leanprover-community/mathlib4/pull/1539\">mathlib4#1539</a> can be reviewed again, if you want to</p>",
        "id": 321175706,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673620324
    },
    {
        "content": "<p><a href=\"https://math.commelin.net/files/mathlib4/latest/data.fintype.basic.pdf\">https://math.commelin.net/files/mathlib4/latest/data.fintype.basic.pdf</a></p>",
        "id": 321239241,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673637622
    },
    {
        "content": "<p>The stats will follow soon <span aria-label=\"shout\" class=\"emoji emoji-1f4e3\" role=\"img\" title=\"shout\">:shout:</span> <span aria-label=\"bird\" class=\"emoji emoji-1f426\" role=\"img\" title=\"bird\">:bird:</span></p>",
        "id": 321239305,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673637650
    },
    {
        "content": "<p>This one is now quite fascinating: <a href=\"https://math.commelin.net/files/mathlib4/latest/order.filter.basic.pdf\">https://math.commelin.net/files/mathlib4/latest/order.filter.basic.pdf</a></p>",
        "id": 321240407,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673638023
    },
    {
        "content": "<p>Lots of green scattered all over the place</p>",
        "id": 321240419,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673638031
    },
    {
        "content": "<p>I thought there was a strategy for de-topologizing <code>data.complex.basic</code> but still shows in the graph?</p>",
        "id": 321240802,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673638151
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>218/228</td>\n<td>(95.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>82253/86267</td>\n<td>(95.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/data.real.basic\">Longest unported chain</a>:</td>\n<td>1/34</td>\n<td>(97.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321241472,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673638371
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>294/366</td>\n<td>(80.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>109542/148160</td>\n<td>(73.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>15/52</td>\n<td>(71.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321241883,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673638510
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>172/183</td>\n<td>(94.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75638/83342</td>\n<td>(90.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>3/40</td>\n<td>(92.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321242230,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673638646
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>195/215</td>\n<td>(90.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>81810/94618</td>\n<td>(86.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>7/44</td>\n<td>(84.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321242623,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673638785
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>235/279</td>\n<td>(84.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>91198/111654</td>\n<td>(81.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/order.filter.basic\">Longest unported chain</a>:</td>\n<td>10/47</td>\n<td>(78.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321243043,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673638922
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18765/31923</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321243450,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673639055
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>355/574</td>\n<td>(61.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>122860/244382</td>\n<td>(50.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/data.complex.basic\">Longest unported chain</a>:</td>\n<td>42/79</td>\n<td>(46.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321243854,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673639200
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>347/522</td>\n<td>(66.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>121300/226226</td>\n<td>(53.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>36/73</td>\n<td>(50.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321244298,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673639346
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>502/2859</td>\n<td>(17.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>145153/981157</td>\n<td>(14.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-13/all\">Longest unported chain</a>:</td>\n<td>89/126</td>\n<td>(29.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321244910,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1673639538
    },
    {
        "content": "<p><code>1% 1% 1%</code><br>\n<span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span> <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span> <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 321245816,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673639830
    },
    {
        "content": "<p>(does the port-bot only have a 5 day working week?)</p>",
        "id": 321411425,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1673732626
    },
    {
        "content": "<p>In France I once visited a website that closed after 6pm.</p>",
        "id": 321414331,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673735126
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>219/229</td>\n<td>(95.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>82424/86438</td>\n<td>(95.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/data.real.basic\">Longest unported chain</a>:</td>\n<td>1/34</td>\n<td>(97.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321516442,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673805838
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>173/184</td>\n<td>(94.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>75810/83514</td>\n<td>(90.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>3/40</td>\n<td>(92.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321516854,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673806051
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>197/216</td>\n<td>(91.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>82092/94771</td>\n<td>(86.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>7/44</td>\n<td>(84.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321517235,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673806267
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>236/278</td>\n<td>(84.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>91446/111657</td>\n<td>(81.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/order.filter.basic\">Longest unported chain</a>:</td>\n<td>10/47</td>\n<td>(78.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321517612,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673806485
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18773/31931</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321517901,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673806696
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>296/365</td>\n<td>(81.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>110315/148186</td>\n<td>(74.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>15/52</td>\n<td>(71.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321518208,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673806912
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>359/573</td>\n<td>(62.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>123759/244474</td>\n<td>(50.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/data.complex.basic\">Longest unported chain</a>:</td>\n<td>42/79</td>\n<td>(46.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321518549,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673807136
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>349/521</td>\n<td>(67.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>122080/226275</td>\n<td>(54.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>36/73</td>\n<td>(50.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321518965,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673807361
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-16/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>511/2863</td>\n<td>(17.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>146142/982653</td>\n<td>(14.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-16/all\">Longest unported chain</a>:</td>\n<td>89/126</td>\n<td>(29.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321521435,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673809014
    },
    {
        "content": "<p>Anyone up for <code>data.finset.image</code>?</p>",
        "id": 321583653,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673857370
    },
    {
        "content": "<p>Go ahead!</p>",
        "id": 321583688,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673857388
    },
    {
        "content": "<p>That one will unblock 4 or 5 other things, I think</p>",
        "id": 321583727,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673857398
    },
    {
        "content": "<p>If you pick <code>data.finset.image</code> then I'll start on <code>data.finset.order</code>.</p>",
        "id": 321583907,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673857454
    },
    {
        "content": "<p>ooh, that one is tiny</p>",
        "id": 321584299,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673857586
    },
    {
        "content": "<p>done</p>",
        "id": 321585276,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673857933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Now that <code>real.basic</code> and <code>fintype.basic</code> are almost done, could you please add <code>number_theory.legendre_symbol.quadratic_reciprocity</code> to the list?</p>",
        "id": 321590121,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673859817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321583653\">said</a>:</p>\n<blockquote>\n<p>Anyone up for <code>data.finset.image</code>?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> did - can you make the PR?</p>",
        "id": 321596908,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673861905
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321596908\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321583653\">said</a>:</p>\n<blockquote>\n<p>Anyone up for <code>data.finset.image</code>?</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> did - can you make the PR?</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1586\">mathlib4#1586</a> should be good to go and unblock <code>data.finset.{pi,card,fold}</code>, I think</p>",
        "id": 321608661,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673865796
    },
    {
        "content": "<p><a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> has some juicy stuff available!</p>",
        "id": 321627376,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673871641
    },
    {
        "content": "<p>Claiming data.finset.fold</p>",
        "id": 321627682,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673871730
    },
    {
        "content": "<p>why is everything these days in \"Earlier items in the list are required in more places in mathlib.\" as opposed to \"The following files have all dependencies ported already, and should be ready to port:\"?</p>",
        "id": 321628499,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1673871979
    },
    {
        "content": "<p>I think \"Earlier items\" shouldn't be a header</p>",
        "id": 321631431,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673872900
    },
    {
        "content": "<p>it's not, here's the port_status.py code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">print</span><span class=\"o\">(</span><span class=\"bp\">'#</span> <span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">files</span> <span class=\"k\">have</span> <span class=\"n\">all</span> <span class=\"n\">dependencies</span> <span class=\"n\">ported</span> <span class=\"n\">already</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">ready</span> <span class=\"n\">to</span> <span class=\"n\">port</span><span class=\"o\">:</span><span class=\"bp\">'</span><span class=\"o\">)</span>\n<span class=\"n\">print</span><span class=\"o\">(</span><span class=\"bp\">'#</span> <span class=\"n\">Earlier</span> <span class=\"n\">items</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">list</span> <span class=\"n\">are</span> <span class=\"n\">required</span> <span class=\"k\">in</span> <span class=\"n\">more</span> <span class=\"n\">places</span> <span class=\"k\">in</span> <span class=\"n\">mathlib.'</span><span class=\"o\">)</span>\n<span class=\"n\">allDone</span> <span class=\"bp\">=</span> <span class=\"n\">dict</span><span class=\"o\">(</span><span class=\"n\">sorted</span><span class=\"o\">(</span><span class=\"n\">allDone.items</span><span class=\"o\">(),</span> <span class=\"n\">key</span><span class=\"bp\">=</span><span class=\"n\">lambda</span> <span class=\"n\">item</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">item</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">][</span><span class=\"mi\">0</span><span class=\"o\">]))</span>\n<span class=\"n\">for</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"n\">allDone.items</span><span class=\"o\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"bp\">==</span> <span class=\"s2\">\"\"</span><span class=\"o\">:</span>\n        <span class=\"n\">print</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">)</span>\n    <span class=\"k\">else</span><span class=\"o\">:</span>\n        <span class=\"n\">print</span><span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"s2\">\"    -- \"</span> <span class=\"bp\">+</span> <span class=\"n\">v</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">])</span>\n\n<span class=\"n\">print</span><span class=\"o\">()</span>\n</code></pre></div>\n<p>this is translated to HTML by johan's bot, which I guess results in multiple headers for the two lines</p>",
        "id": 321631800,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673873027
    },
    {
        "content": "<p>I'm claiming <code>algebra.module.linear_map</code> :)</p>",
        "id": 321632142,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1673873131
    },
    {
        "content": "<p>I'm guessing the <code>#</code> is treated as a markdown header</p>",
        "id": 321633285,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673873521
    },
    {
        "content": "<p>Moving on to <code>card</code></p>",
        "id": 321633650,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673873617
    },
    {
        "content": "<p>Could someone take a look at the <code>termination_by</code> issues in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1589\">mathlib4#1589</a>? I never manage to get those right</p>",
        "id": 321640871,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673875764
    },
    {
        "content": "<p>If I type</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>leanproject import-graph --to group_theory.monoid_localization --exclude-tactics --reduce --port-status --exclude-ported --show-unused group_theory.monoid_localization.pdf\n</code></pre></div>\n<p>into my home PC I get a graph. If I type it into my laptop I get</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>The node group_theory.monoid_localization is not in the digraph.\n</code></pre></div>\n<p>Is this something to do with not having enough graph library installed?</p>",
        "id": 321648716,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673877979
    },
    {
        "content": "<p>Chris finished Data.Finset.Card <a href=\"https://github.com/leanprover-community/mathlib4/pull/1589\">mathlib4#1589</a> which should unblock <code>data.finset.{option,prod,sum}</code></p>",
        "id": 321656152,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673879705
    },
    {
        "content": "<blockquote>\n<p>Is this something to do with not having enough graph library installed?</p>\n</blockquote>\n<p>Sounds like they have different versions of mathlib checked out</p>",
        "id": 321659807,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673880684
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>219/229</td>\n<td>(95.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>82430/86444</td>\n<td>(95.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/data.real.basic\">Longest unported chain</a>:</td>\n<td>1/34</td>\n<td>(97.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321694297,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673892243
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/data.fintype.basic.pdf\">data.fintype.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>175/184</td>\n<td>(95.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>78991/83547</td>\n<td>(94.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/data.fintype.basic\">Longest unported chain</a>:</td>\n<td>1/40</td>\n<td>(97.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321694840,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673892470
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>202/216</td>\n<td>(93.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>86229/94822</td>\n<td>(90.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>3/44</td>\n<td>(93.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321695394,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673892700
    },
    {
        "content": "<p>data.real.basic is also almost done</p>",
        "id": 321695492,
        "sender_full_name": "Reid Barton",
        "timestamp": 1673892731
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>242/278</td>\n<td>(87.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>95698/111708</td>\n<td>(85.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/order.filter.basic\">Longest unported chain</a>:</td>\n<td>8/47</td>\n<td>(83.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321695927,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673892926
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18773/31931</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321696467,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673893143
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">number_theory.legendre_symbol.quadratic_reciprocity</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>395/1016</td>\n<td>(38.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>134016/436048</td>\n<td>(30.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/number_theory.legendre_symbol.quadratic_reciprocity\">Longest unported chain</a>:</td>\n<td>64/103</td>\n<td>(37.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321697120,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673893413
    },
    {
        "content": "<p>395/1016, ouch</p>",
        "id": 321697300,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673893482
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>303/365</td>\n<td>(83.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>114924/148252</td>\n<td>(77.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>13/52</td>\n<td>(75.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321697647,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673893635
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>367/573</td>\n<td>(64.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>128414/244560</td>\n<td>(52.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/data.complex.basic\">Longest unported chain</a>:</td>\n<td>40/79</td>\n<td>(49.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321698213,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673893864
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>358/521</td>\n<td>(68.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>127736/226347</td>\n<td>(56.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>34/73</td>\n<td>(53.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321698760,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673894094
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-17/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>525/2863</td>\n<td>(18.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>152170/982925</td>\n<td>(15.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-17/all\">Longest unported chain</a>:</td>\n<td>87/126</td>\n<td>(31.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321702891,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673895767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321697300\">said</a>:</p>\n<blockquote>\n<p>395/1016, ouch</p>\n</blockquote>\n<p>Meaningful number theory uses a lot of other stuff <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 321707315,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1673897694
    },
    {
        "content": "<p>I definitely second that, and it's one of the reasons I've been vocally behind one repository containing lots of pure maths since 2017. The proof of FLT uses topology, geometry, algebra, analysis, ...</p>",
        "id": 321711703,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673899873
    },
    {
        "content": "<p>I was just curious how fast the port is going over time, so I wrote a simple (and brittle) <a href=\"https://colab.research.google.com/drive/1fE0yVbuR4XrrJ_seSDHUCLob7vRMGszo?usp=sharing\">web scrapping script</a> to get the progress from this thread for the \"all\" tables and here is the resulting plot: <a href=\"/user_uploads/3121/p4MadQHP6Vr_U0a2aupS8_3j/Screen-Shot-2023-01-16-at-11.13.41-PM.png\">Screen-Shot-2023-01-16-at-11.13.41-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/p4MadQHP6Vr_U0a2aupS8_3j/Screen-Shot-2023-01-16-at-11.13.41-PM.png\" title=\"Screen-Shot-2023-01-16-at-11.13.41-PM.png\"><img src=\"/user_uploads/3121/p4MadQHP6Vr_U0a2aupS8_3j/Screen-Shot-2023-01-16-at-11.13.41-PM.png\"></a></div>",
        "id": 321751576,
        "sender_full_name": "Jason Rute",
        "timestamp": 1673928963
    },
    {
        "content": "<p>Y'know part of me was hoping it would look less linear <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 321751948,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1673929391
    },
    {
        "content": "<p>This is great!  We should add it to the stats page<br>\n<a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a></p>",
        "id": 321752033,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1673929508
    },
    {
        "content": "<p>Where are the mathlib3 stats calculated? Can we just do the same calculation for the mathlib4 repo and overlay it? (I mean quite literally the same calculation, just total number of files and lines)</p>",
        "id": 321752465,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1673929932
    },
    {
        "content": "<p>Ah, here: <a href=\"https://github.com/leanprover-community/mathlib_stats\">https://github.com/leanprover-community/mathlib_stats</a></p>",
        "id": 321754788,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1673931842
    },
    {
        "content": "<p>Note that if we measure lines in mathlib4, the graphs will cross before the port is done</p>",
        "id": 321806447,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673954419
    },
    {
        "content": "<p><code>algebra.big_operators.basic</code> is ready!</p>",
        "id": 321828451,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673961714
    },
    {
        "content": "<p>Let's knock down those targets!</p>",
        "id": 321828484,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673961722
    },
    {
        "content": "<p>Already &gt; 30 PRs landed today - how many can we manage? :)</p>",
        "id": 321830181,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673962233
    },
    {
        "content": "<p>Top of <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> currently looks like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">data.fin.tuple.basic</span> <span class=\"bp\">–</span> <span class=\"n\">mathlib4</span><span class=\"bp\">#</span><span class=\"mi\">1516</span> <span class=\"mi\">7</span><span class=\"n\">c523cb78f4153682c2929e3006c863bfef463d0</span> <span class=\"k\">if</span> <span class=\"n\">possible</span> <span class=\"n\">please</span> <span class=\"n\">wait</span> <span class=\"n\">for</span> <span class=\"n\">mathlib</span><span class=\"bp\">#</span><span class=\"mi\">10346</span>\n<span class=\"n\">algebra.big_operators.basic</span>\n<span class=\"n\">data.fintype.sigma</span>\n<span class=\"n\">order.sup_indep</span>\n<span class=\"n\">algebra.module.linear_map</span> <span class=\"bp\">–</span> <span class=\"n\">mathlib4</span><span class=\"bp\">#</span><span class=\"mi\">1587</span> <span class=\"mi\">9003</span><span class=\"n\">f28797c0664a49e4179487267c494477d853</span>\n<span class=\"n\">order.omega_complete_partial_order</span> <span class=\"bp\">–</span> <span class=\"n\">mathlib4</span><span class=\"bp\">#</span><span class=\"mi\">1168</span> <span class=\"mi\">9116</span><span class=\"n\">dd6709f303dcf781632e15fdef382b0fc579</span>\n<span class=\"n\">data.enat.basic</span> <span class=\"bp\">–</span> <span class=\"n\">mathlib4</span><span class=\"bp\">#</span><span class=\"mi\">1531</span> <span class=\"mi\">9003</span><span class=\"n\">f28797c0664a49e4179487267c494477d853</span>\n<span class=\"n\">ring_theory.congruence</span>\n<span class=\"n\">data.fintype.list</span>\n<span class=\"n\">control.traversable.instances</span> <span class=\"bp\">–</span> <span class=\"n\">mathlib4</span><span class=\"bp\">#</span><span class=\"mi\">1393</span> <span class=\"mi\">18</span><span class=\"n\">a5306c091183ac90884daa9373fa3b178e8607</span>\n<span class=\"n\">order.hom.lattice</span>\n</code></pre></div>",
        "id": 321830557,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962356
    },
    {
        "content": "<p>I think <code>data.fintype.sigma</code> is already done</p>",
        "id": 321830617,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962372
    },
    {
        "content": "<p>I'm going to start <code>algebra.big_operators.basic</code>.</p>",
        "id": 321831218,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962553
    },
    {
        "content": "<p>(If someone else did, please ping here.)</p>",
        "id": 321831253,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962561
    },
    {
        "content": "<p>Looking at sup_indep</p>",
        "id": 321831555,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673962639
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/data.real.basic.pdf\">data.real.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>220/229</td>\n<td>(96.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>83112/86454</td>\n<td>(96.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/data.real.basic\">Longest unported chain</a>:</td>\n<td>1/34</td>\n<td>(97.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321892684,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673978594
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>207/216</td>\n<td>(95.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>89374/94832</td>\n<td>(94.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>1/44</td>\n<td>(97.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321893547,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673978821
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>251/278</td>\n<td>(90.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>100086/111813</td>\n<td>(89.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/order.filter.basic\">Longest unported chain</a>:</td>\n<td>7/47</td>\n<td>(85.1% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321894207,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673979053
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18783/31941</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321894903,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673979278
    },
    {
        "content": "<p>The links to the graphs are broken for me.</p>",
        "id": 321895138,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673979361
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">number_theory.legendre_symbol.quadratic_reciprocity</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>418/1018</td>\n<td>(41.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>143140/436989</td>\n<td>(32.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/number_theory.legendre_symbol.quadratic_reciprocity\">Longest unported chain</a>:</td>\n<td>63/103</td>\n<td>(38.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321895732,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673979549
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>315/365</td>\n<td>(86.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>120003/148383</td>\n<td>(80.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>11/52</td>\n<td>(78.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321896438,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673979774
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>386/573</td>\n<td>(67.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>136531/244691</td>\n<td>(55.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/data.complex.basic\">Longest unported chain</a>:</td>\n<td>38/79</td>\n<td>(51.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321897144,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673980006
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>374/521</td>\n<td>(71.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>134430/226478</td>\n<td>(59.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>32/73</td>\n<td>(56.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321897944,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673980241
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321895138\">said</a>:</p>\n<blockquote>\n<p>The links to the graphs are broken for me.</p>\n</blockquote>\n<p>They're working for me.</p>",
        "id": 321899206,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673980568
    },
    {
        "content": "<p>Aah, now they also work on my side</p>",
        "id": 321899315,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673980608
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-18/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>553/2865</td>\n<td>(19.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>161763/983915</td>\n<td>(16.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-18/all\">Longest unported chain</a>:</td>\n<td>85/126</td>\n<td>(32.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 321903615,
        "sender_full_name": "port-progress bot",
        "timestamp": 1673982005
    },
    {
        "content": "<p><code>0.9%</code></p>",
        "id": 321903981,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673982122
    },
    {
        "content": "<p>We have ported almost 20% of mathlib!</p>",
        "id": 321904603,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673982304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321895138\">said</a>:</p>\n<blockquote>\n<p>The links to the graphs are broken for me.</p>\n</blockquote>\n<p>The graphs for already ported files don't work</p>",
        "id": 321906633,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673982874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I think #{ported lines} is a better measure than #{ported files}</p>",
        "id": 321909807,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673983760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321909807\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> I think #{ported lines} is a better measure than #{ported files}</p>\n</blockquote>\n<p>I think ported files is better because the number is bigger</p>",
        "id": 321912915,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673984848
    },
    {
        "content": "<p>No, ported lines <em>is</em> better. But you have to count the number of ported lines in mathlib, as mathlib4 inflates that number.</p>",
        "id": 321923286,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673988523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> I thought that's already what is happening?</p>",
        "id": 321923468,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673988595
    },
    {
        "content": "<p>Then why did <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> claim that we couldn't overlay the graphs because they would cross before the port was over?</p>",
        "id": 321923780,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673988715
    },
    {
        "content": "<p>Because mathlib3 files often end up bigger when ported into mathlib4 files.</p>",
        "id": 321923892,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673988747
    },
    {
        "content": "<p>... which is why I'm suggesting counting the number of mathlib3 lines ported, rather than the number of lines in mathlib4</p>",
        "id": 321924068,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673988821
    },
    {
        "content": "<p>Namely, <code>finset.sum ported_files (\\lambda file, file.number_of_lines)</code></p>",
        "id": 321924308,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673988928
    },
    {
        "content": "<p>We are already counting lines in mathlib3.</p>",
        "id": 321924519,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1673988998
    },
    {
        "content": "<p>golf:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ported_files.sum</span> <span class=\"o\">(</span><span class=\"bp\">\\</span><span class=\"n\">lambda</span> <span class=\"n\">file</span><span class=\"o\">,</span> <span class=\"n\">file.number_of_lines</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 321924526,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1673989001
    },
    {
        "content": "<p>Then I see no problem with the current approach</p>",
        "id": 321924699,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673989079
    },
    {
        "content": "<p>Damiano, I didn't want to look obscure, but <code>ported_files.sum number_of_lines</code> is the golfest.</p>",
        "id": 321924831,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673989125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/321924068\">said</a>:</p>\n<blockquote>\n<p>... which is why I'm suggesting counting the number of mathlib3 lines ported, rather than the number of lines in mathlib4</p>\n</blockquote>\n<p>Well, you asked why i said they would cross, and if you look at my message I was talking about counting mathlib4 lines. Indeed, if you are counting mathlib3 lines everything is fine :)</p>",
        "id": 321926675,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673989787
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/algebra.big_operators.basic.pdf\">algebra.big_operators.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>208/216</td>\n<td>(96.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>91313/94856</td>\n<td>(96.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/algebra.big_operators.basic\">Longest unported chain</a>:</td>\n<td>1/44</td>\n<td>(97.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322118299,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674065061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <span aria-label=\"this\" class=\"emoji emoji-1f446\" role=\"img\" title=\"this\">:this:</span> can be removed from your list of targets</p>",
        "id": 322118924,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674065229
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>254/278</td>\n<td>(91.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>100799/111852</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/order.filter.basic\">Longest unported chain</a>:</td>\n<td>5/47</td>\n<td>(89.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322119231,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674065318
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18783/31941</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322120124,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674065571
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">number_theory.legendre_symbol.quadratic_reciprocity</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>428/1020</td>\n<td>(42.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>146423/437212</td>\n<td>(33.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/number_theory.legendre_symbol.quadratic_reciprocity\">Longest unported chain</a>:</td>\n<td>61/103</td>\n<td>(40.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322121105,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674065878
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>319/365</td>\n<td>(87.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>122479/148425</td>\n<td>(82.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>10/52</td>\n<td>(80.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322121983,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674066130
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>390/573</td>\n<td>(68.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>139013/244739</td>\n<td>(56.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/data.complex.basic\">Longest unported chain</a>:</td>\n<td>37/79</td>\n<td>(53.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322122834,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674066390
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>378/521</td>\n<td>(72.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>136912/226526</td>\n<td>(60.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>31/73</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322123696,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674066655
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-19/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>564/2871</td>\n<td>(19.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>164795/984604</td>\n<td>(16.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-19/all\">Longest unported chain</a>:</td>\n<td>84/126</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322131264,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674068737
    },
    {
        "content": "<p><code>0.3%</code></p>",
        "id": 322132115,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674068976
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">data.array.lemmas</span>\n<span class=\"n\">data.fintype.lattice</span>\n<span class=\"n\">data.fintype.prod</span>\n<span class=\"n\">data.fintype.sum</span>\n<span class=\"n\">data.fintype.powerset</span>\n<span class=\"n\">data.sym.basic</span> <span class=\"bp\">–</span> <span class=\"n\">mathlib4</span><span class=\"bp\">#</span><span class=\"mi\">1672</span> <span class=\"mi\">509</span><span class=\"n\">de852e1de55e1efa8eacfa11df0823f26f226</span>\n<span class=\"n\">data.fin.vec_notation</span> <span class=\"bp\">–</span> <span class=\"n\">Waiting</span> <span class=\"n\">for</span> <span class=\"n\">forward</span> <span class=\"n\">port</span> <span class=\"n\">of</span> <span class=\"n\">mathlib</span><span class=\"bp\">#</span><span class=\"mi\">10346</span>\n<span class=\"n\">data.finset.noncomm_prod</span>\n<span class=\"n\">data.fintype.option</span>\n<span class=\"n\">algebra.big_operators.order</span>\n<span class=\"n\">algebra.big_operators.pi</span>\n<span class=\"n\">data.finite.set</span>\n</code></pre></div>\n<p>Top of <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a></p>",
        "id": 322261074,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674129396
    },
    {
        "content": "<p><a href=\"https://tqft.net/mathlib/data/array/lemmas\">file#data/array/lemmas</a> is surely a false positive? Did we even port <code>Array</code>?</p>",
        "id": 322261684,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674129585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Nope, it's not.</p>",
        "id": 322262767,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674129864
    },
    {
        "content": "<p>It's imported by legit low-level files</p>",
        "id": 322262809,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674129878
    },
    {
        "content": "<p>Let's not port it yet</p>",
        "id": 322263358,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674130038
    },
    {
        "content": "<p>I think we should try and shuffle dependencies so that it's not needed (edit: starting with <a href=\"https://github.com/leanprover-community/mathlib/pull/18226\">#18226</a>)</p>",
        "id": 322263386,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674130047
    },
    {
        "content": "<p>8 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Updating.20SHAs.20for.20modified.20files\">#mathlib4 &gt; Updating SHAs for modified files</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 322264028,
        "sender_full_name": "Notification Bot",
        "timestamp": 1674130219
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Do you think we can have a separate section of \"longest unported chain of deps = 1\" files?</p>",
        "id": 322264525,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674130352
    },
    {
        "content": "<p>Seems reasonable.</p>",
        "id": 322264538,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674130355
    },
    {
        "content": "<p>Then we can detect such files that need a ml3 reshuffle a bit earlier.</p>",
        "id": 322264591,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674130371
    },
    {
        "content": "<p>Again, that section should be sorted by \"importancy\", like <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> is</p>",
        "id": 322264658,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674130390
    },
    {
        "content": "<p>That's not that different from the table at <a href=\"https://leanprover-community.github.io/mathlib-port-status\">https://leanprover-community.github.io/mathlib-port-status</a>, is it? Scrolling to the yellow and uncolored rows gives a good estimate of that information</p>",
        "id": 322264940,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674130480
    },
    {
        "content": "<p>Aah, fair enough</p>",
        "id": 322265276,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674130575
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/322263386\">said</a>:</p>\n<blockquote>\n<p>I think we should try and shuffle dependencies so that it's not needed (edit: starting with <a href=\"https://github.com/leanprover-community/mathlib/pull/18226\">#18226</a>)</p>\n</blockquote>\n<p>Thanks for starting the PR</p>",
        "id": 322265306,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674130588
    },
    {
        "content": "<p>Do you think you can break this edge as well?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">logic</span><span class=\"bp\">/</span><span class=\"n\">equiv</span><span class=\"bp\">/</span><span class=\"n\">list.lean</span>\n<span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"kn\">import</span> <span class=\"n\">data.array.lemmas</span>\n</code></pre></div>",
        "id": 322265359,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674130613
    },
    {
        "content": "<p>Yes, I'll put that in the same PR</p>",
        "id": 322266943,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674131059
    },
    {
        "content": "<p>Done, lets see what CI has to say</p>",
        "id": 322267729,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674131301
    },
    {
        "content": "<p>Also added a comment to <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a>, but I guess that propagates slowly</p>",
        "id": 322268797,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674131646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, in case you weren't watching CI closely :)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">actions</span><span class=\"bp\">-</span><span class=\"n\">runner</span><span class=\"bp\">/</span><span class=\"n\">_work</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">computability</span><span class=\"bp\">/</span><span class=\"n\">primrec.lean</span><span class=\"o\">:</span><span class=\"mi\">1043</span><span class=\"o\">:</span><span class=\"mi\">12</span><span class=\"o\">:</span>\n<span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">equiv.array_equiv_fin'</span>\n</code></pre></div>",
        "id": 322269399,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674131860
    },
    {
        "content": "<p>Seems you weren't watching CI closely, <a href=\"https://github.com/leanprover-community/mathlib/pull/18226/commits/7b27fcb2283884481041d1c9916d000778e6cba4\">already fixed</a> :)</p>",
        "id": 322269550,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674131902
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/322268797\">said</a>:</p>\n<blockquote>\n<p>Also added a comment to <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a>, but I guess that propagates slowly</p>\n</blockquote>\n<p>It's on <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> already <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 322269693,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674131964
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/322268797\">said</a>:</p>\n<blockquote>\n<p>Also added a comment to <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a>, but I guess that propagates slowly</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, could you modify <code>start_port.sh</code> to include any comments from the yaml file in the commit message when people make PRs? Sometimes people don't read the comments before starting, and that way the reviewers would see them.</p>",
        "id": 322269788,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674131992
    },
    {
        "content": "<p>If we're looking for something new to track, polynomials would be an interesting one. It needs finsupp but it's the key to a lot of algebra.</p>",
        "id": 322294467,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674138700
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-20/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>262/278</td>\n<td>(94.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>103242/111870</td>\n<td>(92.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-20/order.filter.basic\">Longest unported chain</a>:</td>\n<td>5/47</td>\n<td>(89.4% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322344003,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674151437
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-20/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18783/31941</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-20/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322344795,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674151656
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-20/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">number_theory.legendre_symbol.quadratic_reciprocity</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>445/1020</td>\n<td>(43.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>149982/437246</td>\n<td>(34.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-20/number_theory.legendre_symbol.quadratic_reciprocity\">Longest unported chain</a>:</td>\n<td>61/103</td>\n<td>(40.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322345866,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674151926
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-20/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>329/365</td>\n<td>(90.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>125426/148449</td>\n<td>(84.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-20/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>10/52</td>\n<td>(80.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322346655,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674152148
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-20/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>404/573</td>\n<td>(70.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>142358/244833</td>\n<td>(58.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-20/data.complex.basic\">Longest unported chain</a>:</td>\n<td>37/79</td>\n<td>(53.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322347469,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674152371
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-20/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>391/521</td>\n<td>(75.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>140179/226562</td>\n<td>(61.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-20/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>31/73</td>\n<td>(57.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322348276,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674152598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/322263386\">said</a>:</p>\n<blockquote>\n<p>I think we should try and shuffle dependencies so that it's not needed (edit: starting with <a href=\"https://github.com/leanprover-community/mathlib/pull/18226\">#18226</a>)</p>\n</blockquote>\n<p>Hooray! <code>array.lemmas</code> is gone from <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a></p>",
        "id": 322353506,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674154085
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-20/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>581/2874</td>\n<td>(20.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>168694/984966</td>\n<td>(17.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-20/all\">Longest unported chain</a>:</td>\n<td>84/126</td>\n<td>(33.3% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322353890,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674154215
    },
    {
        "content": "<p><code>0.4%</code></p>",
        "id": 322354223,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674154322
    },
    {
        "content": "<p>is there a <a href=\"https://bit.ly/3cKk3ld\">#queue4</a>?</p>",
        "id": 322404958,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1674173586
    },
    {
        "content": "<p>nice</p>",
        "id": 322404974,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1674173592
    },
    {
        "content": "<p>I merged <code>Data.Sym.Basic</code>. So now <code>Data.Fintype.Vector</code> is up for grabs. It's on the critical path to <a href=\"https://tqft.net/mathlib4/latest/order.filter.basic.pdf\">https://tqft.net/mathlib4/latest/order.filter.basic.pdf</a></p>\n<p>I'm afk for ~45m, so I will not claim <code>Data.Fintype.Vector</code> yet.</p>",
        "id": 322502012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674218458
    },
    {
        "content": "<p>Started the PR at <a href=\"https://github.com/leanprover-community/mathlib4/pull/1716\">mathlib4#1716</a></p>",
        "id": 322512617,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674221258
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>265/276</td>\n<td>(96.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>103885/111444</td>\n<td>(93.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/order.filter.basic\">Longest unported chain</a>:</td>\n<td>1/47</td>\n<td>(97.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322612634,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674247717
    },
    {
        "content": "<p>Almost there!</p>",
        "id": 322612732,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674247760
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>336/363</td>\n<td>(92.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>128402/147731</td>\n<td>(86.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>8/52</td>\n<td>(84.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322612971,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674247854
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>402/522</td>\n<td>(77.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>144610/226133</td>\n<td>(63.9% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>28/73</td>\n<td>(61.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322613405,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674247999
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/data.polynomial.basic.pdf\">data.polynomial.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>355/399</td>\n<td>(89.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>131997/161864</td>\n<td>(81.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/data.polynomial.basic\">Longest unported chain</a>:</td>\n<td>14/58</td>\n<td>(75.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322613823,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674248138
    },
    {
        "content": "<p>Oooh! We are closer to polynomials than to metric spaces! Maybe not so surprising after all.</p>",
        "id": 322613941,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674248166
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18783/31941</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322614158,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674248268
    },
    {
        "content": "<p>That's a looot of gray nodes for polynomials too</p>",
        "id": 322614604,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674248411
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>416/574</td>\n<td>(72.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>147075/244405</td>\n<td>(60.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/data.complex.basic\">Longest unported chain</a>:</td>\n<td>34/79</td>\n<td>(57.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322614606,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674248411
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>609/2881</td>\n<td>(21.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>174607/985636</td>\n<td>(17.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-20/all\">Longest unported chain</a>:</td>\n<td>82/126</td>\n<td>(34.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322615147,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674248603
    },
    {
        "content": "<p><code>0.6%</code></p>",
        "id": 322616127,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674248929
    },
    {
        "content": "<p>I updated the list of targets on the wiki page. All the targets listed there have been already completed :)</p>",
        "id": 322669894,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1674280356
    },
    {
        "content": "<p>Can I vote for replacing topology.metric_space.basic by topology.basic? the metric space one is still basically infinitely far away</p>",
        "id": 322674041,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674284155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> Voila: <a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/topology.basic.pdf\">https://math.commelin.net/files/mathlib4/2023-01-21/topology.basic.pdf</a></p>",
        "id": 322681676,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674289492
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>266/276</td>\n<td>(96.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>105194/111500</td>\n<td>(94.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/order.filter.basic\">Longest unported chain</a>:</td>\n<td>1/47</td>\n<td>(97.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322773185,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674330580
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>337/361</td>\n<td>(93.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>129689/147179</td>\n<td>(88.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>8/52</td>\n<td>(84.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322773352,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674330717
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/topology.basic.pdf\">topology.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>308/332</td>\n<td>(92.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>117597/132069</td>\n<td>(89.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/topology.basic\">Longest unported chain</a>:</td>\n<td>8/53</td>\n<td>(84.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322773577,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674330853
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/data.polynomial.basic.pdf\">data.polynomial.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>360/399</td>\n<td>(90.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>134041/161791</td>\n<td>(82.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/data.polynomial.basic\">Longest unported chain</a>:</td>\n<td>14/58</td>\n<td>(75.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322773777,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674330991
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18783/31941</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322773994,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674331124
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>422/575</td>\n<td>(73.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>149374/244576</td>\n<td>(61.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/data.complex.basic\">Longest unported chain</a>:</td>\n<td>34/79</td>\n<td>(57.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322774212,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674331271
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>619/2884</td>\n<td>(21.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>177377/986150</td>\n<td>(18.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://math.commelin.net/files/mathlib4/2023-01-21/all\">Longest unported chain</a>:</td>\n<td>80/125</td>\n<td>(36.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322774489,
        "sender_full_name": "port progress bot (jmc)",
        "timestamp": 1674331464
    },
    {
        "content": "<p><code>0.3%</code> :}</p>",
        "id": 322782988,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674338419
    },
    {
        "content": "<p>what are these numbers meant to represent?</p>",
        "id": 322783628,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1674338923
    },
    {
        "content": "<p>Johan has been posting the daily delta for % of lines ported. Good measure for progress.</p>",
        "id": 322783703,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674339002
    },
    {
        "content": "<p>percentage of total number of lines ported in the past day.</p>",
        "id": 322783712,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674339003
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-23/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>266/276</td>\n<td>(96.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>105194/111494</td>\n<td>(94.3% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-23/order.filter.basic\">Longest unported chain</a>:</td>\n<td>1/47</td>\n<td>(97.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322891076,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674410626
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-23/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18783/31941</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-23/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322891332,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674410828
    },
    {
        "content": "<p>We might let the bot do the difference calculation. Or is doing arithmetic once a day not really worth the hassle of maintaining stateful bots?</p>",
        "id": 322891451,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1674410890
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-23/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">number_theory.legendre_symbol.quadratic_reciprocity</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>470/1022</td>\n<td>(46.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>157103/436013</td>\n<td>(36.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-23/number_theory.legendre_symbol.quadratic_reciprocity\">Longest unported chain</a>:</td>\n<td>59/103</td>\n<td>(42.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322891691,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674411081
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-23/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>336/359</td>\n<td>(93.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>129216/145986</td>\n<td>(88.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-23/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>8/52</td>\n<td>(84.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322892065,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674411290
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-23/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>421/573</td>\n<td>(73.5% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>148901/243379</td>\n<td>(61.2% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-23/data.complex.basic\">Longest unported chain</a>:</td>\n<td>34/79</td>\n<td>(57.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322892416,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674411504
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-23/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>407/521</td>\n<td>(78.1% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>146436/225105</td>\n<td>(65.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-23/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>28/73</td>\n<td>(61.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322892774,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674411719
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-23/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>622/2886</td>\n<td>(21.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>178141/986471</td>\n<td>(18.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-23/all\">Longest unported chain</a>:</td>\n<td>80/125</td>\n<td>(36.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 322894940,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674413181
    },
    {
        "content": "<p>Would it be possible to add <code>combinatorics.simple_graph.basic</code> as a porting target?</p>",
        "id": 322939337,
        "sender_full_name": "Anand Rao",
        "timestamp": 1674448909
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span></p>",
        "id": 322941738,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674451117
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"303675\">Anand Rao</span> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/322939337\">said</a>:</p>\n<blockquote>\n<p>Would it be possible to add <code>combinatorics.simple_graph.basic</code> as a porting target?</p>\n</blockquote>\n<p>unless i'm mistaken it looks like we just need to port <code>data.sym.sym2</code> and then it's able to be ported</p>",
        "id": 323015577,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674479490
    },
    {
        "content": "<p>I wanted to know the current porting speed so I just spent half an hour playing with python. For curious people, I'll let the code here. First we need to download messages, assuming you have the <code>zulip</code> python package and a <code>.zuliprc</code> in your home, first use this script:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickle</span>\n<span class=\"kn\">import</span> <span class=\"nn\">zulip</span>\n\n<span class=\"c1\"># Pass the path to your zuliprc file here.</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">zulip</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s2\">\"~/.zuliprc\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"anchor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"newest\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"num_before\"</span><span class=\"p\">:</span> <span class=\"mi\">1500</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"num_after\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"narrow\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s2\">\"operator\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stream\"</span><span class=\"p\">,</span> <span class=\"s2\">\"operand\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mathlib4\"</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s2\">\"operator\"</span><span class=\"p\">:</span> <span class=\"s2\">\"sender\"</span><span class=\"p\">,</span> <span class=\"s2\">\"operand\"</span><span class=\"p\">:</span> <span class=\"s2\">\"port-progress-bot@leanprover.zulipchat.com \"</span><span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"apply_markdown\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"p\">}</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_messages</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Let's save the result to avoid hitting an API rate limit while testing</span>\n<span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'progress.pickle'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>This will create a file <code>progress.pickle</code> with raw output. Then you can play with it in another script (if you don't split this in download then play and play too much then you'll hit some API rate limit).</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code>  <span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickle</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'progress.pickle'</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">reg</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'\\(([^%]*)'</span><span class=\"p\">)</span>\n\n<span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'stats.csv'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span>\n<span class=\"n\">prev</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span>\n\n<span class=\"k\">for</span> <span class=\"n\">msg</span> <span class=\"ow\">in</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'messages'</span><span class=\"p\">]:</span>\n    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'content'</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"s2\">\"all.pdf\"</span> <span class=\"ow\">in</span> <span class=\"n\">content</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n    <span class=\"n\">stamp</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'timestamp'</span><span class=\"p\">])</span>\n    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">cols</span> <span class=\"o\">=</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'|'</span><span class=\"p\">)</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">cols</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n    <span class=\"n\">stat</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">fromtimestamp</span><span class=\"p\">(</span><span class=\"n\">stamp</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">, </span><span class=\"si\">{</span><span class=\"n\">stat</span><span class=\"si\">}</span><span class=\"s2\">, </span><span class=\"si\">{</span><span class=\"n\">stat</span> <span class=\"o\">-</span> <span class=\"n\">prev</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"n\">prev</span> <span class=\"o\">=</span> <span class=\"n\">stat</span>\n</code></pre></div>\n<p>This will create <code>stats.csv</code> with three columns: date, proportion of ported lines, progress since previous data point. Be careful that the bot has been slightly chaotic, don't assume there is one line per day.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>\n</code></pre></div>",
        "id": 323028991,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674482993
    },
    {
        "content": "<p>The current output is</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"csv\"><pre><span></span><code>2022-11-15, 1.2, 0.0\n2022-11-15, 1.2, 0.0\n2022-11-16, 1.2, 0.0\n2022-11-16, 1.2, 0.0\n2022-11-18, 1.4, 0.19999999999999996\n2022-11-18, 1.8, 0.40000000000000013\n2022-11-19, 1.8, 0.0\n2022-11-20, 1.7, -0.10000000000000009\n2022-11-20, 2.0, 0.30000000000000004\n2022-11-22, 1.9, -0.10000000000000009\n2022-11-22, 1.9, 0.0\n2022-11-23, 2.1, 0.20000000000000018\n2022-11-23, 2.1, 0.0\n2022-11-24, 2.4, 0.2999999999999998\n2022-11-25, 2.6, 0.20000000000000018\n2022-11-26, 2.7, 0.10000000000000009\n2022-11-27, 2.7, 0.0\n2022-11-28, 2.9, 0.19999999999999973\n2022-11-28, 3.1, 0.20000000000000018\n2022-11-30, 3.3, 0.19999999999999973\n2022-12-01, 3.6, 0.30000000000000027\n2022-12-02, 4.0, 0.3999999999999999\n2022-12-03, 4.2, 0.20000000000000018\n2022-12-04, 4.2, 0.0\n2022-12-05, 4.2, 0.0\n2022-12-06, 4.8, 0.5999999999999996\n2022-12-07, 4.9, 0.10000000000000053\n2022-12-07, 5.1, 0.1999999999999993\n2022-12-08, 5.3, 0.20000000000000018\n2022-12-09, 5.4, 0.10000000000000053\n2022-12-09, 5.5, 0.09999999999999964\n2022-12-10, 5.5, 0.0\n2022-12-11, 5.5, 0.0\n2022-12-12, 6.1, 0.5999999999999996\n2022-12-13, 6.3, 0.20000000000000018\n2022-12-14, 6.9, 0.6000000000000005\n2022-12-15, 7.3, 0.39999999999999947\n2022-12-16, 7.6, 0.2999999999999998\n2022-12-16, 7.8, 0.20000000000000018\n2022-12-17, 7.9, 0.10000000000000053\n2022-12-18, 8.1, 0.1999999999999993\n2022-12-19, 8.3, 0.20000000000000107\n2022-12-20, 8.8, 0.5\n2022-12-21, 9.0, 0.1999999999999993\n2022-12-22, 9.5, 0.5\n2022-12-31, 10.7, 1.1999999999999993\n2023-01-01, 10.8, 0.10000000000000142\n2023-01-02, 11.1, 0.29999999999999893\n2023-01-03, 11.4, 0.3000000000000007\n2023-01-04, 11.7, 0.29999999999999893\n2023-01-05, 12.2, 0.5\n2023-01-06, 12.5, 0.3000000000000007\n2023-01-07, 12.6, 0.09999999999999964\n2023-01-08, 12.6, 0.0\n2023-01-09, 12.7, 0.09999999999999964\n2023-01-10, 13.3, 0.6000000000000014\n2023-01-11, 13.7, 0.3999999999999986\n2023-01-12, 13.8, 0.10000000000000142\n2023-01-15, 14.9, 1.0999999999999996\n2023-01-16, 15.5, 0.5999999999999996\n2023-01-17, 16.4, 0.8999999999999986\n2023-01-18, 16.7, 0.3000000000000007\n2023-01-19, 17.1, 0.40000000000000213\n2023-01-22, 18.1, 1.0\n</code></pre></div>\n</div></div>",
        "id": 323029391,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674483086
    },
    {
        "content": "<p>Thanks for putting this together!</p>",
        "id": 323029713,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674483159
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Maybe you can teach it to also scrape output from my bot? That would fill in some of the gaps.</p>",
        "id": 323030476,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674483324
    },
    {
        "content": "<p>How is your bot called?</p>",
        "id": 323031389,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674483542
    },
    {
        "content": "<p>port progress bot (jmc)</p>",
        "id": 323031527,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674483581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> And maybe use <code>{stat - prev:.1f}</code>to print the final column? That way you print only 1 decimal place.</p>",
        "id": 323032319,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674483762
    },
    {
        "content": "<p>Updated scripts:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickle</span>\n<span class=\"kn\">import</span> <span class=\"nn\">zulip</span>\n\n<span class=\"c1\"># Pass the path to your zuliprc file here.</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">zulip</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s2\">\"~/.zuliprc\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"anchor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"newest\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"num_before\"</span><span class=\"p\">:</span> <span class=\"mi\">1500</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"num_after\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"narrow\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s2\">\"operator\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stream\"</span><span class=\"p\">,</span> <span class=\"s2\">\"operand\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mathlib4\"</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s2\">\"operator\"</span><span class=\"p\">:</span> <span class=\"s2\">\"sender\"</span><span class=\"p\">,</span> <span class=\"s2\">\"operand\"</span><span class=\"p\">:</span> <span class=\"s2\">\"port-progress-bot@leanprover.zulipchat.com\"</span><span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"apply_markdown\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"p\">}</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_messages</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"anchor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"newest\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"num_before\"</span><span class=\"p\">:</span> <span class=\"mi\">1500</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"num_after\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"narrow\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s2\">\"operator\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stream\"</span><span class=\"p\">,</span> <span class=\"s2\">\"operand\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mathlib4\"</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s2\">\"operator\"</span><span class=\"p\">:</span> <span class=\"s2\">\"sender\"</span><span class=\"p\">,</span> <span class=\"s2\">\"operand\"</span><span class=\"p\">:</span> <span class=\"s2\">\"port-progress-jmc-bot@leanprover.zulipchat.com\"</span><span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"apply_markdown\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"p\">}</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'messages'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_messages</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)[</span><span class=\"s1\">'messages'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Let's save the result to avoid hitting an API rate limit while testing</span>\n<span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'progress.pickle'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">))</span>\n\n<span class=\"n\">msgs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">msg</span> <span class=\"k\">for</span> <span class=\"n\">msg</span> <span class=\"ow\">in</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'messages'</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"s2\">\"all.pdf\"</span> <span class=\"ow\">in</span> <span class=\"n\">msg</span><span class=\"p\">]</span>\n<span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'portmsgs'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write_text</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">msgs</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickle</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'progress.pickle'</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">reg</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'\\(([^%]*)'</span><span class=\"p\">)</span>\n\n<span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'stats.csv'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span>\n<span class=\"n\">prev</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span>\n\n<span class=\"k\">for</span> <span class=\"n\">msg</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'messages'</span><span class=\"p\">],</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'timestamp'</span><span class=\"p\">]):</span>\n    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'content'</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"s2\">\"all.pdf\"</span> <span class=\"ow\">in</span> <span class=\"n\">content</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n    <span class=\"n\">stamp</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'timestamp'</span><span class=\"p\">])</span>\n    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">cols</span> <span class=\"o\">=</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'|'</span><span class=\"p\">)</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">cols</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n    <span class=\"n\">stat</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">fromtimestamp</span><span class=\"p\">(</span><span class=\"n\">stamp</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">, </span><span class=\"si\">{</span><span class=\"n\">stat</span><span class=\"si\">}</span><span class=\"s2\">, </span><span class=\"si\">{</span><span class=\"n\">stat</span> <span class=\"o\">-</span> <span class=\"n\">prev</span><span class=\"si\">:</span><span class=\"s2\">.1f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"n\">prev</span> <span class=\"o\">=</span> <span class=\"n\">stat</span>\n</code></pre></div>",
        "id": 323034366,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674484297
    },
    {
        "content": "<p>Updated output</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"csv\"><pre><span></span><code>2022-11-15, 1.2, 0.0\n2022-11-15, 1.2, 0.0\n2022-11-16, 1.2, 0.0\n2022-11-16, 1.2, 0.0\n2022-11-18, 1.4, 0.2\n2022-11-18, 1.8, 0.4\n2022-11-19, 1.8, 0.0\n2022-11-20, 1.7, -0.1\n2022-11-20, 2.0, 0.3\n2022-11-22, 1.9, -0.1\n2022-11-22, 1.9, 0.0\n2022-11-23, 2.1, 0.2\n2022-11-23, 2.1, 0.0\n2022-11-24, 2.4, 0.3\n2022-11-25, 2.6, 0.2\n2022-11-26, 2.7, 0.1\n2022-11-27, 2.7, 0.0\n2022-11-28, 2.9, 0.2\n2022-11-28, 3.1, 0.2\n2022-11-30, 3.3, 0.2\n2022-12-01, 3.6, 0.3\n2022-12-02, 4.0, 0.4\n2022-12-03, 4.2, 0.2\n2022-12-04, 4.2, 0.0\n2022-12-05, 4.2, 0.0\n2022-12-06, 4.8, 0.6\n2022-12-07, 4.9, 0.1\n2022-12-07, 5.1, 0.2\n2022-12-08, 5.3, 0.2\n2022-12-09, 5.4, 0.1\n2022-12-09, 5.5, 0.1\n2022-12-10, 5.5, 0.0\n2022-12-11, 5.5, 0.0\n2022-12-12, 6.1, 0.6\n2022-12-13, 6.3, 0.2\n2022-12-14, 6.9, 0.6\n2022-12-15, 7.3, 0.4\n2022-12-16, 7.6, 0.3\n2022-12-16, 7.8, 0.2\n2022-12-17, 7.9, 0.1\n2022-12-18, 8.1, 0.2\n2022-12-19, 8.3, 0.2\n2022-12-20, 8.8, 0.5\n2022-12-21, 9.0, 0.2\n2022-12-22, 9.5, 0.5\n2022-12-24, 9.7, 0.2\n2022-12-25, 10.0, 0.3\n2022-12-26, 10.0, 0.0\n2022-12-28, 10.2, 0.2\n2022-12-29, 10.4, 0.2\n2022-12-30, 10.5, 0.1\n2022-12-31, 10.6, 0.1\n2022-12-31, 10.7, 0.1\n2023-01-01, 10.8, 0.1\n2023-01-02, 11.1, 0.3\n2023-01-03, 11.4, 0.3\n2023-01-04, 11.7, 0.3\n2023-01-05, 12.2, 0.5\n2023-01-06, 12.5, 0.3\n2023-01-07, 12.6, 0.1\n2023-01-08, 12.6, 0.0\n2023-01-09, 12.7, 0.1\n2023-01-10, 13.3, 0.6\n2023-01-11, 13.7, 0.4\n2023-01-12, 13.8, 0.1\n2023-01-13, 14.8, 1.0\n2023-01-15, 14.9, 0.1\n2023-01-16, 15.5, 0.6\n2023-01-17, 16.4, 0.9\n2023-01-18, 16.7, 0.3\n2023-01-19, 17.1, 0.4\n2023-01-20, 17.7, 0.6\n2023-01-21, 18.0, 0.3\n2023-01-22, 18.1, 0.1\n</code></pre></div>\n</div></div>",
        "id": 323034636,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674484360
    },
    {
        "content": "<p>I assume the bot works by checking out the repository, then running some script to get the graphs and the values. You could add a step where you check out a commit at a previous date like <code>git checkout 'master@{1979-02-26 18:30:00}'</code> but with the time a day ago (<a href=\"https://stackoverflow.com/a/6990682\">https://stackoverflow.com/a/6990682</a>), calculate the stats, and do the delta calculation</p>",
        "id": 323061384,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1674490890
    },
    {
        "content": "<p>I think it's messier than that because the bot works by scraping the wiki page and checking out mathlib HEAD</p>",
        "id": 323061813,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674490982
    },
    {
        "content": "<p>The wiki page is just generated by another bot though!</p>",
        "id": 323061929,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674491008
    },
    {
        "content": "<p>I think we're mostly interested in seeing trends, so maybe it's not worth the effort.<br>\nCalculating the stats is quite expensive. The bot usually runs for ~30 mins to do the calculations for a single day.</p>",
        "id": 323062001,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674491024
    },
    {
        "content": "<p>Isn't 95% of that work producing the chains though?</p>",
        "id": 323062796,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674491196
    },
    {
        "content": "<p>Computing the number of ported lines/files should be super cheap</p>",
        "id": 323062898,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674491218
    },
    {
        "content": "<p>Today is the first time I'm trying to port something since before the <code>start_port</code> script was created. Do we need to manually change the <a href=\"https://math.commelin.net/files/port_status.html\">port status page</a> like in the olden days, or is this automatic now?</p>",
        "id": 323074449,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1674494129
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/old\">#port-status</a> is generated automatically (on GitHub every half hour) from <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a> which is generated automatically (on Reid's server every ???) by reading the mathlib4 history, the open mathlib4 PRs, and <a href=\"https://github.com/leanprover-community/mathlib4/wiki/port-comments/_edit\">https://github.com/leanprover-community/mathlib4/wiki/port-comments/_edit</a></p>",
        "id": 323076016,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674494542
    },
    {
        "content": "<p>So it's automatic once you create the PR I think</p>",
        "id": 323076461,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674494681
    },
    {
        "content": "<p>okay great. Thanks</p>",
        "id": 323076489,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1674494691
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">#port-wiki</a> is also generated every half hour, on my server.</p>",
        "id": 323077765,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674495042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> it runs 0 mod 30.</p>",
        "id": 323077932,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674495087
    },
    {
        "content": "<p>When does it usually complete?</p>",
        "id": 323077979,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674495103
    },
    {
        "content": "<p>Should I make that -5 mod 30?</p>",
        "id": 323077982,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674495104
    },
    {
        "content": "<p>Done</p>",
        "id": 323078173,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674495151
    },
    {
        "content": "<p>Yes, because the webpage is running at 0 mod 30 also :)</p>",
        "id": 323078175,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674495152
    },
    {
        "content": "<p>Although in practice it seems the github cron job is running 5 minutes behind anyway</p>",
        "id": 323078284,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674495189
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-24/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>263/272</td>\n<td>(96.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>107451/111134</td>\n<td>(96.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-24/order.filter.basic\">Longest unported chain</a>:</td>\n<td>1/47</td>\n<td>(97.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323084433,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674496974
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-24/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18793/31951</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-24/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323085115,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674497178
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-24/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">number_theory.legendre_symbol.quadratic_reciprocity</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>476/1027</td>\n<td>(46.3% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>161907/436701</td>\n<td>(37.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-24/number_theory.legendre_symbol.quadratic_reciprocity\">Longest unported chain</a>:</td>\n<td>58/103</td>\n<td>(43.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323085912,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674497427
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-24/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>333/355</td>\n<td>(93.8% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>129313/145683</td>\n<td>(88.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-24/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>7/52</td>\n<td>(86.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323086483,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674497636
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-24/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>425/573</td>\n<td>(74.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>153547/243584</td>\n<td>(63.0% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-24/data.complex.basic\">Longest unported chain</a>:</td>\n<td>33/79</td>\n<td>(58.2% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323087107,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674497850
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-24/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>411/521</td>\n<td>(78.9% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>151076/225304</td>\n<td>(67.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-24/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>27/73</td>\n<td>(63.0% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323087743,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674498067
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-24/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>636/2887</td>\n<td>(22.0% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>185138/986704</td>\n<td>(18.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-24/all\">Longest unported chain</a>:</td>\n<td>79/125</td>\n<td>(36.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323092303,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674499529
    },
    {
        "content": "<p><code>+0.7%</code> lines :0  y'all are cruising</p>",
        "id": 323109865,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674505022
    },
    {
        "content": "<p>@porters I added <a href=\"https://github.com/leanprover-community/mathlib4/wiki/port-comments\">#port-comments</a> as linkifier to the wiki page where you can add comments about files.</p>",
        "id": 323174818,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674542406
    },
    {
        "content": "<p>Can you add me to @ porters?</p>",
        "id": 323176264,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674543123
    },
    {
        "content": "<p>It doesn't actually exist. But I guess it makes sense to make it.</p>",
        "id": 323176314,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674543139
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-25/order.filter.basic.pdf\">order.filter.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>263/272</td>\n<td>(96.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>107461/111144</td>\n<td>(96.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-25/order.filter.basic\">Longest unported chain</a>:</td>\n<td>1/47</td>\n<td>(97.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323318525,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674583422
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-25/category_theory.limits.yoneda.pdf\">category_theory.limits.yoneda</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>53/92</td>\n<td>(57.6% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>18793/31951</td>\n<td>(58.8% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-25/category_theory.limits.yoneda\">Longest unported chain</a>:</td>\n<td>16/36</td>\n<td>(55.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323319224,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674583626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <code>order.filter.basic</code> should be removed, it has been ported. Also it may be nice to tweak the computation to remove files that typically won't be ported, so that a ported file hits 100% porting.</p>",
        "id": 323319329,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674583655
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-25/number_theory.legendre_symbol.quadratic_reciprocity.pdf\">number_theory.legendre_symbol.quadratic_reciprocity</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>492/1020</td>\n<td>(48.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>168174/435032</td>\n<td>(38.7% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-25/number_theory.legendre_symbol.quadratic_reciprocity\">Longest unported chain</a>:</td>\n<td>57/103</td>\n<td>(44.7% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323320151,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674583874
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-25/linear_algebra.basic.pdf\">linear_algebra.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>335/355</td>\n<td>(94.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>129875/145704</td>\n<td>(89.1% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-25/linear_algebra.basic\">Longest unported chain</a>:</td>\n<td>6/52</td>\n<td>(88.5% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323320931,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674584082
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-25/data.complex.basic.pdf\">data.complex.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>436/571</td>\n<td>(76.4% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>158979/243261</td>\n<td>(65.4% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-25/data.complex.basic\">Longest unported chain</a>:</td>\n<td>28/79</td>\n<td>(64.6% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323321868,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674584297
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-25/topology.metric_space.basic.pdf\">topology.metric_space.basic</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>423/521</td>\n<td>(81.2% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>156851/225350</td>\n<td>(69.6% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-25/topology.metric_space.basic\">Longest unported chain</a>:</td>\n<td>22/73</td>\n<td>(69.9% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323322622,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674584514
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>mathlib port progress</th>\n<th><a href=\"https://tqft.net/mathlib4/2023-01-25/all.pdf\">all</a></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ported files:</td>\n<td>656/2889</td>\n<td>(22.7% of total)</td>\n</tr>\n<tr>\n<td>Ported lines:</td>\n<td>192930/987461</td>\n<td>(19.5% of total)</td>\n</tr>\n<tr>\n<td><a href=\"https://tqft.net/mathlib4/2023-01-25/all\">Longest unported chain</a>:</td>\n<td>74/125</td>\n<td>(40.8% progress)</td>\n</tr>\n</tbody>\n</table>",
        "id": 323327276,
        "sender_full_name": "port-progress bot",
        "timestamp": 1674585789
    },
    {
        "content": "<p><code>0.8%</code></p>",
        "id": 323347701,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674592320
    }
]