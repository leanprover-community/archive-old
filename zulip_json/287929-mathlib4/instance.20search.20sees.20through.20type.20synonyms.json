[
    {
        "content": "<p>on <a href=\"https://github.com/leanprover-community/mathlib4/pull/783\">mathlib4#783</a> I ran into a very concerning issue. The declaration <code>toLex_mono</code> (and similarly <code>toLex_strictMono</code>) picks up the wrong <code>Preorder</code> instance on <code>α ×ₗ β</code> despite having the type annotation <code>toLex : α × β → α ×ₗ β</code>.  It instead uses the non-lexicographic preorder (i.e., the <code>prod</code> preorder) on <code>α ×ₗ β</code>. This seems like a bug and an important one to fix (it took me a while to figure out this was the problem when the proof was just randomly broken). I don't think Lean should be blasting right through type synonyms on its type class search.</p>",
        "id": 312898146,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669743891
    },
    {
        "content": "<p>Hopefully this is covered by <a href=\"https://github.com/leanprover/lean4/issues/1891\">https://github.com/leanprover/lean4/issues/1891</a>, for which we'll have a fix tomorrow.</p>",
        "id": 312899837,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669744352
    },
    {
        "content": "<p>It is at least a related error, but I haven't thought about whether it applies here.</p>",
        "id": 312899901,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669744375
    },
    {
        "content": "<p>That seems like the same issue, thanks.</p>",
        "id": 312900051,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669744427
    }
]