[
    {
        "content": "<p>What is going on here:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/1533/files/ec405d34bae2304c182a23dca1c837b8a64345a2..0be92107cc77e97b4ec8f20e05726949aa1ff589#diff-47bee4d5d541b324b8e862bd34fb26d5418196a7a26f85b367f4985b9b0a96edR124-R147\">https://github.com/leanprover-community/mathlib4/pull/1533/files/ec405d34bae2304c182a23dca1c837b8a64345a2..0be92107cc77e97b4ec8f20e05726949aa1ff589#diff-47bee4d5d541b324b8e862bd34fb26d5418196a7a26f85b367f4985b9b0a96edR124-R147</a></p>",
        "id": 321179015,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673621187
    },
    {
        "content": "<p><code>simp</code> seems to be doing pretty wicked things, if it proves <code>sup_s_one</code> using <code>sup_s_zero</code>.</p>",
        "id": 321179137,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673621230
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Porting note: Use something like `@[to_additive (attr := simp)]` instead.</span>\n<span class=\"c1\">-- However, this makes a simpNF error like:</span>\n<span class=\"c1\">--  `supₛ_one` can be proved like `by simp only [@supₛ_zero]`</span>\n<span class=\"c1\">-- So the `simp` attribute is written below the definition.</span>\n<span class=\"kd\">@[to_additive]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">supₛ_one</span> <span class=\"o\">:</span> <span class=\"n\">supₛ</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">supₛ_zero</span>\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">supₛ_one</span>\n</code></pre></div>",
        "id": 321179185,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673621247
    },
    {
        "content": "<p>What's the statement of <code>supₛ_zero</code> that it generates?</p>",
        "id": 321188877,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673623782
    },
    {
        "content": "<p>It is <code>supₛ (0 : Set α) = 0</code>.</p>",
        "id": 321190407,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1673624186
    }
]