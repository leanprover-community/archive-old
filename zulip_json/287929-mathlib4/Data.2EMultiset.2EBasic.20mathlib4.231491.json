[
    {
        "content": "<p>This file is now red-error free. Still needs to be linted.</p>",
        "id": 320927663,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673527231
    },
    {
        "content": "<p>A script just fixed at least 128 warnings.</p>",
        "id": 320941318,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673531315
    },
    {
        "content": "<p>And I manually fixed the rest</p>",
        "id": 320941890,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673531478
    },
    {
        "content": "<p>The style lint is still failing</p>",
        "id": 320942562,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673531663
    },
    {
        "content": "<p>Sure, that's the style linter</p>",
        "id": 320942758,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673531714
    },
    {
        "content": "<p>I was only talking about the orange warnings that lean yells about</p>",
        "id": 320942851,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673531742
    },
    {
        "content": "<p>There's also a <code>MOVETHIS</code> at the top of the file</p>",
        "id": 320942961,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673531767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Data.2EMultiset.2EBasic.20mathlib4.231491/near/320941318\">said</a>:</p>\n<blockquote>\n<p>A script just fixed at least 128 warnings.</p>\n</blockquote>\n<p>What is this magic script?</p>",
        "id": 320943127,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673531827
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1506\">https://github.com/leanprover-community/mathlib4/pull/1506</a></p>",
        "id": 320943232,
        "sender_full_name": "Reid Barton",
        "timestamp": 1673531864
    },
    {
        "content": "<p>We still need to do a thorough review of all the names and comments in this file</p>",
        "id": 320944890,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673532188
    },
    {
        "content": "<p>I will try to #lint this file</p>",
        "id": 321022878,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673553505
    },
    {
        "content": "<p>Hmm, the simpNF linter is again flagging stuff proved by <code>rfl</code>.</p>",
        "id": 321023850,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673553801
    },
    {
        "content": "<p>How do <code>dsimp</code>-lemmas work in Lean 4?</p>",
        "id": 321023905,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673553818
    },
    {
        "content": "<p>I fixed some of the issues. But I'm wrapping up for today.</p>",
        "id": 321032557,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673556923
    },
    {
        "content": "<p>Feel free to take over</p>",
        "id": 321032571,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673556927
    },
    {
        "content": "<p>I've fixed all linter issues apart from two <code>rfl</code>-lemmas that are being flagged.</p>",
        "id": 321091803,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673592453
    },
    {
        "content": "<p>I think we discussed this before, but I don't remember the outcome of the discussion.</p>",
        "id": 321091836,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673592477
    },
    {
        "content": "<p>what are the lemmas?</p>",
        "id": 321092210,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673592705
    },
    {
        "content": "<p><code>card_zero</code> and <code>repeat_zero</code></p>",
        "id": 321092286,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673592727
    },
    {
        "content": "<p>can you show the statements and linter warning?</p>",
        "id": 321092323,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673592748
    },
    {
        "content": "<p>linter warnings: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/3909072917/jobs/6679787663\">https://github.com/leanprover-community/mathlib4/actions/runs/3909072917/jobs/6679787663</a></p>",
        "id": 321092379,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673592784
    },
    {
        "content": "<p><code>card_zero</code>: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1491/files#diff-07ba42052058b6083d37fbda9b61f7a49451cc86a6aadc5ef5943ace65c2a193R754\">https://github.com/leanprover-community/mathlib4/pull/1491/files#diff-07ba42052058b6083d37fbda9b61f7a49451cc86a6aadc5ef5943ace65c2a193R754</a></p>",
        "id": 321092425,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673592827
    },
    {
        "content": "<p><code>repeat_zero</code>: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1491/files#diff-07ba42052058b6083d37fbda9b61f7a49451cc86a6aadc5ef5943ace65c2a193R928\">https://github.com/leanprover-community/mathlib4/pull/1491/files#diff-07ba42052058b6083d37fbda9b61f7a49451cc86a6aadc5ef5943ace65c2a193R928</a></p>",
        "id": 321092488,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673592852
    },
    {
        "content": "<p>so the issue is that these are rfl lemmas but the linter wants you to prove them by simp?</p>",
        "id": 321092505,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673592865
    },
    {
        "content": "<p>Are they provable by dsimp?</p>",
        "id": 321092519,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673592876
    },
    {
        "content": "<p>nope, at least <code>card_zero</code> isnt</p>",
        "id": 321092531,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673592886
    },
    {
        "content": "<p>that at least seems like something the linter could take into account</p>",
        "id": 321092578,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673592929
    },
    {
        "content": "<p>that is, if the proof is rfl then it should only use dsimp and dsimp lemmas when trying to check whether it is provable</p>",
        "id": 321092663,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673592974
    },
    {
        "content": "<p>I agree</p>",
        "id": 321092755,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673593044
    },
    {
        "content": "<p>Shall I <code>nolint</code> with a porting note?</p>",
        "id": 321092766,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673593059
    },
    {
        "content": "<p>you should confirm that dsimp does not prove them</p>",
        "id": 321092837,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673593090
    },
    {
        "content": "<p>VScode knows how to highlight a bit of code in a comment. <code>/-- hi some `code` here -/</code>. Is there some magic that allows me to jump to the next such <code>code</code> position?</p>",
        "id": 321094890,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673594342
    },
    {
        "content": "<p>In lean 3 there was an issue that perhaps <code>dsimp</code> didn't work at that point in the file but it worked later on in the file (or maybe after other files had been imported?) And the linter would catch this. Is that still an issue</p>",
        "id": 321095378,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673594632
    },
    {
        "content": "<p>I think this PR is ready for review</p>",
        "id": 321097738,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673595758
    },
    {
        "content": "<p>Can someone please check the final commit: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1491/commits/463207b5f2fa84a465dabbfb440332fb8ce352fd\">https://github.com/leanprover-community/mathlib4/pull/1491/commits/463207b5f2fa84a465dabbfb440332fb8ce352fd</a></p>",
        "id": 321097755,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673595768
    },
    {
        "content": "<p>It contains some naming fixes that I wasn't sure about</p>",
        "id": 321097788,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673595779
    },
    {
        "content": "<p>The rest should be uncontroversial</p>",
        "id": 321097807,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673595785
    },
    {
        "content": "<p>I don't understand why <code>foldrInduction</code> rather than <code>foldr_induction</code></p>",
        "id": 321103033,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673598072
    },
    {
        "content": "<p>But also I've seen a few <code>fooInduction</code>s before (and didn't understand those either)</p>",
        "id": 321103095,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673598097
    },
    {
        "content": "<p>Well, there's also <code>Quot.inductionOn2</code> in its proof</p>",
        "id": 321103100,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598100
    },
    {
        "content": "<p>Ooh wait, that was a different induction principle. Let me find it</p>",
        "id": 321103410,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598228
    },
    {
        "content": "<p>I meant <a href=\"https://github.com/leanprover-community/mathlib4/pull/1491/files#diff-07ba42052058b6083d37fbda9b61f7a49451cc86a6aadc5ef5943ace65c2a193R560\">https://github.com/leanprover-community/mathlib4/pull/1491/files#diff-07ba42052058b6083d37fbda9b61f7a49451cc86a6aadc5ef5943ace65c2a193R560</a></p>",
        "id": 321103557,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598277
    },
    {
        "content": "<p>So I no longer understand when to <span aria-label=\"camel\" class=\"emoji emoji-1f42b\" role=\"img\" title=\"camel\">:camel:</span> and when to <span aria-label=\"snake\" class=\"emoji emoji-1f40d\" role=\"img\" title=\"snake\">:snake:</span></p>",
        "id": 321103626,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598307
    },
    {
        "content": "<p>What's the scenario?</p>",
        "id": 321103891,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673598426
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Data.2EMultiset.2EBasic.20mathlib4.231491/near/321097755\">said</a>:</p>\n<blockquote>\n<p>Can someone please check the final commit: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1491/commits/463207b5f2fa84a465dabbfb440332fb8ce352fd\">https://github.com/leanprover-community/mathlib4/pull/1491/commits/463207b5f2fa84a465dabbfb440332fb8ce352fd</a></p>\n</blockquote>\n<p><span aria-label=\"this\" class=\"emoji emoji-1f446\" role=\"img\" title=\"this\">:this:</span></p>",
        "id": 321103924,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598444
    },
    {
        "content": "<p>is it a proof -&gt; snake case</p>",
        "id": 321103947,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673598458
    },
    {
        "content": "<p>so what about <code>Quotient.inductionOn2</code>?</p>",
        "id": 321104010,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598480
    },
    {
        "content": "<p>That's in core, and is <span aria-label=\"camel\" class=\"emoji emoji-1f42b\" role=\"img\" title=\"camel\">:camel:</span></p>",
        "id": 321104064,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598489
    },
    {
        "content": "<p>Is that a bug?</p>",
        "id": 321104074,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673598493
    },
    {
        "content": "<p>Should we use <code>¬p</code> or <code>!p</code> for <code>p : Bool</code>?</p>",
        "id": 321104091,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673598499
    },
    {
        "content": "<p>is it in core -&gt; assume it hasn't been vetted</p>",
        "id": 321104097,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673598501
    },
    {
        "content": "<p>Because now we're getting goals like <code>filter p l ++ filter (fun x =&gt; decide ¬p x = true) l ~ l</code></p>",
        "id": 321104180,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673598537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Data.2EMultiset.2EBasic.20mathlib4.231491/near/321104091\">said</a>:</p>\n<blockquote>\n<p>Should we use <code>¬p</code> or <code>!p</code> for <code>p : Bool</code>?</p>\n</blockquote>\n<p><code>¬p</code></p>",
        "id": 321104274,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673598600
    },
    {
        "content": "<p>lemmas using <code>!p</code> might exist but they will be the more specialized ones</p>",
        "id": 321104369,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673598638
    },
    {
        "content": "<p>I'll fix the <code>foldrInduction</code> name</p>",
        "id": 321105581,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673599092
    },
    {
        "content": "<p>done</p>",
        "id": 321105808,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673599194
    },
    {
        "content": "<p>I think I sent a bunch of multiset PRs to mathlib3 bors last night, and forgot to check if there was an open mathlib4 PR</p>",
        "id": 321107253,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673599763
    },
    {
        "content": "<p>let's just put those off until the next update</p>",
        "id": 321107309,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673599792
    },
    {
        "content": "<p>the mathlib4 PR is basically ready to go</p>",
        "id": 321107357,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673599803
    },
    {
        "content": "<p>I moved the <code>MOVETHIS</code> section that was at the top of the file</p>",
        "id": 321107998,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673600020
    },
    {
        "content": "<p>PR should now be ready</p>",
        "id": 321108011,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673600025
    },
    {
        "content": "<p>Made some more comments on the PR.</p>\n<p>(I noticed that <a href=\"https://github.com/leanprover-community/mathlib/pull/15910\">#15910</a> needs a port, but let's wait until this one is merged)</p>",
        "id": 321111399,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673601167
    },
    {
        "content": "<p>We can do a pass to catch everything that touched <code>data.multiset.basic</code> in the meantime.</p>",
        "id": 321111977,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673601395
    },
    {
        "content": "<p>Yeah let's get this merged. Well done everyone, these files are hard.</p>",
        "id": 321116137,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673602790
    }
]