[
    {
        "content": "<p>A public service announcement about Lean 4 versions.</p>\n<p>You may see in mathlib4 master (and some branches), <code>lean-toolchain</code> points to <code>semorrison/lean4:fix-1907</code> right now. We have not forked Lean 4! :-)</p>\n<p>The lean4-nightly repository generates releases ... nightly! When we have a critical fix to Lean 4 that affects mathlib4, it is easy for us to generate an unofficial release. All you do is clone the lean4 repo, create a tag (e.g. <code>git tag ABC</code>) and then push it to some fork of the repo (<code>git push fork ABC</code>). CI will then automatically kick in, and produce a release that <code>elan</code> knows how to handle simply by putting the repo and tag in <code>lean-toolchain</code> as above.</p>\n<p>One gotcha is that elan/github seems unhappy if the tag name is numeric (it prepends a <code>v</code> when looking for a file, and fails).</p>\n<p>It's completely fine to bump Lean 4 back to a nightly version as long as a day has passed and the tagged commit has been incorporated in a lean4-nightly release. Hopefully this will be the exceptional case, and this won't come up very often.</p>\n<p>If it would make people happier we could do this at a leanprover-community fork, rather than an individual's; but as this is intended as a very temporary measure hopefully this is fine. (And makes clear we are not forking!!! :-)</p>",
        "id": 313610064,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670025194
    },
    {
        "content": "<p>rn I'm getting the error <code>error: toolchain 'semorrison/lean4:fix-1907' does not have the binary </code>/Users/arienmalec/.elan/toolchains/semorrison--lean4---fix-1907/bin/lake`</p>",
        "id": 313610551,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670025509
    },
    {
        "content": "<p>Oh dear...</p>",
        "id": 313610766,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670025626
    },
    {
        "content": "<p>I overrode with the latest nightly....</p>",
        "id": 313610887,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670025667
    },
    {
        "content": "<p>Can you try deleting that toolchain (or possibly even <code>~/.elan</code>) and trying again, just in case it is a transient issue?</p>",
        "id": 313610943,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670025701
    },
    {
        "content": "<p>But it does seem suspicious. Could anyone confirm it is working for them?</p>",
        "id": 313610960,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670025713
    },
    {
        "content": "<p>Works for me on Linux.</p>",
        "id": 313611368,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1670025941
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/intermediate.20versions/near/313610064\">said</a>:</p>\n<blockquote>\n<p>You may see in mathlib4 master (and some branches), <code>lean-toolchain</code> points to <code>semorrison/lean4:fix-1907</code> right now. We have not forked Lean 4! :-)</p>\n</blockquote>\n<p>Well, it <em>is</em> a fork of the repo, so...</p>",
        "id": 313611826,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670026207
    },
    {
        "content": "<p>I'm pretty borked. I'll wipe &amp; re-clone.</p>",
        "id": 313612164,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670026427
    },
    {
        "content": "<p>ugh -- still borked -- how do I force lean to retry download?</p>",
        "id": 313612647,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670026700
    },
    {
        "content": "<p>OK, wiped <code>elan</code>  and all good.</p>",
        "id": 313613055,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670026978
    }
]