[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> and zeramorphic you have a race-condition: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1176\">mathlib4#1176</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/1175\">mathlib4#1175</a></p>",
        "id": 317472486,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671754103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span> = zeramorphic it seems</p>",
        "id": 317472535,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671754151
    },
    {
        "content": "<p>Oh wow, I guess we both started working on the file at the same time - I checked the open PRs but there wasn't anything at the time!</p>",
        "id": 317474605,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1671755458
    },
    {
        "content": "<p>Our branches are almost the same, but we made some different choices in naming convention: for lemmas like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Pairwise</span> <span class=\"o\">(</span><span class=\"n\">Disjoint</span> <span class=\"n\">on</span> <span class=\"k\">fun</span> <span class=\"n\">c</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">cond</span> <span class=\"n\">c</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">Disjoint</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>I chose <code>pairwise_disjoint_on_bool</code>, and Frédéric chose <code>pairwiseDisjoint_on_bool</code> - I <em>think</em> that mine is correct because <code>PairwiseDisjoint</code> isn't the hypothesis. Additionally, there's a panic in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1176\">mathlib4#1176</a> on line 68(ish) that doesn't occur on my copy (probably due to a difference in capitalisation). I also golfed some of the unnecessary uses of <code>Set.</code> before lemma names in invocations of <code>simp</code> etc.</p>",
        "id": 317475567,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1671755987
    },
    {
        "content": "<p>I did have some incorrect names later in the file that Frédéric did correctly - I've fixed all of them that I saw on my PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/1175\">mathlib4#1175</a>.</p>",
        "id": 317475664,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1671756040
    },
    {
        "content": "<p>Oh! Yeah, we must have worked on it at the same time.</p>",
        "id": 317476201,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671756396
    },
    {
        "content": "<p>For <code>pairwise_disjoint_on_bool</code> I hesitated a bit, and I went with <code>pairwiseDisjoint_on_bool</code> since there are similar lemmas lower down that are in the <code>PairwiseDisjoint</code> namespace.</p>",
        "id": 317476331,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671756484
    },
    {
        "content": "<p>I don't know why the panic happened in this file (it also crashed my VS Code language server) but changing <code>Injective</code> to <code>injective</code> fixed it. It's strange to me that something like that caused the language server to completely crash.</p>",
        "id": 317476338,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1671756490
    },
    {
        "content": "<p>Yes, this looks like a bug.</p>",
        "id": 317476378,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671756523
    },
    {
        "content": "<p>Let's use your PR since you already started \"merging\" the two.</p>",
        "id": 317476418,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671756563
    },
    {
        "content": "<p>Ok, great. I've copied through a lot of your naming changes. There are a couple of other small aesthetic changes I made to the file as well, feel free to take a look over and revert any of them! I tend to prefer <code>_x</code> rather than <code>_</code> for example, if there's additionally a hypothesis <code>hx</code> or something else referencing the name <code>x</code>.</p>",
        "id": 317476559,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1671756661
    },
    {
        "content": "<p>Hmm, sorry for that race condition.</p>",
        "id": 317493610,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671771694
    },
    {
        "content": "<p><a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> is updated every 30 mins. So there is actually quite a window for such race conditions.</p>",
        "id": 317493663,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671771729
    },
    {
        "content": "<p>running the port status script by hand makes race conditions very unlikely, but I think in this case it was almost exactly at the same time. If this happens more frequently (which I honestly doubt) we might have consider returning to a long list with manually claiming files</p>",
        "id": 317495314,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1671773186
    },
    {
        "content": "<p>Agreed, let's hope it is indeed rare.</p>",
        "id": 317495387,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671773264
    },
    {
        "content": "<p>Another possibility is that when people start on new files they announce it on this stream. Note that it would also occasionally happen with the old system too.</p>",
        "id": 317517410,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671785673
    },
    {
        "content": "<p>I'd suggest people run the new script and then push immediately. That way you're guaranteed that github will tell you off if that branch already exists</p>",
        "id": 317518650,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671786145
    },
    {
        "content": "<p>But not push to master, of course</p>",
        "id": 317524977,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671788381
    },
    {
        "content": "<p>Well, I tried to to exactly this and of course I pushed to master. I am a little bit confused, since VS Code was showing the new branch, but the usual button I use to push did it on master.</p>",
        "id": 317525202,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671788445
    },
    {
        "content": "<p>Odd</p>",
        "id": 317525936,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671788664
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/m2qB4tRi2rRL2BQRDAhjb-17/image.png\">image.png</a><br>\nThis is my VS code after running the script (I was on master before). It is on the new branch, but if I click on the button it pushes to master, as indicated (I didn't notice it before).</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/m2qB4tRi2rRL2BQRDAhjb-17/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/m2qB4tRi2rRL2BQRDAhjb-17/image.png\"></a></div>",
        "id": 317526480,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671788896
    },
    {
        "content": "<p>Can you show the full terminal output from running the script?</p>",
        "id": 317526544,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671788924
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code> ./scripts/start_port.sh Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+ <span class=\"nb\">set</span> -o pipefail\n+ <span class=\"nv\">MATHLIB3PORT_BASE_URL</span><span class=\"o\">=</span>https://raw.githubusercontent.com/leanprover-community/mathlib3port/master\n+ <span class=\"nv\">PORT_STATUS_YAML</span><span class=\"o\">=</span>https://raw.githubusercontent.com/wiki/leanprover-community/mathlib/mathlib4-port-status.md\n+ <span class=\"nv\">TMP_FILE</span><span class=\"o\">=</span>start_port_tmp.lean\n+ <span class=\"nv\">mathlib4_path</span><span class=\"o\">=</span>Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+++ <span class=\"nb\">echo</span> Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+++ tr / .\n++ basename Mathlib.Order.ConditionallyCompleteLattice.Basic.lean .lean\n+ <span class=\"nv\">mathlib4_mod</span><span class=\"o\">=</span>Mathlib.Order.ConditionallyCompleteLattice.Basic\n+ <span class=\"nv\">mathlib3port_url</span><span class=\"o\">=</span>https://raw.githubusercontent.com/leanprover-community/mathlib3port/master/Mathbin/Order/ConditionallyCompleteLattice/Basic.lean\n+ curl --silent --show-error -o start_port_tmp.lean https://raw.githubusercontent.com/leanprover-community/mathlib3port/master/Mathbin/Order/ConditionallyCompleteLattice/Basic.lean\n++ grep <span class=\"s1\">'^! .*source module '</span>\n++ sed <span class=\"s1\">'s/.*source module \\(.*\\)$/\\1/'</span>\n+ <span class=\"nv\">mathlib3_module</span><span class=\"o\">=</span>order.conditionally_complete_lattice.basic\n+ curl --silent --show-error https://raw.githubusercontent.com/wiki/leanprover-community/mathlib/mathlib4-port-status.md\n+ grep -F <span class=\"s1\">'order.conditionally_complete_lattice.basic: '</span>\n+ grep mathlib4#\n++ dirname Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+ mkdir -p Mathlib/Order/ConditionallyCompleteLattice\n+ mv start_port_tmp.lean Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+ git fetch\n+ <span class=\"nv\">branch_name</span><span class=\"o\">=</span>port/Order.ConditionallyCompleteLattice.Basic\n+ git checkout -b port/Order.ConditionallyCompleteLattice.Basic origin/master\nLa branche <span class=\"s1\">'port/Order.ConditionallyCompleteLattice.Basic'</span> est paramétrée pour suivre la branche distante <span class=\"s1\">'master'</span> depuis <span class=\"s1\">'origin'</span>.\nBasculement sur la nouvelle branche <span class=\"s1\">'port/Order.ConditionallyCompleteLattice.Basic'</span>\n+ git add Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+ git commit -m <span class=\"s1\">'Initial file copy from mathport'</span>\n<span class=\"o\">[</span>port/Order.ConditionallyCompleteLattice.Basic e732abe0<span class=\"o\">]</span> Initial file copy from mathport\n <span class=\"m\">1</span> file changed, <span class=\"m\">1484</span> insertions<span class=\"o\">(</span>+<span class=\"o\">)</span>\n create mode <span class=\"m\">100644</span> Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+ sed -i <span class=\"s1\">'s/Mathbin\\./Mathlib\\./g'</span> Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+ <span class=\"nb\">echo</span> <span class=\"s1\">'import Mathlib.Order.ConditionallyCompleteLattice.Basic'</span>\n+ cat Mathlib.lean\n+ <span class=\"nv\">LC_ALL</span><span class=\"o\">=</span>C\n+ sort\n+ mv -f Mathlib.lean.tmp Mathlib.lean\n+ git add Mathlib.lean Mathlib/Order/ConditionallyCompleteLattice/Basic.lean\n+ git commit -m <span class=\"s1\">'Mathbin -&gt; Mathlib; add import to Mathlib.lean'</span>\n<span class=\"o\">[</span>port/Order.ConditionallyCompleteLattice.Basic b9b71d3a<span class=\"o\">]</span> Mathbin -&gt; Mathlib<span class=\"p\">;</span> add import to Mathlib.lean\n <span class=\"m\">2</span> files changed, <span class=\"m\">5</span> insertions<span class=\"o\">(</span>+<span class=\"o\">)</span>, <span class=\"m\">4</span> deletions<span class=\"o\">(</span>-<span class=\"o\">)</span>\n</code></pre></div>",
        "id": 317526617,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671788953
    },
    {
        "content": "<p>sorry for the french...</p>",
        "id": 317526650,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671788968
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"n\">port</span><span class=\"bp\">/</span><span class=\"n\">Order.ConditionallyCompleteLattice.Basic</span> <span class=\"n\">origin</span><span class=\"bp\">/</span><span class=\"n\">master</span>\n<span class=\"n\">La</span> <span class=\"n\">branche</span> <span class=\"bp\">'</span><span class=\"n\">port</span><span class=\"bp\">/</span><span class=\"n\">Order.ConditionallyCompleteLattice.Basic'</span> <span class=\"n\">est</span> <span class=\"n\">param</span><span class=\"bp\">é</span><span class=\"n\">tr</span><span class=\"bp\">é</span><span class=\"n\">e</span> <span class=\"n\">pour</span> <span class=\"n\">suivre</span> <span class=\"n\">la</span> <span class=\"n\">branche</span> <span class=\"n\">distante</span> <span class=\"bp\">'</span><span class=\"n\">master'</span> <span class=\"n\">depuis</span> <span class=\"bp\">'</span><span class=\"n\">origin'.</span>\n</code></pre></div>\n<p>That sounds suspicious</p>",
        "id": 317526729,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671789002
    },
    {
        "content": "<p>What does <code>git branch --unset-upstream port/Order.ConditionallyCompleteLattice.Basic</code> do?</p>",
        "id": 317526945,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671789076
    },
    {
        "content": "<p>I suspect adding that line to the script would solve the problem</p>",
        "id": 317527134,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671789138
    },
    {
        "content": "<p>No output</p>",
        "id": 317527143,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671789144
    },
    {
        "content": "<p>Ok, but is vscode now not offering a push to master?</p>",
        "id": 317527169,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671789156
    },
    {
        "content": "<p>You might need to refresh the UI somehow, vscode doesn't know when you run command line things</p>",
        "id": 317527215,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671789171
    },
    {
        "content": "<p>It now says \"publish branch\", that is the expected behavior I guess</p>",
        "id": 317527618,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671789325
    },
    {
        "content": "<p>So the correct fix is either to add the <code>--unset-upstream</code> command as I do above (edit: or the equivalent <code>--no-track</code> at creation time), or have the script just push the branch immediately to the right place, at which point it can correct the tracking reference to the right one</p>",
        "id": 317527669,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671789352
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1182\">mathlib4#1182</a></p>",
        "id": 317528014,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671789466
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Thanks for that fix!</p>",
        "id": 317528963,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671789775
    },
    {
        "content": "<p>It might still be worth having it immediately push the branch, but then the script needs to learn to handle cases where someone else already pushed the same branch, so I left that for a follow-up</p>",
        "id": 317530724,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671790414
    },
    {
        "content": "<p>We might want to disable force-pushes for <code>port/*</code> branches to avoid people accidentally cloberring each other's work</p>",
        "id": 317530845,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671790450
    },
    {
        "content": "<p>Does github support that? If so, sounds like a good idea.</p>",
        "id": 317533882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671791475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Data.2ESet.2EPairwise/near/317530724\">said</a>:</p>\n<blockquote>\n<p>It might still be worth having it immediately push the branch, but then the script needs to learn to handle cases where someone else already pushed the same branch, so I left that for a follow-up</p>\n</blockquote>\n<p>Well, the only thing the script needs to do is error, which git will do by default :)</p>",
        "id": 317535333,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671792025
    },
    {
        "content": "<p>It needs to detect the error and explain what went wrong, otherwise people will claim there is a bug in the script :)</p>",
        "id": 317537410,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671792691
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Data.2ESet.2EPairwise/near/317493610\">said</a>:</p>\n<blockquote>\n<p>Hmm, sorry for that race condition.</p>\n</blockquote>\n<p>No need to apologise - from what I can tell, we both started making our PRs so close to each other that even updating <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> every time a branch was created might even be too slow! I think the solution with the new script looks very useful.</p>",
        "id": 317631447,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1671824464
    }
]