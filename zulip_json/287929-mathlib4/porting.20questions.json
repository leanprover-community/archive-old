[
    {
        "content": "<p>Should there be a porting FAQ?</p>\n<p>Two questions I have so far:</p>\n<p>I don't know the algorithm for imports. It's been claimed that <code>data.sigma.basic</code> is ready for porting but none of the imports</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">--import Mathlib.Meta.Univs</span>\n<span class=\"c1\">--import Mathlib.Tactic.Lint.Default</span>\n<span class=\"c1\">--import Mathlib.Tactic.Ext</span>\n</code></pre></div>\n<p>seem to work for me. In the file itself we have attributes such as <code>@[nolint simp_nf]</code> and <code>@[ext]</code> which are giving me errors in mathlib4. Right now I am unclear about whether I should be just commenting this stuff out, commenting it out with some specificically crafted <em>TODO</em> so that people will be able to find their way back to them later, giving up on porting this file and waiting for the attributes to work, asking how to make them work, etc etc (can we make them work yet?)</p>\n<p>Second question: A theorem which was proved with <code>by simp</code> in mathlib3 isn't being proved by <code>simp</code> in mathlib4. Everything is very basic here and I can just prove the theorem by hand anyway -- but should I worry about this and/or investigate, or just find a proof which compiles and move on?</p>",
        "id": 304702291,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666104877
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/wiki\">https://github.com/leanprover-community/mathlib4/wiki</a> is meant to be the FAQ.</p>",
        "id": 304758061,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1666107309
    },
    {
        "content": "<p>The answer to the second question is that the python script discards every import that starts with <code>tactic</code> or <code>meta</code> because the file layouts are not compatible in those regions.</p>",
        "id": 304758215,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1666107357
    },
    {
        "content": "<p>Do you happen to know whether <code>@[ext]</code> or <code>@[nolint]</code> are up and running yet?</p>",
        "id": 304762464,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666108526
    },
    {
        "content": "<p>there seem to be examples of both:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/f4484bd81205d3066e378c7855c9a82ec3881b06/Mathlib/Order/Basic.lean#L348\">https://github.com/leanprover-community/mathlib4/blob/f4484bd81205d3066e378c7855c9a82ec3881b06/Mathlib/Order/Basic.lean#L348</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/f4484bd81205d3066e378c7855c9a82ec3881b06/Mathlib/Init/Logic.lean#L307\">https://github.com/leanprover-community/mathlib4/blob/f4484bd81205d3066e378c7855c9a82ec3881b06/Mathlib/Init/Logic.lean#L307</a></p>",
        "id": 304764092,
        "sender_full_name": "David Renshaw",
        "timestamp": 1666108924
    },
    {
        "content": "<p>Aah this is a technique I need to learn: look at what is already there. Thanks! I am a programming amateur.</p>",
        "id": 304764855,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666109119
    },
    {
        "content": "<p>(wrong thread)</p>",
        "id": 304766093,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1666109419
    },
    {
        "content": "<p>looks like the <code>ext</code> tactic has some todos: <a href=\"https://github.com/leanprover/std4/blob/a502f259aa9fc035a19794cd90ae0244541b4a89/Std/Tactic/Ext.lean#L98\">https://github.com/leanprover/std4/blob/a502f259aa9fc035a19794cd90ae0244541b4a89/Std/Tactic/Ext.lean#L98</a></p>",
        "id": 304794025,
        "sender_full_name": "David Renshaw",
        "timestamp": 1666111859
    },
    {
        "content": "<p>Aah it's in std4, I wasn't even looking in the right repo!</p>",
        "id": 304798043,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666113079
    }
]