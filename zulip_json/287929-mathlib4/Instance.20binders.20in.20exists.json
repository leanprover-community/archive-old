[
    {
        "content": "<p>These aren't supported in lean 4, since the meaning is dubious, but they do occur in mathlib, e.g. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric.second_countable_of_countable_discretization/src\">src#metric.second_countable_of_countable_discretization</a> . There are 19 occurrences in mathlib + liquid. Support? Backport?</p>",
        "id": 252407566,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631078071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Can you post the full list?</p>",
        "id": 252408432,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631078910
    },
    {
        "content": "<p>I'm happy to remove them from liquid, if that can be my little contribution to the porting process (-;</p>",
        "id": 252408452,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631078942
    },
    {
        "content": "<p>The line numbers are approximate, since these are wrt the ported files</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Liquid</span><span class=\"bp\">/</span><span class=\"n\">Condensed</span><span class=\"bp\">/</span><span class=\"n\">ProetaleSiteSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">64</span><span class=\"o\">:</span><span class=\"c1\">-- error in Condensed.ProetaleSite: Mathport/Syntax/Translate/Basic.lean:411:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Liquid</span><span class=\"bp\">/</span><span class=\"n\">ForMathlib</span><span class=\"bp\">/</span><span class=\"n\">RationalConesSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">267</span><span class=\"o\">:</span><span class=\"c1\">-- error in ForMathlib.RationalCones: Mathport/Syntax/Translate/Basic.lean:411:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Liquid</span><span class=\"bp\">/</span><span class=\"n\">LiquidSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">39</span><span class=\"o\">:</span><span class=\"c1\">-- error in Liquid: Mathport/Syntax/Translate/Basic.lean:411:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Liquid</span><span class=\"bp\">/</span><span class=\"n\">PolyhedralLattice</span><span class=\"bp\">/</span><span class=\"n\">BasicSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">64</span><span class=\"o\">:</span><span class=\"c1\">-- error in PolyhedralLattice.Basic: Mathport/Syntax/Translate/Basic.lean:411:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Liquid</span><span class=\"bp\">/</span><span class=\"n\">StatementSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"c1\">-- error in Statement: Mathport/Syntax/Translate/Basic.lean:411:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Liquid</span><span class=\"bp\">/</span><span class=\"n\">Thm95</span><span class=\"bp\">/</span><span class=\"n\">DefaultSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">129</span><span class=\"o\">:</span><span class=\"c1\">-- error in Thm95.Default: Mathport/Syntax/Translate/Basic.lean:411:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Analysis</span><span class=\"bp\">/</span><span class=\"n\">Convex</span><span class=\"bp\">/</span><span class=\"n\">CaratheodorySyn.lean</span><span class=\"o\">:</span><span class=\"mi\">164</span><span class=\"o\">:</span><span class=\"c1\">-- error in Analysis.Convex.Caratheodory: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">CategoryTheory</span><span class=\"bp\">/</span><span class=\"n\">Abelian</span><span class=\"bp\">/</span><span class=\"n\">PseudoelementsSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">94</span><span class=\"o\">:</span><span class=\"c1\">-- error in CategoryTheory.Abelian.Pseudoelements: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">CategoryTheory</span><span class=\"bp\">/</span><span class=\"n\">EssentiallySmallSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">25</span><span class=\"o\">:</span><span class=\"c1\">-- error in CategoryTheory.EssentiallySmall: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Combinatorics</span><span class=\"bp\">/</span><span class=\"n\">HalesJewettSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">176</span><span class=\"o\">:</span><span class=\"c1\">-- error in Combinatorics.HalesJewett: Mathport/Syntax/Translate/Basic.lean:340:40: in suffices: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Combinatorics</span><span class=\"bp\">/</span><span class=\"n\">HalesJewettSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">255</span><span class=\"o\">:</span><span class=\"c1\">-- error in Combinatorics.HalesJewett: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">GroupTheory</span><span class=\"bp\">/</span><span class=\"n\">SubgroupSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">1390</span><span class=\"o\">:</span><span class=\"c1\">-- error in GroupTheory.Subgroup: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">GroupTheory</span><span class=\"bp\">/</span><span class=\"n\">SubgroupSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">1442</span><span class=\"o\">:</span><span class=\"c1\">-- error in GroupTheory.Subgroup: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Order</span><span class=\"bp\">/</span><span class=\"n\">ExtensionSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"c1\">-- error in Order.Extension: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">RingTheory</span><span class=\"bp\">/</span><span class=\"n\">FinitenessSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">177</span><span class=\"o\">:</span><span class=\"c1\">-- error in RingTheory.Finiteness: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">RingTheory</span><span class=\"bp\">/</span><span class=\"n\">FinitenessSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">314</span><span class=\"o\">:</span><span class=\"c1\">-- error in RingTheory.Finiteness: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">RingTheory</span><span class=\"bp\">/</span><span class=\"n\">Polynomial</span><span class=\"bp\">/</span><span class=\"n\">DicksonSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">188</span><span class=\"o\">:</span><span class=\"c1\">-- error in RingTheory.Polynomial.Dickson: Mathport/Syntax/Translate/Basic.lean:340:40: in obtain: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Topology</span><span class=\"bp\">/</span><span class=\"n\">MetricSpace</span><span class=\"bp\">/</span><span class=\"n\">BasicSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">648</span><span class=\"o\">:</span><span class=\"c1\">-- error in Topology.MetricSpace.Basic: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n<span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Topology</span><span class=\"bp\">/</span><span class=\"n\">MetricSpace</span><span class=\"bp\">/</span><span class=\"n\">BasicSyn.lean</span><span class=\"o\">:</span><span class=\"mi\">2316</span><span class=\"o\">:</span><span class=\"c1\">-- error in Topology.MetricSpace.Basic: Mathport/Syntax/Translate/Basic.lean:477:58: unsupported: instance binder</span>\n</code></pre></div>",
        "id": 252408664,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631079164
    },
    {
        "content": "<p>Since there's so few of them, I'm inclined to just remove them.</p>",
        "id": 252408796,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631079279
    },
    {
        "content": "<p>What is the dubious meaning currently? I can imagine that TC fills in the term, so you don't have to write <code>\\&lt;bla, bla, infer_instance, foo, bar\\&gt;</code>, but can just write <code>\\&lt;bla, bla, foo, bar\\&gt;</code>. But at the same time, that feels fragile.</p>",
        "id": 252408857,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631079337
    },
    {
        "content": "<p>That's not what happens currently, I think?</p>",
        "id": 252409225,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631079641
    },
    {
        "content": "<p>I'm pretty sure the binder mode is just ignored</p>",
        "id": 252409239,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631079663
    },
    {
        "content": "<p>Ok. So let's just replace <code>[foobar X]</code> with <code>(hX : foobar X)</code> everywhere. That should fix the issue right?</p>",
        "id": 252409493,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631079937
    },
    {
        "content": "<p>I'll have a go at the mathlib ones now.</p>",
        "id": 252410165,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631080569
    },
    {
        "content": "<p>How about we just replace with <code>(_ : foobar X)</code>?</p>",
        "id": 252410645,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631080985
    },
    {
        "content": "<p>Seems to work in the few I've tried.</p>",
        "id": 252410657,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631080992
    },
    {
        "content": "<p>Ok, I'll try that in LTE.</p>",
        "id": 252410780,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631081095
    },
    {
        "content": "<p>I've got them all except the GroupTheory/SubgroupSyn.lean ones. Do you have the synported file handy? I can go find the latest otherwise.</p>",
        "id": 252411251,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631081470
    },
    {
        "content": "<p>Nope, I don't</p>",
        "id": 252411341,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631081527
    },
    {
        "content": "<p>I'm downloading the 750mb tarball now!</p>",
        "id": 252411411,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631081588
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9083\">#9083</a>, we'll see what CI says, but locally it looks okay so far.</p>",
        "id": 252412005,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631082034
    },
    {
        "content": "<p><code>00980af145fe97427c31ce919b11633dd2c4800c</code> removes instance binders from LTE.</p>",
        "id": 252412681,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631082563
    },
    {
        "content": "<p>We don't actually need to backport it BTW, mathport can normalize this away if we decide we don't care to preserve the distinction</p>",
        "id": 252425325,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631090337
    },
    {
        "content": "<p>but I'm also fine with backporting it in addition</p>",
        "id": 252425371,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631090372
    },
    {
        "content": "<p>But I wonder whether people want to be able to write <code>∃ [group G], bla</code> even if it doesn't mean anything different from <code>∃ _ : group G, bla</code></p>",
        "id": 252425509,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631090441
    },
    {
        "content": "<p>for example, in order to ease refactoring foralls to exists, or just making them more syntactically similar</p>",
        "id": 252425644,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631090511
    },
    {
        "content": "<p>I think it's a nice shorthand. But we can add it later. The backport was really easy.</p>",
        "id": 252425769,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631090572
    },
    {
        "content": "<p>I have to admit that it looks nice, but since it implies some semantic significance that doesn't actually exist, personally I would advise against allowing it</p>",
        "id": 252426309,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1631090858
    },
    {
        "content": "<p>Regarding actually making it mean something, I think this would be hard, since it would entail making <code>Exists.intro</code> change its binder mode when the <code>P</code> argument is a lambda with an instance binder</p>",
        "id": 252426661,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631091047
    },
    {
        "content": "<p>Just needs first-class binder kinds <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 252428171,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1631091868
    }
]