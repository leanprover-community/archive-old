[
    {
        "content": "<p>I'm working on the last issue for <code>Data.Prod.TProd</code> &amp; the Lean 3 mathlib code is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[ext]</span> <span class=\"kd\">lemma</span> <span class=\"n\">ext</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hl</span> <span class=\"o\">:</span> <span class=\"n\">l.nodup</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">tprod</span> <span class=\"n\">α</span> <span class=\"n\">l</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hvw</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">l</span><span class=\"o\">),</span> <span class=\"n\">v.elim</span> <span class=\"n\">hi</span> <span class=\"bp\">=</span> <span class=\"n\">w.elim</span> <span class=\"n\">hi</span><span class=\"o\">),</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">w</span>\n<span class=\"bp\">|</span> <span class=\"o\">[]</span>        <span class=\"n\">hl</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">hvw</span> <span class=\"o\">:=</span> <span class=\"n\">punit.ext</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">::</span> <span class=\"n\">is</span><span class=\"o\">)</span> <span class=\"n\">hl</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">hvw</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n    <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">elim_self</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">hvw</span><span class=\"o\">,</span> <span class=\"n\">elim_self</span><span class=\"o\">],</span>\n    <span class=\"n\">refine</span> <span class=\"n\">ext</span> <span class=\"o\">(</span><span class=\"n\">nodup_cons.mp</span> <span class=\"n\">hl</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">j</span> <span class=\"n\">hj</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">),</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">elim_of_mem</span> <span class=\"n\">hl</span><span class=\"o\">,</span> <span class=\"n\">hvw</span><span class=\"o\">,</span> <span class=\"n\">elim_of_mem</span> <span class=\"n\">hl</span><span class=\"o\">]</span>\n  <span class=\"kd\">end</span>\n</code></pre></div>\n<p>&amp; when I step through in the infoview, I see an <code>ext</code> hypothesis inserted that gets applied.</p>\n<p>When Lean 4 sees <code>ext</code> it fails with <code>no applicable extensionality lemma found for\n  TProd α (i :: is)</code></p>\n<p>How is this supposed to work in Lean 4?</p>",
        "id": 321913382,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673985022
    },
    {
        "content": "<p><code>apply Prod.ext</code> was the answer.</p>",
        "id": 321914918,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673985529
    },
    {
        "content": "<p>In Lean 3, <code>ext</code> unfolded definitions. Probably, in Lean 4 it doesn't.</p>",
        "id": 321941666,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1673996153
    },
    {
        "content": "<p>I'd add <code>TProd.ext_nil</code> and <code>TProd.ext_cons</code> lemmas.</p>",
        "id": 321942128,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1673996337
    },
    {
        "content": "<p>Am I right that we only need <code>tprod</code> for <code>measure.pi</code>?</p>",
        "id": 321944768,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1673997368
    },
    {
        "content": "<p>If yes, then I have an idea how to redefine (and generalize) <code>measure.pi</code> without <code>tprod</code>.</p>",
        "id": 321944864,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1673997417
    },
    {
        "content": "<p><code>TProd</code> has landed :-)</p>",
        "id": 321944969,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673997461
    },
    {
        "content": "<p>oh, mostly landed.</p>",
        "id": 321945418,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673997665
    }
]