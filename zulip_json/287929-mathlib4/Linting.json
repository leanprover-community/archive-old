[
    {
        "content": "<p>With the recent reboot of the tactic porting effort, I've noticed some mathlib4 PRs that could benefit from the \"style linter\" from mathlib3. Thus I've opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/352\">https://github.com/leanprover-community/mathlib4/pull/352</a>, which ports across the mathlib3 style linter (written in python) for the mathlib4 repository. That PR just contains the minimal changes required to have it run.</p>",
        "id": 290972533,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1658881354
    },
    {
        "content": "<p>There are a few style linters that probably just need to be removed (e.g. curly brace style is evolving, so we should certainly throw out that one).</p>",
        "id": 290972546,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1658881384
    },
    {
        "content": "<p>Eventually of course we'd like to rewrite these in Lean rather than python, and even have code suggestions to fix them before CI. But perfect is the enemy of good, and I think it's worthwhile to use the old style linters now to ensure basics like module docs and copyright headers get written.</p>",
        "id": 290972615,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1658881443
    },
    {
        "content": "<p>I don't propose that we go back and fix the <a href=\"https://github.com/leanprover-community/mathlib4/pull/352/files#diff-12b7cd76a0c516e757028ef1c74224c1220f7d543e4c17d63d9c60586838916f\">style exceptions</a> in the entire <code>Mathlib/</code> directory, as hopefully these will mostly be clobbered as mathport runs anyway.</p>",
        "id": 290972713,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1658881528
    },
    {
        "content": "<p>However it would be reasonable / helpful if we could fix the style exceptions for the <code>Mathlib/Lean/</code> <code>Mathlib/Util/</code> and <code>Mathlib/Tactics/</code> directories, before they age too much. I'll aim to do at least some of this.</p>",
        "id": 290972782,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1658881601
    },
    {
        "content": "<p>I got a couple of \"missing docstring\" linter issues on <a href=\"https://github.com/leanprover-community/mathlib4/pull/478\">mathlib4#478</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>#check Fin2.IsLt.h /- definition missing documentation string -/\n#check Fin2.term&amp;_ /- definition missing documentation string -/\n</code></pre></div>\n<p>The first is a field of a class; the class itself has a docstring.  I don't think mathlib3 would have asked for a docstring here.  Is this a new policy?  Is this something I can mark as <code>nolint</code>?</p>\n<p>The second I don't even recognise, it's not in the file.  Is it autogenerated?</p>",
        "id": 304818733,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1666118668
    },
    {
        "content": "<p>I'm guessing that the second one is referring to <code>local prefix:arg \"&amp;\" =&gt; ofNat'</code></p>",
        "id": 304819109,
        "sender_full_name": "David Renshaw",
        "timestamp": 1666118793
    },
    {
        "content": "<p>Hmm ... in mathlib3 you also did not have to (in fact were not allowed to) give docstrings to notation.</p>",
        "id": 304819303,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1666118865
    },
    {
        "content": "<p>For the first thing: It's a new policy. You should not mark it as nolint, but you should add it to the nolints file (although if it's not too hard to add docs then please do)</p>",
        "id": 304819415,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666118892
    },
    {
        "content": "<p>the nolints file is for things that should be fixed, while nolint attributes are for things that are intentional lint violations</p>",
        "id": 304819581,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666118946
    },
    {
        "content": "<p>local notations should not require docstrings</p>",
        "id": 304819692,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666118989
    },
    {
        "content": "<p>so that sounds like a bug in the mathlib4 doc linter</p>",
        "id": 304819852,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666119029
    },
    {
        "content": "<p>The docstring on a notation is what shows up when you hover on it</p>",
        "id": 304819929,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666119067
    },
    {
        "content": "<p>you can use <code>@[inheritDoc]</code> on notations to get the docstring from the underlying definition (this will also pacify the linter)</p>",
        "id": 304819996,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666119096
    },
    {
        "content": "<p>It's now <code>@[inherit_doc]</code> by the way (just using this trick myself)</p>",
        "id": 310379690,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1668595241
    }
]