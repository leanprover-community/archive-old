[
    {
        "content": "<p>I am porting <a href=\"https://github.com/leanprover-community/mathlib/blob/f721cdca3b50bbe616dfc291620d51fcc06bfea4/src/data/int/gcd.lean\">data.int.gcd</a>, see <a href=\"https://github.com/leanprover-community/mathlib4/pull/981\">#981</a>.</p>\n<p>The file uses <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.nat_mod\">docs#int.nat_mod</a>. This doesn't exist in mathlib4, right?</p>\n<p>I know that <code>mod</code> is going to change in <code>Std</code>, so I am not fixing everything at the moment.</p>",
        "id": 315638271,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670950871
    },
    {
        "content": "<p>Oh, I just realized that it depends on <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/int/order/basic.lean\">data.int.order.basic</a>, that is very far from having been ported :(</p>",
        "id": 315640101,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670951341
    },
    {
        "content": "<p>data.int.order.basic is now basically ready, it just has one error, so feel free to depend on it</p>",
        "id": 315704226,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670972710
    },
    {
        "content": "<p><a href=\"#narrow/stream/287929-mathlib4/topic/Data.2EInt.2EOrder.2EBasic/near/315704551\">my version</a> has 0 errors ;-) (but it avoids the question which is actually at stake there)</p>",
        "id": 315705022,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670973023
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 315705092,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670973059
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/980\">https://github.com/leanprover-community/mathlib4/pull/980</a> is almost ready to go, but mysteriously in <code>Mathlib.Tactic.Ring.Basic</code> I had to make <code>Ex[Base|Prod|Sum].evalPos</code> <code>partial</code>. I don't see what change caused this, but I don't see how it could be problematic so I'm not going to wait on this. Just noting in case <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> sees some reason to be concerned.</p>",
        "id": 315707261,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670974009
    },
    {
        "content": "<p>Note that there are already some definitions in there which are <code>partial</code> for performance, see <code>Ex[Base|Prod|Sum].{eq,cmp}</code></p>",
        "id": 315710229,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670975379
    },
    {
        "content": "<p>what happens if it's not marked as partial?</p>",
        "id": 315710389,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670975432
    },
    {
        "content": "<p>I am not sure I will have time today, if anyone wants to contribute to the PR please go ahead.</p>",
        "id": 315766614,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671008834
    }
]