[
    {
        "content": "<p>Right now, <code>Data.Seq</code> clashes with the typeclass <code>Seq</code> (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Seq#doc\">docs4#Seq</a>) (used to be <code>has_seq</code>.</p>\n<p>I've temporarily renamed this to <code>Seq'</code> but that's pretty awful and confusing.</p>\n<p>Given the representation, <code>Sequence</code> might be the easiest name; <code>Stream</code>, which is what I'd think of it in other language contexts, is already taken....</p>",
        "id": 323176683,
        "sender_full_name": "Arien Malec",
        "timestamp": 1674543347
    },
    {
        "content": "<p>Let's double check that this doesn't cause another clash down the road: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/sequence\">docs#sequence</a></p>",
        "id": 323176912,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674543447
    },
    {
        "content": "<p>Looks like it will.</p>",
        "id": 323176950,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674543463
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span> Can you put the whole file in a namespace for now?</p>",
        "id": 323177016,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674543482
    },
    {
        "content": "<p>Well in the PR (<a href=\"https://github.com/leanprover-community/mathlib4/pull/1808\">mathlib4#1808</a>) I've currently got <code>Seq'</code> but yes, could revert back &amp; wrap up in something. The nice thing, though, about <code>Seq'</code> is that it's pretty easy to mass replace...</p>",
        "id": 323177362,
        "sender_full_name": "Arien Malec",
        "timestamp": 1674543683
    },
    {
        "content": "<p>Ok, if it already works, maybe leave it until we make a final decision</p>",
        "id": 323177516,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674543751
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib-port-status/?q=seq\">https://leanprover-community.github.io/mathlib-port-status/?q=seq</a> suggests that there are only 15 files depending on this file. So it probably doesn't matter too much what we do, as long as it doesn't clash with other names in mathlib.</p>",
        "id": 323177645,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674543822
    },
    {
        "content": "<p><code>Stream.Seq</code> could be a reasonable name?</p>",
        "id": 323198884,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674551753
    },
    {
        "content": "<p>(personally I think we should backport that first)</p>",
        "id": 323198992,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674551785
    },
    {
        "content": "<p>It's just a name change!</p>",
        "id": 323199021,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674551799
    },
    {
        "content": "<p><code>#align</code> can take care of that</p>",
        "id": 323199046,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674551808
    },
    {
        "content": "<p>Not quite, it also is going to mean adding some <code>namespace</code> keywords</p>",
        "id": 323199317,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674551878
    },
    {
        "content": "<p>Yes, but that's a very minor thing. This file is barely used.</p>",
        "id": 323199460,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674551903
    },
    {
        "content": "<p>It's easier to review a mathlib 3 PR that adds a handful of <code>namespace</code> lines than a mathlib 4 PR that mixes changes with porting</p>",
        "id": 323199647,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674551958
    }
]