[
    {
        "content": "<p>The following <code>to_additive</code> issue is showing up in <a href=\"https://github.com/leanprover-community/mathlib4/pull/608\">mathlib4#608</a>: error</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>The declaration mul_eq_one_iff' depends on the declaration mul_eq_one_iff'.match_1 which is in the namespace mul_eq_one_iff', but does not have the `@[to_additive]` attribute. This is not supported.\nWorkaround: move mul_eq_one_iff'.match_1 to a different namespace.\n</code></pre></div>\n<p>on the first of the following examples, and similar on the second if you comment the first (for some reason they interfere with each other so you can't get the same error on both simultaneously).</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Group.Defs</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">MulOneClass</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[to_additive]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_eq_one_iff'</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Iff.intro</span> <span class=\"gr\">sorry</span>\n    <span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">ha'</span><span class=\"o\">,</span> <span class=\"n\">hb'</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ha'</span><span class=\"o\">,</span> <span class=\"n\">hb'</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[to_additive]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_eq_one_of_eq_one'</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"o\">⟨</span><span class=\"n\">ha'</span><span class=\"o\">,</span> <span class=\"n\">hb'</span><span class=\"o\">⟩</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ha'</span><span class=\"o\">,</span> <span class=\"n\">hb'</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 310486430,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668627811
    },
    {
        "content": "<p>The problem seems to be something like: <code>to_additive</code> thinks it's in a namespace when it's taking apart a composite term like <code>a = 1 ∧ b = 1</code> using <code>fun ⟨ha', hb'⟩</code> or <code>intro ⟨ha', hb'⟩</code>.</p>",
        "id": 310487415,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1668628153
    },
    {
        "content": "<p>cross-reference: <a href=\"#narrow/stream/287929-mathlib4/topic/to_additive.20and.20iffs.20with.20Exists\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/to_additive.20and.20iffs.20with.20Exists</a></p>",
        "id": 311246497,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669023772
    }
]