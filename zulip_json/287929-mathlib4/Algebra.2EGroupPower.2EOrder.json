[
    {
        "content": "<p>I have started porting <code>Algebra.GroupPower.Order</code>, and everything is ported except for a theorem <code>pow_bit0_pos_iff</code> which depends on an unported result in Lean core, as everything to do with <code>bit0</code> seems deprecated. </p>\n<p>I  was going to ask if this should be commented out, but I see that this has an important corollary: <code>theorem sq_pos_iff (a : R) : 0 &lt; a ^ 2 ↔ a ≠ 0</code>.<br>\nWhat would be a good policy:</p>\n<ul>\n<li>port the results on <code>bit0</code></li>\n<li>port a modification using doubles and prove only the result about squares and the lemmas along the way.</li>\n</ul>\n<p>I feel the second has the advantage that if the deprecated <code>bit0</code> is removed we can have the other results still.</p>",
        "id": 316010133,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671102068
    },
    {
        "content": "<p>The <code>bit0</code> and <code>bit1</code> lemmas have (/had?) the avantage that they apply to numerals.</p>",
        "id": 316014886,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671103501
    },
    {
        "content": "<p>Do you think they are worth porting then (at least the ones that are used)?</p>",
        "id": 316018054,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671104547
    },
    {
        "content": "<p>I don't know how numerals work in Lean 4, but if there is a way of seeing whether a numeral is even or odd from the head symbol, yes definitely.</p>",
        "id": 316018211,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671104619
    },
    {
        "content": "<p>No, the head symbol of numerals is not <code>bit0</code>/<code>bit1</code> anymore, so I expect that <code>simp</code> and <code>rw</code> will not be able to deal well with lemmas about <code>bit0</code> and <code>bit1</code> anymore.</p>",
        "id": 316019357,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1671104888
    },
    {
        "content": "<p>This is really a result about <code>even</code> and <code>odd</code> -- the fact that in lean 3 we chose to express them via <code>bit0</code> is now a historical coincidence. Are we in a position to port <code>data.nat.parity</code>? If not then we could make <code>data.nat.parity.defs</code> and that would be a nice way forward</p>",
        "id": 316019857,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671105049
    },
    {
        "content": "<p>We can still state lemmas about <code>bit0</code>/<code>bit1</code>, but I don't know if that will be nicer than <code>2 * _</code> or <code>2 * _ + 1</code>. I think both forms will not easily match the numerals <code>16</code> or <code>17</code> (but I might be wrong, I didn't check).</p>",
        "id": 316020653,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1671105285
    },
    {
        "content": "<p>As they are marked as deprecated, a file with lemmas about them is rejected.</p>",
        "id": 316021249,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671105468
    },
    {
        "content": "<p>I should also add that the PR is <a href=\"https://github.com/leanprover-community/mathlib4/pull/1043\">mathlib4#1043</a> and given my timezone if anyone wants to take over they are welcome.</p>",
        "id": 316021624,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671105581
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Algebra.2EGroupPower.2EOrder/near/316019857\">said</a>:</p>\n<blockquote>\n<p>This is really a result about <code>even</code> and <code>odd</code> -- the fact that in lean 3 we chose to express them via <code>bit0</code> is now a historical coincidence. Are we in a position to port <code>data.nat.parity</code>? If not then we could make <code>data.nat.parity.defs</code> and that would be a nice way forward</p>\n</blockquote>\n<p>It's not a historical coincidence at all. I made sure that all lemmas were available in both spellings.</p>",
        "id": 316021824,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671105626
    },
    {
        "content": "<p>Please port the bit lemmas, even though they won't apply directly to numerals. You'll need a <code>set_option</code> - see all other declarations about bit in the tree for examples</p>",
        "id": 316026813,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671107020
    },
    {
        "content": "<p>Also, Kevin, why <code>data.nat.parity</code>? Everything is in <a href=\"https://tqft.net/mathlib/algebra/parity\">file#algebra/parity</a> which is very low import now.</p>",
        "id": 316027666,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671107260
    },
    {
        "content": "<p>Yael I'm sure you know a lot more about parity than me :-)</p>",
        "id": 316029416,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671107815
    },
    {
        "content": "<p>Sure. I will port the bit lemmas</p>",
        "id": 316030355,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671108103
    },
    {
        "content": "<p>Actually some of this has been ported either for Positivity or Linarithmetic. I will deduplicated and clean up.</p>",
        "id": 316036180,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671109736
    },
    {
        "content": "<p>Just to confirm <a href=\"https://github.com/leanprover-community/mathlib4/pull/1043\">mathlib4#1043</a> is ready for review</p>",
        "id": 316041823,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671111270
    }
]