[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/1353\">mathlib4#1353</a>, the following code (line 264)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">mul_map_seq</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">FreeMagma</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">((</span><span class=\"bp\">·</span> <span class=\"bp\">*</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;*&gt;</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"n\">FreeMagma</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">FreeMagma</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">free_magma.mul_map_seq</span> <span class=\"n\">FreeMagma.mul_map_seq</span>\n</code></pre></div>\n<p>fails with errors <code>failed to synthesize instance  Functor id</code> and <code>failed to synthesize instance Seq id</code>. <br>\nI am really not an expert in this part of mathlib, but I have the feeling this should follow from the instance <code>Traversable FreeMagma</code> that is proved a few lines before. In any case, it fails here and I don't know what to do to fix it.</p>",
        "id": 319985072,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1673110720
    },
    {
        "content": "<p><code>Id</code> is the correct spelling for the <code>Functor</code> instance.</p>",
        "id": 319985117,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1673110754
    },
    {
        "content": "<p>If you encounter <code>id.mk</code>, it should be translated to something like <code>(pure : _ \\to Id _)</code>.</p>",
        "id": 319985147,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1673110779
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 319985460,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1673110927
    }
]