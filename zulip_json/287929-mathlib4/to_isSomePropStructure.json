[
    {
        "content": "<p>In the current naming scheme, there's a discrepancy in naming fields/theorems under <code>Prop</code> structures. Say we have three structures: <code>IsFoo</code>, <code>IsFooBar</code> extending <code>IsFoo</code>, and <code>IsBar</code>, all of which are <code>Prop</code>. Automatically we have the field <code>IsFooBar.toIsFoo</code>. Then, we want to state <code>lemma IsFooBar.to_isBar : IsBar</code>. Ah you see, this is a proof, so we need to use lower camel case <code>to_isBar</code>, which looks inconsistent with <code>toIsFoo</code>.</p>\n<p>Maybe we don't care at all, but I just wanted to mention it here as I'm porting <code>deprecated.group</code>, and there's a bunch of these...</p>",
        "id": 319731105,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1672990477
    },
    {
        "content": "<p>I don't understand why we want <code>toSomeTypeStructure</code> instead of <code>to_someTypeStructure</code> either.</p>",
        "id": 319823517,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673025274
    },
    {
        "content": "<p>The <code>to</code> is not part of the structure name, so surely it shouldn't fall into the same part of the name?</p>",
        "id": 319823666,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673025320
    },
    {
        "content": "<p>I think maybe toFoo is what lean comes up with for <code>extends</code>?</p>",
        "id": 319823855,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673025367
    },
    {
        "content": "<p>Indeed. And for the above reason I think it's bad.</p>",
        "id": 319823885,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673025384
    },
    {
        "content": "<p>I think it's valuable to match the extends convention, but I don't really care what convention that ends up being</p>",
        "id": 319824097,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673025461
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/to_isSomePropStructure/near/319823517\">said</a>:</p>\n<blockquote>\n<p>I don't understand why we want <code>toSomeTypeStructure</code> instead of <code>to_someTypeStructure</code> either.</p>\n</blockquote>\n<p>For structures which are <code>Type</code>s, I think it should definitely be <code>toSomeTypeStructure</code>; terms valued in a <code>Type</code> should be lower camel case, and underscores shouldn’t appear. For terms, underscores ⇒ proof-like now!</p>\n<p>I don’t think it’s the worst thing if we have a special case to match the extends convention, even if it goes against the naming convention. You sort of think of <code>to*</code> names as special actions on structures anyway, and not as something “proof-like”. …well, I do, anyway! :)</p>\n<p>Plus, you should be able to guess the name of a projection knowing the types of the involved structures alone even if you don’t know how the diamond works out, so they should all at least be consistent; if we were to change it at all I think it would make sense to do so in core so that every <code>to</code>-projection to a <code>Prop</code> structure like this was named in <code>lower_snakeCase</code>.</p>",
        "id": 319829257,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1673027125
    }
]