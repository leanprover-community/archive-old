[
    {
        "content": "<p>Hello Everyone,<br>\nI am starting to port <code>data.finmap</code>. In order to avoid merge conflicts, please message here before adding commits to the PR.</p>",
        "id": 321642538,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673876243
    },
    {
        "content": "<p>The notation introduced in this line: <code>local notation:arg \"⟦\" a \"⟧\" =&gt; AList.toFinmap a</code> is causing ambiguities that lean complains about. So I am disambiguating by explicitly inserting <code>Alist.toFinmap</code></p>",
        "id": 321654184,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673879251
    },
    {
        "content": "<p>I have a fix for <code>replace</code> &amp; can push doc fixes.</p>",
        "id": 321704762,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673896574
    },
    {
        "content": "<p>I wish you had let me know. I have a bunch of work on this PR that I have spent 2 hours on that I have to discard.</p>",
        "id": 321705500,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673896919
    },
    {
        "content": "<p>It creates merge conflicts for me</p>",
        "id": 321705688,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673897002
    },
    {
        "content": "<p>Plus all my work becomes pointless</p>",
        "id": 321705936,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673897034
    },
    {
        "content": "<p>We can just roll back. Sorry, should have waited longer</p>",
        "id": 321709975,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673899014
    },
    {
        "content": "<p>I would like to place a lock on this PR until  23:30 CET</p>",
        "id": 321710403,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673899188
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span>  Note that you can use <code>&lt;time</code>-tabcomplete to write timezone aware times in Zulip.</p>",
        "id": 321711009,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673899492
    },
    {
        "content": "<p>ah thanks. I had trouble finding the command for  the time. I would like to place a lock on the file until : <time datetime=\"2023-01-16T22:30:00Z\">2023-01-16T23:30:00+01:00</time> . If I need an extension, I will place a similar time-bound lock again.</p>",
        "id": 321714640,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673901384
    },
    {
        "content": "<p>I'm extending the lock for 2 more hours</p>",
        "id": 321725536,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673907537
    },
    {
        "content": "<p>I am still working on this. I will release it within an hour or so, since I need to wrap up for the day anyway.</p>",
        "id": 321736616,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673915448
    },
    {
        "content": "<p>I am dropping the lock on this. The definition of liftOn does not seem to carry over from lean3's version. I have left the version of the definition from mathport more or less.</p>",
        "id": 321740525,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673918368
    },
    {
        "content": "<p>I lock for 3 hours again. <span aria-label=\"locked\" class=\"emoji emoji-1f512\" role=\"img\" title=\"locked\">:locked:</span></p>",
        "id": 321867096,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673971699
    },
    {
        "content": "<p>Not to say that what you're doing is wrong, Shreyas, but I find it funny that VCS like git was originally designed so locking files didn't have to be an issue, and yet here we are lol</p>",
        "id": 321867784,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1673971871
    },
    {
        "content": "<p>Microsoft created both Lean and Visual SourceSafe. Coincidence? I do like the terminology there, though: checking out a file was like checking out a book at the library.</p>\n<p>(Also not a reply to Shreyas' message! Today's not the first time I was reminded of VSS)</p>",
        "id": 321869562,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1673972375
    },
    {
        "content": "<p>Well, git will handle this fine - the trouble starts when multiple people are trying to make roughly the same changes to the same file at the same time</p>",
        "id": 321873714,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673973521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/data.2Efinmap.20mathlib4.231591/near/321873714\">said</a>:</p>\n<blockquote>\n<p>Well, git will handle this fine - the trouble starts when multiple people are trying to make roughly the same changes to the same file at the same time</p>\n</blockquote>\n<p>I think this might partly be peculiar to the port effort and the workflow that has been adopted here. The normal git  flow would work something like this: People make forks of the repo and  push there. Then make a pull request from their repo to the port branch. Whichever pull request passes the tests first gets integrated.  This is cleaner from a VCS perspective, but has two disadvantages:</p>\n<ol>\n<li>CI : I am not sure if github requires a premium account for this, but if it does, then not everyone has premium accounts. I am not sure how to get automated build+test on such a workflow. </li>\n<li>Competing PRs for the same file : This duplicates effort.</li>\n</ol>",
        "id": 321875041,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673973869
    },
    {
        "content": "<p>Lock <span aria-label=\"locked\" class=\"emoji emoji-1f512\" role=\"img\" title=\"locked\">:locked:</span> extension for 1 hour.</p>",
        "id": 321905308,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673982506
    },
    {
        "content": "<p>I tend to do atomic commits (commit every fix) and push as soon as I commit to reduce the surface area for any merge issue; it also means there's less to regret if there is something I need to redo. The problem really magnifies with large commits and parallel work.</p>",
        "id": 321906908,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673982946
    },
    {
        "content": "<p>I am stuck on <code>def liftOn</code>. It seems to be the key to further fixes.</p>",
        "id": 321909389,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673983653
    },
    {
        "content": "<p>In fact I think I'd like to ask for help at this point. So I have pushed the file as it stands now.</p>",
        "id": 321909740,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673983743
    },
    {
        "content": "<p>lock lifted</p>",
        "id": 321909765,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673983751
    },
    {
        "content": "<p>To my eyes, the <span aria-label=\"locked\" class=\"emoji emoji-1f512\" role=\"img\" title=\"locked\">:locked:</span> (locked) and <span aria-label=\"unlocked\" class=\"emoji emoji-1f513\" role=\"img\" title=\"unlocked\">:unlocked:</span> (unlocked) emojis look too similar</p>",
        "id": 321913542,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673985088
    },
    {
        "content": "<p>To me the difference is observable if I look very closely but not otherwise</p>",
        "id": 321913639,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1673985124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/data.2Efinmap.20mathlib4.231591/near/321873714\">said</a>:</p>\n<blockquote>\n<p>Well, git will handle this fine - the trouble starts when multiple people are trying to make roughly the same changes to the same file at the same time</p>\n</blockquote>\n<p>In my experience, requests to lock files in git usually come down to some combination of:</p>\n<ul>\n<li>Commits being too non-atomic to make merged easy</li>\n<li>Contributors not having experience with dealing with merge conflicts</li>\n<li>Merge conflict resolution tools doing a really bad job on particular kinds of changes</li>\n</ul>\n<p>Note that GitHub supports making PRs against other PR branches; this allows you to try out CI on and share a fix without preventing someone else trying something different. The work duplication problem is still there though.</p>",
        "id": 321959983,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674005886
    }
]