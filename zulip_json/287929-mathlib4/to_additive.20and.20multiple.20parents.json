[
    {
        "content": "<p>In <code>Algebra/Group/Defs.lean</code> and <code>Algebra/Group/Basic.lean</code> we have a few instances of the following problem:</p>",
        "id": 305062911,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666225985
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- An `add_monoid` is an `add_semigroup` with an element `0` such that `0 + a = a + 0 = a`. -/</span>\n<span class=\"kd\">class</span> <span class=\"n\">AddMonoid</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">AddSemigroup</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">AddZeroClass</span> <span class=\"n\">M</span> <span class=\"n\">where</span>\n  <span class=\"n\">nsmul</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"n\">nsmulRec</span>\n  <span class=\"n\">nsmul_zero'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">nsmul</span> <span class=\"mi\">0</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">intros</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">nsmul_succ'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"n\">nsmul</span> <span class=\"n\">n.succ</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">nsmul</span> <span class=\"n\">n</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">intros</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n\n<span class=\"sd\">/-- A `monoid` is a `semigroup` with an element `1` such that `1 * a = a * 1 = a`. -/</span>\n<span class=\"kd\">@[to_additive AddMonoid]</span>\n<span class=\"kd\">class</span> <span class=\"n\">Monoid</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">Semigroup</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">MulOneClass</span> <span class=\"n\">M</span> <span class=\"n\">where</span>\n  <span class=\"n\">npow</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"n\">npowRec</span>\n  <span class=\"n\">npow_zero'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">npow</span> <span class=\"mi\">0</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">intros</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">npow_succ'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"n\">npow</span> <span class=\"n\">n.succ</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">npow</span> <span class=\"n\">n</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">intros</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n\n<span class=\"c1\">-- FIXME to_additive didn't notice the second parent</span>\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">to_additive</span> <span class=\"n\">AddMonoid.toAddZeroClass</span><span class=\"o\">]</span> <span class=\"n\">Monoid.toMulOneClass</span>\n</code></pre></div>",
        "id": 305062930,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666226005
    },
    {
        "content": "<p>Perhaps this is another thing <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> could look at? Otherwise I'll create an issue and try to look at it later. :-)</p>",
        "id": 305062985,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666226045
    }
]