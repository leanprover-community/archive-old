[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/1517\">mathlib4#1517</a> <code>encode_ofEquiv</code> I have a <code>simp can prove this</code> lint -- <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  asked if <code>dsimp</code> can prove it (and if not we want to mark a nolint).</p>\n<p>Is the discriminating test whether <code>by dsimp</code> closes the original proof?</p>",
        "id": 321240436,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673638036
    },
    {
        "content": "<p>yes, If and only if the original proof is <code>rfl</code></p>",
        "id": 321240791,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673638146
    },
    {
        "content": "<p>Otherwise the test is whether <code>by simp</code> closes the proof</p>",
        "id": 321240814,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673638159
    },
    {
        "content": "<p>So decision tree is: If proof is <code>rfl</code> and we have a <code>simp can prove</code> lint, if <code>by dsimp</code> closes the goal, we remove the <code>simp</code> attribute; if not, we keep, mark nolint, and put a porting annotation.  I'll update the porting wiki.</p>",
        "id": 321241125,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673638252
    },
    {
        "content": "<p>In all cases, leave a <code>Porting note</code></p>",
        "id": 321241258,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673638303
    },
    {
        "content": "<p>The reasoning behind these tests is that <code>dsimp</code> only uses simp-lemmas that were proven by <code>rfl</code>.</p>",
        "id": 321241406,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673638344
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span> if you are updating the wiki, please leave templates for the porting notes, which should mention <code>dsimp</code> in the case of <code>rfl</code> proofs.</p>",
        "id": 321241500,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673638380
    },
    {
        "content": "<p>Current text added:</p>\n<blockquote>\n<p>If you get a <code>simp can prove this</code> lint, check if <code>by simp</code> can close the original goal and consider removing the <code>simp</code> attribute to address the lint. Put porting comments to indicate the change. If the original proof is <code>rfl</code>, check if <code>by dsimp</code> can close the goal. If not, <em>do not</em> remove the <code>simp</code>, instead add a <code>nolint simpNF</code> (and again, document the decision via porting notes). In some cases, the path to <code>simp can prove this</code> is very complicated or nonsensical - in such cases ask for guidance on the Zulip.</p>\n</blockquote>",
        "id": 321242751,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673638812
    },
    {
        "content": "<p>Oops. forgot the template. Will fix.</p>",
        "id": 321242942,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673638891
    },
    {
        "content": "<blockquote>\n<p>Template porting notes: \"-- porting notes: removed simp attribute as simp can already prove this\" OR \"-- porting notes: retained simp as dsimp can not prove this\" or \"-- porting notes: retained simp as [...reasons...]\"</p>\n</blockquote>",
        "id": 321243755,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673639165
    },
    {
        "content": "<p>I would prefer the templates that I suggested on the PR:</p>\n<ul>\n<li><code>-- @[simp] -- Porting note: simp can prove this</code> -- if proof is not <code>rfl</code></li>\n<li><code>-- @[simp] -- Porting note: dsimp can prove this</code> -- if proof is <code>rfl</code></li>\n<li><code>@[simp, nolint simpNF] -- Porting note: dsimp can not prove this</code> -- if proof is <code>rfl</code></li>\n</ul>",
        "id": 321244167,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673639301
    },
    {
        "content": "<p>Presumably in the cases where mathlib3 already contains a comment that says \"for dsimp\", we don't need the last one?</p>",
        "id": 321244635,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673639454
    }
]