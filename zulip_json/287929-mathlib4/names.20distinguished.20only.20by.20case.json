[
    {
        "content": "<p>We found the following names in mathlib3 that are distinguished only by case:<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/set\">docs#set</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Set\">docs#Set</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/seq\">docs#seq</a> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Seq#doc\">docs4#Seq</a> (Seq is Lean 4's has_seq)<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/asymptotics.is_o\">docs#asymptotics.is_o</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/asymptotics.is_O\">docs#asymptotics.is_O</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/bilin_form.is_ortho\">docs#bilin_form.is_ortho</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/bilin_form.is_Ortho\">docs#bilin_form.is_Ortho</a>, also linear_map.<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/sup_hom\">docs#sup_hom</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Sup_hom\">docs#Sup_hom</a>, also inf/Inf<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/cauchy\">docs#cauchy</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Cauchy\">docs#Cauchy</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/probability_theory.indep\">docs#probability_theory.indep</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/probability_theory.Indep\">docs#probability_theory.Indep</a>, also indep_fun, indep_set</p>",
        "id": 323026120,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674482349
    },
    {
        "content": "<p>The sup/Sup one we can resolve by using Sup/Sup_whatever.</p>",
        "id": 323026216,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674482377
    },
    {
        "content": "<p>For others, we might need to invent some new names</p>",
        "id": 323026252,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674482388
    },
    {
        "content": "<p><code>cauchy</code> could become <code>filter.cauchy</code>.</p>",
        "id": 323026295,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674482401
    },
    {
        "content": "<p>The big O/little o one is a terrible blow for Lean 4's casing convention. Maybe we need to start over with a different convention.</p>",
        "id": 323026856,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674482527
    },
    {
        "content": "<p>The Indep/indep names and variants in probability theory were chosen to follow the example of the set definitions Union/union, Inter/inter, etc.(that is use capital letter for an indexed family, small letter for two arguments). They can be changed to use whatever new convention is chosen to replace Union/union.</p>",
        "id": 323027923,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1674482778
    },
    {
        "content": "<p>And is_ortho too</p>",
        "id": 323028216,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674482840
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/names.20distinguished.20only.20by.20case/near/323026856\">said</a>:</p>\n<blockquote>\n<p>The big O/little o one is a terrible blow for Lean 4's casing convention. Maybe we need to start over with a different convention.</p>\n</blockquote>\n<p>Would \"BigO\" and \"SmallO\" be too off-putting? It's more verbose than a single letter, but I feel like that might not be so bad.</p>",
        "id": 323028393,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1674482881
    },
    {
        "content": "<p>There is notation for these already. So it is mainly a question of what appears in lemma names</p>",
        "id": 323028540,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674482905
    },
    {
        "content": "<p>submit a new character proposal to the Unicode consortium for an upper-case small letter \"o\"?</p>",
        "id": 323029168,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1674483031
    },
    {
        "content": "<p>Like ᴏ?</p>",
        "id": 323029681,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674483153
    },
    {
        "content": "<p>LATIN LETTER SMALL CAPITAL O</p>",
        "id": 323029769,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674483176
    },
    {
        "content": "<p>For what it's worth, big-O and little-o are technically actually Ο and ο (big omicron and little omicron), which are at completely different unicode codepoints.</p>",
        "id": 323030623,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1674483360
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/287929-mathlib4/topic/names.20distinguished.20only.20by.20case/near/323029769\">said</a>:</p>\n<blockquote>\n<p>LATIN LETTER SMALL CAPITAL O</p>\n</blockquote>\n<p>oh right, smallcaps. that would work <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 323031280,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1674483512
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"563290\">Lukas Miaskiwskyi</span> <a href=\"#narrow/stream/287929-mathlib4/topic/names.20distinguished.20only.20by.20case/near/323028393\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/names.20distinguished.20only.20by.20case/near/323026856\">said</a>:</p>\n<blockquote>\n<p>The big O/little o one is a terrible blow for Lean 4's casing convention. Maybe we need to start over with a different convention.</p>\n</blockquote>\n<p>Would \"BigO\" and \"SmallO\" be too off-putting? It's more verbose than a single letter, but I feel like that might not be so bad.</p>\n</blockquote>\n<p>Don't worry, we'll find a way. I was joking.</p>",
        "id": 323031300,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1674483517
    },
    {
        "content": "<p>I'm confused, there is no <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Seq\">docs#Seq</a> is there?</p>",
        "id": 323031513,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674483574
    },
    {
        "content": "<p>No but there is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Seq#doc\">docs4#Seq</a></p>",
        "id": 323031584,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674483593
    },
    {
        "content": "<p>Oh right, the point being that there is no obvious choice of Mathlib4 name for the old <code>seq</code></p>",
        "id": 323031800,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674483639
    }
]