[
    {
        "content": "<p>Why aren't mathlib4 dependencies pinned by git hashes? I think it can cause weird behaviors for packages that depend on mathlib.</p>\n<p>For example, <span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> 's LeanAide uses the same pinning method from mathlib (using master revision on the lakefile), but it downloaded a different version of Aesop from the one that's explicited on mathlib's manifest.</p>\n<p>In <a href=\"https://github.com/yatima-inc\">https://github.com/yatima-inc</a> we manage a web of ~8 different Lean packages with dependencies pinned by git hashes and we don't run into this problem</p>",
        "id": 319575318,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1672921889
    },
    {
        "content": "<p>(deleted useless question)</p>",
        "id": 319575773,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1672922032
    },
    {
        "content": "<p>Indeed I was going to ask what happens if a dependency is transitive through too different routes, perhaps with one direct. For instance a few days ago \"lake update\" repeatedly gave me the wrong version of \"docgen\" and only manually updating made things work.</p>",
        "id": 319575946,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672922089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pinned.20dependencies/near/319575318\">said</a>:</p>\n<blockquote>\n<p>Why aren't mathlib4 dependencies pinned by git hashes? I think it can cause weird behaviors for packages that depend on mathlib.</p>\n<p>For example, <span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> 's LeanAide uses the same pinning method from mathlib (using master revision on the lakefile), but it downloaded a different version of Aesop from the one that's explicited on mathlib's manifest.</p>\n<p>In <a href=\"https://github.com/yatima-inc\">https://github.com/yatima-inc</a> we manage a web of ~8 different Lean packages with dependencies pinned by git hashes and we don't run into this problem</p>\n</blockquote>\n<p>If a dependency provides a lake manifest file lake will of course do the sane thing and use the trans dependencies as locked by the dependencies, in fact it even tells you this in the stdout.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pinned.20dependencies/near/319575946\">said</a>:</p>\n<blockquote>\n<p>Indeed I was going to ask what happens if a dependency is transitive through too different routes, perhaps with one direct. For instance a few days ago \"lake update\" repeatedly gave me the wrong version of \"docgen\" and only manually updating made things work.</p>\n</blockquote>\n<p>did you <code>lake update</code> or <code>lake -Kdoc=on update</code> in the first case lake will of course pretend that the doc-gen4 dependency doesn't exist since it is only optionally enabled if the Kdoc=on is enabled. If you enable that during update everything works and has always worked since the doc-gen4 CI started running.</p>",
        "id": 319579024,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672923135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> try the repo I pointed out and you will see. It silently downloads a different Aesop version</p>",
        "id": 319581903,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1672924157
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pinned.20dependencies/near/319579024\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pinned.20dependencies/near/319575318\">said</a>:</p>\n<blockquote>\n<p>Why aren't mathlib4 dependencies pinned by git hashes? I think it can cause weird behaviors for packages that depend on mathlib.</p>\n<p>For example, <span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> 's LeanAide uses the same pinning method from mathlib (using master revision on the lakefile), but it downloaded a different version of Aesop from the one that's explicited on mathlib's manifest.</p>\n<p>In <a href=\"https://github.com/yatima-inc\">https://github.com/yatima-inc</a> we manage a web of ~8 different Lean packages with dependencies pinned by git hashes and we don't run into this problem</p>\n</blockquote>\n<p>If a dependency provides a lake manifest file lake will of course do the sane thing and use the trans dependencies as locked by the dependencies, in fact it even tells you this in the stdout.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> <a href=\"#narrow/stream/287929-mathlib4/topic/pinned.20dependencies/near/319575946\">said</a>:</p>\n<blockquote>\n<p>Indeed I was going to ask what happens if a dependency is transitive through too different routes, perhaps with one direct. For instance a few days ago \"lake update\" repeatedly gave me the wrong version of \"docgen\" and only manually updating made things work.</p>\n</blockquote>\n<p>did you <code>lake update</code> or <code>lake -Kdoc=on update</code> in the first case lake will of course pretend that the doc-gen4 dependency doesn't exist since it is only optionally enabled if the Kdoc=on is enabled. If you enable that during update everything works and has always worked since the doc-gen4 CI started running.</p>\n</blockquote>\n<p>I did <code>lake update -Kdoc=on</code>so <code>docgen4</code> did update. What it changed to though was not the latest commit at that time. I could not figure out where the specific commit came from (did not try much as I just wanted stuff working for the start of my course).</p>",
        "id": 319584683,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672925229
    },
    {
        "content": "<p>So regarding your repo <span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> why do you have boht a lean-packages and a lean_packages? Those are mutually exclusive, lake switched the naming and the manifest in modern <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> lake projects is in the top level directory and the directory is called lake-packages etc. Which is because your Lean compiler version is oudated quite a while.</p>\n<p>If you were to update to a modern version of mathlib4 everything should just blow up at the compilation phase for you already.</p>",
        "id": 319585624,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672925507
    },
    {
        "content": "<p>I think his <code>lean-packages</code> directory is simply ignored by Lake. I suspect it's not relevant</p>",
        "id": 319586278,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1672925715
    },
    {
        "content": "<p>I have forgotten to delete the old manifest, though I have been maintaining <code>lake-manifest</code>. I assumed that the old one will be ignored.</p>",
        "id": 319586297,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672925726
    },
    {
        "content": "<p>In any case, I will delete it.</p>",
        "id": 319586326,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672925737
    },
    {
        "content": "<p>I am using the latest version of <code>mathlib4</code> and making sure my lean-toolchain is in sync.</p>",
        "id": 319586798,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672925897
    },
    {
        "content": "<p>The file was just a vestigial organ.</p>",
        "id": 319586835,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672925913
    },
    {
        "content": "<p>Ah you are on the mathlib4 instead of the master branch I see</p>",
        "id": 319587017,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672925967
    },
    {
        "content": "<p>lets check again then</p>",
        "id": 319587035,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672925969
    },
    {
        "content": "<p>This time it has updated to the latest version and has worked fine.</p>",
        "id": 319588165,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672926347
    },
    {
        "content": "<p>Okay so on a clean checkout of your mathlib4 branch I get </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">λ</span> <span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">Kdoc</span><span class=\"bp\">=</span><span class=\"n\">on</span> <span class=\"n\">update</span>\n<span class=\"n\">updating</span> <span class=\"bp\">./</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"n\">cac724d14d1f733658a9d0e0ad5c81db20a9f802</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">xubaiw</span><span class=\"bp\">/</span><span class=\"n\">CMark.lean</span> <span class=\"n\">to</span> <span class=\"bp\">././</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">CMark</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"n\">to</span> <span class=\"bp\">././</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">lake</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span> <span class=\"n\">to</span> <span class=\"bp\">././</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">mhuisi</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span> <span class=\"n\">to</span> <span class=\"bp\">././</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">hargonix</span><span class=\"bp\">/</span><span class=\"n\">LeanInk</span> <span class=\"n\">to</span> <span class=\"bp\">././</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">leanInk</span>\n<span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">xubaiw</span><span class=\"bp\">/</span><span class=\"n\">Unicode.lean</span> <span class=\"n\">to</span> <span class=\"bp\">././</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Unicode</span>\n</code></pre></div>\n<p>Mathlib references <code>c4477a2a7931e2490339d8087f599a45e89f25e7</code> as aesop commit and the aesop in lake-packages is checked out at <code>c4477a2a7931e2490339d8087f599a45e89f25e7</code> what is the issue?</p>",
        "id": 319588251,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672926373
    },
    {
        "content": "<p>Ah it updated fine this time</p>",
        "id": 319588464,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672926452
    },
    {
        "content": "<p>Well in that case tell me when you see the behaviour next time and I'll have a look</p>",
        "id": 319588537,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1672926473
    },
    {
        "content": "<p>Sure. Thanks.</p>",
        "id": 319588622,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1672926486
    }
]