[
    {
        "content": "<p>From <code>mathlib4/scripts/start_port.sh</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">echo</span> <span class=\"s2\">\"usage: ./scripts/start_port.sh Mathlib/Foo/Bar/Baz.lean\"</span>\n</code></pre></div>",
        "id": 317424597,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671732760
    },
    {
        "content": "<p>This will create a new branch named <code>Foo.Bar.Baz</code> with two commits:</p>\n<ol>\n<li>the output of mathports <code>Mathbin/Foo/Bar/Baz.lean</code></li>\n<li>a commit that adds the new file to <code>Mathlib.lean</code> and replaces <code>Mathbin</code> by <code>Mathlib</code> in the import lines of the new file.</li>\n</ol>",
        "id": 317424762,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671732823
    },
    {
        "content": "<p>That's so cool that you keep the mathbin commit. I always check for mathbins as it gives me confidence that the commit claimed to be the first commit really is a commit with no edits at all to the mathlib3port file.</p>",
        "id": 317428509,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671734058
    },
    {
        "content": "<p>Is this the preferred approach? Is it documented in the wiki?</p>",
        "id": 317430314,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671734708
    },
    {
        "content": "<p>Can we make it call the branch <code>port/X.Y.Z</code> instead?</p>",
        "id": 317432782,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671735592
    },
    {
        "content": "<p>One day we'll want to have non-port branches too!</p>",
        "id": 317432853,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671735606
    },
    {
        "content": "<p>Fair enough. I'll update the script.</p>",
        "id": 317432936,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671735621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span> yes, I hope this will be adopted as the standard approach.</p>",
        "id": 317432995,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671735642
    },
    {
        "content": "<p>I'll document it in the wiki.</p>",
        "id": 317433012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671735647
    },
    {
        "content": "<p>well it's pretty weird to have branches named <code>X.Y.Z</code> otherwise</p>",
        "id": 317433088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671735667
    },
    {
        "content": "<p>they are usually named more like <code>x_y_z</code></p>",
        "id": 317433106,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671735679
    },
    {
        "content": "<p>The next cool thing to build would be an update command that commits the latest mathport as a child of commit 1 (1a), then creates 2a as a child of 1 and 2 with the import fixes, then merges head</p>",
        "id": 317433337,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671735749
    },
    {
        "content": "<p>Mario, that doesn't work well for <code>a_b.c</code> vs <code>a.b_c</code> filenames</p>",
        "id": 317433430,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671735788
    },
    {
        "content": "<p>Git allows dots, so I don't think they're that weird. <code>port/X/Y/Z</code> would also be nice, as then the folder tree inside git matches the source tree (but this might be illegal for some branch names on windows!)</p>",
        "id": 317433637,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671735867
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/starting.20the.20port.20of.20a.20new.20file/near/317432782\">said</a>:</p>\n<blockquote>\n<p>Can we make it call the branch <code>port/X.Y.Z</code> instead?</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1170\">mathlib4#1170</a></p>",
        "id": 317433642,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671735870
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/starting.20the.20port.20of.20a.20new.20file/near/317433430\">said</a>:</p>\n<blockquote>\n<p>Mario, that doesn't work well for <code>a_b.c</code> vs <code>a.b_c</code> filenames</p>\n</blockquote>\n<p>We don't have file names like that though?</p>",
        "id": 317434183,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671736090
    },
    {
        "content": "<p>and also I don't understand how that is a conflict, those are different names</p>",
        "id": 317434248,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671736129
    },
    {
        "content": "<p>I think Eric was assuming you were suggesting <code>tr . _</code></p>",
        "id": 317434465,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671736219
    },
    {
        "content": "<p>oh, no I meant to just use <code>X.Y.Z</code> and rely on the fact that most other branch names are named using a different convention to avoid conflicts</p>",
        "id": 317434879,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671736393
    },
    {
        "content": "<p>I've updated the wiki. (It assumes <a href=\"https://github.com/leanprover-community/mathlib4/pull/1170\">mathlib4#1170</a> will be merged at some point.)</p>",
        "id": 317434894,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671736401
    },
    {
        "content": "<p>I'm having a bit of trouble with this. When I run <code>./scripts/start_port.sh Mathlib/Data/PNat/Prime.lean</code> it seems to not work as I get back a file <code>start_port_tmp.lean</code> with contents <code>404: Not Found</code>. </p>\n<p>The output of running the command is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">+</span> <span class=\"n\">set</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"n\">pipefail</span>\n<span class=\"bp\">+</span> <span class=\"n\">MATHLIB3PORT_BASE_URL</span><span class=\"bp\">=</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib3port</span><span class=\"bp\">/</span><span class=\"n\">master</span>\n<span class=\"bp\">+</span> <span class=\"n\">PORT_STATUS_YAML</span><span class=\"bp\">=</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">wiki</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">-</span><span class=\"n\">port</span><span class=\"bp\">-</span><span class=\"n\">status.md</span>\n<span class=\"bp\">+</span> <span class=\"n\">TMP_FILE</span><span class=\"bp\">=</span><span class=\"n\">start_port_tmp.lean</span>\n<span class=\"bp\">+</span> <span class=\"n\">mathlib4_path</span><span class=\"bp\">=</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">PNat</span><span class=\"bp\">/</span><span class=\"n\">Prime.lean</span>\n<span class=\"bp\">+++</span> <span class=\"n\">echo</span> <span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">PNat</span><span class=\"bp\">/</span><span class=\"n\">Prime.lean</span>\n<span class=\"bp\">+++</span> <span class=\"n\">tr</span> <span class=\"bp\">/</span> <span class=\"bp\">.</span>\n<span class=\"bp\">++</span> <span class=\"n\">basename</span> <span class=\"n\">Mathlib.Data.PNat.Prime.lean</span> <span class=\"bp\">.</span><span class=\"n\">lean</span>\n<span class=\"bp\">+</span> <span class=\"n\">mathlib4_mod</span><span class=\"bp\">=</span><span class=\"n\">Mathlib.Data.PNat.Prime</span>\n<span class=\"bp\">+</span> <span class=\"n\">mathlib3port_url</span><span class=\"bp\">=</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">raw.githubusercontent.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib3port</span><span class=\"bp\">/</span><span class=\"n\">master</span><span class=\"bp\">/</span><span class=\"n\">Mathbin</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">PNat</span><span class=\"bp\">/</span><span class=\"n\">Prime.lean</span>\n<span class=\"bp\">+</span> <span class=\"n\">curl</span> <span class=\"c1\">--silent --show-error -o start_port_tmp.lean https://raw.githubusercontent.com/leanprover-community/mathlib3port/master/Mathbin/Data/PNat/Prime.lean</span>\n<span class=\"bp\">++</span> <span class=\"n\">grep</span> <span class=\"bp\">'^!</span> <span class=\"bp\">.*</span><span class=\"n\">source</span> <span class=\"n\">module</span> <span class=\"bp\">'</span>\n<span class=\"bp\">++</span> <span class=\"n\">sed</span> <span class=\"bp\">'</span><span class=\"n\">s</span><span class=\"bp\">/.*</span><span class=\"n\">source</span> <span class=\"n\">module</span> <span class=\"bp\">\\</span><span class=\"o\">(</span><span class=\"bp\">.*\\</span><span class=\"o\">)</span><span class=\"bp\">$/\\</span><span class=\"mi\">1</span><span class=\"bp\">/'</span>\n<span class=\"bp\">+</span> <span class=\"n\">mathlib3_module</span><span class=\"bp\">=</span>\n</code></pre></div>\n<p>Any help would be really appreciated!</p>",
        "id": 318327322,
        "sender_full_name": "zbatt",
        "timestamp": 1672262917
    },
    {
        "content": "<p>I figured it out, there's an inconsistency in the naming schemes for <code>PNat</code>. In Mathlib4, its given as <code>PNat</code>, but in <code>mathlib3port</code> its given as <code>Pnat</code> which causes the <code>curl</code> to fail.</p>",
        "id": 318331382,
        "sender_full_name": "zbatt",
        "timestamp": 1672265187
    },
    {
        "content": "<p>Oh nice catch!</p>",
        "id": 318331800,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672265430
    },
    {
        "content": "<p>I feel like the naming inconsistency might make this port a bit delicate, so maybe not suitable for my first one haha. I'll leave it to the experts</p>",
        "id": 318332230,
        "sender_full_name": "zbatt",
        "timestamp": 1672265686
    },
    {
        "content": "<p>naming inconsistency is part of the joy of porting, along with autoimplicits, <code>simp</code>/<code>rw</code> inconsistencies -- just dive in!</p>",
        "id": 318338389,
        "sender_full_name": "Arien Malec",
        "timestamp": 1672269692
    },
    {
        "content": "<p>Is this <code>Pnat</code> vs <code>PNat</code> thing something we can/should inform mathport about?</p>",
        "id": 318368707,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672298654
    },
    {
        "content": "<p>I just created</p>\n<blockquote>\n<p>chore: <a href=\"http://start_port.sh\">start_port.sh</a> makes empty commit with nice PR title <a href=\"https://github.com/leanprover-community/mathlib/pull/1345\">#1345</a> </p>\n</blockquote>\n<p>This should give you a nice PR title, when you open a PR.</p>",
        "id": 319552460,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672914044
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1345\">mathlib4#1345</a></p>",
        "id": 319553039,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672914278
    },
    {
        "content": "<p>I don't think this helps?</p>",
        "id": 319553104,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672914307
    },
    {
        "content": "<p>Doesn't github just use the branch name for the PR title if there is more than one commit?</p>",
        "id": 319553146,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672914333
    },
    {
        "content": "<p>Nope, it takes the title of the first commit, in that case. I'm pretty sure about that.</p>",
        "id": 319553180,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672914351
    },
    {
        "content": "<p>Or is that something that <code>hub</code> does on my end?</p>",
        "id": 319554216,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672914656
    },
    {
        "content": "<p>That sounds like something <code>hub</code> does; or github changed this behavior within the last two days; I've not seen this happen before</p>",
        "id": 319554474,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672914733
    },
    {
        "content": "<p>The web interface indeed tries to parse the branch name, which I find very frustrating :(</p>",
        "id": 319554715,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1672914821
    },
    {
        "content": "<p>For example: <a href=\"https://github.com/leanprover-community/mathlib/compare/eric-wieser/bad-pr-title?expand=1\">https://github.com/leanprover-community/mathlib/compare/eric-wieser/bad-pr-title?expand=1</a></p>",
        "id": 319554783,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672914841
    },
    {
        "content": "<p>Aah, I didn't realize it was <code>hub</code> doing that. Ok. Maybe let's drop the PR in that case.</p>",
        "id": 319555070,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672914947
    },
    {
        "content": "<p>It helps if you open PRs from within VScode</p>",
        "id": 319555419,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672915034
    },
    {
        "content": "<p>Oh, you can set the title in a URL!</p>",
        "id": 319555507,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672915063
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/compare/eric-wieser/bad-pr-title?expand=1&amp;title=this+is+ok\">https://github.com/leanprover-community/mathlib/compare/eric-wieser/bad-pr-title?expand=1&amp;title=this+is+ok</a></p>",
        "id": 319555517,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672915068
    },
    {
        "content": "<p>So maybe the script can just emit a url to click at the end to open the PR?</p>",
        "id": 319555610,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672915090
    },
    {
        "content": "<p>Ooh! That sounds like a good idea!</p>",
        "id": 319555837,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672915177
    },
    {
        "content": "<p>(don't forget to query-string-quote the title! Python's <code>urllib.parse.quote_plus</code> would do it)</p>",
        "id": 319556002,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672915228
    },
    {
        "content": "<p>script is in bash</p>",
        "id": 319558826,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672916165
    },
    {
        "content": "<blockquote>\n<p>chore: <a href=\"http://start_port.sh\">start_port.sh</a> can print a URL to open PR with useful title <a href=\"https://github.com/leanprover-community/mathlib4/pull/1346\">mathlib4#1346</a></p>\n</blockquote>",
        "id": 319559364,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672916353
    },
    {
        "content": "<p>Should the script also do a <code>git push</code>?</p>",
        "id": 319559413,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672916377
    },
    {
        "content": "<p>I think it's fine to do the git push, as long as it:</p>\n<ul>\n<li>Does it silently, so that github doesn't insert it's own url with a bad link</li>\n<li>Catches errors and turns them into an error message like \"someone else has already ported this file\"</li>\n</ul>",
        "id": 319563256,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672917704
    },
    {
        "content": "<p>I don't know how to do that off the top of my head.</p>",
        "id": 319563455,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672917763
    },
    {
        "content": "<p><code>git push --quiet</code> is the first. Maybe a better approach for the last is to first check if <code>origin/$mathport_branch</code> already exists</p>",
        "id": 319569297,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672919914
    },
    {
        "content": "<p>Have people tried the <code>gh</code> tool? <code>gh pr new</code> is a really good way to create a PR, in my experience.</p>",
        "id": 319583276,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1672924674
    },
    {
        "content": "<p><code>gh pr create</code> is perfect. It also uses the first commit message to create a PR title.</p>",
        "id": 319749211,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672999205
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> What do you think of doing both (i) an empty commit with a nice title at the start of the PR, and (ii) print a URL to open a PR with a nice title</p>",
        "id": 319749380,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672999267
    },
    {
        "content": "<p>That way we can support both a <code>gh</code> and non-<code>gh</code> workflow.</p>",
        "id": 319749422,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672999279
    },
    {
        "content": "<p>I don't think the empty commit does any harm if it helps with some workflows</p>",
        "id": 319749728,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672999420
    },
    {
        "content": "<p>I updated the PR</p>",
        "id": 319750219,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672999612
    },
    {
        "content": "<p>I suggest that the pushing etc be done in another PR.</p>",
        "id": 319750301,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672999636
    },
    {
        "content": "<p>FWIW, my workflow is to first see if the port is possible for me to make meaningful progress on before I push. If I walk into a file and when I compile after fixing <code>Mathlib</code> I see a see of red that I have no idea how to fix, <em>and</em> I can't make progress on cleanup, I delete the branch and walk slowly away.</p>",
        "id": 319851594,
        "sender_full_name": "Arien Malec",
        "timestamp": 1673034648
    },
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/1667\">mathlib4#1667</a> I add two tiny features to the start_port script:</p>\n<ul>\n<li>fix <code>Smul</code> and <code>Pnat</code> to <code>SMul</code> and <code>PNat</code> in import statements</li>\n<li>move <code>by</code> to the end of the previous line, when it fits</li>\n</ul>",
        "id": 322214693,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674113789
    },
    {
        "content": "<p>The second one might need some second touch ups due to later changes to the file, but I still hope it will take care of 90% of the <code>by</code> issues.</p>",
        "id": 322214796,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674113839
    },
    {
        "content": "<p>In semi-related news: mathport will now add <code>#align</code> statements for <code>to_additive</code>ized decls</p>",
        "id": 322216237,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674114558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/starting.20the.20port.20of.20a.20new.20file/near/322214693\">said</a>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/1667\">mathlib4#1667</a> I add two tiny features to the start_port script:</p>\n<ul>\n<li>fix <code>Smul</code> and <code>Pnat</code> to <code>SMul</code> and <code>PNat</code> in import statements</li>\n<li>move <code>by</code> to the end of the previous line, when it fits</li>\n</ul>\n</blockquote>\n<p>fwiw, this causes the same issue for mac because <code>awk</code> doesn't line up on both operating systems - i think the workaround is similar, just worth noting</p>",
        "id": 322346872,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1674152206
    },
    {
        "content": "<p>Good point.</p>",
        "id": 322347288,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674152309
    },
    {
        "content": "<p>The workaround being \"install gnu awk via brew\"?</p>",
        "id": 322350845,
        "sender_full_name": "Arien Malec",
        "timestamp": 1674153281
    },
    {
        "content": "<p>yes, and add the correct thing to your <code>.zshrc</code></p>",
        "id": 322351320,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1674153426
    },
    {
        "content": "<p>I've taken to adding to <code>/etc/paths</code></p>",
        "id": 322351431,
        "sender_full_name": "Arien Malec",
        "timestamp": 1674153464
    },
    {
        "content": "<p>Added instructions to the porting guide wiki.</p>",
        "id": 322353701,
        "sender_full_name": "Arien Malec",
        "timestamp": 1674154169
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"542196\">Arien Malec</span> <a href=\"#narrow/stream/287929-mathlib4/topic/starting.20the.20port.20of.20a.20new.20file/near/322353701\">said</a>:</p>\n<blockquote>\n<p>Added instructions to the porting guide wiki.</p>\n</blockquote>\n<p>where exactly, sorry? can't find ti</p>",
        "id": 322356451,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1674154979
    },
    {
        "content": "<p>Last bullet of <code>3.</code></p>",
        "id": 322357763,
        "sender_full_name": "Arien Malec",
        "timestamp": 1674155368
    },
    {
        "content": "<blockquote>\n<p>Note that on OS X, the OS installed version of sed and awk do not work with the <a href=\"http://start_port.sh\">start_port.sh</a> script. The fix is to install the GNU versions (e.g. via brew install gawk gsed) and ensure they, rather than the OS versions, are the default for sed and awk (e.g. by following the path instructions provided by brew)</p>\n</blockquote>",
        "id": 322357812,
        "sender_full_name": "Arien Malec",
        "timestamp": 1674155385
    }
]