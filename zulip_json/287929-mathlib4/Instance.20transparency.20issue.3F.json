[
    {
        "content": "<p>The following bit in Lean 3</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"n\">has_lt'</span> <span class=\"o\">:</span> <span class=\"n\">has_lt</span> <span class=\"n\">string</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span><span class=\"o\">,</span> <span class=\"n\">ltb</span> <span class=\"n\">s₁.mk_iterator</span> <span class=\"n\">s₂.mk_iterator</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">decidable_lt</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">decidable_rel</span> <span class=\"n\">string</span> <span class=\"o\">(</span><span class=\"bp\">&lt;</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">apply_instance</span> <span class=\"c1\">-- short-circuit type class inference</span>\n</code></pre></div>\n<p>doesn't work without adaption in Lean 4, but instead I have to do the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"n\">lt'</span> <span class=\"o\">:</span> <span class=\"n\">LT</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">ltb</span> <span class=\"n\">s₁.mkIterator</span> <span class=\"n\">s₂.mkIterator</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">decidable_lt</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">DecidableRel</span> <span class=\"n\">String</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">lt'</span><span class=\"o\">]</span>\n  <span class=\"n\">infer_instance</span>  <span class=\"c1\">-- short-circuit type class inference</span>\n</code></pre></div>\n<p>Does anybody know why this is? Is this intended?</p>",
        "id": 316134928,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1671136546
    },
    {
        "content": "<p>I guess the inference doesn't unfold exactly the same was as before?</p>",
        "id": 316135426,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1671136692
    }
]