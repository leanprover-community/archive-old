[
    {
        "content": "<p>I started a project of removing <code>module</code> and <code>finset</code> from the imports of <code>data.real.basic</code>.  <a href=\"https://github.com/leanprover-community/mathlib/pull/17758\">#17758</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/17760\">#17760</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/17761\">#17761</a> are the first steps.</p>",
        "id": 312950741,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669761158
    },
    {
        "content": "<p>Heh, I had  <a href=\"https://github.com/leanprover-community/mathlib/pull/17761\">#17761</a> just about ready as well. Pushed my final fixes to your branch</p>",
        "id": 312954373,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669762649
    },
    {
        "content": "<p>I also pushed  <a href=\"https://github.com/leanprover-community/mathlib/pull/17764\">#17764</a>, but now I'm off :)</p>",
        "id": 312958131,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669763874
    },
    {
        "content": "<p>Can anyone suggest how to fix the broken test in <a href=\"https://github.com/leanprover-community/mathlib/pull/17760\">#17760</a>?  The task is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">filter.map</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">f</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">filter.map</span> <span class=\"n\">g</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>the timing-out proof is <code>by library_search!</code>, and I can't see how this would be affected by splitting <code>char_zero</code> into two files.</p>\n<p>(I tried adding back in both post-split files, in case it was a missing import, but the timeout remains.)</p>",
        "id": 312963529,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669766776
    },
    {
        "content": "<p>Maybe use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.try_for\">docs#tactic.interactive.try_for</a></p>",
        "id": 312984730,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1669782676
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/287929-mathlib4/topic/data.2Ereal.2Ebasic/near/312950741\">said</a>:</p>\n<blockquote>\n<p>I started a project of removing <code>module</code> and <code>finset</code> from the imports of <code>data.real.basic</code>.  <a href=\"https://github.com/leanprover-community/mathlib/pull/17758\">#17758</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/17760\">#17760</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/17761\">#17761</a> are the first steps.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17768\">#17768</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/17772\">#17772</a> are also in pursuit of this goal.</p>",
        "id": 313095727,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669824855
    },
    {
        "content": "<p>The number of lines to reach <code>data.real.basic</code> dropped from <strong>120,374</strong> <a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313597080\">yesterday</a> to <strong>92,135</strong><br>\n<a href=\"#narrow/stream/287929-mathlib4/topic/port.20progress/near/313719837\">today</a>!  This is thanks to the elimination of <code>finset</code> from its imports with <a href=\"https://github.com/leanprover-community/mathlib/pull/17791\">#17791</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/17768\">#17768</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/17792\">#17792</a> landing (as well as a series of previous PRs by myself and <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>, which reduced the <code>finset</code> imports to those three paths).</p>\n<p>The <code>submonoid</code> object disappeared the day before that, thanks to <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> in <a href=\"https://github.com/leanprover-community/mathlib/pull/17786\">#17786</a>.  The <code>module</code> import will be gone after <a href=\"https://github.com/leanprover-community/mathlib/pull/17804\">#17804</a>.  There's more that could be done, but I'm going to stop here.</p>",
        "id": 313725287,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670094859
    },
    {
        "content": "<p>What's the motivation for pulling <code>algebra.module.basic</code>out of the import path? Are there heavy imports there that perhaps suggest algebra.module.basic should be split instead?</p>",
        "id": 313812313,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670162179
    },
    {
        "content": "<p><code>module</code> doesn't strike me as a particularly complex thing to depend on, especially from the perspective that many <code>mul</code> lemmas can be stated as special cases of a <code>smul</code> lemma.</p>",
        "id": 313812396,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670162225
    },
    {
        "content": "<p>In general, I'm afraid that the file atomisation taking place currently will work towards rebuilding more things from scratch rather than using general theory (because the general theory requires more imports).</p>",
        "id": 313831630,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670172043
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Perhaps you don't realise that removing <code>module</code> from the import path of <code>data/real/basic</code> did not actually require changing any proofs.  The chain of declarations leading to this file was already independent of <code>module</code>, it just happened that some of these declarations lived in the same files as declarations depending on <code>module</code>.</p>",
        "id": 313838400,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670175949
    },
    {
        "content": "<p>Personally, I would also be happy to change a few proofs in order to eliminate an import (for example, one or two proofs of the kind conjectured by Eric:<br>\n<span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/data.2Ereal.2Ebasic/near/313812396\">said</a>:</p>\n<blockquote>\n<p>many <code>mul</code> lemmas can be stated as special cases of a <code>smul</code> lemma.</p>\n</blockquote>\n<p>) if the duplication is not too egregious.  We already are effectively doing that by constructing <code>real</code> using the special-purpose <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cau_seq\">docs#cau_seq</a> rather than by using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_space.completion\">docs#uniform_space.completion</a>.  But I agree that such changes are more controversial.</p>",
        "id": 313838900,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670176275
    }
]