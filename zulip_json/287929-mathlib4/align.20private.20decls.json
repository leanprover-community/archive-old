[
    {
        "content": "<p>(how) should we <code>#align</code> <code>private</code> declarations?</p>",
        "id": 317103889,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671610595
    },
    {
        "content": "<p>I've removed the <code>#align</code>s - it's not like they can be used for anything</p>",
        "id": 317107099,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671611964
    },
    {
        "content": "<p>Should we be silently discarding <code>private</code>? Does <code>private</code> exist in Lean 4?</p>",
        "id": 323089296,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674498544
    },
    {
        "content": "<p>I used this chat as a reference to do just that <a href=\"#narrow/stream/287929-mathlib4/topic/align.20private.20decls/near/317107099\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/align.20private.20decls/near/317107099</a></p>",
        "id": 323089575,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1674498619
    },
    {
        "content": "<p>with a porting note</p>",
        "id": 323089750,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1674498691
    },
    {
        "content": "<p>Lean4 did not allow access to the private def name</p>",
        "id": 323089840,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1674498722
    },
    {
        "content": "<p>It suggested <code>_private.....&lt;def_name&gt;</code>, but that also gave an error.</p>",
        "id": 323089965,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1674498749
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/287929-mathlib4/topic/align.20private.20decls/near/323089296\">said</a>:</p>\n<blockquote>\n<p>Should we be silently discarding <code>private</code>? Does <code>private</code> exist in Lean 4?</p>\n</blockquote>\n<p>It is possible that  <code>lean4</code> is complaining that  I should not be able to access that def. If so,  this suggests that <code>lean 4</code> definitely recognizes <code>private</code> as a keyword that should restrict access</p>",
        "id": 323090173,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1674498831
    },
    {
        "content": "<p>yes <code>private</code> exists. Yes we should remove <code>#align</code> on private decls</p>",
        "id": 323090869,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674499068
    },
    {
        "content": "<p>And should they stay <code>private</code> in mathlib 4?</p>",
        "id": 323092709,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674499669
    },
    {
        "content": "<p>I think so?</p>",
        "id": 323092802,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674499685
    },
    {
        "content": "<p>the effect is basically the same, so I don't see why not</p>",
        "id": 323092865,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674499704
    },
    {
        "content": "<p>I mean <code>private</code> declarations are discouraged in mathlib to begin with, but I don't think that the move to lean 4 has anything to do with that</p>",
        "id": 323092958,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674499729
    },
    {
        "content": "<p>Makes sense to me, I was just wondering because I came across a lemma that lost its <code>private</code> modifier in the port.</p>",
        "id": 323093125,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674499782
    },
    {
        "content": "<p>hm, mathport didn't do that</p>",
        "id": 323093171,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674499797
    },
    {
        "content": "<p>Does mathport currently attempt to emit <code>#align</code>s for private decls?</p>",
        "id": 323095368,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674500429
    },
    {
        "content": "<p>It did for me.</p>",
        "id": 323095436,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1674500446
    },
    {
        "content": "<p>Yeah, it does</p>",
        "id": 323095582,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674500493
    },
    {
        "content": "<p>Maybe that's simple enough to fix</p>",
        "id": 323095608,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674500506
    },
    {
        "content": "<p>it does (PR's welcome)</p>",
        "id": 323095755,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674500547
    }
]