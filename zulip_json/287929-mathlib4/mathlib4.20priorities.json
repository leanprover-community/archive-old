[
    {
        "content": "<p>Hello, I was wondering how the port of mathlib to lean 4 is going, and where would be the most useful place to help out. Is there something like a \"list of pending TODO items\"? Or a breakdown like, we need to port 200 tactics, and these 60 are already complete. Or is the bottleneck not really porting tactics, but something else?</p>",
        "id": 280521883,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1651164055
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span></p>",
        "id": 280522122,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651164141
    },
    {
        "content": "<p>i did read this blog post <a href=\"https://leanprover-community.github.io/blog/posts/intro-to-mathport/\">https://leanprover-community.github.io/blog/posts/intro-to-mathport/</a> but that is 4 months ago so hopefully some of those \"todos\" described have been done already</p>",
        "id": 280522277,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1651164223
    },
    {
        "content": "<p>A good starting point for the tactic todo is this file: <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Mathport/Syntax.lean\">https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Mathport/Syntax.lean</a></p>",
        "id": 280522412,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1651164277
    },
    {
        "content": "<p>do the comments like <code>/- N -/</code> have some secret meaning</p>",
        "id": 280522561,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1651164339
    },
    {
        "content": "<p>Yes, it's described at the top of the file.</p>",
        "id": 280522582,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1651164349
    },
    {
        "content": "<p>oh, i see. okay so all of the tactics in this file are essentially \"todo\" items</p>",
        "id": 280522666,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1651164374
    },
    {
        "content": "<p>Ocasionally core Lean implements one on the list themselves and they are not removed from the list right away but generally speaking that is correct</p>",
        "id": 280523724,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1651164833
    },
    {
        "content": "<p>so just to get a first-order understanding of the project, counting the occurrences of <code>syntax (name</code> in this file, three months ago it was at 299 and now it's at 256. this is a pace for, in about a year and a half all the tactics will be ported. does that seem vaguely accurate?</p>",
        "id": 280524168,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1651165034
    },
    {
        "content": "<p>The rough time line was to hopefully be done by the end of this year and then get to cleaning up the compiler itself and do more funky stuff.</p>",
        "id": 280524223,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1651165076
    },
    {
        "content": "<p>do you expect the compiler work + \"funky stuff\" to be more work or less work than porting all the tactics</p>",
        "id": 280524406,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1651165143
    },
    {
        "content": "<p>What is the current status of that Lean 4 meta programming guide <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> ? I might be interested in contributing some easy tactics to help speed the process along. I have some Haskell experience, so monads aren't entirely foreign to me.</p>",
        "id": 280526193,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1651165924
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280524406\">said</a>:</p>\n<blockquote>\n<p>do you expect the compiler work + \"funky stuff\" to be more work or less work than porting all the tactics</p>\n</blockquote>\n<p>That's a question for <span class=\"user-mention\" data-user-id=\"112857\">@Leonardo de Moura</span> or <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> </p>\n<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280526193\">said</a>:</p>\n<blockquote>\n<p>What is the current status of that Lean 4 meta programming guide <span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> ? I might be interested in contributing some easy tactics to help speed the process along. I have some Haskell experience, so monads aren't entirely foreign to me.</p>\n</blockquote>\n<p>very, very little content unfortunately, all people that write tactics rn are self taught from reading code and asking the smarter people.</p>",
        "id": 280527994,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1651166759
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280526193\">said</a>:</p>\n<blockquote>\n<p>What is the current status of that Lean 4 meta programming guide <span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> ? I might be interested in contributing some easy tactics to help speed the process along. I have some Haskell experience, so monads aren't entirely foreign to me.</p>\n</blockquote>\n<p>We've got the first and second chapter to a \"ready-for-review\" state but we need feedback from readers. <span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> wrote some content for the <code>MetaM</code>chapter that also needs feedback from readers. At the moment I'm doing more studies about Lean 4 so I can continue creating more content for it</p>",
        "id": 280528410,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651166946
    },
    {
        "content": "<p>Link: <a href=\"https://github.com/arthurpaulino/lean4-metaprogramming-book\">https://github.com/arthurpaulino/lean4-metaprogramming-book</a><br>\nIf anyone wants to help, the files that need to be changed are the ones inside the <code>lean</code> directory. The markdown files from <code>md</code> are generated automatically by <a href=\"https://github.com/arthurpaulino/lean2md\">lean2md</a></p>",
        "id": 280528650,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651167042
    },
    {
        "content": "<p>I've been digging into how TermElab and CommandElab work since the beginning of the week, I think I might write something on attributes (they are surprisingly fundamental to all of Lean's extensibility) and the rough workings of term elaboration and command elaboration the next days and try to dig further down along the stack so maybe we'll meet in the middle :P</p>",
        "id": 280529106,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1651167248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280527994\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280524406\">said</a>:</p>\n<blockquote>\n<p>do you expect the compiler work + \"funky stuff\" to be more work or less work than porting all the tactics</p>\n</blockquote>\n<p>That's a question for <span class=\"user-mention silent\" data-user-id=\"112857\">Leonardo de Moura</span> or <span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> </p>\n</blockquote>\n<p>I don't know how to answer this question. In the Lean 4 repo, we are currently focusing on fixing bugs and adding missing features that are relevant for the Mathlib port. The \"compiler work\" (i.e., code generation) is not essential for the port, thus we have postponed. I am reading \"funky stuff\" as many aspirational features we want, but are also not essential for the port.</p>",
        "id": 280529458,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1651167410
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280523724\">said</a>:</p>\n<blockquote>\n<p>Ocasionally core Lean implements one on the list themselves and they are not removed from the list right away but generally speaking that is correct</p>\n</blockquote>\n<p>They are removed as soon as a complete replacement is added. The only reason it would not be removed is if there are still some unimplemented features in the lean 3 tactic, or we did not notice when bumping nightly. (They are all in the <code>Lean.Tactic</code> namespace to maximize the probability of a name clash if one is implemented upstream so we can take it off the list.)</p>",
        "id": 280566917,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1651187024
    },
    {
        "content": "<p>to_additive is merged</p>",
        "id": 282042425,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1652312632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280528410\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathlib4.20priorities/near/280526193\">said</a>:</p>\n<blockquote>\n<p>What is the current status of that Lean 4 meta programming guide <span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> ? </p>\n</blockquote>\n<p>We've got the first and second chapter to a \"ready-for-review\" state but we need feedback from readers.... </p>\n</blockquote>\n<p>I've just starting reading it. What sort of feedback are you looking for?</p>",
        "id": 287613021,
        "sender_full_name": "michal wallace (tangentstorm)",
        "timestamp": 1656351985
    },
    {
        "content": "<p>Whatever isn't clearly understandable or you think needs more detailed explanations/further information in general.</p>",
        "id": 287614385,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1656352655
    },
    {
        "content": "<p>The quality goal right now is to get it to a point where we can show it to people and expect them to understand the basics of Lean 4 meta programming afterwards, assuming that they already know how monads and basic Lean 4 syntax works.</p>",
        "id": 287614501,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1656352690
    }
]