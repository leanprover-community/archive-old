[
    {
        "content": "<p>In a previous thread, it was agreed that the naming convention for intervals should be kept as <code>Ioc</code> even though it is a term of <code>Set</code> and so should be lowerCamelCase. Similarly, how should the unordered interval <code>interval_oc</code> be named? See <a href=\"https://github.com/leanprover-community/mathlib4/pull/1062\">mathlib4#1062</a>.</p>",
        "id": 316853344,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671494144
    },
    {
        "content": "<p>I had no idea <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.interval_oc\">docs#set.interval_oc</a> even existed</p>",
        "id": 316853583,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671494293
    },
    {
        "content": "<p>There are several things I'm sceptical about in <code>Data.Set.Intervals.UnorderedInterval</code>.</p>\n<ol>\n<li>The <code>interval</code> and <code>interval_oc</code> names don't suggest any difference from <code>Icc</code> or <code>Ioc</code>, nor the fact that it's unordered. Perhaps better call them <code>uIcc</code> and <code>uIoc</code>.</li>\n<li>Lean4 complains about the <code>[a, b]</code> notation for unordered interval, saying it's ambiguous with <code>List</code> notation.</li>\n<li>The scoped notation <code>Ι a b</code> for <code>interval_oc</code> is a capital iota, not a capital i. This is just ridiculous to me.</li>\n<li>I wasn't able to get <code>scoped[Interval] notation ...</code> to work, so some help would be appreciated.</li>\n</ol>",
        "id": 316854599,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671494875
    },
    {
        "content": "<p>3 and arguably 1 are out of scope for the port; it's great to spot that names are weird, but I'm not sure that that port is the time to change them, especially as the people who picked the names/notation in the first place might not be aware that there is a renaming hiding in the port.</p>\n<p>Perhaps opening issues for these type of things is a good strategy?</p>",
        "id": 316856231,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671495909
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/leanprover-community/mathlib/pull/17982\">mathlib#17982</a></p>",
        "id": 316856876,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671496387
    },
    {
        "content": "<p>Let's just name <code>interval_oc</code> as <code>intervalOC</code>, per the naming convention.</p>",
        "id": 316863817,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671501507
    },
    {
        "content": "<p>Yeah, <code>interval_oc</code> is a terrible name to start with and I don't care about it all. Please just make sure it doesn't spill over to <code>Ixx</code>.</p>",
        "id": 317248108,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671656295
    },
    {
        "content": "<p>If you look through the zulip history you'll find there's already a thread about the names being bad in mathlib3</p>",
        "id": 317264729,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671664152
    },
    {
        "content": "<p>Here's a thread to discuss improving the mathlib names: <a href=\"#narrow/stream/116395-maths/topic/Set.20intervals.20names\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Set.20intervals.20names</a></p>",
        "id": 318249147,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672231532
    },
    {
        "content": "<p>You now have <a href=\"https://github.com/leanprover-community/mathlib4/pull/1496\">mathlib4#1496</a></p>",
        "id": 321033895,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673557422
    }
]