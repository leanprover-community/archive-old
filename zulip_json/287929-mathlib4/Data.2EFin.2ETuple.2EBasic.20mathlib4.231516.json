[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/10346\">#10346</a> is on the merge queue</p>",
        "id": 321581664,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673856467
    },
    {
        "content": "<p>This porting PR is rapidly becoming a roadblock for all progress towards <code>order.filter.basic</code>.<br>\nSee <a href=\"https://tqft.net/mathlib4/latest/order.filter.basic.pdf\">https://tqft.net/mathlib4/latest/order.filter.basic.pdf</a></p>",
        "id": 321810815,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673955853
    },
    {
        "content": "<p>Since mathlib3port isn't updating, can we do a oneshot translation of the latest mathlib3 code?</p>",
        "id": 321811650,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673956185
    },
    {
        "content": "<p>I've never gotten it to work</p>",
        "id": 321811699,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673956199
    },
    {
        "content": "<p>Alternatively we can just finish the current PR and deal with the mathlib3 changes later - there's only 6 changed files anyway</p>",
        "id": 321812546,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673956515
    },
    {
        "content": "<p>I would be inclined to do that</p>",
        "id": 321813017,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673956695
    },
    {
        "content": "<p>The file now compiles</p>",
        "id": 321825077,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673960617
    },
    {
        "content": "<p>And CI is happy</p>",
        "id": 321827115,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673961272
    },
    {
        "content": "<p>I think mathlib3port not updating is going to become a bigger roadblock than this PR in the near future</p>",
        "id": 321830616,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673962372
    },
    {
        "content": "<p>I agree</p>",
        "id": 321830697,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962398
    },
    {
        "content": "<p>Unfortunately mathlib3port and mathport have an extremely low bus factor.</p>",
        "id": 321830800,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962436
    },
    {
        "content": "<p>Looks like probably most of category theory is blocked on <code>slice_lhs</code> support, if we're talking blockers</p>",
        "id": 321831229,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673962555
    },
    {
        "content": "<p>Submitted <a href=\"https://github.com/leanprover-community/mathlib4/pull/1637\">https://github.com/leanprover-community/mathlib4/pull/1637</a> to port the mathlib3 changes</p>",
        "id": 322004375,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674033696
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> Did you use the mathport output of this morning?</p>",
        "id": 322004996,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674033870
    },
    {
        "content": "<p>Yes</p>",
        "id": 322005715,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674034096
    },
    {
        "content": "<p>Great! (Wasn't clear from the commit history.)</p>",
        "id": 322006671,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674034402
    },
    {
        "content": "<p>Oh noes! Now we have <code>repeat</code> again</p>",
        "id": 322006762,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674034432
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> Would you mind turning it into <code>replicate</code>?</p>",
        "id": 322006926,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674034478
    },
    {
        "content": "<p>I just left a comment on the PR</p>",
        "id": 322007246,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674034571
    },
    {
        "content": "<p>This repeat means something different to what list.repeat meant</p>",
        "id": 322007310,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674034596
    },
    {
        "content": "<p>It's not the same <code>repeat</code>!</p>",
        "id": 322007322,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1674034601
    },
    {
        "content": "<p>Then we need another name</p>",
        "id": 322007425,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674034631
    },
    {
        "content": "<p><code>repeat</code> is a keyword in Lean 4</p>",
        "id": 322007443,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674034637
    },
    {
        "content": "<p>Is that a problem? We already have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.repeat#doc\">docs4#Nat.repeat</a></p>",
        "id": 322007680,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1674034699
    },
    {
        "content": "<p>it's annoying to work with declarations which have keywords as names</p>",
        "id": 322007767,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674034732
    },
    {
        "content": "<p>This is the PR that links the definition with list.replicate</p>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/345428-mathlib-reviewers/topic/requests.20for.20speedy.20review.2Fdelegation/near/321707042\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>feat(data/list/of_fn): two lemmas about tuple concatenation <a href=\"https://github.com/leanprover-community/mathlib/pull/18192\">#18192</a></p>\n</blockquote>\n</blockquote>",
        "id": 322007772,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674034733
    },
    {
        "content": "<p>it's not impossible to refer to them but it does seem like a bad idea</p>",
        "id": 322007817,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674034751
    },
    {
        "content": "<p>Another way out of this would be to get rid of <code>fin.repeat</code> and define the more general <code>fin.join</code>, with <code>repeat n a = join (λ i : fin n, a)</code></p>",
        "id": 322008767,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674035043
    },
    {
        "content": "<p>Ok, so shall we just merge this PR with <code>repeat</code> as name?</p>",
        "id": 322014435,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674036932
    },
    {
        "content": "<p>If it is too annoying, we can always rename it</p>",
        "id": 322014490,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674036948
    },
    {
        "content": "<p>2 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/.40.5Bsimp.5D.20on.20equation.20compiler.20definitions\">#mathlib4 &gt; @[simp] on equation compiler definitions</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 322024432,
        "sender_full_name": "Notification Bot",
        "timestamp": 1674039869
    },
    {
        "content": "<p>The port of <code>data.fin.vec_notation</code> is being made more difficult by the fact that <a href=\"https://github.com/leanprover-community/mathlib/pull/10346\">mathlib#10346</a> has not been forward ported to mathlib4 yet.</p>",
        "id": 322229157,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1674119403
    },
    {
        "content": "<p>It is, I think</p>",
        "id": 322229235,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674119431
    },
    {
        "content": "<p>But maybe not yet merged</p>",
        "id": 322229248,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674119436
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1637\">https://github.com/leanprover-community/mathlib4/pull/1637</a></p>",
        "id": 322229292,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674119455
    }
]