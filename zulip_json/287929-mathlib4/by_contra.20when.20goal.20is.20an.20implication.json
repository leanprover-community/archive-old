[
    {
        "content": "<p>It looks to me like <code>by_contra</code> doesn't work if the goal is an implication.  Consider this (silly) example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">by_contra</span>\n</code></pre></div>\n<p>I get the error message <code>tactic 'apply' failed, failed to unify (¬?p → False) → ?p with P → P</code>.<br>\nI assume what's going on here is that <code>by_contra</code> is doing <code>apply Classical.byContradiction</code>, which fails because it tries to unify <code>Classical.byContradiction</code> with <code>P → P</code> and the unification fails.  However, <code>apply Classical.byContradiction _</code> would succeed--the blank gives Lean the clue that it should be applying <code>Classical.byContradiction</code> to something to get <code>P → P</code>.  So should <code>by_contra</code> be redefined to use <code>apply Classical.byContradiction _</code>?</p>",
        "id": 303320137,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1665432773
    },
    {
        "content": "<p>I think it should be  <code>refine Classical.byContradiction ?_</code> then</p>",
        "id": 303322227,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665433921
    },
    {
        "content": "<p><code>apply</code> always seems to be problematic in general code because of this issue</p>",
        "id": 303322302,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665433947
    },
    {
        "content": "<p>What's the difference between <code>_</code> and <code>?_</code>?</p>",
        "id": 303322666,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1665434199
    },
    {
        "content": "<p><code>?_</code> in refine become new proof goals, <code>_</code> have to be solved by unification. So <code>refine Classical.byContradiction _</code> would be an error because it can't infer the rest of the proof</p>",
        "id": 303322860,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665434285
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 303323249,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1665434500
    }
]