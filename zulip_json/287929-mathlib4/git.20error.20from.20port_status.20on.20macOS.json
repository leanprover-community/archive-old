[
    {
        "content": "<p>Maybe try and bisect which bit of the regex it rejects?</p>",
        "id": 317276727,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671672756
    },
    {
        "content": "<p>I recommend doing so in python to avoid having to think about shell escaping</p>",
        "id": 317276744,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671672786
    },
    {
        "content": "<p>I can't help with that I'm afraid since I have no osx machine</p>",
        "id": 317276767,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671672828
    },
    {
        "content": "<p>for reproduction: I’m on macos and I’ve found myself scrolling past that error a lot too (afaik everything is up to date)</p>",
        "id": 317276970,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671673020
    },
    {
        "content": "<p>26 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/port.20progress\">#mathlib4 &gt; port progress</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 317277234,
        "sender_full_name": "Notification Bot",
        "timestamp": 1671673281
    },
    {
        "content": "<p>I don't think python regex is platform-agnostic, sadly</p>",
        "id": 317277762,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671673870
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/AO6vymoiW-kAp5yO80dYq_rZ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/AO6vymoiW-kAp5yO80dYq_rZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/AO6vymoiW-kAp5yO80dYq_rZ/image.png\"></a></div>",
        "id": 317278097,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671674275
    },
    {
        "content": "<p><code>grep</code> seems to accept the complained-about regex, which I thought used the system regexp engine... aa</p>",
        "id": 317278145,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671674292
    },
    {
        "content": "<p>I meant invoke git from python</p>",
        "id": 317279656,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671675829
    },
    {
        "content": "<p>And just work out why it complains the regex is invalid</p>",
        "id": 317279718,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671675863
    },
    {
        "content": "<p>It looks like you're double escaping. If you're using subprocess it escapes for you</p>",
        "id": 317279761,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671675940
    },
    {
        "content": "<p><a href=\"http://www.greenend.org.uk/rjk/tech/regexp.html\">http://www.greenend.org.uk/rjk/tech/regexp.html</a></p>",
        "id": 317280327,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671676460
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/git.20error.20from.20port_status.20on.20macOS/near/317279656\">said</a>:</p>\n<blockquote>\n<p>I meant invoke git from python</p>\n</blockquote>\n<p>To elaborate on that, I mean run</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"n\">comment_git_re</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s1\">'\\`('</span> <span class=\"o\">+</span> <span class=\"sa\">r</span><span class=\"s1\">'|'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span>\n    <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"s2\">\"&gt; THIS FILE IS SYNCHRONIZED WITH MATHLIB4.\"</span><span class=\"p\">),</span>\n    <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"s2\">\"&gt; https://github.com/leanprover-community/mathlib4/pull/\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"sa\">r</span><span class=\"s2\">\"[0-9]*\"</span><span class=\"p\">,</span>\n    <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"s2\">\"&gt; Any changes to this file require a corresponding PR to mathlib4.\"</span><span class=\"p\">),</span>\n    <span class=\"sa\">r</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n<span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"sa\">r</span><span class=\"s2\">\")\"</span> <span class=\"o\">+</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n<span class=\"n\">git_command</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'git'</span><span class=\"p\">,</span> <span class=\"s1\">'diff'</span><span class=\"p\">,</span> <span class=\"s1\">'--quiet'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">'--ignore-matching-lines=</span><span class=\"si\">{</span><span class=\"n\">comment_git_re</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"s1\">'HEAD^..HEAD'</span><span class=\"p\">]</span>\n<span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">git_command</span><span class=\"p\">,</span> <span class=\"n\">check</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>and slowly chip away at <code>comment_git_re</code> to work out which part is causing the error</p>",
        "id": 317324372,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671703262
    },
    {
        "content": "<p>Once we know which part it is, we have a mwe to file a bug against git</p>",
        "id": 317324471,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671703292
    },
    {
        "content": "<p>But I can't do any of this without access to macOS</p>",
        "id": 317324497,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671703301
    },
    {
        "content": "<p><code>comment_git_re = r'\\`(' + r\")\"</code> still fails</p>",
        "id": 317346320,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671709878
    },
    {
        "content": "<p>Does <code>r'\\`'</code>?</p>",
        "id": 317347481,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710257
    },
    {
        "content": "<p>nope</p>",
        "id": 317347946,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710404
    },
    {
        "content": "<p>as in it doesn't work</p>",
        "id": 317347995,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710412
    },
    {
        "content": "<p>english is confusing sorry</p>",
        "id": 317348012,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710418
    },
    {
        "content": "<p>Does the original work if you replace <code>\\` </code> with <code>\\A</code>?</p>",
        "id": 317348079,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710435
    },
    {
        "content": "<p>no - I don't know what either of those does, sadly!</p>",
        "id": 317348377,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710511
    },
    {
        "content": "<p>They both mean \"start of input\"</p>",
        "id": 317348448,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710527
    },
    {
        "content": "<p>But in different regex dialects</p>",
        "id": 317348495,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710544
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/287929-mathlib4/topic/git.20error.20from.20port_status.20on.20macOS/near/317280327\">said</a>:</p>\n<blockquote>\n<p><a href=\"http://www.greenend.org.uk/rjk/tech/regexp.html\">http://www.greenend.org.uk/rjk/tech/regexp.html</a></p>\n</blockquote>\n<p>See here</p>",
        "id": 317348523,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710556
    },
    {
        "content": "<p>Oh I'm always used to <code>^</code> for start of input</p>",
        "id": 317348580,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710576
    },
    {
        "content": "<p>That means start of line</p>",
        "id": 317348600,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710584
    },
    {
        "content": "<p>oh is this multiline?</p>",
        "id": 317348628,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710594
    },
    {
        "content": "<p>Its matching against <code>some_line\\n</code></p>",
        "id": 317348676,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710603
    },
    {
        "content": "<p>Which has two lines, one before the \\n and one empty one after the <code>\\n</code></p>",
        "id": 317348717,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710617
    },
    {
        "content": "<p>Having said that, maybe the <code>\\` </code> can be safely replaced with <code>^</code> since we're explicitly matching the <code>\\n</code></p>",
        "id": 317348870,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710646
    },
    {
        "content": "<p>Does that work for you?</p>",
        "id": 317348884,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710649
    },
    {
        "content": "<p>Either way, this is worthy of a git bug report since <code> \\` </code> works on linux but not macOS</p>",
        "id": 317348944,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710668
    },
    {
        "content": "<p>mailing lists are such a pain urgh</p>",
        "id": 317349051,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710714
    },
    {
        "content": "<p>give me a couple minutes though and let me see if I can get a fully-working regex</p>",
        "id": 317349088,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710731
    },
    {
        "content": "<p>because even removing it I think there's other issues</p>",
        "id": 317349117,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671710742
    },
    {
        "content": "<p>I can't quite track down a fully working regex without basically nuking all of the interesting stuff</p>",
        "id": 317351068,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671711315
    },
    {
        "content": "<p>my hunch is that it's using \"old\" regexes on mac instead of some PCRE stuff</p>",
        "id": 317351097,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671711326
    },
    {
        "content": "<p>but I'm not too sure what's going on because someone wanted to turn _back_ the support on:<br>\n<a href=\"https://www.spinellis.gr/blog/20221012/\">https://www.spinellis.gr/blog/20221012/</a></p>",
        "id": 317351133,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671711342
    },
    {
        "content": "<p>I think the same guy is the one who put their fix in git itself:<br>\n<a href=\"https://github.com/git/git/commit/410a0e520dcc91d13f77fd812f068161859883fc\">https://github.com/git/git/commit/410a0e520dcc91d13f77fd812f068161859883fc</a></p>",
        "id": 317351242,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671711372
    },
    {
        "content": "<p>for now, what's a reasonable workaround? wasn't there a server somewhere that kept the output of that script posted somewhere (+ \"reasonably\" up to date?)</p>",
        "id": 317640397,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671829080
    },
    {
        "content": "<p><a href=\"https://math.commelin.net/files/port_status.html\">https://math.commelin.net/files/port_status.html</a> ?</p>",
        "id": 317647987,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671833371
    },
    {
        "content": "<p>oh sick, the git commands are a bit broken in that file but everything else is great. many thanks johan!</p>",
        "id": 317658914,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1671841020
    }
]