[
    {
        "content": "<p>I made a pull request with a port of the push_neg tactic <br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/193\">https://github.com/leanprover-community/mathlib4/pull/193</a></p>",
        "id": 271758351,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1644776459
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 271766766,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644788150
    },
    {
        "content": "<p>Alice ended up closing the PR (<a href=\"https://github.com/leanprover-community/mathlib4/pull/193\">mathlib4#193</a>). Can someone help me understand why?</p>\n<ul>\n<li>Was the approach inadequate in a more fundamental level? or</li>\n<li>The approach was correct but had some missing cases?</li>\n</ul>",
        "id": 275974498,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647793096
    },
    {
        "content": "<p>See my comments.  I think fundamentally it's the approach that we want.  But it constructs congruence lemmas incorrectly, so it will fail on <code>decide</code>, <code>ite</code>, etc.  It would also be good to use the <code>Simp.Result</code> API because that simplifies the code quite a bit.</p>",
        "id": 276015623,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647849359
    }
]