[
    {
        "content": "<p>Could I ask someone to look at <code>map_inv₀</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/920\">mathlib4#920</a>?</p>\n<p>if I get it to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">map_inv₀</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"n\">apply</span> <span class=\"n\">eq_inv_of_mul_eq_one_left</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">map_mul</span><span class=\"o\">,</span> <span class=\"n\">inv_mul_cancel</span><span class=\"o\">,</span> <span class=\"n\">map_one</span><span class=\"o\">]</span>\n  <span class=\"bp\">.</span> <span class=\"n\">contradiction</span>\n  <span class=\"bp\">.</span> <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>I get the very confusing error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">tactic</span> <span class=\"bp\">'</span><span class=\"n\">contradiction'</span> <span class=\"n\">failed</span>\n<span class=\"n\">case</span> <span class=\"n\">pos.h</span>\n<span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">F</span>\n<span class=\"n\">ab</span><span class=\"o\">:</span> <span class=\"n\">G₀</span>\n<span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>so I'm probably missing something super basic.</p>",
        "id": 314758255,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670528979
    },
    {
        "content": "<p>The <code>contradiction</code> tactic is not expected to prove that goal. The <code>contradiction</code> tactic proves an arbitrary goal if there are two contradictory hypotheses. Is that what's confusing you?</p>",
        "id": 314758761,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670529123
    },
    {
        "content": "<p>You got misdirected at some point - this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- A monoid homomorphism between groups with zeros sending `0` to `0` sends `a⁻¹` to `(f a)⁻¹`. -/</span>\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">map_inv₀</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">map_zero</span> <span class=\"n\">f</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">eq_inv_of_mul_eq_one_left</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">map_mul</span><span class=\"o\">,</span> <span class=\"n\">inv_mul_cancel</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">map_one</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">map_inv₀</span> <span class=\"n\">map_inv₀</span>\n</code></pre></div>",
        "id": 314761716,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670530067
    },
    {
        "content": "<p>(I pushed that)</p>",
        "id": 314761957,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670530140
    },
    {
        "content": "<p>I was both confused by <code>contradiction</code> and by how I got into that state.</p>",
        "id": 314763014,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670530547
    },
    {
        "content": "<p>So generally confused...</p>",
        "id": 314763287,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670530634
    },
    {
        "content": "<p>In the <code>a = 0</code> case, <code>apply eq_inv_of_mul_eq_one_left</code> gives you an unprovable goal</p>",
        "id": 314765531,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670531435
    }
]