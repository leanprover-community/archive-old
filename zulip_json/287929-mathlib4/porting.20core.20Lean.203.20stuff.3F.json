[
    {
        "content": "<p>So I'm in the middle of porting <code>data.bool.basic</code> to mathlib4; here are two hopefully straightforward questions:</p>\n<p>1) Core Lean 3 contains a file <code>init.data.bool.lemmas</code> which contains about 50 lemmas about <code>bool</code> most of which I can't find either in core Lean 4 or in Std. Should I also be porting them? Some are used in mathlib3 proofs. If so, what's the procedure? There's a lean3port repo, right? Do I copy this file and put it at the beginning of mathlib4's data.bool.basic or do I put it elsewhere?</p>\n<p>2) One of the few lemmas in this file which has been ported, to <code>Std.Logic</code> in std4 is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Bool.ff_ne_tt</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"bp\">â‰ </span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> ported this a month ago and in my mind that theorem has the wrong name, because what the heck is <code>ff</code> in a Lean 4 context? Should I be not changing <code>ff</code> to <code>false</code> in mathlib4's port of <code>data.bool.basic</code>? I feel very unequipped to make decisions about naming.</p>",
        "id": 305393305,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666368706
    },
    {
        "content": "<p>My thoughts:<br>\n(1) Yes, if lemmas don't exist yet, it is good to port them to mathlib4. Then Mario can later move them to Std4 if that is more appropriate.<br>\n(2) I agree that <code>Bool.ff_ne_tt</code> is misnamed. I think until it is renamed, it is good to add a <code>#align</code> command, so that it is easy to fix once <code>Bool.ff_ne_tt</code> gets properly named.</p>",
        "id": 305424276,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1666378930
    },
    {
        "content": "<p>Would you also agree that the following 40 or so lemmas are misnamed? <a href=\"https://github.com/leanprover-community/mathlib3port/blob/5a66d9b4aff2f94aabca7f3daead2a383d7f2117/Mathbin/Data/Bool/Basic.lean#L121-L233\">https://github.com/leanprover-community/mathlib3port/blob/5a66d9b4aff2f94aabca7f3daead2a383d7f2117/Mathbin/Data/Bool/Basic.lean#L121-L233</a></p>\n<p>e.g. bor -&gt; or, bnot -&gt; not etc. Should I rename and #align all of them?</p>\n<p>Can you explain to me how to align? I thought I was told yesterday that I could just do it in mathlib4 but I can't get it to work and thinking about it, it doesn't sound like this idea makes too much sense. Where do I #align the examples above?</p>",
        "id": 305434654,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666382925
    },
    {
        "content": "<p>You can put <code>#align</code> directives anywhere in mathlib4 (after importing <code>Mathlib.Mathport.Rename</code> of course), although I suggest you put them in the place where the original lean 3 theorem would have been (or after the translated theorem if one exists). What do you mean by \"it didn't work\"? There is no immediate effect of the annotation, but it will get picked up by mathport in its next run.</p>",
        "id": 305439856,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666385103
    },
    {
        "content": "<p>And yes, <code>ff_ne_tt</code> is misnamed. I think I was trying to avoid renames at the time</p>",
        "id": 305440029,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666385181
    },
    {
        "content": "<p>There are also a number of <code>alias</code> commands in <code>Logic.Basic</code> which could just be renames instead</p>",
        "id": 305440088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666385214
    },
    {
        "content": "<blockquote>\n<p>What do you mean by \"it didn't work\"?</p>\n</blockquote>\n<p>I just mean \"I didn't have the right import\".</p>",
        "id": 305453728,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666391207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/porting.20core.20Lean.203.20stuff.3F/near/305393305\">said</a>:</p>\n<blockquote>\n<p>Do I copy this file and put it at the beginning of mathlib4's data.bool.basic or do I put it elsewhere?</p>\n</blockquote>\n<p>I don't think this was answered above. If you are porting a file from Lean 3 core, you should put it in <code>Mathlib/Init/</code>. So <code>init.data.bool.lemmas</code> from Lean 3 core would go in <code>Mathlib/Init/Data/Bool/Lemmas/lean</code> in mathlib4.</p>",
        "id": 305713735,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666562156
    },
    {
        "content": "<p>Thanks! I've essentially finished the mathlib bool file and I'll start on the lean bool file tomorrow</p>",
        "id": 305715394,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666563124
    }
]