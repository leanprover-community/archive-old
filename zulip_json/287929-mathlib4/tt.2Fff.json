[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">List</span><span class=\"bp\">/</span><span class=\"n\">Join.lean</span><span class=\"o\">:</span><span class=\"mi\">48</span><span class=\"o\">:</span><span class=\"c1\">-- Porting note: `ff/tt` should be translated to `false/true`.</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Num</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">83</span><span class=\"o\">:</span><span class=\"sd\">/-- `bit b n` appends the bit `b` to the end of `n`, where `bit tt x = x1` and `bit ff x = x0`. -/</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Num</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">267</span><span class=\"o\">:</span><span class=\"sd\">/-- `bit b n` appends the bit `b` to the end of `n`, where `bit tt x = x1` and `bit ff x = x0`. -/</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">CcLemmas.lean</span><span class=\"o\">:</span><span class=\"mi\">64</span><span class=\"o\">:</span>   <span class=\"n\">cc_config.em</span> <span class=\"n\">is</span> <span class=\"n\">tt.</span> <span class=\"bp\">-/</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Init</span><span class=\"bp\">/</span><span class=\"n\">CcLemmas.lean</span><span class=\"o\">:</span><span class=\"mi\">114</span><span class=\"o\">:</span>   <span class=\"n\">cc_config.em</span> <span class=\"n\">is</span> <span class=\"n\">tt.</span> <span class=\"bp\">-/</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Ring</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"n\">Based</span> <span class=\"n\">on</span> <span class=\"bp\">&lt;</span><span class=\"n\">http</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">www.cs.ru.nl</span><span class=\"bp\">/~</span><span class=\"n\">freek</span><span class=\"bp\">/</span><span class=\"n\">courses</span><span class=\"bp\">/</span><span class=\"n\">tt</span><span class=\"bp\">-</span><span class=\"mi\">2014</span><span class=\"bp\">/</span><span class=\"n\">read</span><span class=\"bp\">/</span><span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">61</span><span class=\"bp\">.</span><span class=\"mi\">3041</span><span class=\"bp\">.</span><span class=\"n\">pdf</span><span class=\"bp\">&gt;</span> <span class=\"bp\">.</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Simps</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">228</span><span class=\"o\">:</span>  <span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">bar_data</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span><span class=\"bp\">*</span><span class=\"o\">},</span> <span class=\"n\">bar.data</span> <span class=\"bp\">=</span> <span class=\"n\">tt</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Simps</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">866</span><span class=\"o\">:</span>  <span class=\"c1\">-- cfg.attrs.mapM fun nm ↦ setAttribute nm declName tt -- todo: deal with attributes</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Simps</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">962</span><span class=\"o\">:</span>          <span class=\"o\">}</span><span class=\"bp\">\\</span><span class=\"o\">{</span><span class=\"n\">rhsMd</span> <span class=\"o\">:=</span> <span class=\"n\">semireducible</span><span class=\"o\">,</span> <span class=\"n\">simpRhs</span> <span class=\"o\">:=</span> <span class=\"n\">tt</span><span class=\"o\">}</span><span class=\"bp\">.</span><span class=\"s2\">\"</span>\n<span class=\"s2\">test/linarith.lean:464:-- by linarith {split_ne := tt}</span>\n<span class=\"s2\">test/linarith.lean:467:-- by linarith {split_ne := tt}</span>\n</code></pre></div>\n<p>I think most of these should become <code>true</code> and <code>false</code>, right?</p>",
        "id": 321175134,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673620167
    },
    {
        "content": "<p>All except Freek's URL, I think</p>",
        "id": 321175243,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1673620200
    },
    {
        "content": "<p>Fair enough, I had meant to remove that one</p>",
        "id": 321175406,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673620239
    },
    {
        "content": "<p>Also not the porting note at the top</p>",
        "id": 321175520,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673620274
    },
    {
        "content": "<p>Apparently <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ff_ne_tt#doc\">docs4#ff_ne_tt</a> is also a thing.</p>",
        "id": 321175805,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673620350
    },
    {
        "content": "<p>I haven't found other lemma names that contain <code>ff</code> or <code>tt</code> as an atom.</p>",
        "id": 321175911,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673620380
    }
]