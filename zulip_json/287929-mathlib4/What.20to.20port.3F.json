[
    {
        "content": "<p>I'm looking to start porting some of mathlib3 into mathlib4, and I want to find out what's free. I was thinking of working on Data.Multiset.Dedup and then Data.Multiset.FinsetOps, is anyone else working on these at the moment?</p>",
        "id": 312898247,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669743923
    },
    {
        "content": "<p>in a mathlib3 repo, you should run the port status script with <code>./scripts/port_status.py</code></p>",
        "id": 312898454,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669743974
    },
    {
        "content": "<p>This will tell you what currently needs porting.</p>",
        "id": 312898471,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669743981
    },
    {
        "content": "<p>(You won't be able to port those <code>Multiset</code> files yet, as various prerequisites are missing. You can use <code>leanproject import-graph --to data.multiset.dedup --reduce --port-status --exclude-tactics out.pdf</code> to generate a graph showing the prerequisites of that file, if for some reason you really want to aim there!)</p>",
        "id": 312899158,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669744155
    },
    {
        "content": "<p>Ah thank you, I was looking at <code>mathport</code>'s generated imports to see the dependency tree, but they seem incomplete.</p>",
        "id": 312899369,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669744209
    },
    {
        "content": "<p>The current list of unclaimed ready-to-port files is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.order.monoid.order_dual</span>\n<span class=\"n\">data.sigma.order</span>\n<span class=\"n\">data.psigma.order</span>\n</code></pre></div>",
        "id": 312899558,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669744273
    },
    {
        "content": "<p>Right - there are more seemingly unclaimed files in the</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#</span> <span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">files</span> <span class=\"k\">have</span> <span class=\"n\">all</span> <span class=\"n\">dependencies</span> <span class=\"n\">ported</span> <span class=\"n\">already</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">ready</span> <span class=\"n\">to</span> <span class=\"n\">port</span><span class=\"o\">:</span>\n</code></pre></div>\n<p>section, what is the difference with these ones?</p>",
        "id": 312899771,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669744331
    },
    {
        "content": "<p>Those ones have an unported transitive dependency, but all the immediate parents have been successfully ported, so with a bit of luck we can proceed anyway.</p>",
        "id": 312900383,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669744520
    },
    {
        "content": "<p>Ah, I see. One more question - do I need write access to mathlib4's non-master branches, or should I work from a fork and send in a PR later?</p>",
        "id": 312900831,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669744663
    },
    {
        "content": "<p>I might be misreading but it looks like it's the other way round - my port status execution looks like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#</span> <span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">files</span> <span class=\"k\">have</span> <span class=\"n\">their</span> <span class=\"n\">immediate</span> <span class=\"n\">dependencies</span> <span class=\"n\">ported</span> <span class=\"n\">already</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">may</span> <span class=\"n\">be</span> <span class=\"n\">ready</span> <span class=\"n\">to</span> <span class=\"n\">port</span><span class=\"o\">:</span>\n<span class=\"n\">order.with_bot</span>    <span class=\"c1\">-- mathlib4#776 1fc36cc9c8264e6e81253f88be7fb2cb6c92d76a</span>\n<span class=\"n\">order.rel_iso.basic</span>    <span class=\"c1\">-- PRed mathlib4#772</span>\n<span class=\"n\">algebra.order.monoid.canonical.defs</span>    <span class=\"c1\">-- WIP 1fc36cc9c8264e6e81253f88be7fb2cb6c92d76a</span>\n<span class=\"n\">algebra.order.monoid.order_dual</span>    <span class=\"c1\">-- WIP by zeramorphic 1fc36cc9c8264e6e81253f88be7fb2cb6c92d76a</span>\n<span class=\"n\">data.prod.lex</span>    <span class=\"c1\">-- PRed mathlib4#783 1fc36cc9c8264e6e81253f88be7fb2cb6c92d76a</span>\n<span class=\"n\">data.sigma.order</span>\n<span class=\"n\">data.psigma.order</span>\n</code></pre></div>\n<p>which seems to imply that the <code>algebra.order.monoid.order_dual</code> that you mentioned is one of those with only immediate dependencies but unported transitive dependencies.</p>",
        "id": 312901416,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669744812
    },
    {
        "content": "<p>It's best if you push from a branch, as CI works better that way.</p>",
        "id": 312902613,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669745138
    },
    {
        "content": "<p>If you tell me your github username I'll send an invite.</p>",
        "id": 312902664,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669745155
    },
    {
        "content": "<p>My username is <code>zeramorphic</code>, thanks!</p>",
        "id": 312902751,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669745166
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 312902999,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1669745239
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span>, I've left a comment on your PR. Almost good to go.</p>",
        "id": 312932879,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669754132
    }
]