[
    {
        "content": "<p>Link to PR: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1766\">mathlib4#1766</a></p>\n<p>Running into strange issues right at the start of the file: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"n\">irreducible_def</span> <span class=\"n\">finsum</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">support</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"n\">PLift.down</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">Finite</span> <span class=\"k\">then</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">h.toFinset</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i.down</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">finsum</span> <span class=\"n\">finsum</span>\n</code></pre></div>\n<p>Throws the error <code>failed to compile definition, consider marking it as 'noncomputable' because it depends on 'Classical.propDecidable', and it does not have executable code</code>. What I find the weirdest is that the error throws the red squiggles onto the docstring of the function.</p>\n<p>Replacing <code>irreducible_def</code> with <code>def</code> and adding an <code>@[irreducible]</code> attribute seems to work, but <code>irreducible_def</code> seems to do more than the attribute, so that's probably not an ideal fix.</p>",
        "id": 322881281,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1674404820
    },
    {
        "content": "<p><code>irreducible_def</code> is just a command someone wrote (I think Gabriel), it probably doesn't interact with <code>noncomputable</code> properly yet.</p>",
        "id": 322908484,
        "sender_full_name": "Reid Barton",
        "timestamp": 1674422377
    }
]