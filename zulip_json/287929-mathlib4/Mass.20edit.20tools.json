[
    {
        "content": "<p>Now that a single declaration can be spelled differently in lemma statements and lemma names, we really need mass edit tools. Is anybody working on something like this?</p>",
        "id": 319769110,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673007216
    },
    {
        "content": "<p>what do you mean by this?</p>",
        "id": 319769394,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1673007357
    },
    {
        "content": "<p>I mean a way to rename a declaration everywhere at once, and if possible in lemma names too.</p>",
        "id": 319769576,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673007442
    },
    {
        "content": "<p>Oh, I see. I mean, there should just be two names, right? So ctrl+shift+f with those two names should do a good job of it</p>",
        "id": 319769752,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1673007509
    },
    {
        "content": "<p>This is in theory a feature that an LSP server can supply to your editor (apart from the \"also rename in lemmata\" part), it is just not implement yet in Lean 4. Maybe the LSP people would be interested in adding support for this?</p>",
        "id": 319770141,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1673007689
    },
    {
        "content": "<p>If it can't rename the lemmas, can it at least somehow flag the lemmas whose statement was changed because of the rename? Then one can go through them one by one, which is already magnitudes better to what we have in Lean 3.</p>",
        "id": 319770339,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673007777
    },
    {
        "content": "<p>Hmm, the LSP standard says (<a href=\"https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_rename\">https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_rename</a>) that upon a rename request the server can answer with an arbitrary WorkspaceEdit so it could in theory put some text on the lemmas whose statement was influenced I guess?</p>\n<p>It could of course also attempt to change the name of the lemma itself, I'm just unsure whether it would get that right so consistently that it would be desirable given the naming convention.</p>",
        "id": 319772349,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1673008535
    },
    {
        "content": "<p>Yes, that sounds perfect.</p>",
        "id": 319772610,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673008627
    }
]