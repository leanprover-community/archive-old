[
    {
        "content": "<p>Here's another question about a mix of <code>simp</code>, <code>to_additive</code> and linting:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/1188#discussion_r1065970851\">https://github.com/leanprover-community/mathlib4/pull/1188#discussion_r1065970851</a></p>",
        "id": 320489423,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673367633
    },
    {
        "content": "<p>My gut feeling is that <code>Set.isUnit_iff</code> should have a lower prio. Not sure how to pass that prio to <code>to_additive</code>.</p>",
        "id": 320489592,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673367684
    },
    {
        "content": "<p><code>to_additive (attr := ...)</code> supports all attribute syntax, so you can write <code>to_additive (attr := simp 500)</code>, <code>to_additive (attr := scoped simp)</code>, <code>to_additive (attr := simp, nolint SimpNF)</code>, etc.</p>",
        "id": 320490704,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1673367994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> now that you're here: what about <code>deprecated</code>?</p>",
        "id": 320491177,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673368114
    },
    {
        "content": "<p><code>to_additive (attr := deprecated which_name)</code>?</p>",
        "id": 320491223,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673368133
    },
    {
        "content": "<p>Somehow we need to pass two alternative names: the multiplicative version and the additive version.</p>",
        "id": 320491361,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673368176
    },
    {
        "content": "<p>In case you want to give different arguments to the attributes of multiplicative and additive declarations, just do it manually</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[to_additive, deprecated mulBar]</span> <span class=\"kd\">def</span> <span class=\"n\">mulFoo</span> <span class=\"bp\">...</span>\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">deprecated</span> <span class=\"n\">addBar</span><span class=\"o\">]</span> <span class=\"n\">addFoo</span>\n</code></pre></div>",
        "id": 320492037,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1673368342
    },
    {
        "content": "<p>It seems not worth it to define custom syntax for that</p>",
        "id": 320492217,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1673368387
    }
]