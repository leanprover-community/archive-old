[
    {
        "content": "<p>See <a href=\"https://github.com/leanprover-community/mathlib4/pull/1410#discussion_r1065461618\">https://github.com/leanprover-community/mathlib4/pull/1410#discussion_r1065461618</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">count_nil</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">count</span> <span class=\"n\">a</span> <span class=\"o\">[]</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">list.count_nil</span> <span class=\"n\">List.count_nil</span>\n</code></pre></div>\n<p>Linter claims that <code>simp</code> can prove this. But it's a good <code>dsimp</code>-lemma. Also, simp can only prove it using <a href=\"https://github.com/leanprover-community/mathlib4/pull/1410/files#diff-cdbce63b7556c5dc37babb0180e51282c7467545742bb9be6bc251f1db148b97R256\">https://github.com/leanprover-community/mathlib4/pull/1410/files#diff-cdbce63b7556c5dc37babb0180e51282c7467545742bb9be6bc251f1db148b97R256</a> below.<br>\nShould we bump priority here?</p>",
        "id": 320401775,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673340795
    },
    {
        "content": "<p>sgtm</p>",
        "id": 320403215,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673341359
    },
    {
        "content": "<p>Hmm, it seems that the linter doesn't care about priorities</p>",
        "id": 320406001,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673342406
    },
    {
        "content": "<p>nolint is also an option</p>",
        "id": 320406039,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673342422
    },
    {
        "content": "<p>ooh, adding a priority on the other lemma works</p>",
        "id": 320406213,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673342482
    },
    {
        "content": "<p>Beware of <a href=\"https://github.com/leanprover-community/mathlib/pull/18087\">#18087</a></p>",
        "id": 320406926,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673342708
    },
    {
        "content": "<p>what does that mean? I'm starting to think you enjoy surfing the rising tide of mathlib</p>",
        "id": 320413249,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673344882
    },
    {
        "content": "<p>If it gets merged before <a href=\"https://github.com/leanprover-community/mathlib4/pull/1410\">mathlib4#1410</a>, then the latter should be updated.</p>",
        "id": 320413392,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673344928
    },
    {
        "content": "<p>I don't think that has to be true</p>",
        "id": 320433894,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673352002
    },
    {
        "content": "<p>Wall time synchronization is irrelevant, all that matters is that the sha in the PR reflects the thing it was ported from</p>",
        "id": 320434004,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673352041
    },
    {
        "content": "<p>If anything it's probably easier not to modify in-flight porting PRs to reflect mathlib3 changes unless the mathlib3 change is intended to fix a porting issue</p>",
        "id": 320434086,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673352077
    }
]