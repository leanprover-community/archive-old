[
    {
        "content": "<p>Why do we have both <code>refine</code> and <code>refine'</code>? Why do we have to put interrogation marks before holes in <code>refine</code> now?</p>",
        "id": 313712809,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670086988
    },
    {
        "content": "<p>Also, why am I see a handful of terminal <code>refine'</code> in mathlib4?</p>",
        "id": 313712847,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670087028
    },
    {
        "content": "<p><code>refine'</code> is equivalent to Lean 3 <code>refine</code>.</p>",
        "id": 313714245,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670087898
    },
    {
        "content": "<p>Why is it primed if we're going to use this one mainly?</p>",
        "id": 313714285,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670087925
    },
    {
        "content": "<p>In Lean 4, <code>refine</code> won't create goals for natural holes and will fail if it can't fill them in.</p>",
        "id": 313714306,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670087934
    },
    {
        "content": "<p>I use <code>refine</code> generally.</p>",
        "id": 313714358,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670087964
    },
    {
        "content": "<p>It's possible we'll even deprecate <code>refine'</code> after the port.</p>",
        "id": 313714391,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670087994
    },
    {
        "content": "<p>But what is a natural hole? Why do we not want them?</p>",
        "id": 313714460,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670088013
    },
    {
        "content": "<p>It's nice because you can distinguish between holes you want goals for and holes Lean should fill.</p>",
        "id": 313714465,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670088015
    },
    {
        "content": "<p><code>?_</code> for the former and <code>_</code> for the latter.</p>",
        "id": 313714535,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670088056
    },
    {
        "content": "<p>So whatever the option, the refine syntax got longer?</p>",
        "id": 313714593,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670088088
    },
    {
        "content": "<p>Or put differently, whatever the option, the refine syntax got more precise.</p>",
        "id": 313716652,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1670089225
    },
    {
        "content": "<p>One user-side nice thing about <code>refine</code> vs. <code>refine'</code> is that you can name your goals to keep track of them in the tactic state as different <code>case</code>s, e.g. <code>refine (?x, ?y)</code></p>",
        "id": 313722976,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1670093387
    },
    {
        "content": "<p>(Which is especially useful for clarity/interactivity if you have a few goals and the resulting types of those goals depend on each other, e.g. maybe one of your goals winds up with type <code>?x = ?y</code>!)</p>",
        "id": 313723283,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1670093620
    }
]