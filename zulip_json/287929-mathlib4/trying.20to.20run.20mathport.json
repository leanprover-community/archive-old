[
    {
        "content": "<p>I did:</p>\n<ol>\n<li>clone <a href=\"https://github.com/leanprover-community/mathport\">https://github.com/leanprover-community/mathport</a></li>\n<li><code>make mathbin-source</code></li>\n<li><code>make lean3-source</code></li>\n<li><code>make lean3-predata</code></li>\n<li><code>make mathbin-predata</code> (took 45 minutes)</li>\n<li><code>make port-lean</code></li>\n</ol>\n<p>Everything succeeded until the last step, whose output ends with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">...</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dwrensha</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2021-10-28/bin/leanc -c -o ./build/ir/MathportApp.o ./build/ir/MathportApp.c -O3 -DNDEBUG</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dwrensha</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2021-10-28/bin/leanc -o ./build/bin/mathport ./build/ir/Mathport/Binary/TranslateExpr.o ./build/ir/Mathport/Binary/Number.o ./build/ir/Mathport/Binary/TranslateName.o ./build/ir/Mathport/Bridge/Rename.o ./build/ir/Mathport/Syntax/Translate/Tactic/Basic.o ./build/ir/Mathport/Syntax.o ./build/ir/Mathport/Bridge/Path.o ./build/ir/Mathport/Bridge/Config.o ./build/ir/Mathport/Syntax/Translate.o ./build/ir/Mathport/Util/System.o ./build/ir/Mathport/Binary/NDRec.o ./build/ir/Mathport/Binary/Basic.o ./build/ir/Mathport/Syntax/Translate/Basic.o ./build/ir/Mathport/Util/Json.o ./build/ir/Mathport/Util/Parse.o ./build/ir/Mathport/Binary/Apply.o ./build/ir/Mathport/Syntax/Translate/Tactic.o ./build/ir/Mathport/Binary.o ./build/ir/Mathport/Syntax/Translate/Tactic/Mathlib.o ./build/ir/Mathport/Util/String.o ./build/ir/Mathport/Util/Name.o ./build/ir/Mathport/Syntax/Translate/Parser.o ./build/ir/Mathport/Binary/Decode.o ./build/ir/Mathport/Syntax/Data4.o ./build/ir/Mathport.o ./build/ir/Mathport/Binary/EnvModification.o ./build/ir/Mathport/Util/While.o ./build/ir/Mathport/Syntax/Parse.o ./build/ir/Mathport/Syntax/Translate/Notation.o ./build/ir/Mathport/Util/Misc.o ./build/ir/Mathport/Syntax/Translate/Attributes.o ./build/ir/Mathport/Util/Import.o ./build/ir/Mathport/Binary/Heterogenize.o ./build/ir/MathportApp.o ./build/ir/Mathport/Syntax/Translate/Tactic/Lean3.o ./build/ir/Mathport/Binary/ParseTLean.o ./build/ir/Mathport/Syntax/AST3.o ./lean_packages/mathlib/./build/lib/libMathlib.a -rdynamic</span>\n<span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">Lib4</span><span class=\"bp\">/</span><span class=\"n\">leanbin</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">mathport</span> <span class=\"n\">config.json</span> <span class=\"n\">Leanbin</span><span class=\"o\">::</span><span class=\"n\">all</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">Logs</span><span class=\"bp\">/</span><span class=\"n\">mathport.out</span> <span class=\"mi\">2</span><span class=\"bp\">&gt;</span> <span class=\"n\">Logs</span><span class=\"bp\">/</span><span class=\"n\">mathport.err</span>\n<span class=\"n\">make</span><span class=\"o\">:</span> <span class=\"bp\">***</span> <span class=\"o\">[</span><span class=\"n\">Makefile</span><span class=\"o\">:</span><span class=\"mi\">90</span><span class=\"o\">:</span> <span class=\"n\">port</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"o\">]</span> <span class=\"n\">Error</span> <span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 295640765,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661634276
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">cat</span> <span class=\"n\">Logs</span><span class=\"bp\">/</span><span class=\"n\">mathport.err</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"kn\">import</span> <span class=\"n\">environment</span> <span class=\"n\">for</span> <span class=\"n\">Leanbin</span><span class=\"o\">:</span><span class=\"n\">Init.Logic</span> <span class=\"k\">with</span> <span class=\"n\">imports</span> <span class=\"o\">[</span><span class=\"n\">Leanbin.Init.Core</span><span class=\"o\">]:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Leanbin'</span>\n</code></pre></div>",
        "id": 295640791,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661634303
    },
    {
        "content": "<p>what am I doing wrong?</p>",
        "id": 295640798,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661634312
    },
    {
        "content": "<p>We should remove the <code>port-lean</code> target.</p>",
        "id": 295713293,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1661694968
    },
    {
        "content": "<p>Just run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>./build/bin/mathport --make config.json Leanbin::all\n</code></pre></div>",
        "id": 295713554,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1661695117
    },
    {
        "content": "<p>Btw there's also a <code>download-predata.sh</code> script if you don't want to wait 45 minutes.</p>",
        "id": 295713640,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1661695173
    },
    {
        "content": "<p>I think the <code>--make</code> flag does not exist?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">mathport</span> <span class=\"c1\">--make config.json Leanbin::all</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"c1\">--make</span>\n</code></pre></div>",
        "id": 295716642,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661696988
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">mathport</span> <span class=\"n\">config.json</span> <span class=\"n\">Leanbin</span><span class=\"o\">::</span><span class=\"n\">all</span>\n<span class=\"bp\">...</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Leanbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">init.default</span> <span class=\"o\">}</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Leanbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">tools.debugger.util</span> <span class=\"o\">}</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Leanbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">tools.debugger.cli</span> <span class=\"o\">}</span>\n<span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Leanbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">tools.debugger.util</span> <span class=\"o\">}</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"kn\">import</span> <span class=\"n\">environment</span> <span class=\"n\">for</span> <span class=\"n\">Leanbin</span><span class=\"o\">:</span><span class=\"n\">Init.Logic</span> <span class=\"k\">with</span> <span class=\"n\">imports</span> <span class=\"o\">[</span><span class=\"n\">Leanbin.Init.Core</span><span class=\"o\">]:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Leanbin'</span>\n</code></pre></div>",
        "id": 295716728,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661697029
    },
    {
        "content": "<p>Do you have the latest version of <code>mathport</code>?</p>",
        "id": 295718663,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1661698172
    },
    {
        "content": "<p>heh, good point. I seem to still be pointed at <a href=\"https://github.com/dselsam/mathport.git\">https://github.com/dselsam/mathport.git</a></p>",
        "id": 295720274,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661699074
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 295720280,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661699080
    },
    {
        "content": "<p>Updated my remote to be <a href=\"https://github.com/leanprover-community/mathport\">https://github.com/leanprover-community/mathport</a></p>",
        "id": 295720676,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661699327
    },
    {
        "content": "<p>repulled, did <code>git clean -xffd</code>, and launched a new build...</p>",
        "id": 295720701,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661699342
    },
    {
        "content": "<p>success!</p>",
        "id": 295730679,
        "sender_full_name": "David Renshaw",
        "timestamp": 1661704925
    },
    {
        "content": "<p>I tried to run mathport using GitHub Actions: <a href=\"https://github.com/abentkamp/mathport/runs/8265032056\">https://github.com/abentkamp/mathport/runs/8265032056</a></p>\n<p>After two hours of <code>make mathbin-predata</code>,  I get:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>cd sources/mathlib &amp;&amp; lean --make --recursive --ast --tlean src\nmake: *** [Makefile:75: mathbin-predata] Killed\nError: Process completed with exit code 2.\n</code></pre></div>\n<p>Any ideas what could cause this?</p>",
        "id": 297934625,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662715792
    },
    {
        "content": "<p>Mathlib is so grandiose that it cannot be be built on standard github actions runners. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 297937590,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1662717023
    },
    {
        "content": "<p>(I believe the machine is running out of memory.)</p>",
        "id": 297937636,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1662717041
    },
    {
        "content": "<p>You should use the <code>download-predata</code> script to get the mathlib build handcrafted by artisan servers in Pittsburgh.  (You removed that part in the CI scripts on your branch.)</p>",
        "id": 297938012,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1662717189
    },
    {
        "content": "<p>Hm, I'd like to be able to port my own material, so using <code>download-predata</code> is not an option I think.</p>",
        "id": 297950691,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662722342
    },
    {
        "content": "<p>Also, I've just tried it on my own machine and I am still running into the same problem. How much memory do I need for this?</p>",
        "id": 297950757,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662722395
    },
    {
        "content": "<p>Ok, I see that one needs a lot of memory. I restarted the process while observing the memory status and I can already see it filling up really fast :-)</p>",
        "id": 297951693,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662722842
    },
    {
        "content": "<blockquote>\n<p>Hm, I'd like to be able to port my own material, so using <code>download-predata</code> is not an option I think.</p>\n</blockquote>\n<p>This depends.. is your stuff in mathlib?</p>",
        "id": 297956804,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1662724861
    },
    {
        "content": "<p>No. Not yet at least :-)</p>",
        "id": 297958586,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662725550
    },
    {
        "content": "<p>Would it be an option to port lean + mathlib + a third project while reusing the existing predata for mathlib? I have no idea how to set this up though.</p>",
        "id": 297963242,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662727125
    },
    {
        "content": "<p>Yes, that should be possible as long as your project works with one of the mathlib versions on <a href=\"https://github.com/leanprover-community/mathport/releases\">https://github.com/leanprover-community/mathport/releases</a></p>",
        "id": 297963737,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1662727292
    },
    {
        "content": "<p>ok, I'll try that then.</p>",
        "id": 297964192,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662727443
    },
    {
        "content": "<p>As for how to set that up:</p>\n<ol>\n<li>Copy&amp;paste the <code>mathbin-predata</code>/<code>port-mathbin</code> targets in the makefile to <code>myproject-predata</code>/<code>port-myproject</code>.</li>\n<li>Add your <code>myproject</code> to <code>config.json</code> in all the required places.</li>\n<li>Run <code>./download-predata.sh predata-nightly-YYYY-MM-DD</code> where <code>YYYY-MM-DD</code> is the mathlib version your project works with.  Or alternatively <code>./download-release.sh nightly-YYYY-MM-DD</code> if you also want the ported oleans.</li>\n<li>Run <code>make myproject-predata</code></li>\n<li>Run <code>make port-myproject</code></li>\n</ol>",
        "id": 297964382,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1662727512
    },
    {
        "content": "<p>Thanks a lot, it works!</p>\n<p>What's the best way to import the binport into a Lean4 project now?</p>",
        "id": 297971369,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662729726
    },
    {
        "content": "<p>Oh, you mean with the files you've just ported?  Good question.  I think you need to copy&amp;paste <code>mathlib3port</code>.</p>",
        "id": 297972844,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1662730144
    },
    {
        "content": "<p>Ok :-)</p>",
        "id": 297972899,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1662730163
    }
]