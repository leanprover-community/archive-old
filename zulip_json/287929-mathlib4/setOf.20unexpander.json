[
    {
        "content": "<p>I think there is a small bug in Mathlib/Init/Set.lean.  The unexpander for <code>setOf</code> includes this line:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">_</span> <span class=\"k\">fun</span> <span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">ty</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">↦</span> <span class=\"bp\">$</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">({</span> <span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">ty</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">p</span> <span class=\"o\">})</span>\n</code></pre></div>\n<p>I believe it should be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">_</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">ty</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">↦</span> <span class=\"bp\">$</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">({</span> <span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">ty</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">p</span> <span class=\"o\">})</span>\n</code></pre></div>\n<p>The delaborator puts parentheses around <code>$x:ident : $ty:term</code>, so the unexpander has to look for those parentheses.  Note that this will only cause a problem when using the option <code>pp.funBinderTypes</code>; without that option, the delaborator leaves out the type, so this line of the unexpander doesn't get used.<br>\nIf others agree, I will file an issue.</p>",
        "id": 322084533,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1674056596
    },
    {
        "content": "<p>Also: I notice that in many unexpanders, the syntax starts with <code>$(_)</code> rather than <code>$_</code>.  Can someone explain what the difference is?</p>",
        "id": 322089548,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1674057795
    },
    {
        "content": "<p>The second syntax is newer</p>",
        "id": 322089621,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674057815
    },
    {
        "content": "<p>So both are acceptable, and they mean the same thing?</p>",
        "id": 322089777,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1674057850
    },
    {
        "content": "<p>Thanks Sebastian.  Do you agree about the minor bug in the unexpander?</p>",
        "id": 322090867,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1674058106
    },
    {
        "content": "<p>It looks like the same problem appears (twice) in Mathlib/Order/CompleteLattice.lean</p>",
        "id": 322091750,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1674058317
    },
    {
        "content": "<p>Yeah, sounds sensible</p>",
        "id": 322095480,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674059162
    }
]