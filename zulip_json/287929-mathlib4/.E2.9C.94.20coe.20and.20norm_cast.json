[
    {
        "content": "<p>Is the following coercion still needed in mathlib4?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp, norm_cast]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">coe_pow</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">rfl</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">set.Icc.coe_pow</span> <span class=\"n\">Set.Icc.coe_pow</span>\n</code></pre></div>\n<p>for the <code>norm_cast</code> I get </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">norm_cast</span><span class=\"o\">:</span> <span class=\"n\">badly</span> <span class=\"n\">shaped</span> <span class=\"kd\">lemma</span><span class=\"o\">,</span> <span class=\"n\">rhs</span> <span class=\"n\">can't</span> <span class=\"n\">start</span> <span class=\"k\">with</span> <span class=\"n\">coe</span>\n  <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>If this lemma is needed, how do I get rid of the <code>norm_cast</code> error.<br>\nIf it is not needed, what is the correct way to mark it in the ported file?<br>\n(From <a href=\"https://github.com/leanprover-community/mathlib4/blob/4152638b634592071e078f866bcbf86a35557c6d/Mathlib/Data/Set/Intervals/Instances.lean#L132-L135\">Data/Set/Intervals/Instances.lean#L132-L135</a>)</p>",
        "id": 319094848,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1672693598
    },
    {
        "content": "<p>Is this a syntactic equality (remove <code>norm_cast</code> and do <code>#lint</code>)? Maybe <code>(x ^ n : α)</code> is no longer parsed with the coercion inside</p>",
        "id": 319095046,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1672693725
    },
    {
        "content": "<p>i.e. is it <a href=\"https://github.com/leanprover/lean4/pull/1915\">lean4#1915</a> ? Lemmas like this are always needed, it's just that they're not being translated correctly.</p>",
        "id": 319095497,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672694070
    },
    {
        "content": "<p>yes, it is exactly this, good write-up!</p>",
        "id": 319095994,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1672694458
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1068/commits/6c3e0a06af2816f8d6e046fc860c32e1185f9d0f\">fixed</a></p>",
        "id": 319096517,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1672694761
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"313038\">Moritz Firsching</span> has marked this topic as resolved.</p>",
        "id": 319096574,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672694774
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20coe.20and.20norm_cast/near/319095497\">said</a>:</p>\n<blockquote>\n<p>i.e. is it <a href=\"https://github.com/leanprover/lean4/pull/1915\">lean4#1915</a> ? Lemmas like this are always needed, it's just that they're not being translated correctly.</p>\n</blockquote>\n<p>Can this be documented in the porting guide?</p>",
        "id": 319098041,
        "sender_full_name": "Arien Malec",
        "timestamp": 1672695958
    }
]