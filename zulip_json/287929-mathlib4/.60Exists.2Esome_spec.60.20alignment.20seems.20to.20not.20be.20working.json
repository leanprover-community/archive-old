[
    {
        "content": "<p>Recently we added alignment between Lean 3's <code>Exists.some_spec</code> and Lean 4's <code>Exists.choose_spec</code>: <a href=\"https://github.com/leanprover-community/mathlib4/pull/463\">https://github.com/leanprover-community/mathlib4/pull/463</a>.</p>\n<p>When I run <code>mathport</code>, I still see a bunch of <code>some_spec</code> in the output, which seems to indicate to me that the alignment isn't working for some reason.</p>\n<p>Any suggestions on how to debug this? Maybe alignment of dot notation is not fully working?</p>",
        "id": 304957813,
        "sender_full_name": "David Renshaw",
        "timestamp": 1666186862
    },
    {
        "content": "<p>There is also <code>classical.some_spec</code> -- are those what you are seeing?</p>",
        "id": 304977373,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666192418
    },
    {
        "content": "<p><code>classical.some_spec</code> is successfully get translated to <code>Classical.choose_spec</code>, via the previously-added alignments <a href=\"https://github.com/leanprover-community/mathlib4/blob/e891db2473120e789053b2ec0e9de51b308c6aa2/Mathlib/Mathport/SpecialNames.lean#L29-L30\">https://github.com/leanprover-community/mathlib4/blob/e891db2473120e789053b2ec0e9de51b308c6aa2/Mathlib/Mathport/SpecialNames.lean#L29-L30</a></p>",
        "id": 304977920,
        "sender_full_name": "David Renshaw",
        "timestamp": 1666192573
    },
    {
        "content": "<p>I'm making progress poking around in mathport to understand what's happening. It seems that binport is indeed making the name translation, but somehow synport is reverting it? Or somehow an older version of mathlib4 is sneaking its way into the build pipeline.</p>",
        "id": 304978333,
        "sender_full_name": "David Renshaw",
        "timestamp": 1666192693
    },
    {
        "content": "<p>It looks like maybe the reason synport is failing is because it's going through this code path: <a href=\"https://github.com/leanprover-community/mathport/blob/897d11a96d142d09757acb99461624e7cfc581df/Mathport/Bridge/Rename.lean#L83\">https://github.com/leanprover-community/mathport/blob/897d11a96d142d09757acb99461624e7cfc581df/Mathport/Bridge/Rename.lean#L83</a> which seems to not catch the <code>Exists.some_spec</code> alignment in situations like <a href=\"https://github.com/leanprover-community/mathlib/blob/ccbe476c7631ead7a18e45a78bb12dd2d2f2e30d/src/data/set/basic.lean#L1703\">https://github.com/leanprover-community/mathlib/blob/ccbe476c7631ead7a18e45a78bb12dd2d2f2e30d/src/data/set/basic.lean#L1703</a></p>",
        "id": 305018558,
        "sender_full_name": "David Renshaw",
        "timestamp": 1666204687
    },
    {
        "content": "<p>Yes, mathport can't handle most ways of abbreviating names like appearances inside <code>inductive T | here : T</code>, <code>open Foo (here)</code> or <code>example (x : Foo) := x.here</code>. It does a best effort thing but it doesn't have the full context of the name lookup so it's hard to use the rename map correctly</p>",
        "id": 305076670,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666238938
    }
]