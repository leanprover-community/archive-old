[
    {
        "content": "<p>We had a race condition: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1034\">https://github.com/leanprover-community/mathlib4/pull/1034</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/1033\">https://github.com/leanprover-community/mathlib4/pull/1033</a> a mere two minutes apart.</p>\n<p><span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin</span>, <span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span>, would either or both of you have a change to triage these into a single PR shortly? Perhaps one can just be closed, or you can move some pieces from one to the other if appropriate.</p>",
        "id": 315932619,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671059609
    },
    {
        "content": "<p>Let me check who's farther...</p>",
        "id": 315932708,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671059643
    },
    {
        "content": "<p>most likely <span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin</span></p>",
        "id": 315932721,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671059648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"542196\">@Arien Malec</span> I've ported till line 1149</p>",
        "id": 315932730,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671059655
    },
    {
        "content": "<p>I mostly did the grunt work of cleaning up obvious fixes -- I'll close mine...</p>",
        "id": 315932786,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671059703
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin</span>  if you want to focus on the broken proofs I'm happy to repeat the grunt work on your branch.</p>",
        "id": 315932946,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671059771
    },
    {
        "content": "<p>Sure. I'm trying to rewrite all the <code>tauto</code> proofs</p>",
        "id": 315933014,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671059807
    },
    {
        "content": "<p>Sorry that you're doing repetitive work!</p>",
        "id": 315933064,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671059831
    },
    {
        "content": "<p>FWIW, I'm in the middle of porting <code>tauto</code>.</p>",
        "id": 315933200,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671059906
    },
    {
        "content": "<p>How long do you anticipate that to take? If <code>Data.Set.Intervals.Basic</code> is not in the way of everything, I can leave the <code>tauto</code>s in for now</p>",
        "id": 315933393,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671060009
    },
    {
        "content": "<p>I hope it should just be a few more days, but it's hard to say.</p>",
        "id": 315933453,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671060060
    },
    {
        "content": "<p>If it's going to accelerate things, I might consider trying to land an incomplete less-optimized version.</p>",
        "id": 315933524,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671060110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin</span>  don't touch anything that's not <code>tauto</code> and we'll be good rn.</p>",
        "id": 315933800,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671060249
    },
    {
        "content": "<p>What does it mean \"anything that's not <code>tauto</code>\"?</p>",
        "id": 315933839,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671060272
    },
    {
        "content": "<p>There are some broken proofs having nothing to do with <code>tauto</code></p>",
        "id": 315933859,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671060288
    },
    {
        "content": "<p>e.g., unknown <code>h.trans</code> or <code>simp [Ici]</code></p>",
        "id": 315934018,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671060381
    },
    {
        "content": "<p>Actually I have only another half hour or so to work on this. Feel free to take over the PR in 30 min</p>",
        "id": 315934133,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671060464
    },
    {
        "content": "<p>OK -- &amp; just pushed some super simple fixes.</p>",
        "id": 315934240,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671060510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243791\">@David Renshaw</span> I've replaced all the <code>tauto</code> in this file with <code>simp</code> proofs, with a porting note to restore them back to <code>tauto</code> when your work is done</p>",
        "id": 315951353,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671073423
    },
    {
        "content": "<p>I mean, we don't <em>have</em> to restore the <code>tauto</code>s but it's good for testing and examples of its use</p>",
        "id": 315951529,
        "sender_full_name": "Winston Yin",
        "timestamp": 1671073562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243791\">David Renshaw</span> <a href=\"#narrow/stream/287929-mathlib4/topic/data.2Eset.2Eintervals.2Ebasic/near/315933524\">said</a>:</p>\n<blockquote>\n<p>If it's going to accelerate things, I might consider trying to land an incomplete less-optimized version.</p>\n</blockquote>\n<p>Are you saying your current code is incomplete or slow or both? Because I think a complete but slow implementation would be very helpful to land asap</p>",
        "id": 315969339,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1671087394
    },
    {
        "content": "<p>Yeah, I have a working implementation that does not yet handle relations with symmetry (though should automatically pick up that ability to some extent once <code>solve_by_elim</code> does). I'll work on  putting up a PR for that.</p>\n<p>mathlib3 <code>tauto</code> uses a fancy union-find data structure to try to apply symmetry as efficiently as possible. I'm finding what look like some bugs in it: <a href=\"https://github.com/leanprover-community/mathlib/pull/17958\">https://github.com/leanprover-community/mathlib/pull/17958</a> . I think it makes sense for mathlib4's first version of <code>tauto</code> to not bother with this stuff yet.</p>",
        "id": 316049049,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671113175
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1081\">https://github.com/leanprover-community/mathlib4/pull/1081</a></p>",
        "id": 316304412,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671207228
    }
]