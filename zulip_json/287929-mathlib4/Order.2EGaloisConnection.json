[
    {
        "content": "<p>I opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/1093\">mathlib4#1093</a> to port <code>order.galois_connection</code> but it isn't actually usable yet because mathlib3port doesn't have <code>Order.CompleteLattice</code> so names do not match yet. Does anyone understand when mathlib3port will catch up?</p>",
        "id": 316576035,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671364545
    },
    {
        "content": "<p>I give up trying to use OneShot to fix this. I'm simply trying random things and going from one incomprehensible error to the next one.</p>",
        "id": 316578405,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671365645
    },
    {
        "content": "<p>The last time I checked (a week or two ago) my conclusion was that it runs every day late afternoon UK time (about 4pm) so maybe 5pm your time?</p>",
        "id": 316584453,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671368358
    },
    {
        "content": "<p>It runs twice a day now but indeed at 5 am / 5 pm CEST, and finishes about an hour later</p>",
        "id": 316585376,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671368812
    },
    {
        "content": "<p>In the mean time <span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span>  opened a competing PR in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1099\">mathlib4#1099</a> without waiting for mathport to do its job. Frédéric, did you do the alignment by hand (which would be a huge waste of time) or did you find a way to use <code>make oneshot</code>?</p>",
        "id": 316703440,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671444030
    },
    {
        "content": "<p>Note that his PR also has a worrying comment about super slow elaboration. Do we now have more tool to investigate this?</p>",
        "id": 316703789,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671444134
    },
    {
        "content": "<p>Is order_dual a structure yet? This might fix things. It cannot be a type synonym in lean 4 unless we want to go back to the bad old days of leakage, because it is not possible in lean 4 to retrospectively make the declaration irreducible. I need to do two hours of admin right now but I can start on the refactor this afternoon assuming it's not already been done. Note that I made MulOpposite a structure in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1036\">mathlib4#1036</a> -- reviews welcome!</p>",
        "id": 316705999,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671444880
    },
    {
        "content": "<p>I know we're not supposed to be refactoring as we go along but this is one case where the inability to port directly (because we can't make the definitions irreducible) somewhat forces our hand. The refactor of MulOpposite was surprisingly painless.</p>",
        "id": 316706342,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671444990
    },
    {
        "content": "<blockquote>\n<p>It cannot be a type synonym in lean 4 unless we want to go back to the bad old days of leakage,</p>\n</blockquote>\n<p>Does leakage matter for porting? We're not writing any new code, so if the mathlib3 version didn't leak then the mathlib4 version shouldn't either</p>",
        "id": 316711765,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671446896
    },
    {
        "content": "<p>AFAIK, the only purposes of <code>irreducible</code> in Lean 3 are 1) sanity checks and 2) performance optimizations; both of which could be postponed till after the port.</p>",
        "id": 316711900,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671446954
    },
    {
        "content": "<p>If lean 4 is still seeing through the type synonym in places Lean 3 didn't, do we have a bug filed / confirmation of whether the change is deliberate?</p>",
        "id": 316711977,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671446987
    },
    {
        "content": "<p>Yes, things are breaking, for example in GroupTheory.GroupAction.Defs there's currently a <a href=\"https://github.com/leanprover-community/mathlib4/blob/94dfa4bb9a9da5dd0ccf59dee36b07c87e6dcc9e/Mathlib/GroupTheory/GroupAction/Defs.lean#L274\">porting note</a> \"was one liner\" and it goes back to a one-liner after the change. What motivated me was the inability to port the line <code>attribute [irreducible] MulOpposite</code> -- in some sense the PR is a port of that line. But if we don't want it now, we can wait. Because of defeq eta for structures it shouldn't be a painful refactor, whenever it happens.</p>",
        "id": 316713344,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671447458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316703440\">said</a>:</p>\n<blockquote>\n<p>In the mean time <span class=\"user-mention silent\" data-user-id=\"311453\">Frédéric Dupuis</span>  opened a competing PR in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1099\">mathlib4#1099</a> without waiting for mathport to do its job. Frédéric, did you do the alignment by hand (which would be a huge waste of time) or did you find a way to use <code>make oneshot</code>?</p>\n</blockquote>\n<p>Looks like too much people wanted to port that file <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 316744525,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671457014
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316703789\">said</a>:</p>\n<blockquote>\n<p>Note that his PR also has a worrying comment about super slow elaboration. Do we now have more tool to investigate this?</p>\n</blockquote>\n<p>I have the same problem in <code>Order.CompleteBooleanAlgebra</code> (will open PR soon). There is a simple but disappointing solution: use <code>@</code> to tell Lean you want to apply the lemma to <code>α</code> and not <code>αᵒᵈ</code>...</p>",
        "id": 316744965,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671457136
    },
    {
        "content": "<p>Sorry, I was not aware of the already open PR for this file, I just picked an available file from the port status page and started working! Yes, I did the alignment by hand, it actually wasn't that bad.</p>",
        "id": 316754082,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671459552
    },
    {
        "content": "<p><code>OrderDual</code> is still a type synonym and not a structure, which makes me even more confused about the elaboration problems. It really behaved as if converting between <code>α</code> and <code>αᵒᵈ</code> had to be done explicitly using <code>ofDual</code> and <code>toDual</code> but maybe I misinterpreted what was going on.</p>",
        "id": 316754624,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671459687
    },
    {
        "content": "<p>Also, the last commit to the mathport repo didn't seem to fix the alignments either (so I did the alignment by hand in <code>CompleteBooleanAlgebra</code> too, and can confirm it is not that bad)</p>",
        "id": 316754843,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671459734
    },
    {
        "content": "<p>All that seems to be happening with this type synonym thing is simply that Lean 4 elaborates in a different way to Lean 3, and we're all used to the Lean 3 way of doing it so when that fails we are confused.</p>",
        "id": 316759472,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671460981
    },
    {
        "content": "<p>Combined with the fact that we skipped out on lots of <code>ofDual</code> and <code>toDual</code>s in lean3 proofs, because the rule was roughly \"do things right in the statement, but anything goes if the proof goes through\"</p>",
        "id": 316760285,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671461235
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"311453\">Frédéric Dupuis</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316754624\">said</a>:</p>\n<blockquote>\n<p>It really behaved as if converting between <code>α</code> and <code>αᵒᵈ</code> had to be done explicitly using <code>ofDual</code> and <code>toDual</code> but maybe I misinterpreted what was going on.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> By the way, I did some minimization a couple of weeks ago about issues with type synonyms:<br>\n<a href=\"#narrow/stream/287929-mathlib4/topic/Type.20synonyms\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Type.20synonyms</a><br>\nDo you think this is the same issue?</p>",
        "id": 316760944,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1671461429
    },
    {
        "content": "<p>It's similar, but here providing extra information doesn't completely solve the problem, we are still left with performance issues.</p>",
        "id": 316761984,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671461703
    },
    {
        "content": "<p>Here I think the elaborator is struggling to figure out that <code>αᵒᵈᵒᵈ</code> is the same as <code>α</code>.</p>",
        "id": 316762086,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671461743
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"311453\">Frédéric Dupuis</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316754082\">said</a>:</p>\n<blockquote>\n<p>Sorry, I was not aware of the already open PR for this file, I just picked an available file from the port status page and started working! Yes, I did the alignment by hand, it actually wasn't that bad.</p>\n</blockquote>\n<p>You missed three sources of information: this zulip thread, the list of opened PRs and the yaml-wiki file, so I'm really curious to know what you did to check before starting. That being said there was no real duplication of work since I stopped as soon as I realized mathport wasn't doing its job;</p>",
        "id": 316762240,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671461776
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316754843\">said</a>:</p>\n<blockquote>\n<p>Also, the last commit to the mathport repo didn't seem to fix the alignments either (so I did the alignment by hand in <code>CompleteBooleanAlgebra</code> too, and can confirm it is not that bad)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> this thread is a mess mixing at least three different conversations, but that one is for you. It seems mathport doesn't pick up alignments instructions.</p>",
        "id": 316762433,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671461837
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316762240\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"311453\">Frédéric Dupuis</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316754082\">said</a>:</p>\n<blockquote>\n<p>Sorry, I was not aware of the already open PR for this file, I just picked an available file from the port status page and started working! Yes, I did the alignment by hand, it actually wasn't that bad.</p>\n</blockquote>\n<p>You missed three sources of information: this zulip thread, the list of opened PRs and the yaml-wiki file, so I'm really curious to know what you did to check before starting. That being said there was no real duplication of work since I stopped as soon as I realized mathport wasn't doing its job;</p>\n</blockquote>\n<p>I checked Johan's port status page to pick something to work on, and this file was still listed as \"No\" on <a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">this page</a> when I started working on it. I didn't double-check anywhere else though.</p>",
        "id": 316765715,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671462705
    },
    {
        "content": "<p>\"No\" just means that the file has not been fully ported yet</p>",
        "id": 316766062,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671462811
    },
    {
        "content": "<p>I meant it was listed as \"No\" with no mathlib4 PR next to it.</p>",
        "id": 316766257,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671462867
    },
    {
        "content": "<p>Ah</p>",
        "id": 316766309,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671462883
    },
    {
        "content": "<p>I think Johan’s page is only updated once a day, right ?</p>",
        "id": 316766394,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671462908
    },
    {
        "content": "<p>every hour</p>",
        "id": 316766497,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671462940
    },
    {
        "content": "<p>I can increase, if wanted</p>",
        "id": 316766516,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671462946
    },
    {
        "content": "<p>But also the link to \"this page\" doesn't go to Johan's port status page.</p>",
        "id": 316766620,
        "sender_full_name": "Reid Barton",
        "timestamp": 1671462966
    },
    {
        "content": "<p>It now runs every 30 mins</p>",
        "id": 316767324,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671463150
    },
    {
        "content": "<p>10 mod 30, actually.</p>",
        "id": 316767381,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671463163
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status\">https://github.com/leanprover-community/mathlib/wiki/mathlib4-port-status</a> is now also updated every 30 mins, from my server.</p>",
        "id": 316767511,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671463201
    },
    {
        "content": "<p>We can do that from github CI in the future</p>",
        "id": 316767606,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671463215
    },
    {
        "content": "<p>My understanding is that the link goes to what Johan's page is generated from, no? So I checked it hadn't been updated in the meantime when I added my PR there.</p>",
        "id": 316767612,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1671463216
    },
    {
        "content": "<p>Yes sorry I misunderstood</p>",
        "id": 316768400,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671463450
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316762433\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Order.2EGaloisConnection/near/316754843\">said</a>:</p>\n<blockquote>\n<p>Also, the last commit to the mathport repo didn't seem to fix the alignments either (so I did the alignment by hand in <code>CompleteBooleanAlgebra</code> too, and can confirm it is not that bad)</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> this thread is a mess mixing at least three different conversations, but that one is for you. It seems mathport doesn't pick up alignments instructions.</p>\n</blockquote>\n<p>Is there an issue being reported here? You all seem to be working in some shared context but I can't make heads or tails of it. MWE please?</p>",
        "id": 316776823,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671465731
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/1099/files#r1051747996\">https://github.com/leanprover-community/mathlib4/pull/1099/files#r1051747996</a></p>",
        "id": 316777551,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671465952
    },
    {
        "content": "<p>I'm still not seeing the mathport issue</p>",
        "id": 316777828,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671466033
    },
    {
        "content": "<p>oh there are several conversations happening at once :-(</p>",
        "id": 316777868,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671466051
    },
    {
        "content": "<p>Sorry for the delay. Actually I misinterpreted the problem, it just seems that the mathlib3port repo hasn't catched up with the state of mathlib4. What is the process for that?</p>",
        "id": 316785876,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671468484
    }
]