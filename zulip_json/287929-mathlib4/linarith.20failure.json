[
    {
        "content": "<p>This turned up in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1304\">mathlib4#1304</a>, looks like a linarith bug to me?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Order.Field.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Linarith</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedField</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">linarith</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n  <span class=\"n\">linarith</span> <span class=\"c1\">-- linarith failed to find a contradiction</span>\n</code></pre></div>",
        "id": 319509822,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672888887
    },
    {
        "content": "<p>Possibly related: with the same setup,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n  <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>fails with two errors, \"unknown identifier 'h'\" as well as \"linarith failed to find a contradiction\"</p>",
        "id": 319510605,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672889582
    },
    {
        "content": "<p>Also possibly related:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Linarith</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedRing</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n</code></pre></div>\n<p>fails with</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>tactic failed, resulting expression contains metavariables\n  Linarith.lt_irrefl\n    (Eq.mp (?m.1237 ▸ Eq.refl (-x + x &lt; 0)) (add_lt_of_le_of_neg (neg_nonpos_of_nonneg h) (lt_zero_of_zero_gt a✝)))\n</code></pre></div>",
        "id": 319510769,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672889744
    },
    {
        "content": "<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span> these linarith failures -- I suspect the tactic is unusable while they remain. Maybe <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> has some ideas?</p>",
        "id": 319661198,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672948287
    }
]