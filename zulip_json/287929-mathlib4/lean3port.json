[
    {
        "content": "<p><code>lean_core.data.vector</code> is on the most wanted list; this is <code>data.vector</code> from Lean 3 core. Did someone mention that there was a way to get an autoported version of this file somehow? I'm looking for a porting job.</p>",
        "id": 311845580,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669216263
    },
    {
        "content": "<p>Yes, there is the <code>lean3port</code> repository, just like the <code>mathlib3port</code> repository.</p>",
        "id": 311846965,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669216690
    },
    {
        "content": "<p>Kevin, if you are out of work: <a href=\"https://github.com/leanprover-community/mathlib4/pull/674\">mathlib4#674</a> has some rather weird coercion errors and Arien has asked for help with that</p>",
        "id": 311848070,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1669217021
    },
    {
        "content": "<p>OK I'll look at 674 for now :-) Thanks both!</p>",
        "id": 311849448,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669217419
    },
    {
        "content": "<p>Is the ported file supposed to be <code>Mathlib/Lean/Data/Vector.lean</code> (or just <code>Mathlib/Data/Vector.lean</code> )?</p>",
        "id": 311932977,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1669256693
    },
    {
        "content": "<p>If you are porting a file from lean 3 core, it should go in <code>Mathlib/Init/</code>.</p>",
        "id": 311933078,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669256780
    },
    {
        "content": "<p>(The <code>Mathlib/Lean/</code> folder is for add-ons to Lean 4 core that are for now residing in mathlib4.)</p>",
        "id": 311933083,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669256798
    },
    {
        "content": "<p>I was looking at the <code>Vector.lean</code> file and it seems that it uses <code>List.mapâ‚‚</code> and some other functions that are not ported. Was this missed in saying <code>lean_core.data.vector</code> is ready to port or am I missing something?</p>",
        "id": 311936218,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1669259739
    },
    {
        "content": "<p>I would not trust the <code>port_status.py</code> script when it comes to analysing what is ready to port from lean 3 core. It is not attempting to analyse anything there at all, and the fact that <code>lean_core.data.vector</code> is shown on the list is more or less a bug to begin with.</p>",
        "id": 312034352,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669302059
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lean3port/near/312034352\">said</a>:</p>\n<blockquote>\n<p>I would not trust the <code>port_status.py</code> script when it comes to analysing what is ready to port from lean 3 core. It is not attempting to analyse anything there at all, and the fact that <code>lean_core.data.vector</code> is shown on the list is more or less a bug to begin with.</p>\n</blockquote>\n<p>Thanks. Would the correct approach be to port this to <code>Mathlib/Init/</code> and also create a file there <code>/Mathlib/Init/List/BasicExtras.lean</code> with functions that were in Lean 3's <code>list/basic.lean</code> but were dropped from Lean 4's  <code>List/Basic.lean</code>?</p>",
        "id": 312043189,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1669304793
    },
    {
        "content": "<p>Anything that is still unported from Lean 3 core's <code>list/basic.lean</code> belongs in <code>Mathlib/Init/List/Basic.lean</code></p>",
        "id": 312062757,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669312744
    },
    {
        "content": "<p>no need for <code>BasicExtras</code>: the fact that it is in <code>Mathlib/Init/</code> is enough.</p>",
        "id": 312062790,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669312763
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lean3port/near/312062757\">said</a>:</p>\n<blockquote>\n<p>Anything that is still unported from Lean 3 core's <code>list/basic.lean</code> belongs in <code>Mathlib/Init/List/Basic.lean</code></p>\n</blockquote>\n<p>Where do things in Lean3 core's <code>init/data/list/basic.lean</code> belong then?</p>",
        "id": 312070745,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669316525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lean3port/near/311933078\">said</a>:</p>\n<blockquote>\n<p>If you are porting a file from lean 3 core, it should go in <code>Mathlib/Init/</code>.</p>\n</blockquote>\n<p>I think this rule might be wrong; isn't it \"if you are porting a file from the <code>init</code> folder in lean3 core, it belongs in <code>Init</code>, otherwise if not it belongs not in <code>Init</code>\"?</p>",
        "id": 312070857,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669316601
    },
    {
        "content": "<p>I agree with Eric: <code>init.data.list.basic</code> -&gt; <code>Mathlib.Init.Data.List.Basic</code> and <code>data.vector</code> -&gt; <code>Mathlib.Data.Vector</code></p>",
        "id": 312083930,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669323696
    },
    {
        "content": "<p>Working on this. Will update the wiki.</p>",
        "id": 313626964,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1670037869
    },
    {
        "content": "<p>Wasn't sure if one should alert about PRs here too. In any case <a href=\"https://github.com/leanprover-community/mathlib4/pull/834\">https://github.com/leanprover-community/mathlib4/pull/834</a> does the following (I hope)</p>\n<ul>\n<li>port <code>Mathlib.Data.Vector</code></li>\n<li>port a handful of definitions and lemmas needed for this that are not (yet?) in <code>Std4</code>.</li>\n</ul>",
        "id": 313695793,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1670078183
    }
]