[
    {
        "content": "<p>Work started. PR is at <a href=\"https://github.com/leanprover-community/mathlib4/pull/1628\">mathlib4#1628</a>.</p>",
        "id": 321831758,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962696
    },
    {
        "content": "<p>Aahrg, immediately stuck on notation</p>",
        "id": 321832593,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673962948
    },
    {
        "content": "<p>I'm currently adding <code>#align</code> for all the additivized versions.</p>",
        "id": 321836217,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673963899
    },
    {
        "content": "<p>If someone can get the 4 notation lines at the top of the file working, that would be great.</p>",
        "id": 321836258,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673963911
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- mathport name: finset.sum_univ</span>\n<span class=\"c1\">-- scoped[BigOperators] -- Porting note: `notation3` doesn't mesh with `scoped[Foo]`</span>\n<span class=\"n\">notation3</span><span class=\"s2\">\"∑ \"</span><span class=\"o\">(</span><span class=\"bp\">...</span><span class=\"o\">)</span><span class=\"s2\">\", \"</span><span class=\"n\">r</span><span class=\"o\">:(</span><span class=\"n\">scoped</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Finset.sum</span> <span class=\"n\">Finset.univ</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r</span>\n\n<span class=\"c1\">-- mathport name: finset.prod_univ</span>\n<span class=\"c1\">-- scoped[BigOperators] -- Porting note: `notation3` doesn't mesh with `scoped[Foo]`</span>\n<span class=\"n\">notation3</span><span class=\"s2\">\"∏ \"</span><span class=\"o\">(</span><span class=\"bp\">...</span><span class=\"o\">)</span><span class=\"s2\">\", \"</span><span class=\"n\">r</span><span class=\"o\">:(</span><span class=\"n\">scoped</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Finset.prod</span> <span class=\"n\">Finset.univ</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r</span>\n\n<span class=\"c1\">-- mathport name: finset.sum</span>\n<span class=\"c1\">-- scoped[BigOperators] -- Porting note: `notation3` doesn't mesh with `scoped[Foo]`</span>\n<span class=\"n\">notation3</span><span class=\"s2\">\"∑ \"</span><span class=\"o\">(</span><span class=\"bp\">...</span><span class=\"o\">)</span><span class=\"s2\">\" in \"</span><span class=\"n\">s</span><span class=\"s2\">\", \"</span><span class=\"n\">r</span><span class=\"o\">:(</span><span class=\"n\">scoped</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Finset.sum</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r</span>\n\n<span class=\"c1\">-- mathport name: finset.prod</span>\n<span class=\"c1\">-- scoped[BigOperators] -- Porting note: `notation3` doesn't mesh with `scoped[Foo]`</span>\n<span class=\"n\">notation3</span><span class=\"s2\">\"∏ \"</span><span class=\"o\">(</span><span class=\"bp\">...</span><span class=\"o\">)</span><span class=\"s2\">\" in \"</span><span class=\"n\">s</span><span class=\"s2\">\", \"</span><span class=\"n\">r</span><span class=\"o\">:(</span><span class=\"n\">scoped</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Finset.prod</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">r</span>\n</code></pre></div>\n<p>works, for now</p>",
        "id": 321841503,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673965264
    },
    {
        "content": "<p>I'm stopping on this file for a bit</p>",
        "id": 321844832,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673966139
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130575\">@Siddharth Bhat</span> says he knows how to do it</p>",
        "id": 321878396,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673974751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130575\">@Siddharth Bhat</span> has pushed</p>",
        "id": 321889464,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1673977736
    },
    {
        "content": "<p>There also seems to be a bug in mathport which causes it to print literal \"\\n\" strings in the docstring arguments to <code>to_additive</code>.</p>",
        "id": 321897574,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673980147
    },
    {
        "content": "<p>This file is now ~ 50% error free</p>",
        "id": 321921183,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673987753
    },
    {
        "content": "<p>I'm going to work on this file a bit more</p>",
        "id": 321989581,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674027739
    },
    {
        "content": "<p>I'm a bit concerned that none of the notation is showing in the goal view</p>",
        "id": 321991410,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674028587
    },
    {
        "content": "<p>CI is happy with this one</p>",
        "id": 322011643,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674036022
    },
    {
        "content": "<p>But notation is still not showing up in the goal view</p>",
        "id": 322011676,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674036032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Algebra.2EBigOperators.2EBasic.20mathlib4.231628/near/322011676\">said</a>:</p>\n<blockquote>\n<p>But notation is still not showing up in the goal view</p>\n</blockquote>\n<p>AFAIU, that's because I implemented it using <code>macro_rules</code>, which means I'd need to write a delaborator to show the notation. I shall check if it's possible to use higher level <code>notation</code> / <code>macro</code> that automatically generates the delaborator. If this is not possible, I shall implement the delaborator annotation.</p>",
        "id": 322049239,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1674047736
    },
    {
        "content": "<p>Awesome, thanks!</p>",
        "id": 322050295,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674048026
    }
]