[
    {
        "content": "<p>Just letting <code>norm_num</code> users know: if you encounter <code>1/1</code> in a norm_num call, e.g.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"n\">norm_num</span> <span class=\"o\">(</span><span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"c1\">-- 1/1</span>\n</code></pre></div>\n<p>don't worry! We missed a prime on one of our definitions (<code>.isRat</code> vs. <code>.isRat'</code>). We'll bundle this fix into the <code>ring</code> functionality PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/1711\">mathlib4#1711</a>, which depends on it (and is almost done).</p>",
        "id": 322655820,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1674270486
    }
]