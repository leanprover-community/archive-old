[
    {
        "content": "<p>In Lean 3, inhabited.default had an explicit argument for the type.  In Lean 4, this argument is implicit now.  Unless I'm missing something, this means we need to backport the change to Lean 3 core, right?</p>",
        "id": 267176742,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1641553548
    },
    {
        "content": "<p>Alternatively, we could also 1) align the Lean 3 definition with a new default' definition in mathlib4, or 2) hack this in as a special case in synport.</p>",
        "id": 267177111,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1641553780
    },
    {
        "content": "<p>I think there is value in both versions. There is also <code>arbitrary</code>, which isn't used much in lean 3</p>",
        "id": 267193446,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641564894
    },
    {
        "content": "<p>We should try to get consistency, but I'm not sure whether to port forward or backward, and whether we need a <code>default'</code></p>",
        "id": 267193531,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641564944
    },
    {
        "content": "<p>I'm somewhat concerned that we might be running into problems with <code>arbitrary</code> at some point (since it is a constant and you can't prove anything about it).</p>",
        "id": 267193602,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1641564968
    },
    {
        "content": "<p>Also I think <code>default</code> is <code>export</code>ed in lean 3 but not lean 4</p>",
        "id": 267193665,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641565011
    },
    {
        "content": "<p>I guess it's not terrible to have only the implicit version, since <code>(default : A)</code> isn't that much harder to write than <code>default A</code></p>",
        "id": 267193754,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641565075
    },
    {
        "content": "<blockquote>\n<p>We should try to get consistency, but I'm not sure whether to port forward or backward, and whether we need a <code>default'</code></p>\n</blockquote>\n<p>I think <code>default'</code> is the worst option here, we don't need yet another name for the inhabited value (we already have <code>arbitrary</code> and <code>default</code>).</p>\n<p>Porting <del>forward</del> backward isn't too hard, there's only 668 occurrences of the word <code>default</code> in mathlib.</p>",
        "id": 267193833,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1641565115
    },
    {
        "content": "<p>porting forward would mean replacing uses of <code>default</code> in lean 4 core and mathlib4</p>",
        "id": 267194025,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641565230
    },
    {
        "content": "<p>There's a lot of <code>default _</code> in mathlib, so I'd tend to the implicit version.  (We even have <code>(default _ : C)</code>.....)</p>",
        "id": 267194136,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1641565314
    },
    {
        "content": "<p>I agree, it looks like at least 1/3 of uses are <code>default _</code> and maybe another 1/3 or more supply it although it is not necessary</p>",
        "id": 267194529,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641565560
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/pull/660\">https://github.com/leanprover-community/lean/pull/660</a></p>",
        "id": 267195642,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1641566169
    }
]