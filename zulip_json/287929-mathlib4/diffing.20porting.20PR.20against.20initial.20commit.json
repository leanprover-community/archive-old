[
    {
        "content": "<p>Giit noob question. I would like to diff a mathlib4 porting PR against the initial \"non-master\" commit to the branch, which I'm hoping is a commit of the autoported file. Right now I just do <code>diff Mathlib/Path/To/File.lean ../mathlib3port/Mathbin/Path/To/File.lean</code> and hope that I pulled mathlib3port at approximately the right time. Assuming the initial commit on the branch really is just a commit of the autoported file, and my HEAD is on <code>origin/the-relevant-branch</code>, what's a better way to do this? I know <code>git diff</code> something something but do I have to manually figure out the commit hashes and paste them in or is there a short cut?</p>",
        "id": 316968032,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671547860
    },
    {
        "content": "<p>Aah, is <code>git diff [commit hash of initial commit on the branch]</code> what I want?</p>",
        "id": 316968216,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671547909
    },
    {
        "content": "<p>Unless the commits are tagged, you will need the commit hashes. The good news is that you don't need the full hash. the first 7 or 8 characters suffice. You can get them from <code>git log</code></p>",
        "id": 316969026,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671548125
    },
    {
        "content": "<p>If you only provide one hash, then you are performing a <code>diff</code> w.r.t your current staging area.</p>",
        "id": 316969422,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671548224
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 316970529,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671548522
    },
    {
        "content": "<p>I think people who understand math find this brief tutorial useful : <a href=\"https://eagain.net/articles/git-for-computer-scientists/\">https://eagain.net/articles/git-for-computer-scientists/</a></p>",
        "id": 316973753,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671549372
    },
    {
        "content": "<p>The key point is that names are like post its. There are a handful of them. If you don't have a post it, you need to reach a node by its hash.</p>",
        "id": 316974021,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671549461
    },
    {
        "content": "<p>You can also git diff branch1 branch2</p>",
        "id": 316977807,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1671550526
    },
    {
        "content": "<p>For the \"leading\" commit of that branch</p>",
        "id": 316977871,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1671550545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/287929-mathlib4/topic/diffing.20porting.20PR.20against.20initial.20commit/near/316977871\">said</a>:</p>\n<blockquote>\n<p>For the \"leading\" commit of that branch</p>\n</blockquote>\n<p>My understanding is that this only serves the purpose Kevin describes if no commits have been made on that branch beyond the initial commit with the autoported file.</p>",
        "id": 316978478,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671550697
    },
    {
        "content": "<p>OTOH, is it a good idea to tag this initial commit? Perhaps reviewers might find it useful.</p>",
        "id": 316978659,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1671550755
    }
]