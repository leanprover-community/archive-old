[
    {
        "content": "<p>When does the <code>defLemma</code> linter fail or not? For example, I have one definition whose return type is a structure with a single equality argument, and that's fine. But if the return type is a structure with one data field and one equality argument, that's not. Is this a relevant factor?</p>",
        "id": 321283022,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1673655886
    },
    {
        "content": "<p>If I replace <code>theorem</code> with <code>def</code>, I get a much scarier error:</p>\n<blockquote>\n<p>unsupported <code>Mathlib.Meta.NormNum.IsNat.casesOn</code> application during code generation</p>\n</blockquote>",
        "id": 321283063,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1673655911
    },
    {
        "content": "<p>I'm wondering if this warrants a <code>[nolint defLemma]</code>.</p>",
        "id": 321283256,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1673656045
    },
    {
        "content": "<p>Could you please link to a line of code?</p>",
        "id": 321297491,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673668613
    },
    {
        "content": "<p>This particular issue was worked around on <a href=\"https://github.com/leanprover-community/mathlib4/pull/1441\">mathlib4#1441</a>, so I guess it doesn't matter anymore! :)</p>",
        "id": 321300850,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1673672379
    }
]