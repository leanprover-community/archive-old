[
    {
        "content": "<p>There's something wrong with the parsing in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1080\">mathlib4#1080</a>, but I have no idea why. Just spent the last 15min trying random things and it always tells me \"expected command\". Could someone investigate?</p>",
        "id": 320805392,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673474311
    },
    {
        "content": "<p>Where? On what?</p>",
        "id": 320812660,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673477520
    },
    {
        "content": "<p>In <code>data.int.order.basic</code>, line 68.</p>",
        "id": 320822247,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673482650
    },
    {
        "content": "<p>I don't know what it's on. It looks like it's still parsing one declaration before going to the next</p>",
        "id": 320822417,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673482730
    },
    {
        "content": "<p>Have you tried moving the <code>by</code> to the previous line?  <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 320823650,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1673483436
    },
    {
        "content": "<p>I can't reproduce. The only error I get is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Int</span><span class=\"bp\">/</span><span class=\"n\">Order</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">68</span><span class=\"o\">:</span><span class=\"mi\">20</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">cast_coe_nat'</span>\n<span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Int</span><span class=\"bp\">/</span><span class=\"n\">Order</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">68</span><span class=\"o\">:</span><span class=\"mi\">20</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">'</span><span class=\"n\">rewrite'</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">equality</span> <span class=\"n\">or</span> <span class=\"n\">iff</span> <span class=\"n\">proof</span> <span class=\"n\">expected</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.3342</span>\n<span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span>\n<span class=\"n\">inst</span><span class=\"bp\">✝</span> <span class=\"o\">:</span> <span class=\"n\">AddGroupWithOne</span> <span class=\"n\">α</span>\n<span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span>\n<span class=\"bp\">⊢</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">natAbs</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">↑↑</span><span class=\"o\">(</span><span class=\"n\">natAbs</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 320824559,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673484023
    },
    {
        "content": "<p>and CI seems to agree</p>",
        "id": 320824619,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673484079
    }
]