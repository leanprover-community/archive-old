[
    {
        "content": "<p>In lean3 mathlib, push_neg use classical logic to be able to rewrite var in the context.<br>\nI made a port of push_neg that only use constructive logic and then is only able to change the goal.<br>\nSo i was wondering if we should make two tactic : <br>\nOne that act on the goal and only use constructive logic, and one that can act on the context and use classical logique</p>",
        "id": 271424478,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1644496457
    },
    {
        "content": "<p>why would the constructive version be limited to just the goal? Anyway the whole point of this tactic was to do classical rewrites, I'm sure <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> can tell the story better than I. We have a precedent for using <code>!</code> in tactics to enable \"classical mode\" but I'm not sure how acceptable that is to the people that use this tactic a lot</p>",
        "id": 271460477,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644512280
    },
    {
        "content": "<p>Relevant: <a href=\"#narrow/stream/113489-new-members/topic/is.20.60push_neg.60.20classical.3F\">is <code>push_neg</code> classical?</a></p>",
        "id": 271461683,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644512761
    },
    {
        "content": "<p>Of course <code>push_neg</code> is classical. But anyone is welcome to write another tactic <code>half_push_neg</code> or <code>masochistic_push_neg</code> that is intuistionistic. You can even write a <code>don't_push_neg</code> tactic that simply write an error message \"You seem to have too much fun, you should remove a couple more axioms\".</p>",
        "id": 271476073,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644518868
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/push_neg.20behavior/near/271460477\">said</a>:</p>\n<blockquote>\n<p>why would the constructive version be limited to just the goal? Anyway the whole point of this tactic was to do classical rewrites, I'm sure <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> can tell the story better than I. We have a precedent for using <code>!</code> in tactics to enable \"classical mode\" but I'm not sure how acceptable that is to the people that use this tactic a lot</p>\n</blockquote>\n<p>Well, the constructive version would be limited because you loose some equivalence so you can't do the same thing on the goal and on the var</p>",
        "id": 271505047,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1644532326
    },
    {
        "content": "<p>I assume you are only doing bidirectional rewrites here, because otherwise it could potentially make the goal unprovable</p>",
        "id": 271508722,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644534881
    },
    {
        "content": "<p>in which case you can do the same thing on the goal and on the hypotheses (which is to say, not much)</p>",
        "id": 271508751,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644534907
    },
    {
        "content": "<p>I kind of agree with Patrick here. Pushing negations isn't really a thing you can do in general intuitionistically, so presenting a tactic that fails half the time seems like a poor user experience</p>",
        "id": 271508907,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644535034
    },
    {
        "content": "<p>It's like if we had a <code>prenex</code> tactic to put things in prenex normal form, but because it only does intuitionistic rewrites it just fails in all nontrivial cases</p>",
        "id": 271509040,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644535124
    },
    {
        "content": "<p>It would be quite nice to know when something I'm doing with <code>push_neg</code> can be done in a constructive way, but I'm not sure your idea helps with that...</p>",
        "id": 281824459,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1652189651
    }
]