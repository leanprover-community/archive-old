[
    {
        "content": "<p>It seems that the <code>@[refl]</code> tag is now behaving much more strictly regarding the order of arguments. I spent 10 minutes wondering why the <code>refl</code> tag on <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring_equiv.refl\">docs#ring_equiv.refl</a> didn't work, and I realized it depends on the order of implicit arguments <em>in the definition of <code>RingEquiv</code></em>!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Group.Opposite</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Hom.Ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Logic.Equiv.Set</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">RingEquiv₁</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Mul</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Mul</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Add</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Add</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"kd\">extends</span> <span class=\"n\">R</span> <span class=\"bp\">≃</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"bp\">≃*</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"bp\">≃+</span> <span class=\"n\">S</span>\n<span class=\"kd\">structure</span> <span class=\"n\">RingEquiv₂</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Mul</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Add</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Mul</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Add</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"kd\">extends</span> <span class=\"n\">R</span> <span class=\"bp\">≃</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"bp\">≃*</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"bp\">≃+</span> <span class=\"n\">S</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">Mul</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Add</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[refl]</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">def</span> <span class=\"n\">refl₁</span> <span class=\"o\">:</span> <span class=\"n\">RingEquiv₁</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">MulEquiv.refl</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">AddEquiv.refl</span> <span class=\"n\">R</span> <span class=\"k\">with</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">@[refl]</span> <span class=\"c1\">-- fails</span>\n<span class=\"kd\">def</span> <span class=\"n\">refl₂</span> <span class=\"o\">:</span> <span class=\"n\">RingEquiv₂</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">MulEquiv.refl</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">AddEquiv.refl</span> <span class=\"n\">R</span> <span class=\"k\">with</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>Is this a known issue?</p>",
        "id": 316162309,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671147111
    },
    {
        "content": "<p>(Also, is there really no way to remove the empty <code>with</code> without Lean thinking this is a set ?)</p>",
        "id": 316162476,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671147198
    },
    {
        "content": "<p>if you remove the <code>with</code> then it's not a structure instance at all</p>",
        "id": 316163505,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671147777
    },
    {
        "content": "<p>the structure instance syntax does support <code>{ a, b }</code> but that is shorthand for <code>{ a := a, b := b }</code> not <code>{ a, b with }</code></p>",
        "id": 316163572,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671147824
    },
    {
        "content": "<p>this looks like the same issue that was recently fixed for <code>@[symm]</code>, the attribute check is too strict</p>",
        "id": 316163682,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671147886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Nasty.20order.20of.20arguments.20dependency.20for.20.40.5Brefl.5D/near/316163572\">said</a>:</p>\n<blockquote>\n<p>the structure instance syntax does support <code>{ a, b }</code> but that is shorthand for <code>{ a := a, b := b }</code> not <code>{ a, b with }</code></p>\n</blockquote>\n<p>Oh okay so basically <code>with</code> is the new <code>..</code> (with different syntax of course)?</p>",
        "id": 316164177,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1671148181
    },
    {
        "content": "<p>yes</p>",
        "id": 316164880,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671148529
    }
]