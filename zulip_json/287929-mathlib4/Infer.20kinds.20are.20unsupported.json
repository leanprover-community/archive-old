[
    {
        "content": "<p>What should I do about this error from mathport? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"> ./././Mathport/Syntax/Translate/Command.lean:379:30: infer kinds are unsupported in Lean 4: #[`abv_nonneg] [] -/</span>\n</code></pre></div>",
        "id": 315581957,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1670935766
    },
    {
        "content": "<p>Never seen that. Does it break anything?</p>",
        "id": 315582222,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670935855
    },
    {
        "content": "<p>nope</p>",
        "id": 315582277,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1670935874
    },
    {
        "content": "<p>(except for the 100 char linter)</p>",
        "id": 315582320,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1670935887
    },
    {
        "content": "<p>Maybe it's about the <code>[]</code> in the mathlib3 declaration? I never understood what those were for either :)</p>",
        "id": 315582521,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670935935
    },
    {
        "content": "<p>So it's about setting some things to implicits, I don't know how to describe it but the answer is kinda \"look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/countable\">docs#countable</a> vs <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Countable#doc\">docs4#Countable</a> and the next few lines\"</p>",
        "id": 315633474,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1670949573
    },
    {
        "content": "<p>This has bit me before and should be written in the wiki, I would do it but I'm a bit under the weather</p>",
        "id": 315633573,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1670949600
    },
    {
        "content": "<p>the effect of the <code>[]</code> in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_absolute_value.abv_nonneg/src\">src#is_absolute_value.abv_nonneg</a> is to make the <code>f</code> argument explicit. Lean 4 does not support this annotation, so if you take the definition that mathport gives you then <code>f</code> will be implicit.</p>",
        "id": 315639547,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670951202
    },
    {
        "content": "<p>I don't think there is any principled reason for the removal in lean 4, except for an optimistic hope that it is a rarely used feature with a weird syntax and we can get by without it</p>",
        "id": 315639668,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670951235
    },
    {
        "content": "<p>What about when the structure field is data (e.g., <a href=\"https://leanprover-community.github.io/mathlib_docs/find/bornology.cobounded\">docs#bornology.cobounded</a>)? If I follow the method in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Countable#doc\">docs4#Countable</a>, I would have a structure field <code>Bornology.cobounded'</code> where the <code>α</code> is implicit and a def following it <code>Bornology.cobounded</code> with <code>α</code> explicit. Surely we don't want both floating around though. So how do I handle this?</p>",
        "id": 323344712,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1674591236
    }
]