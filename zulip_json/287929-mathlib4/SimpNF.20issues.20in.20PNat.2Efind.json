[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/1220\">mathlib4#1220</a>, I'm getting SimpNF issues for <code>one_le_find</code> which is currently:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">one_le_find</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">PNat.find</span> <span class=\"n\">h</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">not_iff_not.mp</span> <span class=\"bp\">&lt;|</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>\n<p>where the linter tells me</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">simp</span> <span class=\"n\">can</span> <span class=\"n\">prove</span> <span class=\"n\">this</span><span class=\"o\">:</span>\n  <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">PNat.lt_find_iff</span><span class=\"o\">,</span> <span class=\"n\">PNat.le_one_iff</span><span class=\"o\">,</span> <span class=\"n\">forall_eq</span><span class=\"o\">]</span>\n<span class=\"n\">One</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">lemmas</span> <span class=\"n\">above</span> <span class=\"n\">could</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"n\">duplicate.</span>\n</code></pre></div>\n<p>And of course, <code>one_le_find</code> is the specific lower bound on <code>lt_find_iff</code>.</p>\n<p>I've tried moving it up, proving it from first principles, etc., but the linter refuses to be happy.</p>\n<p>I don't <em>think</em> deleting it to make the linter happy is right -- should I nolint this (and how?)</p>",
        "id": 317981133,
        "sender_full_name": "Arien Malec",
        "timestamp": 1672072535
    },
    {
        "content": "<p>Why not just remove the simp attribute?</p>",
        "id": 317981247,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1672072589
    },
    {
        "content": "<p>Got it - the linter is complaining that anything <code>one_le_find</code> can prove in a <code>simp</code> so can <code>lt_find_iff</code>... so we don't need the <code>simp</code></p>",
        "id": 317981599,
        "sender_full_name": "Arien Malec",
        "timestamp": 1672072888
    },
    {
        "content": "<p>Obvious in retrospect.</p>",
        "id": 317981641,
        "sender_full_name": "Arien Malec",
        "timestamp": 1672072917
    },
    {
        "content": "<p>Asking is a good way to learn!</p>",
        "id": 318007161,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672090543
    }
]