[
    {
        "content": "<p>I have an initial port in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1003\">mathlib4#1003</a> that's all green (modulo some docu cleanup) but the <code>mathlib3port</code> file that it's based on has a bunch of <code>PrettyPrinter.parenthesize</code> stack trace dumps in it.  It looks like the resulting file has all the input from <code>mathlib.data.int.least_greatest</code> but it would be good for someone to look at the porting stack trace to see if there are any issues I need to be aware of.</p>",
        "id": 315735770,
        "sender_full_name": "Arien Malec",
        "timestamp": 1670993526
    },
    {
        "content": "<p>the PR was merged, but did anyone look at the <code>mathlib3port</code> file to see if the <code>PrettyPrinter.parenthesize</code> garbage there was indicative of anything?</p>",
        "id": 315854993,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671034038
    },
    {
        "content": "<p>Yikes! <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> do you know what's going on here? <a href=\"https://github.com/leanprover-community/mathlib3port/blob/master/Mathbin/Data/Int/LeastGreatest.lean#L54-L323\">here</a> is the mathlib3port opinion of <a href=\"https://github.com/leanprover-community/mathlib/blob/ae193735714ee12590325bff0a20cba1380fd4d4/src/data/int/least_greatest.lean#L56-L62\">this mathlib3 lemma</a> [edit : fixed link]. Remark: the docstring contains <code>P : ℤ → Prop</code> and <code>{m : P m}</code> and <code>[decidable_pred P]</code> , all quoted with <code> ` </code> in the docstring. Could this be anything to do with it?</p>",
        "id": 315861860,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671035792
    },
    {
        "content": "<p>parenthesize errors in mathport are bugs in mathport, usually because some mathlib4 syntax has changed and mathport is generating ill formed syntax objects</p>",
        "id": 315862648,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036019
    },
    {
        "content": "<p>the main question is, what bit of unusual syntax is used in this file? Usually this kind of error appears in every use of the bad syntax construction</p>",
        "id": 315862912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036103
    },
    {
        "content": "<p>looks like <code>(Mathlib.Tactic.tacticClassical_ (Tactic.skip \"skip\"))</code> is the culprit, this is ill formed</p>",
        "id": 315863478,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036246
    },
    {
        "content": "<p>Good to hear, wasn't necessary to the proof.</p>",
        "id": 315863965,
        "sender_full_name": "Arien Malec",
        "timestamp": 1671036388
    },
    {
        "content": "<p>to be clear, the issue is not in <code>least_of_bdd</code> but in the declaration after that, <code>exists_least_of_bdd</code></p>",
        "id": 315864153,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036443
    },
    {
        "content": "<p>the problem is <code>classical; exact</code>, which has to be translated in a complicated way because <code>classical</code> is now a tactic combinator like <code>try</code> and it seems that it isn't handling the case <code>classical &lt;;&gt; tac</code> =&gt; <code>classical tac</code> correctly</p>",
        "id": 315864482,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/mathport.20issues.20in.20data.2Eint.2Eleast_greatest/near/315864153\">said</a>:</p>\n<blockquote>\n<p>to be clear, the issue is not in <code>least_of_bdd</code> but in the declaration after that, <code>exists_least_of_bdd</code></p>\n</blockquote>\n<p>yeah sorry, I fixed the link.</p>",
        "id": 315864995,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671036678
    },
    {
        "content": "<p>But is the long and short of it that if Arien managed to get a mathlib4 proof working then we don't have to worry about anything in this file in mathlib4, and it's just a bug in mathport?</p>",
        "id": 315865237,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671036753
    },
    {
        "content": "<p>well, it should hopefully be a similar proof as the lean 3 one</p>",
        "id": 315865344,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036786
    },
    {
        "content": "<p>you will have to do the mathporting manually in this case</p>",
        "id": 315865390,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036797
    },
    {
        "content": "<p>at least until the bug is fixed</p>",
        "id": 315865407,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671036804
    },
    {
        "content": "<p>OK that's great, indeed that was what was done in this case. Thanks!</p>",
        "id": 315865570,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671036847
    }
]