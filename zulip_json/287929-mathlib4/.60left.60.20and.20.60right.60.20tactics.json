[
    {
        "content": "<p>I have made a pull request at <a href=\"https://github.com/leanprover-community/mathlib4/pull/260\">https://github.com/leanprover-community/mathlib4/pull/260</a> with implementations of the <code>left</code> and <code>right</code> tactics with some examples, as below. The implementation is a copy with minor modifications of the <code>constructor</code> tactic.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">zero</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">left</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">zero</span> <span class=\"c1\">-- 0</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">two</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">right</span>\n  <span class=\"n\">exact</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">two</span> <span class=\"c1\">-- 2</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Sum</span> <span class=\"n\">Nat</span> <span class=\"o\">(</span><span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span>\n  <span class=\"n\">left</span>\n  <span class=\"n\">exact</span> <span class=\"n\">zero</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Sum</span> <span class=\"n\">Nat</span> <span class=\"o\">(</span><span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span>\n  <span class=\"n\">right</span>\n  <span class=\"n\">exact</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span>\n  <span class=\"n\">left</span>\n  <span class=\"n\">rfl</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span>\n  <span class=\"n\">right</span>\n  <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 277982141,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1649228332
    },
    {
        "content": "<p><img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\"> <span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span></p>",
        "id": 281007259,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651581965
    }
]