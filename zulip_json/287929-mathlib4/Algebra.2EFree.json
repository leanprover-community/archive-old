[
    {
        "content": "<p>Corresponding PR: <a href=\"https://github.com/leanprover-community/mathlib4/pull/1353\">mathlib4#1353</a></p>\n<p>There are multiple interesting issues explained in this PR, maybe the first one is good to focus on: <code>attribute [match_pattern] Mul.mul</code> gives the error <code>invalid attribute 'match_pattern', declaration is in an imported module </code>.</p>\n<p>I'm guessing this just means it's not happy that we are applying an attribute to Mul.mul which was declared in another file. In the mathlib3 version, the line <code>attribute [pattern] has_mul.mul</code> has no such error. How could one remedy this? And what does this attribute even achieve here?</p>",
        "id": 321482426,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1673787596
    },
    {
        "content": "<p>This attribute is to let you do matches on <code>*</code>, as in</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">match</span> <span class=\"n\">a</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 321482954,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673787848
    },
    {
        "content": "<p>This is useful for free stuff because <code>⟦[a]⟧ * ⟦l⟧</code> corresponds to <code>a :: l</code>.</p>",
        "id": 321483045,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673787909
    },
    {
        "content": "<p>I think you can just add the attribute in the file where <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Mul#doc\">docs4#Mul</a> is defined</p>",
        "id": 321484645,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673788754
    },
    {
        "content": "<p>But you might find that the attribute actually needs to be on <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=HMul#doc\">docs4#HMul</a></p>",
        "id": 321484692,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673788787
    },
    {
        "content": "<p>Alright, so I'm reading it correctly that in mathlib3, it retroactively applies the [matching] attribute to the <code>mul</code> functions of all <code>has_mul</code>instances? Seems funky, but I will see whether adding it to Mul or HMul directly in mathlib4 breaks anything. Thanks for the explanations!</p>",
        "id": 321485397,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1673789120
    },
    {
        "content": "<p>Realized that the <code>Mul</code> classes are defined in Init.Prelude, which seems like a pretty fundamental file. Is this really worth changing that file over, or can we finda a local solution? :)</p>",
        "id": 321504249,
        "sender_full_name": "Lukas Miaskiwskyi",
        "timestamp": 1673798698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"563290\">@Lukas Miaskiwskyi</span> Thanks a lot for your help on this PR!</p>",
        "id": 321506044,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1673799753
    }
]