[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">is_five</span> <span class=\"o\">:</span> <span class=\"n\">num</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">test</span> <span class=\"n\">where</span>\n  <span class=\"n\">numb</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">num</span>\n  <span class=\"n\">isFive</span> <span class=\"o\">:</span> <span class=\"n\">numb</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">is_five</span>\n</code></pre></div>\n<p>complains <code>invalid auto tactic, identifier is not allowed</code>. </p>\n<p>Breaking <code>:= by</code> with parentheses </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">is_five</span> <span class=\"o\">:</span> <span class=\"n\">num</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">test</span> <span class=\"n\">where</span>\n  <span class=\"n\">numb</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">num</span>\n  <span class=\"n\">isFive</span> <span class=\"o\">:</span> <span class=\"n\">numb</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">is_five</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>now gives <code>tactic ‘apply’ failed, failed to unify num = 5 with numb = 5</code></p>\n<p>This works </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">is_five</span> <span class=\"o\">:</span> <span class=\"n\">num</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">test</span> <span class=\"n\">where</span>\n  <span class=\"n\">numb</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">num</span>\n  <span class=\"n\">isFive</span> <span class=\"o\">:</span> <span class=\"n\">numb</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>but this does not </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">is_five</span> <span class=\"o\">:</span> <span class=\"n\">num</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">test</span> <span class=\"n\">where</span>\n  <span class=\"n\">numb</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">num</span>\n  <span class=\"n\">isFive</span> <span class=\"o\">:</span> <span class=\"n\">numb</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>It seems the we lose contact with the other opt value with the parentheses. </p>\n<p>Is the current solution to write a throwaway tactic to avoid the parentheses?</p>",
        "id": 322335273,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1674149085
    }
]