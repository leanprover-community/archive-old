[
    {
        "content": "<p>As discussed in the meeting, our current approach of</p>\n<blockquote>\n<p>Every mathlib3 PR that touches a ported file must come with an accompanying mathlib 4 forward-port PR before either can be merged</p>\n</blockquote>\n<p>doesn't mesh well with the fact that mathport doesn't produce the auto-ported output in CI until the mathlib 3 commit is merged. In practice, this means that all forward-ports end up being ad-hoc ports rather than mathport-guided ports.</p>\n<p>Given that it sounds like mathport is already well-equipped to track what is and isn't ported, is there any reason to continue with this approach? I would argue we should just merge the mathlib3 PRs, let mathport rerun, and then request that the author make a forward-port PR now that mathport has done 90% of the work.</p>",
        "id": 319704006,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672968209
    },
    {
        "content": "<p>While mathport already tracks things that haven't been ported yet, we could also create a <code>needs-forward-port</code> label to attach to closed PRs, so that we have an easy way to ping authors who forget to follow up.</p>",
        "id": 319704136,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672968294
    },
    {
        "content": "<p>I'm just worried that responsibility for tracking down unported changes doesn't have a clear owner.</p>",
        "id": 319705660,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672969392
    },
    {
        "content": "<p>We already have this problem though, it's all the items on the \"modified since the commit at which they were verified\" list in <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a></p>",
        "id": 319705682,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672969426
    },
    {
        "content": "<p>Indeed.</p>",
        "id": 319705787,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672969508
    },
    {
        "content": "<p>These can happen due to race conditions where the mathlib3 PR is approved, then someone starts porting the file to mathlib4, then the mathlib3 file is merged, and then the port of the old version is merged</p>",
        "id": 319705802,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672969520
    },
    {
        "content": "<p>I'd argue the responsibility for tracking down unported changes is <code>mathport</code> itself, which should have the information to do so even if we haven't fully built the UX yet (this was discussed a bit in todays meeting)</p>",
        "id": 319705832,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672969558
    },
    {
        "content": "<p>Here's a thought: can updating the git shas in the headers in mathlib4 become the responsibility of the authors who make the matching PRs?</p>\n<p>Something like:</p>\n<ul>\n<li>create your PR for mathlib3</li>\n<li>either notice yourself, or have someone point out, that it touches files that have been synchronized</li>\n<li>create a PR for mathlib4: it's okay if you either port the changes by hand, or create an empty PR with the intention of doing it using mathport after the mathlib3 PR is merged. However if you do this, it needs to have a special label <code>deferred-mathlib3-pair</code>, or something.</li>\n<li>that PR for mathlib4 should update the git shas in the headers, after the mathlib3 PR has been merged but before it gets merged.</li>\n</ul>\n<p>Ideally then the only time there are ever discrepancies between mathlib4 and the corresponding files in mathlib3, there is an <code>deferred-mathlib3-pair</code> PR open.</p>\n<p>Rather than looking at the output of <code>port_status.py</code> (which is painful, unfun, and easy to hope someone else will do), we can instead just stay on top of PRs marked <code>deferred-mathlib3-pair</code>.</p>",
        "id": 319732591,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672991353
    },
    {
        "content": "<p>Separately and more simply than that, is it okay if when I <code>bors d+</code> any of the current <code>mathlib3-pair</code> PRs, I explicitly say: \"please update the git shas in the headers of these files, after the mathlib3 PR has been merged\"?</p>",
        "id": 319732892,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672991518
    },
    {
        "content": "<p>I think \"update the mathlib4 sha after making a change to mathlib3\" is sort of the wrong way to think about it.<br>\nThe problem is there might be other changes to the same mathlib3 file (either simultaneously, or that just weren't noticed).</p>",
        "id": 319733408,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672991838
    },
    {
        "content": "<p>The better approach is \"pick a file in mathlib4, and make sure all the mathlib3 changes in the range <code>old_commit..HEAD</code> have been ported\"</p>",
        "id": 319733520,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672991896
    },
    {
        "content": "<p>Okay, sure, that's right. But whose job is that?</p>",
        "id": 319733580,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672991937
    },
    {
        "content": "<p>I'm suggesting that when you make a PR to mathlib3 that changes a ported file, it is also your responsibility to make a PR to mathlib4 that then checks all the changes in the range <code>old_commit..HEAD</code> have been ported.</p>",
        "id": 319733653,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672991987
    },
    {
        "content": "<p>I'm going through the output of the <code># The following files have been modified since the commit at which they were verified.</code> section of <code>port_status.py</code> now, but my intention is to make the authors of these changes fix things, not do it myself. :-)</p>",
        "id": 319733816,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672992058
    },
    {
        "content": "<p>Yes that seems okay to an extent, but the worry is that someone might just not do it (since the mathlib3 PR then has to be merged first anyways)</p>",
        "id": 319734161,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672992278
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Merging.20mathlib3.20PRs.20before.20creating.20forward-ports/near/319733580\">said</a>:</p>\n<blockquote>\n<p>Okay, sure, that's right. But whose job is that?</p>\n</blockquote>\n<p>It happened a few times that I've opened a mathlib4 PR and noticed there was more stuff missing than what I just added, and it was fine to deal with.</p>",
        "id": 319734256,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672992333
    },
    {
        "content": "<p>So I think it's fine to make the PR author responsible of adding everything that's missing until their PR.</p>",
        "id": 319734341,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672992370
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Merging.20mathlib3.20PRs.20before.20creating.20forward-ports/near/319734161\">said</a>:</p>\n<blockquote>\n<p>Yes that seems okay to an extent, but the worry is that someone might just not do it (since the mathlib3 PR then has to be merged first anyways)</p>\n</blockquote>\n<p>Hence my suggestion that we ask authors of mathlib3 PRs to open mathlib4 PRs before we  merge their mathlib3 PR, even if we allow that mathlib4 PR to be empty. If all such empty mathlib4 PRs get labelled <code>deferred-mathlib3-pair</code> (or whatever), then the main task becomes to periodically ping the owners of such PRs asking them to do the update. </p>\n<p>Maybe this is too much overhead; but I think we need something to avoid accumulating too much in the <code># The following files have been modified since the commit at which they were verified</code> section.</p>",
        "id": 319737729,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672994262
    },
    {
        "content": "<p>Or we make it part of the whole community's porting workflow. Add a flag on an item of <code>... all dependencies ported ... ready to port</code> if one of its upstream files is an item of <code>... modified since ... verified</code>. The PR for that flagged file will then blocked by another PR updating the port (and SHA) on mathlib4 side. The latter PR can be shown next to the corresponding <code>... modified since ... verified</code> item.</p>",
        "id": 319741357,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1672995801
    },
    {
        "content": "<p>If the mathlib3 contributor makes a paired mathlib4 PR that updates the SHA properly, we're all good. If not, SHA is not updated, but any further ports relying on the outdated mathlib4 file will have reminder attached. No pinging would be needed</p>",
        "id": 319742314,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1672996207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Merging.20mathlib3.20PRs.20before.20creating.20forward-ports/near/319732591\">said</a>:</p>\n<blockquote>\n<ul>\n<li>create a PR for mathlib4: it's okay if you either port the changes by hand, or create an empty PR with the intention of doing it using mathport after the mathlib3 PR is merged. However if you do this, it needs to have a special label <code>deferred-mathlib3-pair</code>, or something.</li>\n</ul>\n</blockquote>\n<p>It is not possible to create empty PRs, is it?</p>",
        "id": 319747457,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672998466
    },
    {
        "content": "<p>You can create empty commits. Can't you PR them?</p>",
        "id": 319747554,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672998489
    },
    {
        "content": "<p>I don't remember, I guess I'll try!</p>",
        "id": 319748294,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672998827
    },
    {
        "content": "<p>This discussion makes me wonder if we should be stricter about accepting mathlib 3 changes to ported files/files near the shore of the rising tide</p>",
        "id": 319750042,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1672999542
    },
    {
        "content": "<p>I don't think we need to; but I think it would be good to make people aware that it is happening, by:</p>\n<ul>\n<li>Listing open mathlib3 PRs in <a href=\"https://math.commelin.net/files/port_status.html\">#port-status</a> to indicate \"you might want to ping the author of this PR before starting a mathlib4 port\"</li>\n<li>Detected open mathlib4 PRs in mathlib3 CI, to indicate \"this isn't ported yet but the port is ongoing\"</li>\n</ul>",
        "id": 319752330,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673000477
    }
]