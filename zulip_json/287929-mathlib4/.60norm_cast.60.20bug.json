[
    {
        "content": "<p>Founded in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1508\">mathlib4#1508</a>. <code>norm_cast</code> successfully simplifies all<code>0 &lt; ↑x</code> but fails for all <code>0 ≤ ↑x</code>.</p>",
        "id": 321007942,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1673548715
    },
    {
        "content": "<p>Also is it intended that lean4 files may have unclosed namespaces at the end?</p>",
        "id": 321008881,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1673549003
    },
    {
        "content": "<p>That's because we don't have <code>NatCast (WithBot α)</code>.</p>",
        "id": 321023462,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1673553686
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 321023495,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1673553694
    },
    {
        "content": "<p>Norm cast can simplify the corresponding formula for rationals because it can change 0 to \\u 0</p>",
        "id": 321024963,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1673554160
    },
    {
        "content": "<p>In those cases, you need additional <code>norm_cast</code> lemmas, eg <a href=\"https://leanprover-community.github.io/mathlib_docs/find/with_bot.coe_lt_zero\">docs#with_bot.coe_lt_zero</a></p>",
        "id": 321025502,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673554339
    },
    {
        "content": "<p>Then why does <code>norm_cast</code> works in mathlib3?</p>",
        "id": 321043488,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1673561263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455791\">Yuyang Zhao</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60norm_cast.60.20bug/near/321008881\">said</a>:</p>\n<blockquote>\n<p>Also is it intended that lean4 files may have unclosed namespaces at the end?</p>\n</blockquote>\n<p>Yes, this is intended.</p>",
        "id": 321044048,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1673561491
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455791\">Yuyang Zhao</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60norm_cast.60.20bug/near/321043488\">said</a>:</p>\n<blockquote>\n<p>Then why does <code>norm_cast</code> works in mathlib3?</p>\n</blockquote>\n<p>Probably the random (but deterministic) order in which lemmas are tried.</p>",
        "id": 321044899,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673561845
    }
]