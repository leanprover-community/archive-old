[
    {
        "content": "<p>I just noticed that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Iso.symm#doc\">docs4#CategoryTheory.Iso.symm</a> doesn't indicate that the declaration is tagged with <code>@[symm]</code>. Is this expected? Note that later declarations on that web page are correctly shown with the <code>@[simp]</code> attribute attached.</p>",
        "id": 313860531,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670192259
    },
    {
        "content": "<p>I suspect this is an aspect of the whole \"there is no uniform mechanism for asking which attributes are on a declaration\" problem. :-(</p>",
        "id": 314144798,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670282642
    },
    {
        "content": "<p>I guess that it's not the end of the world if we can't see these in the docs. I've got used to them from mathlib3 but at the end of the day I'm not sure I'm particularly interested in seeing whether something is tagged <code>symm</code> apart from when I'm trying to debug teething troubles with <code>symm</code>.</p>",
        "id": 314181848,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670311180
    },
    {
        "content": "<p>The issue is that doc-gen4 needs to know about the environment extension and its types etc. In order to access this information. But since symm is not in core (I thibk?) That would require it to pull that in as a dependency cycle :/</p>",
        "id": 314205522,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1670321943
    },
    {
        "content": "<p>It's increasingly clear we need a centralised store of which declarations have which attributes, no?</p>",
        "id": 314205747,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670322045
    },
    {
        "content": "<p>Thinking further though there might be a way for a package to provide extractor functions to doc-gen via some meta programming mechanism but I'm not sure.</p>\n<p>And I agree that that would be the simpler solution</p>",
        "id": 314205794,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1670322073
    }
]