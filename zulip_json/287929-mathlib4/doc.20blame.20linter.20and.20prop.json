[
    {
        "content": "<p>The doc blame linter asks for documentation of prop-valued fields of structure, for instance in</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">CompleteSemilatticeSup</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">PartialOrder</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">SupSet</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n  <span class=\"n\">le_supₛ</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">supₛ</span> <span class=\"n\">s</span>\n  <span class=\"n\">supₛ_le</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">b</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">supₛ</span> <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>Is this expected behavior? Do we really want this? I don't see how I could write a docstring that is easier to read than the actual definition.</p>",
        "id": 316495159,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671301158
    },
    {
        "content": "<blockquote>\n<p>I don't see how I could write a docstring that is easier to read than the actual definition.</p>\n</blockquote>\n<p>If you think this then you have been formalizing too much. Not everyone reads symbols as easily as this, especially if they use weird lean-specific notations like <code>sup_s</code></p>",
        "id": 316497524,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671302360
    },
    {
        "content": "<p>I did end up writing docstrings in <a href=\"https://github.com/leanprover-community/mathlib4/pull/1053/commits/c13f6c732af9de743f301f5653748f04ae3e9fad\">https://github.com/leanprover-community/mathlib4/pull/1053/commits/c13f6c732af9de743f301f5653748f04ae3e9fad</a>. But the main question is about the inconsistency of requiring no docstring for theorems but requiring them for prop-valued fields.</p>",
        "id": 316498181,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671302789
    },
    {
        "content": "<p>the prop-valued fields are still <code>def</code>s though, presumably they also trip the def-lemma linter unless it has a special exemption</p>",
        "id": 316498525,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671303028
    }
]