[
    {
        "content": "<p>I tried to have a look at porting this file , but failed at the first hurdle; I cannot get <a href=\"https://leanprover-community.github.io/mathlib_docs/find/left_ord_continuous.order_dual\">docs#left_ord_continuous.order_dual</a> to compile. Is defeq way stronger in Lean4?</p>",
        "id": 318012800,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1672095000
    },
    {
        "content": "<p>because the current <code>id</code> proof and variations of it using exact and convert don't seem to help</p>",
        "id": 318012864,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1672095019
    },
    {
        "content": "<p>also to even get it to typecheck you need to ascript the statement to say <code>OrderDual α → OrderDual β</code></p>",
        "id": 318012886,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1672095040
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">theorem</span> <span class=\"n\">order_dual</span> <span class=\"o\">:</span> <span class=\"n\">LeftOrdContinuous</span> <span class=\"n\">f</span> <span class=\"bp\">→</span> <span class=\"n\">RightOrdContinuous</span> <span class=\"o\">(</span><span class=\"n\">toDual</span> <span class=\"bp\">∘</span> <span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"n\">ofDual</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">id</span>\n</code></pre></div>",
        "id": 318014980,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672096756
    },
    {
        "content": "<p>Looks like you failed to obey the golden rule for porting: <code>set_option autoImplicit false</code></p>",
        "id": 318015076,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672096823
    },
    {
        "content": "<p>You had to ascript the statement because Lean helpfully just invented a new function <code>to_dual</code> from beta to some metavariable without telling you.</p>",
        "id": 318015204,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672096950
    },
    {
        "content": "<p>PS I would imagine that if problems start showing up with the definition of <code>OrderDual</code> as a type synonym then there might be a move to change it to a one field structure, and then probably proofs will start breaking :-/</p>",
        "id": 318015343,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672097117
    },
    {
        "content": "<p>should the theorem itself be called <code>order_dual</code> or <code>orderDual</code>, btw?</p>",
        "id": 318077417,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1672140333
    }
]