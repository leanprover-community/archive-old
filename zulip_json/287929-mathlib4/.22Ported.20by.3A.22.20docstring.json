[
    {
        "content": "<p>I think one reason undergraduates liked being involved in early Xena was that they could get their names into mathlib. One day we'll get the point where porting can become fun for mathematicians (eg when we're porting nontrivial theorems about finite groups). Can we allow a \"ported by\" field in the header or something where people who do the dirty work of manually porting and aligning files can be given some credit?</p>",
        "id": 309466366,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1668352047
    },
    {
        "content": "<p>I like this idea.</p>",
        "id": 309468143,
        "sender_full_name": "David Renshaw",
        "timestamp": 1668353136
    },
    {
        "content": "<p>Relatedly we might want a <code>Synced to: &lt;mathlib3 git sha&gt;</code> so that we can more easily deal with forward-porting from mathlib3</p>",
        "id": 309472399,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668355638
    },
    {
        "content": "<p>I have a mathlibtools PR (<a href=\"https://github.com/leanprover-community/mathlib-tools/pull/137\">https://github.com/leanprover-community/mathlib-tools/pull/137</a>) that refactors how we parse in the yaml. This should support a more flexible input yaml like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra.untouched.file</span><span class=\"o\">:</span>\n<span class=\"n\">algebra.file.with_started_port</span><span class=\"o\">:</span>\n  <span class=\"n\">mathlib4_pr</span><span class=\"o\">:</span> <span class=\"bp\">#</span><span class=\"mi\">567</span>\n<span class=\"n\">algebra.file.with_finished_port</span><span class=\"o\">:</span>\n  <span class=\"n\">mathlib4_pr</span><span class=\"o\">:</span> <span class=\"bp\">#</span><span class=\"mi\">123</span>\n  <span class=\"n\">ported</span><span class=\"o\">:</span> <span class=\"n\">true</span>\n<span class=\"n\">order.basic.sync</span><span class=\"o\">:</span>\n  <span class=\"n\">mathlib4_pr</span><span class=\"o\">:</span> <span class=\"bp\">#</span><span class=\"mi\">987</span>\n  <span class=\"n\">ported</span><span class=\"o\">:</span> <span class=\"n\">true</span>\n  <span class=\"n\">mathlib3_hash</span><span class=\"o\">:</span> <span class=\"n\">deadbeef</span>\n</code></pre></div>",
        "id": 309474169,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668356785
    },
    {
        "content": "<p>without making parsing really complicated because it has to deal with a single string</p>",
        "id": 309474204,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668356817
    }
]