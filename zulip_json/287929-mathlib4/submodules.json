[
    {
        "content": "<p>I believe that in <a href=\"https://github.com/leanprover-community/mathlib4/pull/700\">mathlib4#700</a> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> accidentally added the dependencies of mathlib as submodules. As a result many bors batches are now failing. I tried fixing this in <a href=\"https://github.com/leanprover-community/mathlib4/pull/766\">mathlib4#766</a>, but maybe we also need to reset the runner? (Previous discussion: <a href=\"#narrow/stream/113488-general/topic/Weird.20CI.20failure\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Weird.20CI.20failure</a>)</p>",
        "id": 312593695,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669630648
    },
    {
        "content": "<p>Gah, sorry. When lake moved its files around I must have added them. :-(</p>",
        "id": 312631307,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669643264
    },
    {
        "content": "<p>Changing branches too often.</p>",
        "id": 312631445,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669643286
    },
    {
        "content": "<p>A tip for next time: never use <code>git add .</code>. Use <code>git add -u</code> instead. This will only ever add files that are already tracked (or use <code>git commit -am &lt;commit message&gt;</code> directly).</p>",
        "id": 312638130,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669645133
    },
    {
        "content": "<p>Can someone merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/766\">mathlib4#766</a> so that we can all merge master and stop getting these lint style errors?</p>",
        "id": 312642725,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669646336
    },
    {
        "content": "<p>The build failed. I don't know if the error is even related to submodules: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/3565817172/jobs/5991456034\">https://github.com/leanprover-community/mathlib4/actions/runs/3565817172/jobs/5991456034</a></p>",
        "id": 312645141,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669647033
    },
    {
        "content": "<p>Not that I really know anything about it, but it seems to me like it just lost a connection causing the download to fail. So maybe retry?</p>",
        "id": 312645501,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669647133
    },
    {
        "content": "<p>Scott retried already</p>",
        "id": 312645540,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669647148
    },
    {
        "content": "<p>I was so excited to see the title of this thread and learn that the port has reached submodules already ...</p>",
        "id": 312645750,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1669647202
    },
    {
        "content": "<p>sorry to disappoint :-)</p>",
        "id": 312645824,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1669647226
    },
    {
        "content": "<p>How far could they be...<br>\n<a href=\"/user_uploads/3121/TU_rIDpuL0uke4iJ-b9V8Xp0/Screenshot-from-2022-11-28-15-59-25.png\">/user_uploads/3121/TU_rIDpuL0uke4iJ-b9V8Xp0/Screenshot-from-2022-11-28-15-59-25.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/TU_rIDpuL0uke4iJ-b9V8Xp0/Screenshot-from-2022-11-28-15-59-25.png\"><img src=\"/user_uploads/3121/TU_rIDpuL0uke4iJ-b9V8Xp0/Screenshot-from-2022-11-28-15-59-25.png\"></a></div><p>... oh</p>",
        "id": 312647263,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669647599
    },
    {
        "content": "<p>Even at that blurry resolution, I can recognise that big chunk on the left as \"finiteness\", which presumably isn't really needed to say what a submodule is...</p>",
        "id": 312647658,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669647668
    },
    {
        "content": "<p>You've been looking at too many of those graphs, I think :)</p>\n<p>At least one of the ways it depends on finiteness is through <code>algebra.group.conj</code>, which might be a candidate for splitting</p>",
        "id": 312648453,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669647875
    },
    {
        "content": "<p>And <code>order.atoms</code></p>",
        "id": 312648752,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1669647945
    },
    {
        "content": "<p>Seems like the CI runner may need to be reset. Seems like it's still looking for those submodules: see <a href=\"https://github.com/leanprover-community/mathlib4/pull/612\">mathlib4#612</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/762\">mathlib4#762</a></p>",
        "id": 312649823,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669648252
    },
    {
        "content": "<p>Do you know what needs to be done? Happy to have instructions here if there's something I can do.</p>",
        "id": 312652663,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669649035
    },
    {
        "content": "<p>No, note really. My guess: there are (now untracked) folders or files that are sitting around on the CI runner relating to these submodules that need to be deleted.</p>",
        "id": 312654123,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669649417
    },
    {
        "content": "<p>In case anyone wants a full resolution version of the submodule graph: <a href=\"/user_uploads/3121/iRUglkyt5SFKLLq6ZY_weARB/algebra.module.submodule.basic.pdf\">algebra.module.submodule.basic.pdf</a></p>",
        "id": 312654540,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669649519
    },
    {
        "content": "<p>Does this involve the <code>hoskinson</code> runners? Sorry to be clueless -- if someone can explain to me what needs to be done, I'll try to do it (or ask <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> for help).</p>",
        "id": 312687316,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1669658235
    },
    {
        "content": "<p>It looks like the linked actions did finish, are any runners still stuck? Happy to reset them.</p>",
        "id": 312689404,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669658869
    },
    {
        "content": "<p>It took a few tries, but they eventually got there. Not sure exactly what magic made them succeed. I'll ping you if I encounter it again.</p>",
        "id": 312703826,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669663221
    },
    {
        "content": "<p>I wonder if we have a poisoned runner now, and they succeeded because on later attempts they were given to non-poisoned runners...</p>",
        "id": 312708037,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669664723
    },
    {
        "content": "<p>Hm, for example <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/3566620460/jobs/5993297093\">this build</a> failed with an error as opposed to getting stuck in a loop, and runners should start every new build with a clean state. So as long as one is not stuck looping, it should be fine?</p>",
        "id": 312713854,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669666745
    },
    {
        "content": "<blockquote>\n<p>runners should start every new build with a clean state</p>\n</blockquote>\n<p>This is not the case for self-hosted runners.  We need to run <code>rm -rf *</code> manually.</p>",
        "id": 312742242,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1669678934
    },
    {
        "content": "<p>Ok, this is useful info.</p>",
        "id": 312743445,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669679668
    },
    {
        "content": "<p>We're still getting transient errors <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/3577158206/jobs/6015832572\">https://github.com/leanprover-community/mathlib4/actions/runs/3577158206/jobs/6015832572</a>.</p>",
        "id": 312914128,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669748685
    },
    {
        "content": "<p>So I suspect at least one of the runners is poisoned.</p>",
        "id": 312914170,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669748702
    },
    {
        "content": "<p>I'm not entirely sure at what point, or where, we need to run <code>run -rf *</code>, and I'm a little hesitant to experiment. :-)</p>",
        "id": 312914271,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669748729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>, do you know where we should do this? Or could you just rebuild the hoskinson runners? We're currently unable to reliably merge mathlib4 PRs.</p>",
        "id": 312917599,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669749161
    },
    {
        "content": "<p>My guess is that the <code>.git/config</code> lists a submodule but there is no <code>.gitmodules</code> file and so it complains.</p>",
        "id": 312917950,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669749264
    },
    {
        "content": "<p>removing it there would probably be sufficient.</p>",
        "id": 312918154,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669749332
    },
    {
        "content": "<p>Okay -- but that is a file that only exists on the runner, right?</p>",
        "id": 312918359,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669749381
    },
    {
        "content": "<p>This would persist even between branches and updates to master because <code>.git/config</code> isn't tracked, so it fits the symptoms.</p>",
        "id": 312918363,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669749383
    },
    {
        "content": "<p>Yes, that's correct.</p>",
        "id": 312918393,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669749397
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/787\">https://github.com/leanprover-community/mathlib4/pull/787</a> attempts to cleanup before starting.</p>",
        "id": 312918486,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669749412
    },
    {
        "content": "<p>Actually, everyone has a copy of that file, but they will have different things listed there.</p>",
        "id": 312918632,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669749425
    },
    {
        "content": "<p>It seems to do okay in CI, so I guess we can just merge it and see if it resolves the problem?</p>",
        "id": 312918717,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669749437
    },
    {
        "content": "<p>Looks like bors is accepting the <code>rm -rf *</code> PR. It passed lint style.</p>",
        "id": 312919258,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669749580
    },
    {
        "content": "<p>Are we sure <code>rm -rf *</code> is running the right directory? If so, that seems fine. Otherwise, it seems dangerous.</p>",
        "id": 312919442,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669749624
    },
    {
        "content": "<p>Nope, not sure at all. :-)</p>",
        "id": 312919697,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669749715
    },
    {
        "content": "<p>(Note: I know virtually nothing about the CI workflows)</p>",
        "id": 312919768,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669749724
    },
    {
        "content": "<p>In the worst case, these CI machines are docker images generated from a script, so we can always rebuild them from scratch.</p>",
        "id": 312919877,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669749769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/submodules/near/312917599\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span>, do you know where we should do this? Or could you just rebuild the hoskinson runners? We're currently unable to reliably merge mathlib4 PRs.</p>\n</blockquote>\n<p>I will rebuild all runners with the <code>mathlib4</code> tag now.</p>",
        "id": 312923551,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669750993
    },
    {
        "content": "<p>Oh, there is no such tag. I guess mathlib4 tasks are put on the general <code>bors</code> queue?</p>",
        "id": 312923848,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669751081
    },
    {
        "content": "<p>It seems my <code>rm -rf *</code> step in mathlib4 CI has resolved the issue for now anyway.</p>",
        "id": 312924618,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669751362
    },
    {
        "content": "<p>Okay, I will not restart everything with <code>bors</code> for now because it would kill the currently running jobs. Please ping me if you see any more transient failures.</p>",
        "id": 312925812,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669751754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/287929-mathlib4/topic/submodules/near/312742242\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>runners should start every new build with a clean state</p>\n</blockquote>\n<p>This is not the case for self-hosted runners.  We need to run <code>rm -rf *</code> manually.</p>\n</blockquote>\n<p>did you mean <code>rm -rf actions-runner/_work/mathlib4/*</code>?</p>",
        "id": 312926534,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669751987
    },
    {
        "content": "<p>I mean a <code>rm -rf *</code> build step in the work file.</p>",
        "id": 312927831,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1669752362
    },
    {
        "content": "<p>If you want to run it manually that's <code>rm -rf actions-runner/_work/mathlib4</code>, yes.</p>",
        "id": 312927892,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1669752376
    },
    {
        "content": "<p>Yes, I added <code>rm -rf *</code> as a build step, and that seems to have worked.</p>",
        "id": 312929771,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669753028
    },
    {
        "content": "<p>uh... <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/3577730611/jobs/6017062376\">https://github.com/leanprover-community/mathlib4/actions/runs/3577730611/jobs/6017062376</a></p>",
        "id": 312933659,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669754389
    },
    {
        "content": "<p>:-(</p>",
        "id": 312933778,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669754421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>, could you rebuild all the runners?</p>",
        "id": 312933819,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669754435
    },
    {
        "content": "<p>I guess <code>rm -rf *</code> is not actually deleting <code>.git</code> or <code>.gitmodules</code> or whatever the infected file is.</p>",
        "id": 312934224,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669754561
    },
    {
        "content": "<p>Okay, I've tried again, with <code>find . -name . -o -prune -exec rm -rf -- {} +</code> instead.</p>",
        "id": 312934758,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669754759
    },
    {
        "content": "<p>(Following <a href=\"https://unix.stackexchange.com/questions/77127/rm-rf-all-files-and-all-hidden-files-without-error\">https://unix.stackexchange.com/questions/77127/rm-rf-all-files-and-all-hidden-files-without-error</a>)</p>",
        "id": 312934833,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669754776
    },
    {
        "content": "<p>IIRC the <code>*</code> glob doesn't pick up on things with a <code>.</code> prefix, like <code>.git/config</code>, which is probably why it failed before.</p>",
        "id": 312935005,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669754836
    },
    {
        "content": "<p>ah, you just linked that.</p>",
        "id": 312935098,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669754862
    },
    {
        "content": "<p>That seems to have worked. I'll tell bors to try again on everything.</p>",
        "id": 312936433,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669755347
    }
]