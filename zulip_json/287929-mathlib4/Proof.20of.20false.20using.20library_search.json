[
    {
        "content": "<p>I was having some issues with <code>library_search</code> succeeding, yet giving only </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">𝔗𝔯𝔶</span> <span class=\"bp\">𝔱𝔥𝔦𝔰</span><span class=\"o\">:</span> <span class=\"n\">refine</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n</code></pre></div>\n<p>as a suggestion (and repeating it ~200 times).</p>\n<p>In the process of coming up with an MWE, however, I stumbled on a proof of false</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">falsum</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">library_search</span>\n\n<span class=\"k\">#print</span> <span class=\"kd\">axioms</span> <span class=\"n\">falsum</span>   <span class=\"c1\">-- 'falsum' depends on axioms: [sorryAx]</span>\n</code></pre></div>\n<p>I expected that <code>library_search</code> would succeed only if it actually found an applicable proof, but it seems to have snuck in a <code>sorry</code>. Is that intended?</p>\n<p>This is using mathlib4 commit <code>ed053df</code> and the lean version used by that mathlib, i.e., <code>leanprover/lean4:nightly-2022-03-27</code></p>",
        "id": 277536299,
        "sender_full_name": "Alex Keizer",
        "timestamp": 1648914086
    },
    {
        "content": "<p>Ha! I'm not really sure that counts as a proof of false :-) But nice observation!</p>",
        "id": 277536364,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648914172
    },
    {
        "content": "<p>Presumably the question is why whatever <code>library_search</code> used is in the library</p>",
        "id": 277537024,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648914989
    },
    {
        "content": "<p>Isn't this already fixed? I feel like I have seen this bug report 2 or 3 times now</p>",
        "id": 277537033,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1648915013
    },
    {
        "content": "<p>does anyone know why \"try this\" is in fraktur now?</p>",
        "id": 277537133,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1648915165
    },
    {
        "content": "<p>It's definitely been like this quite long, I remember lots of occasions where this happened when library_search couldnt find a proof</p>",
        "id": 277537258,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1648915255
    },
    {
        "content": "<p>Oh, this is a different issue. Looks like if none of the proofs work it admits the goal</p>",
        "id": 277537275,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1648915277
    },
    {
        "content": "<p>I was thinking this was the issue where <code>library_search</code> would explicitly apply <code>sorryAx</code></p>",
        "id": 277537279,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1648915295
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Not sure how this is all supposed to work, but <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Tactic/LibrarySearch.lean#L132-L133\">this</a> seems suspicious:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>      <span class=\"n\">for</span> <span class=\"n\">suggestion</span> <span class=\"k\">in</span> <span class=\"n\">suggestions</span> <span class=\"k\">do</span>\n        <span class=\"n\">addTermSuggestion</span> <span class=\"n\">tk</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">instantiateMVars</span> <span class=\"n\">mvar</span><span class=\"o\">)</span>\n</code></pre></div>\n<p><code>suggestion</code> is unused</p>",
        "id": 277538309,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1648916544
    },
    {
        "content": "<p>I believe the huge number of <code>refine ?_</code> suggestions are supposed to be suggestions to apply many lemmas from the library but you aren't seeing them because of this bug</p>",
        "id": 277538378,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1648916614
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/255\">mathlib4#255</a></p>",
        "id": 277538896,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1648917143
    },
    {
        "content": "<p>I think Gabriel wrote \"Try this\" in fraktur so we would all be so annoyed by it that someone wrote proper editor integration for \"Try this\" suggestions. :-)</p>",
        "id": 277565338,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648953313
    }
]