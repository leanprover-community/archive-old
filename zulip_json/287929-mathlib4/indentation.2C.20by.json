[
    {
        "content": "<p>Which style is preferred now?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">blabla</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">foo</span>\n</code></pre></div>\n<p>or</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">blabla</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span>\n  <span class=\"n\">foo</span>\n</code></pre></div>\n<p>?</p>",
        "id": 321979162,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674022328
    },
    {
        "content": "<p>I believe the former, so for long declarations</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">blablabl</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">extra_long_hypothesis_takes_a_lot_of_space</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">goal_is_also_long</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">my_proof</span>\n</code></pre></div>",
        "id": 321979255,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674022418
    },
    {
        "content": "<p>(4 space indent for subsequent lines of statement, <code>by</code> on same line as goal, 2 space indent for proof)</p>",
        "id": 321979353,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674022494
    },
    {
        "content": "<p>I asked because <code>mathport</code> sometimes generates the second style.</p>",
        "id": 321979530,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674022640
    },
    {
        "content": "<p>My impression is that it does this sometimes when there's an error in the proof it generated and it got confused about what syntax is what.</p>",
        "id": 321979605,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1674022685
    },
    {
        "content": "<p>Oh, is that if? I'd been wondering why it happened too</p>",
        "id": 321979799,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1674022860
    },
    {
        "content": "<p>This behavior of mathport is a bug. I don't think it has to do with errors in the proof (because mathport never actually tries to elaborate the expression), there is just some combination of indentation and context that is causing this behavior in the formatter. It would be great if someone could make a MWE; you can usually demonstrate these things without even using mathport because the formatter is in core</p>",
        "id": 321991386,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674028575
    },
    {
        "content": "<p>As a general rule, don't take the output of mathport as gospel regarding the style guide. It gets pretty close, but it's still lacking a lot of features relative to a real source code formatter - it was originally only intended for pretty printing, so if it does something odd consider that it might be a bug and don't copy the bug into your own style!</p>",
        "id": 321991782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674028746
    },
    {
        "content": "<p>see also <a href=\"https://github.com/leanprover-community/mathlib4/pull/1525\">mathlib4#1525</a> <a href=\"https://github.com/leanprover-community/mathlib4/pull/1523\">mathlib4#1523</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/1529\">mathlib#1529</a></p>",
        "id": 322028481,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1674041100
    },
    {
        "content": "<p>Fix files during port with </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>awk -i inplace <span class=\"s1\">'{do {{if (match($0, \"^  by$\") &amp;&amp; length(p) &lt; 98 &amp;&amp; (!(match(p, \"^[ \\t]*--.*$\")))) {p=p \" by\";} else {if (NR!=1) {print p}; p=$0}}} while (getline == 1) if (getline==0) print p}'</span> ./Mathlib/File/Im/Porting.lean\n</code></pre></div>",
        "id": 322028722,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1674041202
    }
]