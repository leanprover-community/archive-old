[
    {
        "content": "<p>While working on <a href=\"https://github.com/leanprover-community/mathlib4/pull/1293\">mathlib4#1293</a>, I think I encountered a bug in the Lean 4 version of <code>rcases</code>. Here's an MWE. The following works in Lean 3, with <code>rcases</code> generating a goal for the underscore:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"n\">_</span> <span class=\"k\">with</span> <span class=\"n\">h'</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h'</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>The corresponding code in Lean 4 fails:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">False</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"k\">with</span> <span class=\"n\">h'</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h'</span>\n</code></pre></div>\n<p>Here <code>rcases</code> doesn't generate a goal for <code>?_</code> and we just get the error <code>don't know how to synthesize placeholder</code>when the main goal is closed.</p>\n<p>Is this a known issue? Should I just work around it in the PR for now?</p>",
        "id": 318933811,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1672635259
    },
    {
        "content": "<p>I encountered the same issue in <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Order/Zorn.lean\">Order.Zorn</a>, see the two porting notes in that file.  (It also happens for <code>obtain</code>.)</p>",
        "id": 318935694,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672637359
    }
]