[
    {
        "content": "<p>Right now, we have two different parsers for the mathlib port data:</p>\n<ul>\n<li>One in <code>mathlibtools</code> which creates the input graphs</li>\n<li>One in <code>mathlib/scripts</code> which outputs the port status on the command line</li>\n</ul>\n<p>Having these live in two different places feels like a mistake, since it means if we change the format we end up breaking one of them. It also means we end up writing the same code twice (or worse, having bugs in one but not the other).</p>\n<p>There are two ways we could go about this:</p>\n<ul>\n<li>Push as much upstream into <code>mathlibtools</code> as possible (the approach I took in <a href=\"https://github.com/leanprover-community/mathlib/pull/17620\">#17620</a>)</li>\n<li>Remove any knowledge of porting from <code>mathlibtools</code> and put it all in the <code>scripts</code> directory. Those scripts can of course still import <code>mathlibtools.lib</code> to access things like the <code>import_graph</code>.</li>\n</ul>\n<p>The advantage of the first approach is that users don't need a checkout of mathlib to run the script. The advantage of the second is that we don't have to have <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> publish a new release every time we adjust the script (each release of which risks breaking regular leanproject users with no interest in porting)</p>",
        "id": 311073629,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668896258
    },
    {
        "content": "<p>Can we ask users to either clone mathlib tools and pip install -e, or pip install directly pointing to the github repo? With pip install -U if needed.</p>",
        "id": 311078371,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668899914
    },
    {
        "content": "<p>@Yakov, too complicated, let's not add any installation steps.</p>",
        "id": 311079475,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668900897
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, I agree everything should be in one place, but it's not super high priority. I would like there to be an <code>import-graph --port-status</code> command <em>somewhere</em> that generates a PDF, and it seems rather cumbersome to have this anywhere except in mathlibtools, without essentially forking mathlibtools over into mathlib, which sounds a bad idea.</p>",
        "id": 311079585,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668900996
    },
    {
        "content": "<p>My preference is thus to push stuff upstream to mathlibtools. I think Patrick is happy for us to play a bit faster and looser there than we used to, in the service of making porting easier. I'm happy to review and hit merge on PRs there, although I don't check it as often so a ping is useful. Similarly, I think Patrick is happy to cut a new release in response to a ping; and if that becomes cumbersome I suspect he's happy to let someone else cut the new releases.</p>",
        "id": 311079710,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668901125
    },
    {
        "content": "<p>I agree that these are extra steps. But we still require users to upgrade mathlibtools every so often with a pip command</p>",
        "id": 311079727,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668901142
    },
    {
        "content": "<p>We could put porting py files into mathlib, and retain port-status graph commands in mathlibtools, by doing unholy sys.path manipulation to import pt files from mathlib</p>",
        "id": 311079848,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668901235
    },
    {
        "content": "<p>Scott, files in the script directory can still import all the import graph stuff from mathlibtools to build the port graphs</p>",
        "id": 311083262,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668904299
    },
    {
        "content": "<p>(maybe that's not true for pipx users ...)</p>",
        "id": 311083382,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668904387
    }
]