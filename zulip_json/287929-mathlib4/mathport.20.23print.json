[
    {
        "content": "<p>Why is mathport inserting all these <code>#print</code> statements and commenting much of the code out?</p>",
        "id": 314383360,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670393369
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib3port/blob/master/Mathbin/Algebra/Order/Ring/Defs.lean\">https://github.com/leanprover-community/mathlib3port/blob/master/Mathbin/Algebra/Order/Ring/Defs.lean</a></p>",
        "id": 314383370,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670393378
    },
    {
        "content": "<p>That means that the declaration already exists (the <code>#print</code> is to remind you of that, and the commented code shows what mathport would have otherwise produced in case that is interesting to you)</p>",
        "id": 314384221,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670393994
    },
    {
        "content": "<p>it is intended to help find new declarations in already ported files since they stand out by being the only uncommented things</p>",
        "id": 314384325,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670394048
    },
    {
        "content": "<p>You can also change the mathport configuration to either not comment them out or to completely remove them</p>",
        "id": 314384370,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670394078
    },
    {
        "content": "<p>So the content in <code>Algebra.Order.Ring.Defs</code> has already been ported?</p>",
        "id": 314384519,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670394164
    },
    {
        "content": "<p>Right! It has all gone into <code>Algebra.Order.Ring</code></p>",
        "id": 314384586,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670394232
    },
    {
        "content": "<p>The port status page says <code>algebra.order.ring.defs</code> is a \"No\", but it seems it's been ported into <code>Algebra.Order.Ring</code> and <code>Algebra.Order.Ring.Lemmas</code>. Should this be reflected on the port status page somehow?</p>",
        "id": 314385163,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670394560
    },
    {
        "content": "<p>they should be moved where they belong</p>",
        "id": 314385613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670394788
    },
    {
        "content": "<p>some of the ad hoc ports put stuff in the wrong place</p>",
        "id": 314385620,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670394797
    },
    {
        "content": "<p>So I should move them to be in parity with mathlib3?</p>",
        "id": 314385728,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670394848
    },
    {
        "content": "<p>Yes, <code>Algebra.Order.Ring</code> was an adhoc port.</p>",
        "id": 314388937,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670396780
    },
    {
        "content": "<p>So you should treat it as a big pile of garbage, except:</p>\n<ul>\n<li>if there are broken proofs in the output of mathport, it's possible you'll find a usable proof in the ad hoc ported file</li>\n<li>sometimes there is something in the ad hoc ported file that a tactic needs, and you can't just throw out. In this case, find a new home for it (probably by moving it to another ad-hoc ported file, or asking here)</li>\n</ul>",
        "id": 314389051,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670396854
    },
    {
        "content": "<p>You need to get <code>Algebra.Order.Ring.Defs</code> to match the current mathlib3 version as closely as possible, and you also need to keep all the tactics working. :-)</p>",
        "id": 314389148,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670396889
    },
    {
        "content": "<p>Thanks. I've started the process. Since <code>protected_proj</code> hasn't been ported yet, how can I manually add <code>protected</code> to the projections of a class? Also, how do I see a list of all projections?</p>",
        "id": 314569009,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670451422
    },
    {
        "content": "<p>You just write <code>protected</code> in front of the field names when you define the structure/class.</p>",
        "id": 314571858,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670452680
    },
    {
        "content": "<p>In <code>class Foobar extends Foo</code>, how do I protect <code>Foobar.toFoo</code>?</p>",
        "id": 314573780,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670453545
    },
    {
        "content": "<p>I don't :)</p>",
        "id": 314574077,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670453662
    }
]