[
    {
        "content": "<p>Galois is pretty regularly using Lean in Portland.</p>",
        "id": 202166410,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1593230723
    },
    {
        "content": "<p>As a pure mathematician, I hate this question... but what on earth for?</p>",
        "id": 202246485,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1593366044
    },
    {
        "content": "<p><a href=\"https://leanprover.github.io/talks/LeanAtGalois.pdf\">https://leanprover.github.io/talks/LeanAtGalois.pdf</a></p>",
        "id": 202246574,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593366208
    },
    {
        "content": "<p>There's a little information here which I found interesting</p>",
        "id": 202246581,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593366231
    },
    {
        "content": "<p>The main current project I'm working on is a mouthful a \"verified verification condition generator for a decompiler\", namely one I worked on for decompiling x86 to LLVM.</p>",
        "id": 202372797,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1593467755
    },
    {
        "content": "<p>I previously worked on verifying aspects of a hash-based distributed timestamping service.</p>",
        "id": 202372888,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1593467802
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span>.  I have arrived here.  I decided to play with porting some of my formalization of SysMLv2 from PVS to Lean for fun.</p>",
        "id": 236908650,
        "sender_full_name": "Joe Kiniry",
        "timestamp": 1619819312
    }
]