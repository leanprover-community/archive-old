[
    {
        "content": "<p>Moving here before we get told off</p>",
        "id": 197462372,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589397366
    },
    {
        "content": "<p>Oops, maybe I noticed this too late <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 197462825,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589397573
    },
    {
        "content": "<p>Trying to unpack this<br>\n\"This becomes more than a philosophical issue with the relevance of this model category-structure in homotopy type theory, where internalization into the type theory requires constructive methods for interpreting proofs as programs.\"</p>",
        "id": 197462947,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589397625
    },
    {
        "content": "<p>is \"interpreting proofs as programs\" something that you need in order to build any theory at all?</p>",
        "id": 197463025,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589397660
    },
    {
        "content": "<p>can one use the \"hacky classical model\" to prove the first five or twenty pages of an HoTT book?</p>",
        "id": 197463100,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589397692
    },
    {
        "content": "<p>My best guess is something like: when you have a category with enough structure, you can interpret logic inside of it, and oftentimes phrasing proofs in the internal logic turns out to be easier (there's lots of examples in Section D of the Elephant, such as D.1.3.13 and D.1.3.14) - this is the internalization part at least.</p>",
        "id": 197463127,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589397706
    },
    {
        "content": "<p>I guess I say \"an HoTT book\" but maybe <a href=\"https://homotopytypetheory.org/book/\">this</a> is the canonical one?</p>",
        "id": 197463146,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589397717
    },
    {
        "content": "<p>what's \"the Elephant\"?</p>",
        "id": 197463240,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589397743
    },
    {
        "content": "<p><a href=\"https://www.amazon.com/Sketches-Elephant-Theory-Compendium-Oxford/dp/019852496X\">https://www.amazon.com/Sketches-Elephant-Theory-Compendium-Oxford/dp/019852496X</a></p>",
        "id": 197463307,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589397779
    },
    {
        "content": "<p><a href=\"https://ncatlab.org/nlab/show/Elephant\">https://ncatlab.org/nlab/show/Elephant</a></p>",
        "id": 197463314,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589397782
    },
    {
        "content": "<p>thanks</p>",
        "id": 197463364,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589397801
    },
    {
        "content": "<p>Speculating even further now, but this idea carries further when you define more internal notions, eg an internal ring or an internal category, and then if you proved your theorems constructively, their proofs should carry over exactly into the internal logic</p>",
        "id": 197463578,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589397887
    },
    {
        "content": "<p>I think that this process of \"internalized logic in a category\" is the whole story of how HoTT became a foundation: first it was a category structure, then it grew so many structures that you can do logic in it, then people decided to use it as the metalogic and forget about the ambient logic (whatever it was)</p>",
        "id": 197463616,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589397911
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/236446-Type-theory/topic/How.20to.20get.20HoTT.20people.20into.20Lean/near/197462688\">said</a>:</p>\n<blockquote>\n<p>Actually now I can't find anything about the other structure (with all monomorphisms as cofibrations); hopefully I didn't hallucinate it.</p>\n</blockquote>\n<p>I didn't hallucinate it but I did somewhat misremember it, and it seems to not (yet) be known to be part of a model category. So, at the moment it seems that there is actually one clearly correct way to define the classical model structure with the correct constructive interpretation.</p>",
        "id": 197463663,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589397936
    },
    {
        "content": "<p>and that's what the HoTT book uses - it is all logic \"internal\" to HoTT, which can also be interpreted as constructions inside a model of HoTT in a metalogic (classical or otherwise)</p>",
        "id": 197463801,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589397993
    },
    {
        "content": "<p>I actually don't know exactly why people are interested in building models constructively, but they definitely are, see the pdf I linked in the other thread. I always assumed it was something to do with a computational interpretation.</p>",
        "id": 197463843,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589398019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/236446-Type-theory/topic/Model.20structure.20on.20simplicial.20sets/near/197463843\">said</a>:</p>\n<blockquote>\n<p>I actually don't know exactly why people are interested in building models constructively, but they definitely are, see the pdf I linked in the other thread. I always assumed it was something to do with a computational interpretation.</p>\n</blockquote>\n<p>My guess is exactly this internalisation idea</p>",
        "id": 197463891,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589398042
    },
    {
        "content": "<p>(And I still don't really understand what that means.)</p>",
        "id": 197463894,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589398042
    },
    {
        "content": "<p>In particular, in order to interpret HoTT as having something to do with homotopy theory, you need to be working in a metalogic that can formalize homotopy theory and a suitable category of homotopy types that is a model of HoTT</p>",
        "id": 197463944,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398068
    },
    {
        "content": "<p>A more practical example of internalisation: in Prop 1.1 of <a href=\"https://arxiv.org/pdf/1908.08488.pdf\">https://arxiv.org/pdf/1908.08488.pdf</a>, she constructs an object of the category using (a suitable fragment of) the language of set theory, and discusses how the proof is just the usual set theory proof</p>",
        "id": 197464850,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589398475
    },
    {
        "content": "<p>This internal interpretation is used for example in <a href=\"https://arxiv.org/abs/1912.10407\">https://arxiv.org/abs/1912.10407</a> but I don't think it's the main reason why people are interested</p>",
        "id": 197464978,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589398549
    },
    {
        "content": "<p>More simply, if I have a ring object in a (sufficiently structured) category then any constructive proof about rings still holds in the category</p>",
        "id": 197464985,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589398551
    },
    {
        "content": "<p>We have a mechanism for doing this, and that is using tactics for reflection, or tactics to conduct internal proofs</p>",
        "id": 197464992,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398555
    },
    {
        "content": "<p>The sentence in question ends with \"interpreting proofs as programs\"</p>",
        "id": 197465091,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589398587
    },
    {
        "content": "<p>Do these tactics already exist? :o</p>",
        "id": 197465113,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589398599
    },
    {
        "content": "<p>no</p>",
        "id": 197465135,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398608
    },
    {
        "content": "<p>Yeah I was just about to continue and say that I don't see how internalisation relates to interpreting proofs as programs</p>",
        "id": 197465177,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589398630
    },
    {
        "content": "<p>I think the most powerful form of this would be a proof translator that takes proofs in e.g. cubicaltt and reflects them into a model of cubical type theory in lean</p>",
        "id": 197465179,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398632
    },
    {
        "content": "<p>that way you get all the automation from a proof assistant that is actually designed for writing proofs in the internal language</p>",
        "id": 197465238,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398666
    },
    {
        "content": "<p>So there is apparently some model structure on cubical sets that satisfies univalence and can be used to model HoTT, and it's constructive, and I think this is supposed to be related to why cubical type theory satisfies canonicity or whatever.</p>",
        "id": 197465338,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589398704
    },
    {
        "content": "<p>I guess you could say that my work in MM0 -&gt; lean translation is an instance of such a thing</p>",
        "id": 197465364,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398721
    },
    {
        "content": "<p>But there is a whole lot of machinery between the syntax of HoTT and a model category that I don't understand, so it's unclear to me what the exact relationship is.</p>",
        "id": 197465370,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589398726
    },
    {
        "content": "<p>since it takes proofs in ZFC in metamath and translates them to proofs about the type <code>Set</code> in lean</p>",
        "id": 197465412,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/236446-Type-theory/topic/Model.20structure.20on.20simplicial.20sets/near/197465364\">said</a>:</p>\n<blockquote>\n<p>I guess you could say that my work in MM0 -&gt; lean translation is an instance of such a thing</p>\n</blockquote>\n<p>do you have a paper / library one should read to learn about this?</p>",
        "id": 197465669,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589398862
    },
    {
        "content": "<p>It is one section in the MM0 paper, it was also discussed here on zulip a while ago</p>",
        "id": 197465843,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589398927
    },
    {
        "content": "<p><a href=\"https://arxiv.org/pdf/1910.10703.pdf\">https://arxiv.org/pdf/1910.10703.pdf</a><br>\nthis one?</p>",
        "id": 197465879,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589398943
    },
    {
        "content": "<p>thanks, sorry. I tried finding a list of all your papers but wasn't able to</p>",
        "id": 197465948,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589398973
    },
    {
        "content": "<p>Yes. Search for \"dirichlet's theorem\"</p>",
        "id": 197466031,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589399004
    },
    {
        "content": "<p>Here's the original zulip thread: <a href=\"#narrow/stream/113488-general/topic/Prime.20number.20theorem.20in.20lean/near/168472336\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Prime.20number.20theorem.20in.20lean/near/168472336</a></p>",
        "id": 197466164,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589399053
    },
    {
        "content": "<p>For the record I'm gonna weaken my position on wanting the hott model to be constructive - though I'd still aesthetically like it I wouldn't have any objection to starting off with going full classical</p>",
        "id": 197539318,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589455554
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/236446-Type-theory/topic/Model.20structure.20on.20simplicial.20sets/near/197463663\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/236446-Type-theory/topic/How.20to.20get.20HoTT.20people.20into.20Lean/near/197462688\">said</a>:</p>\n<blockquote>\n<p>Actually now I can't find anything about the other structure (with all monomorphisms as cofibrations); hopefully I didn't hallucinate it.</p>\n</blockquote>\n<p>I didn't hallucinate it but I did somewhat misremember it, and it seems to not (yet) be known to be part of a model category. So, at the moment it seems that there is actually one clearly correct way to define the classical model structure with the correct constructive interpretation.</p>\n</blockquote>\n<p>So, what's this supposed model structure? Is it written anywhere?</p>",
        "id": 197769792,
        "sender_full_name": "Valery Isaev",
        "timestamp": 1589593298
    },
    {
        "content": "<p>All I know about it is <a href=\"https://hott.github.io/HoTT-2019//conf-slides/van-den-Berg.pdf\">https://hott.github.io/HoTT-2019//conf-slides/van-den-Berg.pdf</a></p>",
        "id": 197785308,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589619446
    },
    {
        "content": "<p>Cofibrations are the decidable monomorphisms, not the Reedy decidable monomorphisms.</p>",
        "id": 197785365,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589619497
    },
    {
        "content": "<p>Interesting. I always thought that the fact that not all simplicial sets are cofibrant is a major drawback of the constructive approach.</p>",
        "id": 197793021,
        "sender_full_name": "Valery Isaev",
        "timestamp": 1589631456
    }
]