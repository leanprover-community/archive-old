[
    {
        "content": "<p>It seems like there are some constructions that have come from type theory that significantly simplify things in mathematics that are typically stated in the language of set theory. The one I've been thinking about is how well-founded relations are defined in terms of accessibility in type theory, which is a fairly simple inductive type, whereas in set theory to define the notion of a well-founded relation you have to specify that the relation is a strict total order (which comes with a list of axioms) and you have to specify it is a nonempty set and finally that there exists an element such that all other elements in the set are not less than that element. The accessibility approach seems so much simpler, and I wonder what other type theoretic constructions are simpler than their typical set theoretic counterparts.</p>",
        "id": 247142355,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1627243369
    },
    {
        "content": "<p>I don't know about simplifying things but in practice (outside of set theory) well-founded recursion on anything other than nat is rather rare, and in contrast there are plenty of times in algebra where in set theory one has rings (say) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊆</mo><mi>B</mi><mo>⊆</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A\\subseteq B\\subseteq C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and in type theory one has to juggle between subrings and algebras; the <code>algebra_tower</code> and bundled subrings now make this rather nice but it's still not as smooth as it is in set theory.</p>",
        "id": 247143368,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1627245100
    },
    {
        "content": "<blockquote>\n<p>The one I've been thinking about is how well-founded relations are defined in terms of accessibility in type theory, which is a fairly simple inductive type, whereas in set theory to define the notion of a well-founded relation you have to specify that the relation is a strict total order (which comes with a list of axioms) and you have to specify it is a nonempty set and finally that there exists an element such that all other elements in the set are not less than that element.</p>\n</blockquote>\n<p>My view is that this apparent simplicity is mostly a consequence of the fact that inductive types are axiomatic in CIC. Defining inductive types if you don't have them built in requires transfinite induction.</p>\n<p>Also, you don't need all that to define a well founded order. The only thing you need (which you actually omitted in your enumeration) is that every nonempty subset has a least element. From that fact you can derive transfinite induction and transfinite recursion, and all ZFC inductive types are built this way.</p>",
        "id": 247146941,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627249027
    }
]