[
    {
        "content": "<p>I would like to understand how dependent type inference works, but am struggling to get a foothold. Is there a central resource or text book that covers this territory?</p>",
        "id": 289002275,
        "sender_full_name": "ohhaimark",
        "timestamp": 1657320630
    },
    {
        "content": "<p>In NbE, why is eta-expansion done rather than eta-reduction when doing a read-back?</p>",
        "id": 290226166,
        "sender_full_name": "ohhaimark",
        "timestamp": 1658318932
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"244748\">ohhaimark</span> has marked this topic as unresolved.</p>",
        "id": 290226227,
        "sender_full_name": "Notification Bot",
        "timestamp": 1658318977
    },
    {
        "content": "<blockquote>\n<p>In NbE, why is eta-expansion done rather than eta-reduction when doing a read-back?</p>\n</blockquote>\n<p>Eta-long normal forms are easy to implement - when readback sees a type with an eta rule, it can immediately spit out the corresponding introduction form and recur down to each sub-expression. For instance, if the type is <code>Unit</code>, just emit <code>Unit.unit</code>, and if the type is <code>A -&gt; B</code>, just emit a <code>fun (x : A) =&gt;</code> and read back the value applied to <code>x</code> at type <code>B</code>. This works for everything with a nice eta rule but <code>Empty</code>, for which some special hacks are needed (but if you're reading back normal forms for conversion checking, then you'll have a slow implementation anyway - the right answer is to convert the values incrementally based on their types, only computing what's needed, and then you can just directly equate all values of type <code>Empty</code> with no further computation).</p>\n<p>Univesral eta contraction is more difficult. For functions, it's reasonably easy to implement, but not efficiently (it requires a full traversal of the body to find variable occurrences). For non-<code>Unit</code> products, it would require conversion checks on all the fields, which is inelegant as a rule and also probably very slow. For <code>Unit</code>, it's hard to even know what it would mean.</p>",
        "id": 293434893,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1660505081
    }
]