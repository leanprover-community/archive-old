[
    {
        "content": "<p>IIUC in Lean's type theory the question of whether a given type is inhabited is semi-decidable (since the formal language of raw terms is recursively enumerable and probably even context-free). Another question that is semi-decidable is whether a diophantine equation has solutions. In fact by the MRDP theorem any instance of the halting problem can be reduced to the solving Diophantine equations.</p>\n<p>So I wonder if a model could be constructed for dependent type theory where types are schemes/stacks/Zariski sheaves defined by finitely many bits of data and the terms are integer points of those objects. The empty type would be the empty scheme and the unit type would be Spec Z. The universes would then be \"moduli spaces\" of these objects. Dependent product types would be fiber products of the universal family and whatever family of types you have.</p>\n<p>There is many issues e.g. exponential objects usually don't exist in the category of schemes. One solution is to restrict what schemes we consider e.g. if you only consider smooth complete hyperbolic varieties you can get some useful finiteness for Hom spaces There are more issues e.g. the moduli space of a particular deformation class of hyperbolic varieties need not itself be hyperbolic: look at the moduli space of curves. Thus it's not clear how to get an infinite hierarchy of universes. Also things like Faltings's theorem impose restrictions on what we get if we only consider hyperbolic varieties.</p>\n<p>Exponential objects exist in any topos but then how do we carve out objects of \"finite type\" within a topos?</p>\n<p>Also I have no idea if there is a natural interpretation of inductive types in this language.</p>\n<p>Has anybody considered something like this in the literature? I would appreciate any pointers.</p>",
        "id": 228458132,
        "sender_full_name": "Roman Bars",
        "timestamp": 1614708801
    },
    {
        "content": "<p>What kind of application would this have? Are you aiming for some sort of synthetic way to do algebraic geometry? Or do you have a different intention?</p>",
        "id": 228458731,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1614709045
    },
    {
        "content": "<p>I don't have any applications in mind really. I just wondered if we could incorporate geometric intuition into type-theoretic reasoning.</p>\n<p>Though there is one explicit thing you could extract: while not every variety has a rational point any non-empty variety has a point over some number field. So from a propositions-as-types perspective this means for each statement there would be some natural weakenings of it that are easier to prove. This seems curious.</p>",
        "id": 228459703,
        "sender_full_name": "Roman Bars",
        "timestamp": 1614709415
    },
    {
        "content": "<p>It says that a pullback has points, which is like saying that if you add more hypotheses you might be able to prove your theorem</p>",
        "id": 228461907,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614710177
    },
    {
        "content": "<p>I don't know anything about the foundations of type theory. Can you explicitly write down the type which you're worried about for schemes? I don't know what an exponential object is but I do know what a scheme is</p>",
        "id": 228462034,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614710237
    },
    {
        "content": "<p>Isn't the issue going to be inductive types?</p>",
        "id": 228462271,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614710338
    },
    {
        "content": "<p>An exponential object is basically an internal Hom so for example if you take X=Y=affine line then Hom(X, Y) wouldn't be a scheme. Or you could take X=Y=projective line in which case Hom(X, Y) would be a scheme but it would not be complete so then Hom(Hom(X, Y), Hom(X, Y)) probably wouldn't be a scheme.</p>\n<p>Regarding adding hypotheses you are correct but it just seems a little surprising to me that you can write down your (infinite) list of number fields once and for all and then for any non-empty variety you will get a point valued in one of those number fields. Meanwhile for propositions I don't know how to uniformly generate more hypotheses that might help.</p>",
        "id": 228464400,
        "sender_full_name": "Roman Bars",
        "timestamp": 1614711069
    },
    {
        "content": "<p>Just to be clear here, the MRDP result is of an arithmetic nature, it's about Spec(Z). Finite type schemes over Spec(Z) will presumably have a section after some flat extension but general schemes won't, eg Spec(C) won't obtain a section over any number field.</p>",
        "id": 228467785,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614712335
    },
    {
        "content": "<p>The base change idea seems to be along the lines of \"you might not be able to prove P, but if you assume it you'll be able to prove it\".</p>\n<p>I guess that exponentiation not working is related to the fact that there doesn't seem to me to be any natural way of doing \"not\" with schemes.</p>",
        "id": 228468151,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614712482
    },
    {
        "content": "<p>I guess Hom(A^1,A^1) is an ind-scheme?</p>",
        "id": 228468303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614712550
    },
    {
        "content": "<p>Regarding \"not\"  if there was a natural way to do it then there would be one and only one map between any two finite type Z-schemes without Z-points (which has no chance of being true). Then this line of thinking is nonsense. I'm a little embarassed I didn't see it immediately.</p>",
        "id": 228471728,
        "sender_full_name": "Roman Bars",
        "timestamp": 1614713872
    },
    {
        "content": "<p>Aha. There are too many schemes with no Z-points and they don't map to the empty scheme</p>",
        "id": 228495868,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614723142
    }
]