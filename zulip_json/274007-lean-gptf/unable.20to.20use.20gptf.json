[
    {
        "content": "<p>What does the use of  <code>gptf</code> report the following error?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic.gptf</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">gptf</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">gptf_proof_search_step</span><span class=\"o\">]</span> <span class=\"n\">run_best_beam_candidate</span> <span class=\"n\">UNEXPECTED</span> <span class=\"n\">MESSAGE</span><span class=\"o\">:</span>\n<span class=\"c1\">---</span>\n<span class=\"o\">[</span><span class=\"s2\">\"ERROR { </span><span class=\"se\">\\\"</span><span class=\"s2\">error</span><span class=\"se\">\\\"</span><span class=\"s2\">:{ </span><span class=\"se\">\\\"</span><span class=\"s2\">code</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">message</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">Invalid URL (POST /v1/engines/formal-lean-wm-to-tt-m1-m2-v4-c4/completions)</span><span class=\"se\">\\\"</span><span class=\"s2\">, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">param</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">type</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">invalid_request_error</span><span class=\"se\">\\\"</span><span class=\"s2\">}}\"</span><span class=\"o\">]</span>\n<span class=\"c1\">---</span>\n\n<span class=\"o\">[</span><span class=\"n\">gptf_proof_search_step</span><span class=\"o\">]</span> <span class=\"n\">run_best_beam_candidate</span> <span class=\"n\">UNEXPECTED</span> <span class=\"n\">MESSAGE</span><span class=\"o\">:</span>\n<span class=\"c1\">---</span>\n<span class=\"o\">[</span><span class=\"s2\">\"ERROR { </span><span class=\"se\">\\\"</span><span class=\"s2\">error</span><span class=\"se\">\\\"</span><span class=\"s2\">:{ </span><span class=\"se\">\\\"</span><span class=\"s2\">code</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">message</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">Invalid URL (POST /v1/engines/formal-lean-wm-to-tt-m1-m2-v4-c4/completions)</span><span class=\"se\">\\\"</span><span class=\"s2\">, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">param</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">type</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">invalid_request_error</span><span class=\"se\">\\\"</span><span class=\"s2\">}}\"</span><span class=\"o\">]</span>\n<span class=\"c1\">---</span>\n\n<span class=\"n\">no</span> <span class=\"n\">predictions</span> <span class=\"n\">succeeded</span>\n</code></pre></div>",
        "id": 248203728,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1627986036
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span></p>",
        "id": 248217821,
        "sender_full_name": "Jason Rute",
        "timestamp": 1627996146
    },
    {
        "content": "<p>thanks for the ping, we are moving some engines around on the API --- just pushed a fix</p>",
        "id": 248224643,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1627999264
    },
    {
        "content": "<p>Is the problem fixed? Could you let me know how I can update my project? <span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span></p>",
        "id": 248227621,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628000565
    },
    {
        "content": "<p><code>git pull origin master</code></p>",
        "id": 248227685,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1628000592
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/PAqmKrD2pr4eic1xnDxyDB4y/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/PAqmKrD2pr4eic1xnDxyDB4y/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/PAqmKrD2pr4eic1xnDxyDB4y/image.png\"></a></div>",
        "id": 248228034,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628000737
    },
    {
        "content": "<p>i don't use VSCode but you might have to stash your local changes first</p>",
        "id": 248228140,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1628000779
    },
    {
        "content": "<p>The problem is my local project is connected to my own repository <code>my_project</code>. Do you know what I should do before <code>git pull origin master</code></p>",
        "id": 248228301,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628000868
    },
    {
        "content": "<p>maybe try <code>leanpkg configure &amp;&amp; leanpkg build</code>?</p>",
        "id": 248229176,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1628001227
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 248229628,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628001450
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 248229844,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628001537
    },
    {
        "content": "<p><code>gptf</code> is failing again now with the error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">gptf_proof_search_step</span><span class=\"o\">]</span> <span class=\"n\">run_best_beam_candidate</span> <span class=\"n\">UNEXPECTED</span> <span class=\"n\">MESSAGE</span><span class=\"o\">:</span>\n<span class=\"c1\">---</span>\n<span class=\"o\">[</span><span class=\"s2\">\"ERROR { </span><span class=\"se\">\\\"</span><span class=\"s2\">error</span><span class=\"se\">\\\"</span><span class=\"s2\">:{ </span><span class=\"se\">\\\"</span><span class=\"s2\">code</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">message</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">Invalid URL (POST /v1/engines/formal-lean-wm-to-tt-m1-m2-v4-c4/completions)</span><span class=\"se\">\\\"</span><span class=\"s2\">, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">param</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">type</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">invalid_request_error</span><span class=\"se\">\\\"</span><span class=\"s2\">}}\"</span><span class=\"o\">]</span>\n<span class=\"c1\">---</span>\n\n<span class=\"o\">[</span><span class=\"n\">gptf_proof_search_step</span><span class=\"o\">]</span> <span class=\"n\">run_best_beam_candidate</span> <span class=\"n\">UNEXPECTED</span> <span class=\"n\">MESSAGE</span><span class=\"o\">:</span>\n<span class=\"c1\">---</span>\n<span class=\"o\">[</span><span class=\"s2\">\"ERROR { </span><span class=\"se\">\\\"</span><span class=\"s2\">error</span><span class=\"se\">\\\"</span><span class=\"s2\">:{ </span><span class=\"se\">\\\"</span><span class=\"s2\">code</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">message</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">Invalid URL (POST /v1/engines/formal-lean-wm-to-tt-m1-m2-v4-c4/completions)</span><span class=\"se\">\\\"</span><span class=\"s2\">, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">param</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">type</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">invalid_request_error</span><span class=\"se\">\\\"</span><span class=\"s2\">}}\"</span><span class=\"o\">]</span>\n<span class=\"c1\">---</span>\n\n<span class=\"n\">no</span> <span class=\"n\">predictions</span> <span class=\"n\">succeeded</span>\n</code></pre></div>",
        "id": 248277234,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628023140
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span></p>",
        "id": 248277251,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628023148
    },
    {
        "content": "<p>what branch of <code>lean-gptf</code> is your project using?</p>",
        "id": 248277393,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1628023205
    },
    {
        "content": "<p>Hi Jesse. Sorry that I am not quite sure what you mean by <code>branch</code> here. How can I figure this out? <span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span></p>",
        "id": 248277838,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628023433
    },
    {
        "content": "<p><code>leanpkg configure</code> will download and checkout a git branch of <code>lean-gptf</code>, judging from the error above, it probably does not contain the fixes which i pushed to <code>lean-gptf</code> earlier</p>",
        "id": 248278989,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1628023905
    },
    {
        "content": "<p>After <code>leanpkg configure</code>, <code>import tactic.gptf</code> reports</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">file</span> <span class=\"bp\">'</span><span class=\"n\">tactic</span><span class=\"bp\">\\</span><span class=\"n\">gptf'</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">search</span> <span class=\"n\">path</span>\n<span class=\"n\">Use</span> <span class=\"bp\">'</span><span class=\"n\">lean</span> <span class=\"c1\">--path' to see where lean is looking, or https://leanprover-community.github.io/file-not-found.html for more</span>\n</code></pre></div>",
        "id": 248279569,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628024140
    },
    {
        "content": "<p>Is what I should do to manually add <code>path _target/deps/lean-gptf/src</code> in <code>leanpkg.path</code>? <span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span></p>",
        "id": 248279745,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628024210
    },
    {
        "content": "<p>This is the current content in <code>leanpkg.path</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">builtin_path</span>\n<span class=\"n\">path</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span>\n<span class=\"n\">path</span> <span class=\"bp\">./</span><span class=\"n\">src</span>\n</code></pre></div>",
        "id": 248279866,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628024266
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"408694\">Alex Zhang</span> <a href=\"#narrow/stream/274007-lean-gptf/topic/unable.20to.20use.20gptf/near/248279745\">said</a>:</p>\n<blockquote>\n<p>Is what I should do to manually add <code>path _target/deps/lean-gptf/src</code> in <code>leanpkg.path</code>? <span class=\"user-mention silent\" data-user-id=\"116045\">Jesse Michael Han</span></p>\n</blockquote>\n<p>No, this doesn't work. Reports the same long error as above.</p>",
        "id": 248280106,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628024394
    },
    {
        "content": "<p>Could you please let me know what I should do? <span class=\"user-mention\" data-user-id=\"116045\">@Jesse Michael Han</span></p>",
        "id": 248280266,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628024445
    },
    {
        "content": "<p>I have<br>\n<a href=\"/user_uploads/3121/6h3LzXjAIPqBnzXDbt6TL0Kf/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/6h3LzXjAIPqBnzXDbt6TL0Kf/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/6h3LzXjAIPqBnzXDbt6TL0Kf/image.png\"></a></div>",
        "id": 248280375,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628024500
    },
    {
        "content": "<p>Why don't you change the commit in your project's toml to point to a recent commit for gptf? Your toml says exactly which versions of mathlib and gptf to use.</p>",
        "id": 248285218,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1628027086
    },
    {
        "content": "<p>I have solved this issue. Thanks for the help!</p>",
        "id": 248324559,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1628066853
    },
    {
        "content": "<p>Hi, I tried setting up everything in order to use lean-gptf, but when trying to use the tactic, I end up with the following error message : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">gptf_proof_search_step</span><span class=\"o\">]</span> <span class=\"n\">run_best_beam_candidate</span> <span class=\"n\">UNEXPECTED</span> <span class=\"n\">MESSAGE</span><span class=\"o\">:</span>\n<span class=\"c1\">---</span>\n<span class=\"o\">[</span><span class=\"s2\">\"ERROR { </span><span class=\"se\">\\\"</span><span class=\"s2\">error</span><span class=\"se\">\\\"</span><span class=\"s2\">:{ </span><span class=\"se\">\\\"</span><span class=\"s2\">code</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">message</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">No such organization: org-kuQ09yewcuHU5GN5YYEUp2hh.</span><span class=\"se\">\\\"</span><span class=\"s2\">, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">param</span><span class=\"se\">\\\"</span><span class=\"s2\">:null, </span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"se\">\\\"</span><span class=\"s2\">type</span><span class=\"se\">\\\"</span><span class=\"s2\">:</span><span class=\"se\">\\\"</span><span class=\"s2\">invalid_request_error</span><span class=\"se\">\\\"</span><span class=\"s2\">}}\"</span><span class=\"o\">]</span>\n<span class=\"c1\">---</span>\n</code></pre></div>\n<p>I tried changing the org name to my personal one, but it lead to a new error saying the engine doesn't exist since it should be tied to the other, first org. What can I do to correct this ? Thanks in advance for the help</p>",
        "id": 251935916,
        "sender_full_name": "Arthur Adjedj",
        "timestamp": 1630700079
    },
    {
        "content": "<p>the <code>gptf</code> tactic is currently working for me with that org id, can you give exact steps to reproduce your bug?</p>",
        "id": 252004991,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1630766210
    },
    {
        "content": "<p>There aren't many steps to my bug, I simply followed the guide over on <a href=\"https://github.com/jesse-michael-han/lean-gptf\">https://github.com/jesse-michael-han/lean-gptf</a>:<br>\n-used these commands while in my lean project : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanpkg</span> <span class=\"n\">add</span> <span class=\"n\">jesse</span><span class=\"bp\">-</span><span class=\"n\">michael</span><span class=\"bp\">-</span><span class=\"n\">han</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">gptf</span>\n\n<span class=\"n\">leanpkg</span> <span class=\"n\">configure</span>\n\n<span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span>\n\n<span class=\"n\">leanpkg</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>-changed my key inside the code on gptf.lean to <br>\nprivate meta def OPENAI_API_KEY : option string := some  \"the_key\"</p>\n<p>-imported tactic.gptf in a file and tried using the tactic</p>",
        "id": 252130567,
        "sender_full_name": "Arthur Adjedj",
        "timestamp": 1630908324
    }
]