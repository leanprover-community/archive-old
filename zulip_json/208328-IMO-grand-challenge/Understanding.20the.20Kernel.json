[
    {
        "content": "<p>I find the IMO challenge a very interesting idea; to understand how to apply search algorithms though I would like to understand what happens in Lean on the lowest level possible. Is there a good resource explaining the minimal kernel in lean perhaps?</p>",
        "id": 222893871,
        "sender_full_name": "Marijn Stollenga",
        "timestamp": 1610731920
    },
    {
        "content": "<p>Have you seen Mario's thesis?</p>",
        "id": 222894092,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610731998
    },
    {
        "content": "<p>That explains Lean's type theory in detail. Is that the kind of resource you want?</p>",
        "id": 222894125,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610732017
    },
    {
        "content": "<p>There's a series of links on the community webpage here: <a href=\"https://leanprover-community.github.io/learn.html#more-on-foundations\">https://leanprover-community.github.io/learn.html#more-on-foundations</a></p>",
        "id": 222894270,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1610732071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/208328-IMO-grand-challenge/topic/Understanding.20the.20Kernel/near/222894092\">said</a>:</p>\n<blockquote>\n<p>Have you seen Mario's thesis?</p>\n</blockquote>\n<p>Ah yeah I think i've seen that. It's interesting but a bit I would like something closer to the programming level if that makes sense?</p>",
        "id": 222901934,
        "sender_full_name": "Marijn Stollenga",
        "timestamp": 1610735137
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/208328-IMO-grand-challenge/topic/Understanding.20the.20Kernel/near/222894270\">said</a>:</p>\n<blockquote>\n<p>There's a series of links on the community webpage here: <a href=\"https://leanprover-community.github.io/learn.html#more-on-foundations\">https://leanprover-community.github.io/learn.html#more-on-foundations</a></p>\n</blockquote>\n<p>That sounds interesting indeed!</p>",
        "id": 222902061,
        "sender_full_name": "Marijn Stollenga",
        "timestamp": 1610735167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243364\">@Marijn Stollenga</span> depending on the level of detail you are looking for, I would recommend reading one of the reference kernels. I wrote one in Haskell many years ago (<a href=\"https://github.com/leanprover/tc\">https://github.com/leanprover/tc</a>) and there are others floating around in other languages.</p>",
        "id": 222915866,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1610740559
    },
    {
        "content": "<p>I saw you Haskell paper, so funny XD. I saw that it kind of abruptly ended? Is everything there, I guess I should learn Haskell. <br>\nMaybe a good project is to port that to some other language (Zig perhaps).</p>",
        "id": 222923535,
        "sender_full_name": "Marijn Stollenga",
        "timestamp": 1610743913
    }
]