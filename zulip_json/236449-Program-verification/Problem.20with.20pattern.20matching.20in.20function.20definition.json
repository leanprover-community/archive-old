[
    {
        "content": "<p>Hi,<br>\nIn the following (non-sensical) example code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Exp</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">Ei</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Exp</span>\n<span class=\"bp\">|</span> <span class=\"n\">Eb</span> <span class=\"o\">:</span> <span class=\"n\">bool</span> <span class=\"bp\">→</span> <span class=\"n\">Exp</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">Val</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">Vi</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Val</span>\n<span class=\"bp\">|</span> <span class=\"n\">Vb</span> <span class=\"o\">:</span> <span class=\"n\">bool</span> <span class=\"bp\">→</span> <span class=\"n\">Val</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Eeval</span> <span class=\"o\">:</span> <span class=\"n\">Exp</span> <span class=\"bp\">→</span> <span class=\"n\">Val</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Ei</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Vi</span> <span class=\"n\">n</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Eb</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Vb</span> <span class=\"n\">b</span>\n</code></pre></div>\n\n<p>I am getting the following errors:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">4</span> <span class=\"n\">error</span>\n<span class=\"n\">equation</span> <span class=\"n\">compiler</span> <span class=\"n\">failed</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">trace.eqn_compiler.elim_match</span> <span class=\"n\">true'</span> <span class=\"n\">for</span> <span class=\"n\">additional</span> <span class=\"n\">details</span><span class=\"o\">)</span>\n <span class=\"mi\">23</span><span class=\"o\">:</span><span class=\"mi\">3</span> <span class=\"n\">error</span>\n<span class=\"n\">invalid</span> <span class=\"n\">application</span><span class=\"o\">,</span> <span class=\"n\">function</span> <span class=\"n\">expected</span>\n <span class=\"mi\">23</span><span class=\"o\">:</span><span class=\"mi\">12</span> <span class=\"n\">error</span>\n<span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">Vi'</span>\n <span class=\"mi\">24</span><span class=\"o\">:</span><span class=\"mi\">3</span> <span class=\"n\">error</span>\n<span class=\"n\">invalid</span> <span class=\"n\">application</span><span class=\"o\">,</span> <span class=\"n\">function</span> <span class=\"n\">expected</span>\n <span class=\"mi\">24</span><span class=\"o\">:</span><span class=\"mi\">12</span> <span class=\"n\">error</span>\n<span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">Vb'</span>\n</code></pre></div>\n\n<p>(where line 22 is the one containing <code>def Eeval : Exp → Val</code>.<br>\nCould you tell me what I am doing wrong?<br>\nBenedikt</p>",
        "id": 211195065,
        "sender_full_name": "Benedikt Ahrens",
        "timestamp": 1600984969
    },
    {
        "content": "<p>Try adding <code>open Val</code> before the <code>def Eeval</code>. Or alternatively, write <code>Val.Vi</code> and <code>Val.Vb</code> instead of <code>Vi</code> and <code>Vb</code>.</p>",
        "id": 211195233,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1600985078
    },
    {
        "content": "<p>Ah, to fix <code>Ei</code> and <code>Eb</code> as well you can use <code>open Exp Val</code>.</p>",
        "id": 211195364,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1600985175
    },
    {
        "content": "<p>Thanks, that fixes it! (I realize I should have posted this in the stream \"new members\" instead...)</p>",
        "id": 211196031,
        "sender_full_name": "Benedikt Ahrens",
        "timestamp": 1600985669
    }
]