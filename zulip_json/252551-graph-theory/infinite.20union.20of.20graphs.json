[
    {
        "content": "<p>Something interesting to think about: is there a nice way of doing this construction in Lean? For instance can you show that if G has no cycles of length four, then ext G is a friendship graph</p>",
        "id": 207674157,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598037918
    },
    {
        "content": "<p>What kind of union? A disjoint union, or a union of subgraphs within a particular universal graph?</p>",
        "id": 207674996,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598038351
    },
    {
        "content": "<p>Because, rather than defining <code>subgraph G</code> to be a bounded lattice, it could be defined to be a complete lattice, so then an infinite union would be the <code>sup</code> of an indexed family of subgraphs.  (For example, <code>G</code> could be a complete graph on some given vertex type.)</p>",
        "id": 207675206,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598038452
    },
    {
        "content": "<p>What's <code>ext G</code>?  (Is it something from Ramsey theory?)</p>",
        "id": 207675549,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598038628
    },
    {
        "content": "<p>Oh oops I meant to attach a picture - sorry</p>",
        "id": 207686051,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598044678
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/xe4dH8wgsumCte6um3yejX61/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/xe4dH8wgsumCte6um3yejX61/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/xe4dH8wgsumCte6um3yejX61/image.png\"></a></div>",
        "id": 207686092,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598044684
    },
    {
        "content": "<p>In particular in this setting when you're just given G, there's not an ambient graph in which all your subgraphs do form a lattice, so just taking <code>sup</code> like you mention isn't immediate</p>",
        "id": 207686193,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598044781
    },
    {
        "content": "<p>Having colimits of graphs like that would be nice, though in this case you could define <code>ext G</code> using a <code>sup</code> construction on subgraphs of the complete graph on the set of binary trees with leaves being labeled by vertices of <code>G</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">simple_graphs</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kn\">inductive</span> <span class=\"n\">all_deriv_verts</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">incl</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">all_deriv_verts</span>\n<span class=\"bp\">|</span> <span class=\"n\">pair</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">all_deriv_verts</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">all_deriv_verts</span>\n\n<span class=\"n\">def</span> <span class=\"n\">total</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">complete_graph</span> <span class=\"o\">(</span><span class=\"n\">all_deriv_verts</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>Here, <code>total G</code> is the graph that's universal.</p>",
        "id": 207706236,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598069066
    },
    {
        "content": "<p>I suspect you want <code>pair</code> to take a <code>sym2</code> or finset of size 2 rather than an ordered pair, but yeah I can see that works</p>",
        "id": 207724138,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598102198
    },
    {
        "content": "<p>Oh, good catch</p>",
        "id": 207732616,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598115377
    }
]