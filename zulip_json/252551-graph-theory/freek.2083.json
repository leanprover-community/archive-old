[
    {
        "content": "<p>I started down the \"PR graph theory to lean\" path when Aaron came to me with a mostly-error-free proof of the \"friendship theorem\" which characterizes graphs with the property \"every pair of distinct vertices has a unique common neighbor\". We used some algebraic stuff in our proof, which has since been sliced up and PRed, except for the coupld of most specialized lemmas.</p>",
        "id": 207021762,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597497696
    },
    {
        "content": "<p>The branch is here<br>\n<a href=\"https://github.com/leanprover-community/mathlib/tree/freek_83_friendship_theorem\">https://github.com/leanprover-community/mathlib/tree/freek_83_friendship_theorem</a><br>\n(the code is in the archive / 100-theorems folder)</p>",
        "id": 207021828,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597497795
    },
    {
        "content": "<p>It needs quite a bit more polishing. It may also be a good testbed for changes to the API.</p>",
        "id": 207021887,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597497898
    },
    {
        "content": "<p>There's a nontrivial counting argument there, with some machinery that maybe one could profitably re-use elsewhere.</p>",
        "id": 207021904,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597497951
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3458\">#3458</a> was born from this project, and now it's approved. I think <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> plans to slice off the rest of <a href=\"https://github.com/leanprover-community/mathlib/tree/freek_83_friendship_theorem\">branch#freek_83_friendship_theorem</a> into PRs; possibly the PRs don't need to depend on each other very much.</p>",
        "id": 207909005,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598311544
    },
    {
        "content": "<p>One of those PRs has already been PR'd, the one on adjacency matrices <a href=\"https://github.com/leanprover-community/mathlib/issues/3672\">#3672</a></p>",
        "id": 207909194,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598311701
    },
    {
        "content": "<p>sorry I don't see a PR on <a href=\"https://github.com/leanprover-community/mathlib/issues/3672\">#3672</a>. did you mean to say \"approved\"?</p>",
        "id": 207909273,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598311767
    },
    {
        "content": "<p>To save you a little work: <code>mul_val</code> is now known as <code>mul_apply</code> in the newest mathlib</p>",
        "id": 207909276,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598311769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/252551-graph-theory/topic/freek.2083/near/207909273\">said</a>:</p>\n<blockquote>\n<p>sorry I don't see a PR on <a href=\"https://github.com/leanprover-community/mathlib/issues/3672\">#3672</a>. did you mean to say \"approved\"?</p>\n</blockquote>\n<p>I just mean that I've created the PR.</p>",
        "id": 207909356,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598311810
    },
    {
        "content": "<p>got it. a PR is just a branch of mathlib + a request to merge that branch into master. Someone who doesn't have push access to branches of mathlib could hypothetically open a pull request to merge stuff into an open PR, the same way that you can push stuff to the PR branch.</p>",
        "id": 207909549,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598311928
    },
    {
        "content": "<p>and this PRing a PR is not just hypothetical, sometime this summer a new contributor opened a PR on a PR, thinking it was a PR to master, then we ended up in a state where both PRs were reviewed and marked as approved, but neither of them got merged into master</p>",
        "id": 207909587,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598311976
    },
    {
        "content": "<p>I was surprised GitHub does PRs based on a branch rather than a commit.  It makes some sense, because it makes it easier to incorporate code review changes, but, still, it causes problems like what you describe.</p>",
        "id": 207909706,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598312056
    },
    {
        "content": "<p>IIRC the remaining work breaks into (adjacency matrix PR) and (friendship proof + like 2 linear algebra lemmas PR)</p>",
        "id": 207910682,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598312988
    },
    {
        "content": "<p>maybe that second one is too big, but I don't remember any sensible ways to break it up</p>",
        "id": 207910741,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598313012
    },
    {
        "content": "<p>Check out <a href=\"https://github.com/leanprover-community/mathlib/tree/friendship_final\">branch#friendship_final</a></p>",
        "id": 208166290,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598488058
    },
    {
        "content": "<p>I've placed the prerequisites around the library. Feel free to give me comments here, or edit or golf.</p>",
        "id": 208166422,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598488165
    },
    {
        "content": "<p>I'm going to PR all the prereqs not in the one archive file separately first</p>",
        "id": 208166752,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598488468
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3953\">#3953</a></p>",
        "id": 208167214,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598488978
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302826\">Aaron Anderson</span> <a href=\"#narrow/stream/252551-graph-theory/topic/freek.2083/near/208166290\">said</a>:</p>\n<blockquote>\n<p>Check out <a href=\"https://github.com/leanprover-community/mathlib/tree/friendship_final\">branch#friendship_final</a></p>\n</blockquote>\n<p>are we ready to delete the freek_83_friendship_theorem branch?</p>",
        "id": 208167899,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598489605
    },
    {
        "content": "<p>I think thereâ€™s extra stuff on there, like a slightly different approach to adjacency matrix generalization.</p>",
        "id": 208168079,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598489790
    },
    {
        "content": "<p>I should double-check that everything I want is backed up and get back to you tonight.</p>",
        "id": 208168113,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598489848
    },
    {
        "content": "<p>No rush. Now that I think of it, I have an old mathlib branch (I had worked just a bit on freek 73 before Bhavik PRed it) to garbage-collect.</p>",
        "id": 208168279,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598490029
    },
    {
        "content": "<p>You can delete it now.</p>",
        "id": 208174723,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598498312
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/friendship_final\">branch#friendship_final</a> builds, although it'll stay unlinted until I merge the prereqs branch back in</p>",
        "id": 208174740,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598498347
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302826\">Aaron Anderson</span> <a href=\"#narrow/stream/252551-graph-theory/topic/freek.2083/near/208166422\">said</a>:</p>\n<blockquote>\n<p>Feel free to give me comments here, or edit or golf.</p>\n</blockquote>\n<p>I've pushed a few commits for the friendship lemma. It changes some definitions, splits off a lemma or two, and adds some documentation.  (If any of the changes aren't welcome, feel free to revert.)</p>",
        "id": 208181988,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1598509822
    },
    {
        "content": "<p>That all looks good to me, but I should probably review it again tomorrow.</p>",
        "id": 208184708,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598512681
    },
    {
        "content": "<p>Thanks for your help!</p>",
        "id": 208184747,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598512687
    },
    {
        "content": "<p>The prereqs PR hasn't been merged yet, but it's far enough along that I'm comfortable creating <a href=\"https://github.com/leanprover-community/mathlib/issues/3970\">#3970</a></p>",
        "id": 208412022,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598667407
    },
    {
        "content": "<p>ah, the diff looks very beefy, but that's just because it has the diff from the unmerged prereqs PR</p>",
        "id": 208435192,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598709387
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3953\">#3953</a> is on the merge queue, and when it merges, there should only be one file in the diff</p>",
        "id": 208444518,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598721812
    },
    {
        "content": "<p>It merged, there is now only one file in the diff</p>",
        "id": 208448562,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1598727396
    }
]