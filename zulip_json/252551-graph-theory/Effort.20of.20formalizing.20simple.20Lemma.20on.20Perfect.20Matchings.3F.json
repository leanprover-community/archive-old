[
    {
        "content": "<p>Hi! Is it possible to estimate the effort/time it would take someone with good Lean experience to formalize certain proofs? I am specifically interested to know how long you guess it would take to formalize a statement on perfect matchings:</p>\n<p>Let's consider (not necessary simple) graphs with only disjoint perfect matchings (i.e. every edge only appears in at most one of the perfect matchings).</p>\n<p>Then, if such a graph has 4 vertices, it can have maximally 3 perfect matchings (K_4 is an example). If it has more than 4 vertices, it can have maximally 2 perfect matchings (C_{2n} is an example).</p>\n<p>The proof seems rather straight forward, see: <a href=\"https://mathoverflow.net/questions/267002/graphs-with-only-disjoint-perfect-matchings\">https://mathoverflow.net/questions/267002/graphs-with-only-disjoint-perfect-matchings</a>)</p>\n<p>Could you give a rough estimation how time it would take an good lean user (for example, one of Kevin's trained undergrads) to formalize the proof of this statement? Thanks a lot, and thanks for your exciting works :)<br>\n(i mentioned this statement before, <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> actually started to formalize the statement: <a href=\"#narrow/stream/252551-graph-theory/topic/matchings/near/243576742\">https://leanprover.zulipchat.com/#narrow/stream/252551-graph-theory/topic/matchings/near/243576742</a>)</p>",
        "id": 258645569,
        "sender_full_name": "Mario Krenn",
        "timestamp": 1634867256
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/8737\">#8737</a> has things like paths, cycles, and hamiltonian cycles. It also has things for splitting paths and cycles.  There isn't anything relating matchings and cycles yet, though.</p>\n<p>It seems plausible to me that the theorem could be formalized within a few weeks. (It also seems plausible that there are people that can do it within a couple days.)</p>",
        "id": 258649045,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1634868817
    },
    {
        "content": "<p>Manipulating these fragments of paths seems like it could be rather tedious, or at least a simpler manipulation was in my attempt at <a href=\"https://github.com/leanprover-community/mathlib/blob/bfb9031b95ea56669f50bdef829e238944eae693/src/combinatorics/simple_graph/connectivity.lean#L1100\">this lemma</a> (see also its supporting lemma immediately above it)</p>",
        "id": 258650451,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1634869102
    },
    {
        "content": "<p>The result itself doesn't sound too hard, but we're missing a shear amount of graph theory basics.</p>",
        "id": 258670092,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634885054
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> When you mention that graph theory basics are missing, are you meaning things that would cause trouble for proving this theorem about disjoint perfect matchings? or is it just a general comment?</p>\n<p>I could be wrong, but it seems like the basics for it are more or less there (if not merged yet...), and the theorem would be at most another <a href=\"https://github.com/leanprover-community/mathlib/issues/8737\">#8737</a>, though probably more like half as much (while trying to use the project to generate more general library code).</p>",
        "id": 258671496,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1634886121
    },
    {
        "content": "<p>I meant unmerged <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> It will still take some time before your marvelous branch hits master.</p>",
        "id": 258671582,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634886180
    }
]