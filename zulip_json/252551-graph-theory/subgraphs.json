[
    {
        "content": "<p>After chatting a bit with <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> , we think that a main bottleneck is in getting a good definition of subgraph. Kyle has a good understanding of how submonoids work, (after the recent refactor led by uh kevin and scott?) and we'd like to get the behavior of subgraphs to be as similar as we can.</p>",
        "id": 207214904,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597713439
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"322118\">@Michael Hahn</span> has some <code>sorry</code>s where the right hting to do is apply subgraph induction and then do some simple manipulations with subgraphs.</p>",
        "id": 207214976,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597713541
    },
    {
        "content": "<p>My attempt to specify the right lemmas for the induction principle is here <a href=\"https://github.com/apurvnakade/mc2020-projects/blob/master/src/michael/graph_induction.lean\">https://github.com/apurvnakade/mc2020-projects/blob/master/src/michael/graph_induction.lean</a><br>\nand the rest of michael's graphs code is in the same folder in that repo.</p>",
        "id": 207215143,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597713762
    },
    {
        "content": "<p>A particularly frustrating thing is this sorry,</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">card_edges_erase</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"bp\">.</span><span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">G</span><span class=\"bp\">.</span><span class=\"n\">erase</span> <span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">card_edges</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">G</span><span class=\"bp\">.</span><span class=\"n\">card_edges</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>which I referenced earlier as being a thing that's annoying with card_edges.</p>",
        "id": 207215229,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597713871
    }
]