[
    {
        "content": "<p>As we're developing our API for graphs, we want to keep problems in mind that we can aim for.</p>",
        "id": 218626856,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606946817
    },
    {
        "content": "<p>I think it'd be useful to list these problems here.</p>",
        "id": 218626929,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606946873
    },
    {
        "content": "<p>We've finished the Friendship Theorem</p>",
        "id": 218627040,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606946904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"303889\">@Alena Gusakov</span> seems to be moving toward Hall's Marriage Theorem and Tutte polynomials</p>",
        "id": 218627063,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606946925
    },
    {
        "content": "<p>There's been some work towards Konigsberg, but paths are surprisingly hard to define well</p>",
        "id": 218627098,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606946952
    },
    {
        "content": "<p>I have some specific benchmarks for Tutte polynomials, should I list them here?</p>",
        "id": 218627099,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1606946952
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"303889\">Alena Gusakov</span> <a href=\"#narrow/stream/252551-graph-theory/topic/Applications/near/218627099\">said</a>:</p>\n<blockquote>\n<p>I have some specific benchmarks for Tutte polynomials, should I list them here?</p>\n</blockquote>\n<p>Yeah</p>",
        "id": 218627123,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606946963
    },
    {
        "content": "<p>I also have a student who's working towards the adjacency matrix formula for counting walks. Walks seem easier than paths to deal with, but he's also just starting learning Lean, so it'll take some time.</p>",
        "id": 218627392,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606947049
    },
    {
        "content": "<p>Chromatic/Tutte polynomials:</p>\n<ul>\n<li><strong>Whitney Broken Circuit Theorem:</strong> Definition of the chromatic polynomial and Stirling numbers (!!), prove that the chromatic polynomial satisfies the deletion-contraction recurrence, prove that Stirling numbers allow for a “change of basis” from the standard basis to the basis of falling factorials (associated with two different ways of counting), and prove that the coefficients of the chromatic polynomial correspond to various properties of the graph. (This is where quotient types in Lean become useful - one concept associated with the chromatic polynomial is chromatic equivalence)</li>\n<li><strong>Tutte polynomial:</strong> Define, demonstrate that it is a generalization of the chromatic polynomial. Specialize the Tutte polynomial to other useful polynomials, such as the Reliability Polynomial (used for networks) and the Jones polynomial (used in knot theory). Formalize a proof of the Universality Property of the Tutte polynomial, which states that any graph invariant that is multiplicative on disjoint unions and one-point joins of graphs and that satisfies the deletion-contraction recurrence must be an evaluation of the Tutte polynomial.</li>\n</ul>",
        "id": 218627533,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1606947106
    },
    {
        "content": "<p>It'd be nice to prove some things about chromatic numbers. Some results there will fall out of the chromatic polynomial, but some results will need a different approach. Many of the obvious candidates (5-color theorem) require a definition of planar graph, which I expect will be tricky.</p>",
        "id": 218627746,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606947205
    },
    {
        "content": "<p>For planar graphs, what I had in mind was defining combinatorial maps, and then say a planar graph is the skeleton of a genus-0 combinatorial map.  I have code for them somewhere (including duals and such).</p>",
        "id": 218627897,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606947286
    },
    {
        "content": "<p>You can get the 5-color theorem using a certain exceptional relation that arises from the chromatic polynomial at n=5, but you don't need the polynomial itself for that.</p>",
        "id": 218627996,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606947341
    },
    {
        "content": "<p>One thing that's definitely easy: The Handshake Lemma (the sum of the degrees is twice the number of edges). I know Kyle has proved this somewhere, but I'd kind of like to see a proof using incidence matrices.</p>",
        "id": 218628105,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606947390
    },
    {
        "content": "<p>The degree-sum formula is in <code>simple_graphs2</code> using a combinatorial argument (that still has room for improvement, iirc).  (I think the Handshake lemma is specifically the degree-sum formula mod 2?)</p>",
        "id": 218628263,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606947484
    },
    {
        "content": "<p>A comment about Tutte polynomials: they're more naturally defined for multigraphs, so those need development.   For one version of it, we need to be able to sum over spanning subgraphs of the monomials <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>u</mi><mi>E</mi></msup><msup><mi>v</mi><mi>c</mi></msup></mrow><annotation encoding=\"application/x-tex\">u^Ev^c</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span></span></span></span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> is the number of edges and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> is the number of connected components of the subgraph.  If you want to do something like the dichromatic polynomial directly, then you'll need to be able to calculate the nullity of a subgraph, which is the rank of the first homology, i.e. the nullity of a signed incidence matrix.</p>",
        "id": 218628946,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606947902
    },
    {
        "content": "<p>Tutte polynomials should probably be done at the level of matroids, but I'm not sure if we should wait for those.</p>",
        "id": 218629028,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606947954
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> I think there are some reasons to do Tutte polynomials for graphs directly.  The chromatic polynomial, for example, isn't an invariant of the graphic matroid unless the graph is connected, I think.</p>",
        "id": 218629550,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606948211
    },
    {
        "content": "<p>Stuff that feels like it should be easy, but probably needs some more basic definitions: the number of edges in an acyclic graph is the number of vertices minus the number of components</p>",
        "id": 218629710,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606948313
    },
    {
        "content": "<p>There are lots of manipulations you can do if you just define it to be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>G</mi></msub><mo stretchy=\"false\">(</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>S</mi><mo>⊆</mo><mi>G</mi></mrow></msub><msup><mi>u</mi><mrow><msub><mi>b</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mi>v</mi><mrow><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">Q_G(u,v)=\\sum_{S\\subseteq G}u^{b_0(S)}v^{b_1(S)}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.282889em;vertical-align:-0.39488900000000005em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mrel mtight\">⊆</span><span class=\"mord mathnormal mtight\">G</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39488900000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>, where the sum is over spanning subgraphs, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">rk</mi><mo>⁡</mo><msub><mi>H</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">b_i(S)=\\operatorname{rk}H_i(S)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">k</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span> is the Betti number.  Euler characteristic is a very useful identity for manipulations: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">∣</mo><mi>V</mi><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">∣</mo><mo>−</mo><mo stretchy=\"false\">∣</mo><mi>E</mi><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">∣</mo><mo>=</mo><msub><mi>b</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\lvert V(G)\\rvert-\\lvert E(G)\\rvert=b_0(G)-b_1(G)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mclose\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mclose\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 218629788,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606948343
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302826\">Aaron Anderson</span> <a href=\"#narrow/stream/252551-graph-theory/topic/Applications/near/218629710\">said</a>:</p>\n<blockquote>\n<p>Stuff that feels like it should be easy, but probably needs some more basic definitions: the number of edges in an acyclic graph is the number of vertices minus the number of components</p>\n</blockquote>\n<p>If we prove the Euler characteristic formula above and that a graph is acyclic iff <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">b_1(G)=0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>, then we'd get this.</p>",
        "id": 218630032,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606948475
    },
    {
        "content": "<p>(We'd also need that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">b_0(G)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span> is the number of components.)</p>",
        "id": 218630097,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606948532
    },
    {
        "content": "<p><del>Connected components will require paths too. Is there a plan for paths yet?</del> (whoops, I'd better review my definitions...)</p>",
        "id": 218630901,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606949020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/252551-graph-theory/topic/Applications/near/218630901\">said</a>:</p>\n<blockquote>\n<p>Connected components will require paths too. Is there a plan for paths yet?</p>\n</blockquote>\n<p>They will not require paths. They'll either need walks (like paths but without the troublesome injectivity assumption) or just a connectedness relation which is the transitive closure of the adjacency relation.</p>",
        "id": 218631182,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606949173
    },
    {
        "content": "<p>Oh also, I want to do vertex/edge connectivity at some point and Menger's theorem</p>",
        "id": 218631678,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1606949488
    },
    {
        "content": "<p><code>simple_graphs2</code> has some code for walks in combinatorics/simple_graph/walks.lean, but it's definitely a draft.</p>",
        "id": 218631688,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606949495
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/252551-graph-theory/topic/Applications/near/218630901\">said</a>:</p>\n<blockquote>\n<p>Connected components will require paths too. Is there a plan for paths yet?</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/blob/simple_graphs2/src/combinatorics/simple_graph/walks.lean#L895\">https://github.com/leanprover-community/mathlib/blob/simple_graphs2/src/combinatorics/simple_graph/walks.lean#L895</a></p>\n<p>There are also some sorrys for showing the two definitions Aaron gave are equivalent, as well as that path connectivity and walk connectivity are the same relation.</p>",
        "id": 218632149,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1606949748
    },
    {
        "content": "<blockquote>\n<p>path connectivity and walk connectivity are the same relation.</p>\n</blockquote>\n<p>I spent so much time trying to prove this jesus christ</p>",
        "id": 218635351,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1606951907
    },
    {
        "content": "<p>I'd like to get finite and infinite Ramsey in at some point, but my inclination is that it doesn't necessarily need to be considered here: I found it most convenient for infinite Ramsey to just consider colourings <code>finset N -&gt; K</code> (satisfying certain conditions), then the application to an arbitrary countable <code>simple_graph</code> just involves shifting it to be a graph on N and checking those conditions at r=2 (and for uncountable graphs just picking a countable bit and doing the same)</p>",
        "id": 218688464,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1606999869
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302826\">Aaron Anderson</span> <a href=\"#narrow/stream/252551-graph-theory/topic/Applications/near/218628105\">said</a>:</p>\n<blockquote>\n<p>The Handshake Lemma (the sum of the degrees is twice the number of edges).</p>\n</blockquote>\n<p>I've put a combinatorial proof at <a href=\"https://github.com/leanprover-community/mathlib/blob/degree-sum/src/combinatorics/simple_graph/handshake.lean\">https://github.com/leanprover-community/mathlib/blob/degree-sum/src/combinatorics/simple_graph/handshake.lean</a> along with some <code>sorry</code>ied corollaries, if anyone wants to finish it up and create a PR. This branch is based on <a href=\"https://github.com/leanprover-community/mathlib/issues/5191\">#5191</a>, so it will need to be rebased once that is merged.</p>\n<p>The argument is basically equivalent to the proof that in an undirected incidence matrix, the row sums are degrees and column sums are all 2.  It just introduces a combinatorial object, called a dart, with one per 1 in the matrix.</p>",
        "id": 218987365,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1607261901
    },
    {
        "content": "<p>The Matrix Tree Theorem would be good.</p>",
        "id": 219030261,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1607298145
    }
]