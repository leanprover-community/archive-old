[
    {
        "content": "<p>Now that we have two PRs talking about triangles (<a href=\"https://github.com/leanprover-community/mathlib/pull/12988\">#12988</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/13758\">#13758</a>), how should we name the files? I'm happy to go with <code>.triangle.free_far</code> and <code>triangle.free</code>.</p>",
        "id": 280684028,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651263973
    },
    {
        "content": "<p>I had been planning on putting the main content of <a href=\"https://github.com/leanprover-community/mathlib/pull/13758\">#13758</a> into combinatorics/simple_graph/triangle/basic.lean once <a href=\"https://github.com/leanprover-community/mathlib/pull/12988\">#12988</a> was merged, but I hadn't really thought about it.</p>\n<p>Do you expect there to be a lot more general theory about triangles?</p>",
        "id": 280684940,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1651264524
    },
    {
        "content": "<p>Probably I shouldn't opine since I haven't contributed anything yet, but in both cases triangles are just a special case: Saying \"G is \\eps-far from being H-free\" is an useful thing for any H, removal lemmas are useful for any fixed sugraph H and extremal numbers make sense for any H. To prepare for a future where all of these things are proved in more generality, theorems could be structured the other way around (<code>combinatorics.extremal.triangle</code>, <code>combinatorics.removal.triangle</code> and so on).</p>",
        "id": 280684965,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1651264544
    },
    {
        "content": "<p>If people want to do everything for triangles first (sounds like a good idea), stability and \"supersaturation\" for triangles would certainly be interesting.</p>",
        "id": 280685184,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1651264663
    },
    {
        "content": "<p>Yes, this is why I am against generalizing triangle-free-far to clique-free-far. For now, because we only have <code>combinatorics.simple_graph</code> (which we could maybe shorten to <code>combinatorics.graph</code>?) anyway, it doesn't make much sense to separate further but I agree.</p>",
        "id": 280685187,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651264664
    },
    {
        "content": "<p>When I first opened <a href=\"https://github.com/leanprover-community/mathlib/pull/12988\">#12988</a>, it contained a definition of triangles and the finset of triangles. This really was basic. But those are now about cliques so it doesn't really make sense anymore.</p>",
        "id": 280685405,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651264760
    },
    {
        "content": "<p>For now I suggest</p>\n<ul>\n<li><code>combinatorics.simple_graph.triangle.free</code></li>\n<li><code>combinatorics.simple_graph.triangle.free_far</code></li>\n<li><code>combinatorics.simple_graph.triangle.counting</code></li>\n<li><code>combinatorics.simple_graph.triangle.removal</code></li>\n</ul>",
        "id": 280685469,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651264796
    }
]