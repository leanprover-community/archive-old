[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>, are you happy with this definition of cliques, or do you want them to be images of graph embeddings or something similar?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- A `n`-clique in a graph is a set of `n` vertices which are pairwise connected. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">is_n_clique</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">s.card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">pairwise</span> <span class=\"n\">G.adj</span>\n</code></pre></div>",
        "id": 260999155,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636555415
    },
    {
        "content": "<p>Does it make sense to use <code>complete_graph</code> to define cliques?</p>",
        "id": 261000518,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1636555928
    },
    {
        "content": "<p>That was my question, because they are embeddings of complete graphs.</p>",
        "id": 261002269,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636556622
    },
    {
        "content": "<p>I know you didn't ask me but I'm practicing my Lean reasoning <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\nMaybe it's good to characterize cliques as you're proposing and then prove that <code>complete_graph</code>s are cliques</p>",
        "id": 261004871,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1636557742
    },
    {
        "content": "<p>That seems like a reasonably straightforward definition, though another option is to say that a subgraph is a clique:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">is_complete</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">simple_graph</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">set.univ.pairwise</span> <span class=\"n\">G.adj</span>\n<span class=\"kd\">def</span> <span class=\"n\">subgraph.is_clique</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">simple_graph</span> <span class=\"n\">V</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">G'</span> <span class=\"o\">:</span> <span class=\"n\">G.subgraph</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">G'.coe.is_complete</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">subgraph.is_clique_prop</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">simple_graph</span> <span class=\"n\">V</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">G'</span> <span class=\"o\">:</span> <span class=\"n\">G.subgraph</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">G'.verts.pairwise</span> <span class=\"n\">G'.adj</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I guess a question is <em>what</em> is a clique? Is it the vertex set like in your definition, or is it important that it's a subgraph?  (Can this difference matter for multigraphs?)</p>",
        "id": 261015425,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636561931
    },
    {
        "content": "<p>I just took a look at the literature, and this is even more of a mess than I remembered! Both Bollobás and Harary define it as a maximal complete subgraph (I found the \"maximal\" part very surprising!), while Bondy--Murty defines it as a vertex set inducing a complete subgraph. So none of them define it the way I expected it to! Diestel just avoids using the word \"clique\" altogether, except in the context of \"clique number\".</p>",
        "id": 261017337,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1636562740
    },
    {
        "content": "<p>Interesting.  It seems like it would be good having cliques and maximal cliques distinguished (the set of all cliques, including non-maximal ones, forms a simplicial complex, which seems like interesting structure to have around).</p>",
        "id": 261020398,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636563860
    },
    {
        "content": "<p>Though it does seem common to have a clique be, specifically, the subset of vertices, and not the subgraph.</p>",
        "id": 261020849,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636564052
    },
    {
        "content": "<p>So, should I PR the above definition and call it a day?</p>",
        "id": 261021066,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636564151
    },
    {
        "content": "<p>Do cliques have to be finite subsets though?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">simple_graph.is_clique</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">simple_graph</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">W.pairwise</span> <span class=\"n\">G.adj</span>\n</code></pre></div>",
        "id": 261021112,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636564187
    },
    {
        "content": "<p>No, but with your definition I can't say that something is a triangle.</p>",
        "id": 261021329,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636564274
    },
    {
        "content": "<p>It might also be nice if this were a set</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">simple_graph.cliques</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">simple_graph</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">W</span> <span class=\"bp\">|</span> <span class=\"n\">W.pairwise</span> <span class=\"n\">G.adj</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>since then it has a lattice structure, and talking about maximality is easier.</p>",
        "id": 261021437,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636564320
    },
    {
        "content": "<p>My goal is to be able to say that something is a triangle.</p>",
        "id": 261021562,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636564370
    },
    {
        "content": "<p>Maybe this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">simple_graph.is_triangle</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">simple_graph</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"n\">W.card</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">/\\</span> <span class=\"o\">(</span><span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">\\</span><span class=\"k\">in</span> <span class=\"n\">G.cliques</span>\n</code></pre></div>",
        "id": 261021738,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636564446
    },
    {
        "content": "<p>If you want, you can make <code>is_triangle</code> be <code>is_n_clique</code> and generalize <code>3</code></p>",
        "id": 261021808,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636564490
    },
    {
        "content": "<p>So, in short, use your original definition but factoring out this <code>cliques</code> set would be nice</p>",
        "id": 261021896,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636564525
    },
    {
        "content": "<p>If we have a way to characterize <code>n</code>-cliques we will be able to prove lower bounds of <code>n</code> for the chromatic number</p>",
        "id": 261022148,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1636564622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> The general version is something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">G.proper_coloring</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">W</span> <span class=\"bp\">∈</span> <span class=\"n\">G.cliques</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">function.injective</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">∘</span> <span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">W</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>and then you can use this when things are finite to show that <code>W.card &lt;= card α</code> and then bound the chromatic number.</p>",
        "id": 261023419,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636565132
    }
]