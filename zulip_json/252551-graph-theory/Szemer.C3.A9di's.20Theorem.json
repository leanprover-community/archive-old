[
    {
        "content": "<p>Bhavik and I are gonna formalise Szemerédi's Theorem over the summer. Wish us luck!</p>",
        "id": 239293330,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1621358882
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span>, we're currently working on Szemerédi' Regularity Lemma <a href=\"https://github.com/leanprover-community/mathlib/blob/szemeredi/src/combinatorics/szemeredi/regularity_lemma.lean\">here</a>. There's not much to do at the moment as Bhavik is carrying the main induction and it's a bit one-goaled, but if you're still interested you can try to understand Gowers' proofs for when we actually start on it.</p>",
        "id": 242531478,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623619567
    },
    {
        "content": "<p>Great! Thanks for letting me know and sorry for taking so long to reply. I was super busy (my deadline got extended by a few days) but now I have more free time. I will study Gowers' proof, hopefully I'll be able to help :)</p>",
        "id": 243597460,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1624410750
    },
    {
        "content": "<p>We have a bunch of constructions on <code>simple_graph</code> like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">is_uniform</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"n\">U'</span><span class=\"o\">,</span> <span class=\"n\">U'</span> <span class=\"bp\">⊆</span> <span class=\"n\">U</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">W'</span><span class=\"o\">,</span> <span class=\"n\">W'</span> <span class=\"bp\">⊆</span> <span class=\"n\">W</span> <span class=\"bp\">→</span> <span class=\"n\">ε</span> <span class=\"bp\">*</span> <span class=\"n\">U.card</span> <span class=\"bp\">≤</span> <span class=\"n\">U'.card</span> <span class=\"bp\">→</span> <span class=\"n\">ε</span> <span class=\"bp\">*</span> <span class=\"n\">W.card</span> <span class=\"bp\">≤</span> <span class=\"n\">W'.card</span> <span class=\"bp\">→</span>\n<span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">edge_density</span> <span class=\"n\">G</span> <span class=\"n\">U'</span> <span class=\"n\">W'</span> <span class=\"bp\">-</span> <span class=\"n\">edge_density</span> <span class=\"n\">G</span> <span class=\"n\">U</span> <span class=\"n\">W</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span>\n</code></pre></div>\n<p>Do you want me to PR them?</p>",
        "id": 245535530,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1625902192
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/252551-graph-theory/topic/Szemer.C3.A9di's.20Theorem/near/245535530\">said</a>:</p>\n<blockquote>\n<p>Do you want me to PR them?</p>\n</blockquote>\n<p>I think a good rule of thumb is that if formalized definitions have been tested by (partially) formalizing something else, then yes!  I assume you have some sense of whether this works well for your application.</p>",
        "id": 245568471,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1625947604
    },
    {
        "content": "<p>I think this definition is somewhat special to Szemeredi's regularity lemma and quasi-random properties of graphs, so probably should go in a new file (which probably will eventually contain the proof of SRL)</p>",
        "id": 245568554,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1625947748
    }
]