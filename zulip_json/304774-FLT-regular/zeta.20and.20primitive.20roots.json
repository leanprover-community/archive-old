[
    {
        "content": "<p>I've just realized that theorem like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_cyclotomic_extension.norm_zeta_sub_one_eq_eval_cyclotomic\">docs#is_cyclotomic_extension.norm_zeta_sub_one_eq_eval_cyclotomic</a> are not good enough. It is stated for <code>zeta</code>, but of course it works for any primitive root of unity, for the very good reason that <code>zeta</code> is any such a root. But in Lean this choice is done once and for all, so it's not exactly the same.</p>\n<p>Having <code>zeta</code> is in any case useful when we want to pick one root, but we should prove the results in general and then specialize to <code>zeta</code> (essentially the same proof should work). Just another annoying aspect of formalization <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 270585686,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1643909023
    },
    {
        "content": "<p>Same deal as between <a href=\"https://leanprover-community.github.io/mathlib_docs/find/localization\">docs#localization</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_localization\">docs#is_localization</a>, I assume?</p>",
        "id": 270585897,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643909088
    },
    {
        "content": "<p>yes, I realised this for a couple of results -- note that the original Galois group aut is about primitive roots, and even the fact that 1 - ζ^k is associated to 1 - ζ^n. It does make the results a lot easier to use, especially when you need to juggle the 50 different versions of ζ (half of the Galois proof is juggling whether I want just the normal ζ, or the root-of-unity coe because you can do group things in there...)</p>",
        "id": 270586226,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643909189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  Not exactly, here <code>zeta</code> is an element produced by <code>classical.some</code>, so in some sense things are less serious. The only problem is that for a mathematician <code>classical.some</code> means \"for all <code>x</code> such that\", but Lean choose one element once and for all.</p>",
        "id": 270586474,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1643909273
    },
    {
        "content": "<p>Ah I see!</p>",
        "id": 270586595,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643909299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> Maybe we can avoid to multiply the efforts using you Galois stuff: for example I want to prove that <code>norm K (ζ - 1) = p</code>, and we already know this for <code>ζ = zeta</code>. Know, <code>ζ - 1</code> and <code>zeta - 1</code> are Galois conjugate by what you proved, and the norm of conjugates elements is the same (something not difficult and worth to have in any case). We can probably do the same for all the results we need.</p>",
        "id": 270587930,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1643909801
    },
    {
        "content": "<p>(Speaking of <code>classical.some</code>, the fact that the axiom of choice means that the choice is done once and for all, \"at the platonic level\", is something that really blows my mind and makes me suspicious about it, much more than Banach-Tarski.)</p>",
        "id": 270588483,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1643910020
    },
    {
        "content": "<p>(Look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.extend\">docs#function.extend</a>, it's crazy we can reason about <code>extend f g e'</code> for a non injective <code>f</code>. I mean, there is <em>one and only one</em>  <code>extend f g e'</code>!)</p>",
        "id": 270588813,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1643910153
    }
]