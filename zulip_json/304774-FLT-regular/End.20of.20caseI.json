[
    {
        "content": "<p>We are very close to finish caseI, but the end of the proof may be quite painful to formalize, so let me resume the situation to see if anyone has any idea to simplify the proof. This is purely a Lean question, mathematically there is almost nothing to prove.</p>\n<p>The situation is the following: we have a prime <code>p</code> such that <code>p ≥ 5</code>, <code>a b c : ℤ</code> such that <code>¬ p ∣ a * b * c</code>, <code>¬a ≡ b [ZMOD p]</code> and <code>is_unit (({a, b, c} : finset ℤ).gcd id)</code>. We suppose that <code>a * b * c ≠ 0</code> and we want to prove <code>a ^ p + b ^ p ≠ c ^ p</code>. The precise Lean statement is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">caseI_easier</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hpri</span> <span class=\"o\">:</span> <span class=\"n\">p.prime</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hreg</span> <span class=\"o\">:</span> <span class=\"n\">is_regular_number</span> <span class=\"n\">p</span> <span class=\"n\">hpri.pos</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp5</span> <span class=\"o\">:</span> <span class=\"mi\">5</span> <span class=\"bp\">≤</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hprod</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hgcd</span> <span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"o\">(({</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">gcd</span> <span class=\"n\">id</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">a</span> <span class=\"bp\">≡</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">ZMOD</span> <span class=\"n\">p</span><span class=\"o\">])</span> <span class=\"o\">(</span><span class=\"n\">caseI</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"bp\">↑</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"n\">c</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>(we already know this implies caseI).</p>",
        "id": 303101044,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665301203
    },
    {
        "content": "<p>Now, the math proof is the following: let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ζ</mi></mrow><annotation encoding=\"application/x-tex\">\\zeta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span></span></span></span> be a primitive <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-th root of unity and let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><mi>ζ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}(ζ)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"mclose\">)</span></span></span></span>, with ring of integers <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>. Using the regularity assumption, we can find <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>∈</mo><msup><mi>R</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">u ∈ R^\\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6887em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\in R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mi>ζ</mi><mo>=</mo><mi>u</mi><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">x+y\\zeta=u \\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">uα</span></span></span></span>. This is also formalized (modulo a sorried statement, but this is irrelevant) as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">is_principal</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">ζ</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hreg</span> <span class=\"o\">:</span> <span class=\"n\">is_regular_number</span> <span class=\"n\">p</span> <span class=\"n\">hpri.pos</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp5</span> <span class=\"o\">:</span> <span class=\"mi\">5</span> <span class=\"bp\">≤</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hgcd</span> <span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"o\">(({</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">gcd</span> <span class=\"n\">id</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">caseI</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"bp\">↑</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">^</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hζ</span> <span class=\"o\">:</span> <span class=\"n\">is_primitive_root</span> <span class=\"n\">ζ</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"bp\">ˣ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"bp\">↑</span><span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">^</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">ζ</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">b</span>\n</code></pre></div>",
        "id": 303101214,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665301382
    },
    {
        "content": "<p>Now, this implies that there is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">k \\in \\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mi>ζ</mi><mo>−</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi></mrow></msup><mi>a</mi><mo>−</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mi>b</mi><mo>≡</mo><mn>0</mn><mtext> </mtext><mo lspace=\"0.22em\" rspace=\"0.22em\"><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">a + b\\zeta -\\zeta^{2k}a -\\zeta^{2k-1}b \\equiv 0 \\bmod{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0435em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0435em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.0556em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\"><span class=\"mord\"><span class=\"mord mathrm\">mod</span></span></span><span class=\"mspace\" style=\"margin-right:0.0556em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span></span></span></span></span>. The end of the proof is the following: If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>ζ</mi><mo separator=\"true\">,</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi></mrow></msup><mo separator=\"true\">,</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">1,\\zeta,\\zeta^{2k},\\zeta^{2k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0435em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> are distinct, then this <a href=\"https://leanprover-community.github.io/flt-regular/sect0004.html#lem:dvd_coeff_cycl_integer\">Lemma</a> says that (since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>≥</mo><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">p \\geq 5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5</span></span></span></span>) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>  divides <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>, contrary to our assumption. So they cannot be distinct, but checking each case leads to a contradiction, therefore there cannot be any such solutions.</p>",
        "id": 303101492,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665301611
    },
    {
        "content": "<p>I've formalized the <a href=\"https://leanprover-community.github.io/flt-regular/sect0004.html#lem:dvd_coeff_cycl_integer\">Lemma</a> as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">dvd_coeff_cycl_integer</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prime</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">ζ</span> <span class=\"o\">:</span> <span class=\"n\">L</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hζ</span> <span class=\"o\">:</span> <span class=\"n\">is_primitive_root</span> <span class=\"n\">ζ</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">p</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hdiv</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">j</span> <span class=\"bp\">•</span> <span class=\"o\">(⟨</span><span class=\"n\">ζ</span><span class=\"o\">,</span> <span class=\"n\">hζ.is_integral</span> <span class=\"n\">p.pos</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">𝓞</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">∣</span> <span class=\"n\">f</span> <span class=\"n\">j</span>\n</code></pre></div>",
        "id": 303101626,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665301727
    },
    {
        "content": "<p>And the existence of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">exists_int_sum_eq_zero</span> <span class=\"o\">(</span><span class=\"n\">hpodd</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">fact</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prime</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span><span class=\"o\">}</span>\n  <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">hζ.unit'</span> <span class=\"bp\">^</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"n\">α</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">hζ.unit'</span> <span class=\"bp\">^</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">hζ.unit'</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span><span class=\"o\">)</span> <span class=\"bp\">*</span>\n    <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">hζ.unit'</span> <span class=\"bp\">^</span> <span class=\"bp\">-</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">ˣ</span><span class=\"o\">))</span> <span class=\"bp\">∈</span> <span class=\"n\">ideal.span</span> <span class=\"o\">({</span><span class=\"n\">p</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">𝓞</span> <span class=\"n\">K</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>here <code>hζ.unit'</code> is the primitive root as a unit of the ring of integers (this is necessary to take integer-valued powers).</p>",
        "id": 303101856,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665301941
    },
    {
        "content": "<p>There are several problem to glue these two statements. First of all, in <code>exists_int_sum_eq_zero</code> the exponents are integers, not elements of <code>fin p</code> (it is necessary to go through <code>fin p</code> at some moment, since the proof of <code>dvd_coeff_cycl_integer</code> uses the power basis given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ζ</mi></mrow><annotation encoding=\"application/x-tex\">\\zeta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span></span></span></span>, that is indexed over <code>fin p</code>). Of course we can modify <code>exists_int_sum_eq_zero</code> to use <code>fin p</code> exponents, but and this is what I started doing.</p>",
        "id": 303102046,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665302112
    },
    {
        "content": "<p>Then one has to build <code>f</code> to apply <code>dvd_coeff_cycl_integer</code>, and this is going to be a pain I think. Then we one has to consider the remaining cases (when the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>ζ</mi><mo separator=\"true\">,</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi></mrow></msup><mo separator=\"true\">,</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">1,\\zeta,\\zeta^{2k},\\zeta^{2k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0435em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> are not all distinct), and also this will be a pain I am afraid.</p>",
        "id": 303102151,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665302199
    },
    {
        "content": "<p>My current idea is to avoid <code>dvd_coeff_cycl_integer</code> completely, at least in the form it is stated now and proving that <code>p ∣ a</code> and <code>p ∣ b (leading to a contradiction) by hand, reusing the proof of </code>dvd_coeff_cycl_integer`.</p>",
        "id": 303102408,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665302428
    },
    {
        "content": "<p>In practice, it shouldn't be too hard to prove that <code>p</code> divides the coefficient of <code>1</code> in the  expansion of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mi>ζ</mi><mo>−</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi></mrow></msup><mi>a</mi><mo>−</mo><msup><mi>ζ</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a + b\\zeta -\\zeta^{2k}a -\\zeta^{2k-1}b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0435em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0435em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">b</span></span></span></span>. This coefficients is <code>a</code> unless <code>\\zeta^{2k} = 1</code> or <code>\\zeta^{2k-1}= 1</code> (that is impossible, and this should be proved before). Then proceed similarly for <code>b</code>. There will still be four preliminary thing to prove, but at least we can avoid building <code>f</code>.</p>",
        "id": 303102595,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665302599
    },
    {
        "content": "<p>Sorry for the long message, but if anyone has any better idea I am very happy to listen to any suggestion.</p>",
        "id": 303102613,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665302623
    },
    {
        "content": "<p>(I'm currently bumping, and btw: using linarith to show that p = 2 is not true when p ≥ 5 is super expensive timewise)</p>",
        "id": 303110107,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665307904
    },
    {
        "content": "<p>Ai isn't putting us all out of jobs yet, huh</p>",
        "id": 303110713,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1665308323
    },
    {
        "content": "<p><code>norm_num</code> is fine though</p>",
        "id": 303110745,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665308348
    },
    {
        "content": "<p>I'll try to have some sort of a closer look at this tonight, but I may not get a chance so don't depend on it...</p>",
        "id": 303110956,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665308494
    },
    {
        "content": "<p>Is it because of <code>pnat</code>?</p>",
        "id": 303111267,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665308733
    },
    {
        "content": "<p>I'm not sure, I just know that two statements were taking super long until I removed <code>linarith</code>...</p>",
        "id": 303111394,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665308834
    },
    {
        "content": "<p>i think it's probably not \"obvious\" and the goal states are huge so it often traverses them all in an expensive way until it realises that that's the issue we want</p>",
        "id": 303111609,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665308986
    },
    {
        "content": "<p>on a state with just n, h: n = 2 and hp : 5 ≤ n, it takes ~500ms, which is not terrible</p>",
        "id": 303111687,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665309016
    },
    {
        "content": "<p>Oh really, they were super slow because of <code>linarith</code>?! I wanted to speed them up, but I thought the culprit was <code>convert</code>.</p>",
        "id": 303111812,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665309117
    },
    {
        "content": "<p>So well done!</p>",
        "id": 303111826,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665309122
    },
    {
        "content": "<p>Out of pure curiosity, does <code>linarith only</code> still take 500ms?</p>",
        "id": 303112277,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1665309385
    },
    {
        "content": "<p><code>linarith only</code> is a thing? probably not, then</p>",
        "id": 303112419,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665309474
    },
    {
        "content": "<p>I tried avoiding defining <code>f : fin p → R</code> but it's a pain. I will see tomorrow if defining <code>f</code> on <code>fin p</code> giving the values on <code>0</code>, <code>1</code> and <code>p-1</code> is also painful... in any case I am sure that the end of case I is just a matter of perseverance.</p>",
        "id": 303324136,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665435023
    },
    {
        "content": "<p>I thought about this a bit. Can't you define f to be the sum of \"if x=0 then a else if x=1 then b else 0\" and \"if x=2k then -a else if x=2k-1 then -b else 0\" and then split on whether 2k=0?</p>",
        "id": 303327488,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665437111
    },
    {
        "content": "<p>Yes, that's the idea. I also thought about using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.indicator\">docs#set.indicator</a>. I have to try to see how annoying is to connect the sum over  <code>fin p</code> to the actual sum of four elements and similar things.</p>",
        "id": 303364275,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665467947
    },
    {
        "content": "<p>This approach is definitely better, even if not completely painless. See <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Computation.20of.20an.20explicit.20sum/near/303449967\">here</a> for a precise question.</p>",
        "id": 303456051,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665500087
    },
    {
        "content": "<p>Using <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>'s suggestion everything it's much much better!</p>",
        "id": 303470178,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665504240
    },
    {
        "content": "<p>I've finished the proof of the main statement of caseI.</p>\n<p>This means that the only sorry left is <code>flt_ideals_coprime</code>. <span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span>  what is the situation with this lemma? Do you think we're close to it?</p>",
        "id": 303791304,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665654179
    },
    {
        "content": "<p>Well, it seems we are very close. I am working on the sorry in <code>src/number_theory/cyclotomic/cycl_rat.lean</code></p>",
        "id": 303793535,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665655167
    },
    {
        "content": "<p>We were indeed really close.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">caseI</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hpri</span> <span class=\"o\">:</span> <span class=\"n\">p.prime</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hreg</span> <span class=\"o\">:</span> <span class=\"n\">is_regular_number</span> <span class=\"n\">p</span> <span class=\"n\">hpri.pos</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hodd</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">caseI</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"bp\">↑</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"n\">c</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"n\">flt_regular.caseI.may_assume</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">p₁</span> <span class=\"n\">Hpri</span> <span class=\"n\">Hreg</span> <span class=\"n\">HP5</span> <span class=\"n\">Hunit</span> <span class=\"n\">Hxy</span> <span class=\"n\">HI</span><span class=\"o\">,</span>\n    <span class=\"n\">caseI_easier</span> <span class=\"n\">Hpri</span> <span class=\"n\">Hreg</span> <span class=\"n\">HP5</span> <span class=\"n\">Hunit</span> <span class=\"n\">Hxy</span> <span class=\"n\">HI</span><span class=\"o\">)</span> <span class=\"n\">hpri</span> <span class=\"n\">hreg</span> <span class=\"n\">hodd</span> <span class=\"n\">caseI</span>\n\n<span class=\"k\">#print</span> <span class=\"kd\">axioms</span> <span class=\"n\">caseI</span> <span class=\"c1\">--propext quot.sound classical.choice</span>\n</code></pre></div>",
        "id": 303803905,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665659436
    },
    {
        "content": "<p>It's probably a good idea to do some cleanup and reorganize certain files before starting thinking about caseII. Also, quite a lot of stuff is more or less suitable to be PRed, and I think it's better to do it sooner than later.</p>",
        "id": 303804515,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665659737
    },
    {
        "content": "<p>For example I started using <code>(hpri: p.prime)</code> instead of <code>fact</code> for some reason, but <code>fact</code> is surely better.</p>",
        "id": 303805096,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665659994
    },
    {
        "content": "<p>Is the blueprint updated to say case 1 is done? When there's something I can point to and tweet about I'll tweet about it</p>",
        "id": 303826330,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665665649
    },
    {
        "content": "<p>Yes, the blueprint is updated, and also the <a href=\"https://leanprover-community.github.io/flt-regular/dep_graph_document.html\">dependency graph</a> is (at least for case 1, for case 2 it's still just a very preliminary draft).</p>",
        "id": 303826975,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665665848
    },
    {
        "content": "<p>Why do you assume p odd?</p>",
        "id": 303858624,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665673719
    },
    {
        "content": "<p><code>hreg : is_regular_number p hpri.pos</code> -- you didn't ever define <code>is_regular_prime p</code>? It would read much better!</p>",
        "id": 303858959,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665673805
    },
    {
        "content": "<p>The statement is not optimized at all. As I said we need to improve a lot of stuff. The fact that <code>p</code> is prime should be a <code>fact</code> instance, so it should disappear, it's there because I was lazy. But I can change <code>is_regular_prime</code> quickly, let me do it.</p>",
        "id": 303860406,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665674223
    },
    {
        "content": "<p>Now the statement is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">caseI</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fact</span> <span class=\"n\">p.prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">hreg</span> <span class=\"o\">:</span> <span class=\"n\">is_regular_prime</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hodd</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">caseI</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"bp\">↑</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"n\">c</span> <span class=\"bp\">^</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"n\">flt_regular.caseI.may_assume</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">p₁</span> <span class=\"n\">Hpri</span> <span class=\"n\">Hreg</span> <span class=\"n\">Hp5</span> <span class=\"n\">Hunit</span> <span class=\"n\">Hxy</span> <span class=\"n\">HI</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"kd\">by</span> <span class=\"n\">exactI</span> <span class=\"n\">caseI_easier</span> <span class=\"n\">p₁</span> <span class=\"n\">Hreg</span> <span class=\"n\">Hp5</span> <span class=\"n\">Hunit</span> <span class=\"n\">Hxy</span> <span class=\"n\">HI</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"n\">hreg</span> <span class=\"n\">hodd</span> <span class=\"n\">caseI</span>\n</code></pre></div>\n<p>I am done for today, but anyone who wants to remove <code>hodd</code> is welcome to do so. It should be very easy.</p>",
        "id": 303870772,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665677077
    },
    {
        "content": "<p>Sorry I just saw this now. I think yes we should be really close. The coprime ideal bits shouldn't be hard. I'll try and do some more tomorrow!</p>",
        "id": 303893136,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665683831
    },
    {
        "content": "<p>Oh wait? Did you fill these sorries? I'm on mobile right now and can't check</p>",
        "id": 303893434,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665683942
    },
    {
        "content": "<p>yeah that theorem is sorry-free!</p>",
        "id": 303893937,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665684124
    },
    {
        "content": "<p>Oh great!! Then I won't do that tomorrow:)</p>",
        "id": 303894065,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665684172
    },
    {
        "content": "<p>I'll think more about case ii then</p>",
        "id": 303894124,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665684194
    },
    {
        "content": "<p>I propose to ignore kummer's lemma for now, and prove it for strongly regular primes (or whatever the name we chose)</p>",
        "id": 303894890,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665684457
    },
    {
        "content": "<p>Congratulations to everyone involved!!! <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"beers\" class=\"emoji emoji-1f37b\" role=\"img\" title=\"beers\">:beers:</span></p>",
        "id": 303910946,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665690222
    },
    {
        "content": "<p>[Quoting…]<br>\nYeah I agree, the thing is the proof I've seen also uses that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is regular then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∤</mo><msup><mi>h</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">p \\nmid h^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9925em;vertical-align:-0.2514em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">∤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> is the class number of  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo>+</mo><msubsup><mi>ζ</mi><mi>p</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}(\\zeta_p+\\zeta_p^{-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1972em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.453em;margin-left:-0.0738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> and I think the proof of this also uses CFT (or at least the proof in Washington)</p>",
        "id": 303980831,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665734634
    },
    {
        "content": "<p>But CFT didn't exist in 1847</p>",
        "id": 303981826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665735044
    },
    {
        "content": "<p>True. There are other proofs, but for example for Kummers lemma the other proof I know uses some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-adic regulator and such, which is also quite annoying</p>",
        "id": 303982016,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665735123
    },
    {
        "content": "<p>But I've not yet gone through all the proofs!</p>",
        "id": 303982347,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665735248
    },
    {
        "content": "<p>Why do you need CFT for this statement? If p divides h+ then there's some unram degree p extension of the totally real field which gives you an unram degree p extension of the cyclo field</p>",
        "id": 303983552,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665735857
    },
    {
        "content": "<p>Aah is the point that you need CFT to make the unram extension from the class group</p>",
        "id": 303983638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665735908
    },
    {
        "content": "<p>yes exactly</p>",
        "id": 303983714,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665735940
    },
    {
        "content": "<p>but actually I think I'm wrong about needing CFT. If we use strongly regular prime or whatever, then I think one can prove this without that. but I've not gone through the details yet</p>",
        "id": 303983990,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665736054
    },
    {
        "content": "<p>I think we can follow the notes by Keith Conrad, modulo kummer's lemma the proof seems more or less elementary</p>",
        "id": 303984143,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665736125
    },
    {
        "content": "<p>Hmm you're right, it doesn't even seem to mention <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 303984744,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665736387
    },
    {
        "content": "<p>Of course in 2 years it would be nice to connect regularity to Bernoulli's numbers, so we can prove 5 is regular...</p>",
        "id": 303984855,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665736439
    },
    {
        "content": "<p>In fact, what's in Conrads notes doesn't even need the link to Bernoulli numbers (as I don't think you need them for Kummers lemma).</p>",
        "id": 303990354,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665738474
    },
    {
        "content": "<p>The connection is nice to prove that a given prime is regular</p>",
        "id": 303990552,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665738555
    },
    {
        "content": "<p>At least, it gives a very simple criterion</p>",
        "id": 303990578,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665738570
    },
    {
        "content": "<p>Sure thats true. I just find it weird the Washington seems to have to work a lot harder for case II even using Kummers lemma. In particular those proofs go via this <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> thing</p>",
        "id": 303990756,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665738644
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> can you change the name of <code>aux.lean</code> to something else? Windows doesn't like that name and wont let me pull the updates (or at least thats what I think the problem is (from my googling))</p>",
        "id": 304014811,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665748589
    },
    {
        "content": "<p>Strange error, but no problem</p>",
        "id": 304014896,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665748624
    },
    {
        "content": "<p>windows does let you name files <code>aux.blah</code> apparently...</p>",
        "id": 304014969,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665748652
    },
    {
        "content": "<p>done</p>",
        "id": 304015023,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665748676
    },
    {
        "content": "<p>its <code>aux_lemmas.lean</code></p>",
        "id": 304015043,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665748682
    },
    {
        "content": "<p>I hope it's ok. In any case you can also change it online using github interface I think</p>",
        "id": 304015140,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1665748715
    },
    {
        "content": "<p>that worked! thank you!</p>",
        "id": 304015163,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665748724
    },
    {
        "content": "<p>it's the same thing as <code>con1</code> and stuff I think</p>",
        "id": 304017946,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665749791
    },
    {
        "content": "<p>some really old compatibility nonsense</p>",
        "id": 304017968,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1665749796
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/End.20of.20caseI/near/303980831\">said</a>:</p>\n<blockquote>\n<p>[Quoting…]<br>\nYeah I agree, the thing is the proof I've seen also uses that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is regular then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∤</mo><msup><mi>h</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">p \\nmid h^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9925em;vertical-align:-0.2514em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">∤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> is the class number of  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo>+</mo><msubsup><mi>ζ</mi><mi>p</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}(\\zeta_p+\\zeta_p^{-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1972em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.453em;margin-left:-0.0738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> and I think the proof of this also uses CFT (or at least the proof in Washington)</p>\n</blockquote>\n<p>I think you might be able to use Proposition 1.2.1 from <a href=\"https://sites.math.washington.edu/~greenber/book.pdf\">https://sites.math.washington.edu/~greenber/book.pdf</a><br>\nThe idea is that the composition <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><msub><mi>l</mi><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo>+</mo><msubsup><mi>ζ</mi><mi>p</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">)</mo></mrow></msub><mo>→</mo><mi>C</mi><msub><mi>l</mi><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow></msub><mo>→</mo><mi>C</mi><msub><mi>l</mi><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo>+</mo><msubsup><mi>ζ</mi><mi>p</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">)</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">Cl_{\\mathbb{Q}(\\zeta_p+\\zeta_p^{-1})}\\to Cl_{\\mathbb{Q}(\\zeta_p)}\\to Cl_{\\mathbb{Q}(\\zeta_p+\\zeta_p^{-1})} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1721em;vertical-align:-0.4776em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0197em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">Q</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0738em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:-0.0738em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4249em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4776em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.072em;vertical-align:-0.3775em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0197em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">Q</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0738em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3775em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1721em;vertical-align:-0.4776em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0197em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">Q</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0738em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.214em;margin-left:-0.0738em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4249em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4776em;\"><span></span></span></span></span></span></span></span></span></span> is given by squaring.</p>",
        "id": 304064576,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1665763008
    },
    {
        "content": "<p>So the first map can only kill off powers of 2, but not any factors of p.</p>",
        "id": 304064830,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1665763076
    },
    {
        "content": "<p>Oh that's neat! Looking at Conrad's notes it seems we might not need anything about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> but this is good to know :)</p>",
        "id": 304065266,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1665763187
    }
]