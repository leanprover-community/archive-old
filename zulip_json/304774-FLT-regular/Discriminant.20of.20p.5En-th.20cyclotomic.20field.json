[
    {
        "content": "<p>We now have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_cyclotomic_extension.discr_odd_prime\">docs#is_cyclotomic_extension.discr_odd_prime</a>: the discriminant of the <code>p</code>-th cyclotomic field. If someone is interested, we are also almost done with the discriminant of the <code>p^n</code>-th cyclotomic field (although we don't need it for the project). I think the only missing prerequisite for the main calculation is that if <code>ζ</code> is a <code>k</code>-primitive roof of unity in a <code>k</code>-th cyclotomic extension <code>K/L</code>, than both <code>K(ζ^h)/L</code> and <code>K/K(ζ^h)</code> are cyclotomic of certain order (we maybe only need one of the two, I don't remember the details).</p>",
        "id": 272980479,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1645636766
    },
    {
        "content": "<p>Does someone have a nice formula for the discriminant of the <code>p ^ (k+1)</code>-th cyclotomic field? I mean, that holds in as much cases as possible. Note that:</p>\n<ul>\n<li>if <code>p</code> is odd the discriminant is <code>(-1) ^ ((p - 1) / 2) * p ^ (p ^ k * ((p - 1) * (k + 1) - 1))</code>.</li>\n<li>if <code>p = 2 </code> then it is:<ul>\n<li><code>2 ^ (k * 2 ^ k)</code> if <code>2 ≤ k</code>.</li>\n<li><code>-4</code> if <code>k = 1</code>.</li>\n<li><code>-1</code> if <code>k = 0</code>.</li>\n</ul>\n</li>\n</ul>",
        "id": 279028237,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1649974649
    },
    {
        "content": "<p>Bonus question for <code>p^0</code> <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 279028320,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1649974692
    },
    {
        "content": "<p>The conductor-discriminant formula gives a formula for this (up to sign) which is independent of everything but involves a finite product so is probably no better. For example the reason the disc of Q(zeta_p) is p^(p-2) is that p-2 of the level p Dirichlet chars have conductor p and the other one has conductor 1</p>",
        "id": 279038088,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649982926
    },
    {
        "content": "<p>When p=2, k=0 it's 1 right?</p>\n<p>Wikipedia has one that works for all n &gt; 2 (not necessarily prime power!)<br>\n<a href=\"/user_uploads/3121/XeAUrcvkqET6aovn45nIi7yB/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XeAUrcvkqET6aovn45nIi7yB/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/XeAUrcvkqET6aovn45nIi7yB/image.png\"></a></div>",
        "id": 279041345,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1649986668
    },
    {
        "content": "<p>Let me see if I can end up with a uniform proof. Unfortunately the non prime-power case is really more difficult and I am not going to prove it (in any case one has to prove the prime-power case to prove the general case, so it is not a waste of time).</p>",
        "id": 279053396,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650003821
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13465\">#13465</a></p>",
        "id": 279091850,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650037257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/Discriminant.20of.20p.5En-th.20cyclotomic.20field/near/279053396\">said</a>:</p>\n<blockquote>\n<p>Let me see if I can end up with a uniform proof. Unfortunately the non prime-power case is really more difficult and I am not going to prove it (in any case one has to prove the prime-power case to prove the general case, so it is not a waste of time).</p>\n</blockquote>\n<p>Isn't there a general theorem that you can use: If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> are number fields with coprime discriminants, then:<br>\n(a) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> are linearly disjoint over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>.<br>\n(b) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo>=</mo><msub><mi mathvariant=\"script\">O</mi><mi>K</mi></msub><msub><mi mathvariant=\"script\">O</mi><mi>L</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal O_{KL}=\\mathcal O_K\\mathcal O_L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.<br>\n(c) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Δ</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo>=</mo><msubsup><mi mathvariant=\"normal\">Δ</mi><mi>K</mi><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>:</mo><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">]</mo></mrow></msubsup><msubsup><mi mathvariant=\"normal\">Δ</mi><mi>L</mi><mrow><mo stretchy=\"false\">[</mo><mi>K</mi><mo>:</mo><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">]</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">\\Delta_{KL}=\\Delta_K^{[L:\\mathbb{Q}]}\\Delta_L^{[K:\\mathbb{Q}]}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3383em;vertical-align:-0.2935em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mrel mtight\">:</span><span class=\"mord mathbb mtight\">Q</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mrel mtight\">:</span><span class=\"mord mathbb mtight\">Q</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span></span></span></span>.<br>\nI think this should follow from relative discriminants. In particular, the divisibility <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi mathvariant=\"normal\">Δ</mi><mi>K</mi><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>:</mo><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">]</mo></mrow></msubsup><msubsup><mi mathvariant=\"normal\">Δ</mi><mi>L</mi><mrow><mo stretchy=\"false\">[</mo><mi>K</mi><mo>:</mo><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">]</mo></mrow></msubsup><mo>∣</mo><msub><mi mathvariant=\"normal\">Δ</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\Delta_K^{[L:\\mathbb{Q}]}\\Delta_L^{[K:\\mathbb{Q}]}\\mid\\Delta_{KL}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3383em;vertical-align:-0.2935em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mrel mtight\">:</span><span class=\"mord mathbb mtight\">Q</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mrel mtight\">:</span><span class=\"mord mathbb mtight\">Q</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> should follow from relative discriminants and the coprimality assumption, and the other direction is given by the inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mi>K</mi></msub><msub><mi mathvariant=\"script\">O</mi><mi>L</mi></msub><mo>≤</mo><msub><mi mathvariant=\"script\">O</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal O_K\\mathcal O_L\\leq\\mathcal O_{KL}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 279163951,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1650108969
    },
    {
        "content": "<p>Yes, I mean it is harder in Lean.</p>",
        "id": 279165722,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650111366
    },
    {
        "content": "<p>Do we have any of that in mathlib yet?</p>",
        "id": 279166834,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1650113147
    },
    {
        "content": "<p>The discriminant was introduced for this project, so the answer is probably no. I don't think we have a reasonable way of saying \"linearly disjoints\"</p>",
        "id": 279180955,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650134771
    },
    {
        "content": "<p>We have all this stuff in lattice theory and subfields are a lattice, right?</p>",
        "id": 279183020,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650138051
    },
    {
        "content": "<p>Linearly disjoint means something stronger than disjoint, I think. But I think it's parts (b) and (c) of the theorem that are more relevant here.</p>",
        "id": 279186496,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1650143866
    },
    {
        "content": "<p>I just realized that, since <code>1 / 2 = 0</code>, the formula</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">Δ</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">totient</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>where <code>Δ</code> is the discriminant of a <code>p ^ (k + 1)</code>-th cyclotomic extension, holds also if <code>p = 2</code> and <code>k = 0</code> <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 279695519,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650554799
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13585\">#13585</a><br>\nThe ring of integers is finally PRed.</p>",
        "id": 279728669,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650569686
    },
    {
        "content": "<p>This was the first milestone. I will try next week to make a reasonable plan for the near future.</p>",
        "id": 279729754,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650570156
    },
    {
        "content": "<p>I had a bike accident and I still have to find out a confortable position to work, so I am not thinking about this at the moment, but I hope I will be able to use a computer soon</p>",
        "id": 280055468,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1650886456
    },
    {
        "content": "<p>Hope you're doing okay!</p>",
        "id": 280055599,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650886540
    },
    {
        "content": "<p>Oh man that sucks! Hope you're ok!</p>",
        "id": 280056005,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1650886752
    },
    {
        "content": "<p>Hope you recover soon!</p>",
        "id": 280056297,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1650886901
    },
    {
        "content": "<p>Oh my, get well soon!!</p>",
        "id": 280056402,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1650886963
    }
]