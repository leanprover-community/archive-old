[
    {
        "content": "<p>We currently have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_cyclotomic_extension</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n\n<span class=\"kn\">include</span> <span class=\"n\">K</span> <span class=\"n\">n</span>\n<span class=\"kd\">def</span> <span class=\"n\">zeta'</span> <span class=\"o\">:</span> <span class=\"n\">L</span> <span class=\"o\">:=</span>\n<span class=\"n\">classical.some</span> <span class=\"o\">(</span><span class=\"n\">exists_root_of_splits</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">is_splitting_field.splits</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">degree_cyclotomic_pos</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">n.pos</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ne.symm</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Before working on the various <code>sorry</code>, we need to generalize the defintion to <code>A B...</code>.</p>",
        "id": 259397044,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635431454
    },
    {
        "content": "<p>I've started doing this in branch <code>cycl_units_ring</code> (I just wrote the new def). If someone wants to write some code I won't work on this until tomorrow morning.</p>",
        "id": 259405068,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635434571
    },
    {
        "content": "<p>I just have a side-remark: do you really want to call them \"cyclotomic units\"? They are roots of unit, rather, I think. The cyclotomic units are normally meant to be the elements in the subgroup generated by the ratios</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><msub><mi>ζ</mi><msup><mi>p</mi><mi>n</mi></msup></msub><mo>−</mo><mn>1</mn></mrow><mrow><msubsup><mi>ζ</mi><msup><mi>p</mi><mi>n</mi></msup><mi>a</mi></msubsup><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\zeta_{p^n}-1}{\\zeta_{p^n}^a-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4242280000000003em;vertical-align:-1.052788em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.646192em;\"><span style=\"top:-2.4693200000000006em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0448000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3667879999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26548em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.052788em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>for varying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> (the definition when the order is not a power of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is slightly different), see<br>\n<a href=\"https://en.wikipedia.org/wiki/Cyclotomic_unit\">https://en.wikipedia.org/wiki/Cyclotomic_unit</a><br>\nOr am I misunderstainding your code?</p>",
        "id": 259418924,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1635440060
    },
    {
        "content": "<p>That's what <a href=\"https://github.com/leanprover-community/flt-regular/blob/master/src/number_theory/cyclotomic/cyclotomic_units.lean#L191\">https://github.com/leanprover-community/flt-regular/blob/master/src/number_theory/cyclotomic/cyclotomic_units.lean#L191</a> is meant to become eventually, except currently nothing is proved.</p>",
        "id": 259419113,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635440148
    },
    {
        "content": "<p>So the filename refers to that def rather than the zeta itself</p>",
        "id": 259419180,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635440164
    },
    {
        "content": "<p>I see; so it is the (finite) sets of all things of the form</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mo>∑</mo><mrow><mo stretchy=\"false\">(</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>r</mi><mo>&lt;</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></munder><msubsup><mi>ζ</mi><mi>n</mi><mi>r</mi></msubsup><mo stretchy=\"false\">?</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{(r,n)=1, r&lt;n)}\\zeta_n^r ?</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.5660100000000003em;vertical-align:-1.516005em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\">?</span></span></span></span></span></p>\n<p>Or am I misreading the definition of <code>aux</code>?</p>",
        "id": 259420219,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1635440541
    },
    {
        "content": "<p>Yes aux is a hacky way to define the inverse mod <code>n</code>, probably its best to replace it with an actual inverse in <code>zmod n</code> but I was just hacking around.</p>",
        "id": 259420425,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635440633
    },
    {
        "content": "<p>The idea of using the finite sums rather than the quotient is just to stay in the ring of integers and not worry about division</p>",
        "id": 259420547,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635440667
    },
    {
        "content": "<p>OK; because I am still slightly sceptical about this definition. Normally the \"cyclotomic units\" are an infinite group generated by some explicitely-defined things of that sort (they are of finite index...).</p>",
        "id": 259420840,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1635440799
    },
    {
        "content": "<p>I would rather use the definition given in Theorem 8.3 of Washington's book <em>Introduction to Cyclotomic Fields</em></p>",
        "id": 259421053,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1635440886
    },
    {
        "content": "<p>Maybe <code>basic_cyclotomic_unit</code> is a better name? The point is just to define these generators yes.</p>",
        "id": 259421350,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635441008
    },
    {
        "content": "<p>Sounds much better! Just because otherwise there would be \"usual\" cyclotomic units which would not be <code>mathlib</code> ones.</p>",
        "id": 259421470,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1635441062
    },
    {
        "content": "<p>I think for the purpose of this file I was (implicitly) assuming that the <code>n</code> was prime in what I was doing also, so I definitely didn't try and formulate the right general definition yet.</p>",
        "id": 259421853,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635441192
    },
    {
        "content": "<p>We can define it as a subgroup of the group of units, like primitive roots</p>",
        "id": 259422696,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635441509
    },
    {
        "content": "<p>And I really suggest we make the effort to give the most general definition</p>",
        "id": 259423006,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635441649
    },
    {
        "content": "<p>No problem in adding assumptions in theorems of course</p>",
        "id": 259423037,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635441669
    },
    {
        "content": "<p>Ok, so I would rather suggest to follow Washington's approach for general <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>, personally.</p>",
        "id": 259423052,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1635441679
    },
    {
        "content": "<p><code>zeta'</code> and <code>zeta</code> are now defined for rings (mathematically they are the same thing, a primitive root of unity). <span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span>  do you think we really need the subgroup of <a href=\"https://en.wikipedia.org/wiki/Cyclotomic_unit\">cyclotomic units</a> or for us it's enough to work with some specific element?</p>",
        "id": 259514193,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635508862
    },
    {
        "content": "<p>Well I don't think we need the whole subgroup (but I could be wrong). I think its enough to know that they   are units.</p>",
        "id": 259514659,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635509106
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow></msub><mo>=</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal O_{\\mathbb{Q}(\\zeta_p)} = \\mathbb{Z}[\\zeta_p]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0608499999999998em;vertical-align:-0.3775199999999999em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34479999999999994em;\"><span style=\"top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">Q</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285716em;\"><span style=\"top:-2.357em;margin-left:-0.07378em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3775199999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> is enough for us, right? We don't need <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ζ</mi><msup><mi>p</mi><mi>r</mi></msup></msub></mrow><annotation encoding=\"application/x-tex\">\\zeta_{p^r}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26548em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> I think</p>",
        "id": 259528969,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635516349
    },
    {
        "content": "<p>And even less <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ζ</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\zeta_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>",
        "id": 259529003,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635516362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/Cyclotomic.20units/near/259528969\">said</a>:</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow></msub><mo>=</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal O_{\\mathbb{Q}(\\zeta_p)} = \\mathbb{Z}[\\zeta_p]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0608499999999998em;vertical-align:-0.3775199999999999em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34479999999999994em;\"><span style=\"top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">Q</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285716em;\"><span style=\"top:-2.357em;margin-left:-0.07378em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3775199999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> is enough for us, right? We don't need <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ζ</mi><msup><mi>p</mi><mi>r</mi></msup></msub></mrow><annotation encoding=\"application/x-tex\">\\zeta_{p^r}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26548em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> I think</p>\n</blockquote>\n<p>Yes that is enough</p>",
        "id": 259529080,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635516384
    },
    {
        "content": "<p>Unfortunately this does not seem to really simplify the problem compared to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ζ</mi><msup><mi>p</mi><mi>r</mi></msup></msub></mrow><annotation encoding=\"application/x-tex\">\\zeta_{p^r}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26548em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<p>I am not sure what is the best approach here. In my opinion we should concentrate on proving this (I mean the description of the ring of integers), and go back to FLT once we have this.</p>",
        "id": 259533497,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635518273
    },
    {
        "content": "<p>Yes this is the first big hurdle, I guess we just need to make sure that if we prove this without using, say, embeddings, then we can do the same for the FLT. Otherwise we may end up having to do more work than needed.</p>",
        "id": 259533956,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635518477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/Cyclotomic.20units/near/259533497\">said</a>:</p>\n<blockquote>\n<p>Unfortunately this does not seem to really simplify the problem compared to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ζ</mi><msup><mi>p</mi><mi>r</mi></msup></msub></mrow><annotation encoding=\"application/x-tex\">\\zeta_{p^r}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26548em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<p>I am not sure what is the best approach here. In my opinion we should concentrate on proving this (I mean the description of the ring of integers), and go back to FLT once we have this.</p>\n</blockquote>\n<p>I think <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ζ</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\zeta_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> it is actually more annoying, but <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> vs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>p</mi><mi>r</mi></msup></mrow><annotation encoding=\"application/x-tex\">p^r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.858832em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span> is probably about the same.</p>",
        "id": 259534445,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635518709
    },
    {
        "content": "<p>The question is if we want to prove the final theorem as fast as possible or do we prefer doing things following mathlib style.</p>\n<p>For example for the discriminant, I am quite sure it should be defined in general, without embeddings. A lot of elementary results are true for algebras that are finite and free over the base (for example what happens when you multiply the family by a matrix). Using embeddings from the start can make our life easier, but I think it's not the \"right\" way. I know, perfect is the enemy of good, and we have to make some compromise, but maybe not immediately.</p>\n<p>Note that a good thing about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow></msub><mo>=</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msub><mi>ζ</mi><mi>p</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal O_{\\mathbb{Q}(\\zeta_p)} = \\mathbb{Z}[\\zeta_p]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0608499999999998em;vertical-align:-0.3775199999999999em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34479999999999994em;\"><span style=\"top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">Q</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285716em;\"><span style=\"top:-2.357em;margin-left:-0.07378em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3775199999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> is that this is a precise statement (it is already in the repo), so if someone prefers working on FLT he can do it immediately, a sorried lemma is as as good as a proved lemma. My suggestion is that we concentrate on this fact, but we can very well work on the two subprojects at the same time.</p>",
        "id": 259536982,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635519757
    },
    {
        "content": "<p>What we really have to do, in any case, is producing <em>a lot</em> of small sorried lemmas, and people will start proving them, even if they are not really interested in the whole project.</p>",
        "id": 259537132,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635519826
    },
    {
        "content": "<p>Ah sure I see what you mean about the discriminant. I was thinking only of the definition for number fields. But yes we may as well define them very generally. Using that we can probably give some enough sorried lemmas to get the ring of integers theorem going.</p>",
        "id": 259537577,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635520000
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">is_integral_closure</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_ring</span> <span class=\"n\">n</span> <span class=\"n\">ℤ</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"n\">ℤ</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>is already there, in <code>number_theory/cyclotomic/rat</code>, so if someone needs it there are no problems.</p>",
        "id": 259538776,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635520492
    },
    {
        "content": "<p>Sorry I guess I meant get the proof going.</p>",
        "id": 259539773,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635520916
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/Cyclotomic.20units/near/259537132\">said</a>:</p>\n<blockquote>\n<p>What we really have to do, in any case, is producing <em>a lot</em> of small sorried lemmas, and people will start proving them, even if they are not really interested in the whole project.</p>\n</blockquote>\n<p>But should we do this first for the proof of the ring of integers or start from <code>flt_regular</code> and go down?</p>",
        "id": 259539956,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635520991
    },
    {
        "content": "<p>Well, this is exactly my question <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 259540370,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635521161
    },
    {
        "content": "<p>We can do both ways of course</p>",
        "id": 259540444,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635521173
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/304774-FLT-regular/topic/Cyclotomic.20units/near/259540370\">said</a>:</p>\n<blockquote>\n<p>Well, this is exactly my question <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>Haha ok I see :)</p>",
        "id": 259540488,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635521194
    },
    {
        "content": "<p>Well I'd be partial to starting from <code>flt_regular</code> and going down. I was thinking about this, but then was scratching my head about how to do \"An algebraic integer all of whose conjugates have absolute value one is a root of unity\"</p>",
        "id": 259540694,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635521283
    },
    {
        "content": "<p>I personally suggest we concentrate on proving the instance, that means to develop a good theory of the discriminant (I've just pushed <code>number_theory/discriminant/basic</code> containing a definition). But if someone prefers working on the other part of the project there are no problem in using a sorried instance like that (since it is a proposition).</p>",
        "id": 259540744,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635521304
    },
    {
        "content": "<p>Oh well then I'm happy to do that. I have no real intuition as to what is best and since you've been doing this for longer I'm happy to follow your suggestion :)</p>",
        "id": 259541156,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635521482
    },
    {
        "content": "<p>It definitely seems some of the top-down steps can be done independently, thats what I've been idly thinking about with the may_assume tactic I was working on, how to make the outline of the proof quite readable.</p>",
        "id": 259545736,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635523345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span>  Just for fun I've slightly golfed your <code>submodule.span_singleton_eq_span_singleton</code>. It is surprisingly annoying!</p>",
        "id": 260071781,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635895782
    },
    {
        "content": "<p>Haha I'm glad I'm not alone!</p>",
        "id": 260071847,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635895813
    },
    {
        "content": "<p>Do you think there are some simp lemmas or something missing? Or anything we can extract from it in the end?</p>",
        "id": 260071901,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1635895875
    },
    {
        "content": "<p>Maybe <code>span R ({u * x} : set M) = span R ({x} : set M)</code> deserves to be a simp lemma, but the rest is really what has to be done:  the cases<code>x=0</code> or <code>y=0</code>  have to treated separately (one is easier because <code>u • x = y</code> is not symmetric in <code>x</code> and <code>y</code>), and then <code>R</code> is non commutative, so one has to find both inverses.</p>",
        "id": 260072842,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635896328
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> <span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span>  I didn't follow all you have done. Have we decided the standard way of taking a primitive <code>n</code>-th roof of unity in <code>K</code> where <code>(K : Type u) [field K] [char_zero K] (n : ℕ+) [is_cyclotomic_extension {n} ℚ K]</code>?  Is it <code>zeta'</code>?</p>",
        "id": 260999901,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1636555692
    },
    {
        "content": "<p>I've been using <code>zeta'</code> for fields and <code>zeta</code> for rings (as is done in the cyclotomic units file)(if I remember correctly)</p>",
        "id": 261002388,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1636556665
    },
    {
        "content": "<p>OK, I will use <code>zeta'</code>. I am wondering if <code>zeta'_mem_base</code> should become the definition of <code>zeta'</code>, but maybe at some point someone will want to work with extension of fields without a reasonable base ring.</p>",
        "id": 261003453,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1636557148
    }
]