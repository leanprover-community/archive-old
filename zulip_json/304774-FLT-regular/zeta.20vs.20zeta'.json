[
    {
        "content": "<p>do we have any particular reason to keep <code>zeta</code> around? to me it seems that <code>zeta'</code> is much better behaved</p>",
        "id": 266196954,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640632139
    },
    {
        "content": "<p>Sometimes you really want to consider zeta' as a unit right?</p>",
        "id": 266199595,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1640634291
    },
    {
        "content": "<p>Even if it's not used as much i find it hard to imagine it's totally useless</p>",
        "id": 266199661,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1640634347
    },
    {
        "content": "<p>I think we can certainly make the current <code>zeta'</code> be a unit; I just worry because it uses the explicit constructions and I'd rather avoid that if possible</p>",
        "id": 266220229,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640652645
    },
    {
        "content": "<p>hmm, there's a lot of <code>zeta</code> in <code>Unit_lemmas</code>... I'll have a toy with this at some point</p>",
        "id": 266220319,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640652749
    },
    {
        "content": "<p>ooh, we can even put it in the <code>roots_of_unity</code> subgroup</p>",
        "id": 266222155,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640654831
    },
    {
        "content": "<p>even unconditionally, with Riccardo's power stuff; it's only primitive on the <code>ne_zero (n : R)</code> case though</p>",
        "id": 266222315,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640655003
    },
    {
        "content": "<p>We can maybe change the name, using <code>zeta</code> for <code>zeta'</code> and something like <code>zeta_unit</code> for <code>zeta</code>.</p>",
        "id": 266227055,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640661382
    },
    {
        "content": "<p>In any case we know the order of <code>zeta'</code>, it is given by <code>is_root_cyclotomic_iff_char_p</code> when <code>ne_zero</code> does not hold, but I think we can safely assume <code>ne_zero</code>.</p>",
        "id": 266227088,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640661470
    },
    {
        "content": "<p>I started toying with this; I think it's definitely worth having <code>zeta</code> and <code>zeta_root_of_unity</code> involved. <a href=\"https://github.com/leanprover-community/flt-regular/commits/zeta_refactor\">Here</a>'s some work on this; no renaming and no removing of the old <code>zeta</code> yet, but if people want to push anything here, feel free!</p>",
        "id": 266230716,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640666632
    },
    {
        "content": "<p>We'll get some of the theorems for free, too, from <code>roots_of_unity</code> :)</p>",
        "id": 266230759,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640666645
    },
    {
        "content": "<p>Good! The definition of cyclotomic extension is now in mathlib: I will keep on PRing small properties, but the next relevant step is to have <code>zeta</code> and their basic properties. Do you agree on using <code>zeta</code> instead of <code>zeta'</code>?</p>",
        "id": 266272855,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640709287
    },
    {
        "content": "<p>I'm confused about which is which now. <code>zeta'</code> is the  root of the cyclotomic poly and <code>zeta</code> is the  same thing but as an element of the units of the ring of integers?</p>",
        "id": 266274002,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1640710237
    },
    {
        "content": "<p>In the proof I guess the main one will be <code>zeta</code> as most of the arguments happen in the ring of integers.</p>",
        "id": 266274142,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1640710399
    },
    {
        "content": "<p>For now <code>zeta'</code> is any root the the cyclotomic polynomial:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">zeta'</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"n\">classical.some</span> <span class=\"o\">(</span><span class=\"n\">exists_root</span> <span class=\"o\">(</span><span class=\"n\">set.mem_singleton</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">âˆƒ</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">aeval</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic</span> <span class=\"n\">n</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 266274144,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640710401
    },
    {
        "content": "<p>So it is an element of the big algebra, and we know <code>is_primitive_root (zeta')</code> (with the appropriate assumptions).</p>",
        "id": 266274178,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640710438
    },
    {
        "content": "<p>the current <code>zeta</code> has a fair few typeclass issues... I should put <a href=\"#narrow/stream/113488-general/topic/TC.20hell.20in.20FLT-regular\">this thread</a> in the code; we can rederive some instances so hopefully TC search doesn't do this</p>",
        "id": 266274530,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640710691
    },
    {
        "content": "<p>Renaming zeta' to zeta and zeta to zeta_unit or something sounds sensible to me, sorry for the original non descriptive name</p>",
        "id": 266274537,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1640710699
    },
    {
        "content": "<p>Yeah I agree, the name <code>zeta_unit</code> is a good idea.</p>",
        "id": 266274755,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1640710826
    },
    {
        "content": "<p>do people like my new definition in the branch? I think we can get easily that it's in the ring of integers (we can probably make an <code>is_cyclotomic_extension</code> instance for <code>ring_of_integers K</code> for <code>K : is_cyclotomic_extension</code>)</p>",
        "id": 266274829,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640710900
    },
    {
        "content": "<p>I like it being a root of unity. If we can easily make it into an element of the ring of integers, then I think that's fine. Does this fix any of these TC issues?</p>",
        "id": 266275077,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1640711093
    },
    {
        "content": "<p>Sorry, which branch?</p>",
        "id": 266275101,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640711118
    },
    {
        "content": "<p>(I haven't really followed the discussion on these  TC issues)</p>",
        "id": 266275114,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1640711130
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/flt-regular/commits/zeta_refactor\">https://github.com/leanprover-community/flt-regular/commits/zeta_refactor</a></p>",
        "id": 266275116,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640711130
    },
    {
        "content": "<p>the TC issues aren't really fleshed out, I'm still digging around because it's not really an easy to fix issue</p>",
        "id": 266275148,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640711153
    },
    {
        "content": "<p>Aha I see.</p>",
        "id": 266275211,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1640711182
    },
    {
        "content": "<p>Having <code>zeta</code> as a root of unity seems a very good idea!</p>",
        "id": 266275285,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640711279
    },
    {
        "content": "<p>I guess we are not loosing anything, and we can use the existing API for roots of unity</p>",
        "id": 266275343,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640711312
    },
    {
        "content": "<p>I've pushed some more onto that branch, I think it's nearly there. If anyone has any suggestions (either golfing or maths) for the <code>ring_of_integers</code> proof, please let me know. I think it may require <code>fintype S</code>; I don't see how it would, but if helps to consider S as a singleton, I feel like that's fine too</p>",
        "id": 266481369,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640926240
    },
    {
        "content": "<p>I don't have a lot of time today, I will try to have a look during the weekend, but if it compiles feel free to merge into master</p>",
        "id": 266504531,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640958623
    },
    {
        "content": "<p>I will check this tomorrow, sorry for the delay</p>",
        "id": 266622446,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641142146
    },
    {
        "content": "<p>no worries ^^ I've been very busy too so also not had much time to do things</p>",
        "id": 266622757,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641142493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> the class <code>ne_zero</code> is now in mathib, right? If there there are no more PR to wait for I think we should first of all start using it everywhere</p>",
        "id": 266696522,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641222656
    },
    {
        "content": "<p>And then refactor <code>zeta</code></p>",
        "id": 266696530,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641222664
    },
    {
        "content": "<p>Ah, bors failed in <a href=\"https://github.com/leanprover-community/mathlib/pull/11071\">#11071</a> because of some changes in master. <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> since it is now fixed, can you merge it? Thank you!</p>",
        "id": 266697047,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641222952
    },
    {
        "content": "<p>ahh, I was already bumping master Riccardo! should've said here, sorry ^^</p>",
        "id": 266741638,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641247221
    },
    {
        "content": "<p><span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 266743974,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641248819
    },
    {
        "content": "<p>No problem! Have you already finished the bump?</p>",
        "id": 266743998,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641248839
    },
    {
        "content": "<p>no, doing some of the leaf files right now</p>",
        "id": 266744135,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641248940
    },
    {
        "content": "<p>give me a couple minutes and I'll push what I have</p>",
        "id": 266744182,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641248986
    },
    {
        "content": "<p>OK, I've fixed <code>src/ready_for_mathlib/cyclotomic/basic.lean</code> and <code>src/ready_for_mathlib/cyclotomic.lean</code>.</p>",
        "id": 266744256,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641249012
    },
    {
        "content": "<p>I've added two simple lemmas in <code>src/ready_for_mathlib/ne_zero.lean</code>. I will PR them later</p>",
        "id": 266744297,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641249048
    },
    {
        "content": "<p>btw, <code>ne_nat</code> exists as <code>(ne_zero.of_ne_zero_coe R).out</code>; a bit of a motuhful, I agree, but that's mathlib naming for ya...</p>",
        "id": 266744960,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641249549
    },
    {
        "content": "<p>So let's throw the whole file away</p>",
        "id": 266745125,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641249662
    },
    {
        "content": "<p>there was actually some other lemmas that I put in therre ^^ sorry for overriding half the stuff, but I merged now</p>",
        "id": 266745805,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641250158
    },
    {
        "content": "<p>I've been trying to use <code>no_zero_smul_divisors</code> a bit more because it seems to be a bit easier to scale than injective algerbra maps (they're equivalent); otherwise we just did pretty much the same</p>",
        "id": 266745912,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641250203
    },
    {
        "content": "<p>I also messed a little with <code>cycl_poly</code>; the last lemma now takes <code>ne_zero</code> and doesn't require <code>0 &lt; k</code></p>",
        "id": 266745952,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641250223
    },
    {
        "content": "<p>I'm going to work on the discirminant file now</p>",
        "id": 266745973,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641250239
    },
    {
        "content": "<p>ok, the bump should be done now</p>",
        "id": 266746444,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641250586
    },
    {
        "content": "<p>I also get some timeout in <code>src/number_theory/cyclotomic/cyclotomic_units.lean</code>, but it compiles in the terminal</p>",
        "id": 266746865,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641250855
    },
    {
        "content": "<p>BTW if you want to make it working in VS Code it suffices to increase the time limit</p>",
        "id": 266746972,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641250928
    },
    {
        "content": "<p>yeah, it's so weird... anyways, hopefully that will be gone with the remaster soon so</p>",
        "id": 266747480,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641251275
    },
    {
        "content": "<p>refactor*...</p>",
        "id": 266747581,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641251315
    },
    {
        "content": "<p>ok, zeta_refactors _builds_; I broke a lot of your stuff though, <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> ; if you have any free time at some point would be great if you could take a look. The more I think about it I think I used the wrong <code>zeta</code> over in your stuff</p>",
        "id": 266772445,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641275818
    },
    {
        "content": "<p>and so I had to <code>sorry</code> a few previously unsorried things. I'll see if I can think about those things a bit more carefully tomorrow</p>",
        "id": 266772468,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641275867
    },
    {
        "content": "<p>quicklink: <a href=\"https://github.com/leanprover-community/flt-regular/tree/zeta_refactor\">https://github.com/leanprover-community/flt-regular/tree/zeta_refactor</a></p>",
        "id": 266772509,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641275886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> what is the situation with your refactor of <code>zeta</code>? I would like to PR the definition and some basic properties</p>",
        "id": 267439641,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641821971
    },
    {
        "content": "<p>still just trying to crack on and deal with some ring of integers stuff, feel free to merge but stuff isn't quite at feature parity yet</p>",
        "id": 267446735,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641825720
    },
    {
        "content": "<p>ohhh, I see what the issue is, and how to get around ir</p>",
        "id": 267507195,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641852041
    },
    {
        "content": "<p>essentially, I wanted to define <code>is_cyclotomic_extension (O K) (O L)</code> for <code>is_cyclotomic_extension K L</code>, but this doesn't work</p>",
        "id": 267507237,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641852072
    },
    {
        "content": "<p>we instead have <code>is_cyclotomic_extension (O K) (cyclotomic_ring blah O K)</code>, and it is a theorem of Q that cyclotomic_ring O K is O L</p>",
        "id": 267507292,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641852106
    },
    {
        "content": "<p>which is what you're proving right now riccardo</p>",
        "id": 267507311,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641852122
    },
    {
        "content": "<p>so i'm just going to try to get the current stuff building somehow and then work from there</p>",
        "id": 267507388,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641852142
    },
    {
        "content": "<p>Yes, currently the definition of <code>cyclotomic_ring</code> is the ring obtained adjoining the roots of the cyclotomic polynomials. In particular the proof that it is a cyclotomic extension should be easy (maybe it's even already there). The difficult part is that in the case of <code>Q</code> it is also the integral closure of <code>Z</code>.</p>",
        "id": 267508411,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641852691
    },
    {
        "content": "<p>If your new definition works don't hesitate to merge into master!</p>",
        "id": 267509700,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641853169
    },
    {
        "content": "<p>Don't worry if you add some more sorry</p>",
        "id": 267509737,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641853192
    },
    {
        "content": "<p>I've merged <code>master</code> in <code>zeta_refactor</code></p>",
        "id": 267602051,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641916678
    },
    {
        "content": "<p>And I am trying to fix the errors</p>",
        "id": 267602419,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641916815
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span>  It now compiles (I just had to add some <code>sorry</code>, we will fix them sooner or later). I think having <code>zeta</code> instead of <code>zeta'</code> is better. If you are satisfied with the definition you can merge <em>into</em> <code>master</code>.</p>",
        "id": 267607235,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641918619
    },
    {
        "content": "<p>We are now quite close to the computation of the ring of integers of the cyclotomic extension of the rationals, that is already a non trivial result, so I would like to PR all the stuff leading to it quite soon.</p>",
        "id": 267607445,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1641918703
    },
    {
        "content": "<p>sure, argh sorry didn't want to break people's stuff but will merge then</p>",
        "id": 267612830,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641920851
    },
    {
        "content": "<p>oki, done, i'll now add docstrings and things will build again</p>",
        "id": 267614168,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641921409
    }
]