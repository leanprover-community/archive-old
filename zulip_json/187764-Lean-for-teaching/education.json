[
    {
        "content": "<p>Hi everyone! I'd like to apologize in advance in case I mess something up, I haven't been using Zulip before. Anyway, I'd like to know more about using Lean for educational purposes. Keep in my mind I've learnt about Lean 2 days ago and have no coding experience)</p>\n<p>I happen to teach basic math to adults (mostly IT specialists) and they always find writing and understanding proofs the most frustrating part (as it seems for everyone with no prior math expericence). I've read some basic stuff and found the introductional tutorial, consisting of proving basic facts for inequalities, analysis etc. via different approaches.</p>\n<p>I find all that extremely exciting and I believe it can improve any educational course in a great way. But can't find the info, are there any other intros like that, say, related to linear algebra or more advanced analysis? It seems that creating a pack of chapters that mix definitions and motivations with practical exercises (somewhat a companion to Rudin, Strang or any other undergrad textbook) would be incredibly helpful. </p>\n<p>Can you hint where I should look for that? Thanks for your suggestions!</p>",
        "id": 241532091,
        "sender_full_name": "Daniel Ever",
        "timestamp": 1622812088
    },
    {
        "content": "<p>There's a stream on using Lean for teaching on the left. You may want to ask your question there, as the people who could help you do not necessarily read the \"New members\" topic</p>",
        "id": 241535146,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1622813617
    },
    {
        "content": "<p>I am not sure the thing you want exists currently. My understanding is most educators write their own lecture notes. I recommend the same - using a theorem prover is fairly involved, and I'm not sure jumping directly to interactive programming exercises is worth it until you become very familiar with how <code>mathlib</code> works and is organized.</p>",
        "id": 241535565,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1622813803
    },
    {
        "content": "<p>that said, Theorem Proving in Lean exists, as well as <a href=\"https://leanprover.github.io/logic_and_proof/\">https://leanprover.github.io/logic_and_proof/#</a></p>",
        "id": 241536022,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1622814009
    },
    {
        "content": "<p>Mathematics in Lean is being written, but is not currently finished</p>",
        "id": 241536126,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1622814050
    },
    {
        "content": "<p>Uh, I am not sure what level you are targeting, though. I wouldn't put Rudin in front of an IT specialist learning basic math...</p>",
        "id": 241536313,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1622814146
    },
    {
        "content": "<p>It would be nice if this thread were moved to <a class=\"stream\" data-stream-id=\"187764\" href=\"/#narrow/stream/187764-Lean-for-teaching\">#Lean for teaching</a> . The big problem with using Lean to teach people about basic proofs is that the people who are able to take on the massive learning curve for figuring out how to use a theorem prover to e.g. prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mn>2</mn></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.13278em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.90722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.86722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">â€‹</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.13278em;\"><span></span></span></span></span></span></span></span></span> is irrational are, sadly, the people who don't really need to be taught how to do basic proofs because they figured it out already.</p>",
        "id": 241536973,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622814465
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/education\">#new members &gt; education</a> by <span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span></p>",
        "id": 241537460,
        "sender_full_name": "Notification Bot",
        "timestamp": 1622814676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> indeed so. Though even with basic proofs people tend to get lost quickly, i.e., forgetting what tools they do have in their disposal. Much of the time it boils down to \"keep trying one thing after another until it works\", there's no goal tracking or conscious use or any tactics. In that way even reading the code in Lean is very beneficial.</p>\n<p>Dare I say, it seems to me that combining Lean with some intuitive oriented approaches (say, 3Blue1Brown \"essence\" playlists) might open the new chapter of math education for non-mathematicians.</p>",
        "id": 241540249,
        "sender_full_name": "Daniel Ever",
        "timestamp": 1622815738
    },
    {
        "content": "<p>Daniel, did you watch <a href=\"https://www.youtube.com/watch?v=mTLuON5eRZI&amp;list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt&amp;index=23\">https://www.youtube.com/watch?v=mTLuON5eRZI&amp;list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt&amp;index=23</a> ?</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"mTLuON5eRZI\" href=\"https://www.youtube.com/watch?v=mTLuON5eRZI&amp;list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt&amp;index=23\"><img src=\"https://uploads.zulipusercontent.net/44e9b2e3c48d42541821d7cfd5a2706afd8a0bdc/68747470733a2f2f692e7974696d672e636f6d2f76692f6d544c754f4e3565525a492f64656661756c742e6a7067\"></a></div>",
        "id": 241540363,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1622815785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Nope, I did not. Though I've checked some other videos, including Logic in Lean by Jeremy Avigad, which is very friendly and clears a lot of initial frustration</p>",
        "id": 241541032,
        "sender_full_name": "Daniel Ever",
        "timestamp": 1622816013
    },
    {
        "content": "<p>My impression is that if you're targetting non-mathematicians (e.g. doing outreach in a situation like a science fair or whatever) then it's extremely rare that proof is ever the focus. Instead one focusses on a more generic understanding, or calculations. I have found it very difficult to put Lean into a situation which is targetting non-mathematicians or weak mathematicians (including the weaker students on Imperial's undergraduate maths degree).</p>",
        "id": 241542959,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622816763
    },
    {
        "content": "<p>In an intro to proofs course, I found the following <br>\n<a href=\"https://cseweb.ucsd.edu/~lerner/proof-game/\">https://cseweb.ucsd.edu/~lerner/proof-game/</a><br>\nuseful for sucking some of the anxiety out of the room. A good number of people are more comfortable with spatial reasoning than symbolic reasoning.</p>",
        "id": 241545553,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1622817785
    },
    {
        "content": "<p>Perhaps I should elaborate on my situation a bit more clear. I teach random adults who for whatever reasons found out that they won't be able to futher escape the deeper understanding of math concepts  for personal, career and other causes. The fact there's a huge gap between a layperson's thinking and the style of reasoning in most of the serious textbooks doesn't help either. </p>\n<p>However, after the initial 2-3 months, when people become more confident of their abilities by practicing and exploring ideas, they feel the need to aid their intuition with some degree of rigour and that's when things usually collapse. I assume, if one actually cares to write down all the basic assumptions  and  schemes of reasoning, piling his desk with papers, he could avoid most of the trouble. But IRL very few people do that. </p>\n<p>Plus IT guys have lots of experience with code, so in some way constructing blocks with calc or any other approach isn't as cryptic for them as, let's say, getting a hold of epsilon-delta notation or proving stuff about open pre-images with no solid background.</p>",
        "id": 241545953,
        "sender_full_name": "Daniel Ever",
        "timestamp": 1622817947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306577\">@Matthew Ballard</span> thanks! that looks promising</p>",
        "id": 241546038,
        "sender_full_name": "Daniel Ever",
        "timestamp": 1622817968
    },
    {
        "content": "<p>More general information on the project can be found at <a href=\"https://cseweb.ucsd.edu/~lerner/poly-blocks.html\">https://cseweb.ucsd.edu/~lerner/poly-blocks.html</a></p>",
        "id": 241546173,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1622818035
    }
]