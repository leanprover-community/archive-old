[
    {
        "content": "<p>I am thinking about how to make the connection between a course on introduction to programming (I am using SICP book) to a course using Lean to \"solve problems\".  I am not talking about a course on formal methods to prove properties of programs, that is one approach. I am talking about two different perspectives on how to solve simple problems like <a href=\"https://codeforces.com/problemset/problem/791/A\" title=\"https://codeforces.com/problemset/problem/791/A\">https://codeforces.com/problemset/problem/791/A</a>. A program to solve this problem is quite simple, a common lisp solution would be given by the enumeration below to the input <code>(4,9)</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nb\">loop</span> <span class=\"nv\">for</span> <span class=\"nv\">x</span> <span class=\"nb\">=</span> <span class=\"mi\">4</span> <span class=\"nv\">then</span> <span class=\"p\">(</span><span class=\"nb\">*</span> <span class=\"nv\">x</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n      <span class=\"nv\">for</span> <span class=\"nv\">y</span> <span class=\"nb\">=</span> <span class=\"mi\">9</span> <span class=\"nv\">then</span> <span class=\"p\">(</span><span class=\"nb\">*</span> <span class=\"nv\">y</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n      <span class=\"nv\">until</span> <span class=\"p\">(</span><span class=\"nb\">&gt;</span> <span class=\"nv\">x</span> <span class=\"nv\">y</span><span class=\"p\">)</span>\n      <span class=\"nv\">collect</span> <span class=\"p\">(</span><span class=\"nb\">cons</span> <span class=\"nv\">x</span> <span class=\"nv\">y</span><span class=\"p\">))</span>\n</code></pre></div>\n\n\n<p>but how we can explore this problem from an ITP perspective?</p>",
        "id": 196057686,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1588434743
    },
    {
        "content": "<p>well, you could define that as a lean function and prove that it has a given value</p>",
        "id": 196057902,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588435013
    },
    {
        "content": "<p>although that program doesn't terminate when <code>x = 0</code></p>",
        "id": 196057918,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588435042
    },
    {
        "content": "<p>In the question you're given that the inputs are &gt;=1</p>",
        "id": 196057989,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588435119
    }
]