[
    {
        "content": "<p>I think <a href=\"https://github.com/ImperialCollegeLondon/M40001_lean\" target=\"_blank\" title=\"https://github.com/ImperialCollegeLondon/M40001_lean\">https://github.com/ImperialCollegeLondon/M40001_lean</a> deserves its own thread.</p>",
        "id": 177978299,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869516
    },
    {
        "content": "<p>I just played the first two levels. Some remarks about design:<br>\n<a href=\"/user_uploads/3121/HgHeGnhs-IQHwiDl8jeGKS1b/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/HgHeGnhs-IQHwiDl8jeGKS1b/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/3121/HgHeGnhs-IQHwiDl8jeGKS1b/pasted_image.png\"></a></div>",
        "id": 177978303,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869537
    },
    {
        "content": "<p>What is this huge white gap at the bottom of my proof? It's constantly there, and feels weird.</p>",
        "id": 177978320,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869568
    },
    {
        "content": "<p>The tick mark left of \"Lemma\" feels weird before the lemma is proven.</p>",
        "id": 177978325,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869597
    },
    {
        "content": "<p>You really need some postprocessing of the state window. The most important is that displaying information on <code>refl</code> is very distracting. The line numbers refer to nothing meaningful to the player. Syntax highlighting is missing. The upper right switch is irrelevant.</p>",
        "id": 177978428,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869730
    },
    {
        "content": "<p>When proving, the red squiggle under the last character which simply indicates the proof is not finished is very confusing.</p>",
        "id": 177978434,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869777
    },
    {
        "content": "<p>When navigating from page to page, the browser remembers the proofs, but still displays \"Click to prove\", hiding the proof.</p>",
        "id": 177978485,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132175\">@Mohammad Pedramfar</span></p>",
        "id": 177978486,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570869864
    },
    {
        "content": "<p>Mohammad -- the undergraduates also have some feedback about this game. I have some notes in my office -- we should maybe meet on Monday. It's just about playable but we should make some minor changes before I start banging on about it on Twitter. In my mind one big question is whether we should make it all very beautiful -- but this is something that I am incapable of doing and which might take forever. Another big question is how this compares to the approach which <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> was taking using Observable. I know that Patrick feels like proving things about natural numbers is hellishly boring, but it's actually what we're teaching the undergraduates at Imperial right now so I thought it was worth pushing on with this.</p>",
        "id": 177980319,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1570873270
    },
    {
        "content": "<p>I have a bunch of levels which aren't pushed. By the way, Mohammad's code which made the website from the Lean code is here <a href=\"https://github.com/mpedramfar/Lean-game-maker\" target=\"_blank\" title=\"https://github.com/mpedramfar/Lean-game-maker\">https://github.com/mpedramfar/Lean-game-maker</a> and the Lean code which we used is here <a href=\"https://github.com/mpedramfar/natural_number_game\" target=\"_blank\" title=\"https://github.com/mpedramfar/natural_number_game\">https://github.com/mpedramfar/natural_number_game</a> although I made some local modifications which I didn't push because I got confused about if I could fork his fork of my project :-)</p>",
        "id": 177980381,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1570873378
    },
    {
        "content": "<p>Is there a link to a \"live\" version of the site that I'm missing or do we have to install it locally to try it out? I did actually experiment a bit with implementing some of the \"natural number game\" in Observable back when you first mentioned it but I didn't get much further than parsing some edited version of the comments into markdown (see <a href=\"https://observablehq.com/d/2398a546dac54a5d\" target=\"_blank\" title=\"https://observablehq.com/d/2398a546dac54a5d\">here</a>, but there's really not much).</p>",
        "id": 177992132,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1570891948
    },
    {
        "content": "<p>yeah it's live</p>",
        "id": 177994184,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1570894971
    },
    {
        "content": "<p><a href=\"http://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\" target=\"_blank\" title=\"http://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\">http://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/</a></p>",
        "id": 177994193,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1570894997
    },
    {
        "content": "<p>I'm getting the undergraduates to debug it.</p>",
        "id": 177994200,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1570895019
    },
    {
        "content": "<blockquote>\n<p>I just played the first two levels. Some remarks about design:<br>\n<a href=\"/user_uploads/3121/HgHeGnhs-IQHwiDl8jeGKS1b/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n</blockquote>\n<p>Thanks, these are good points. Most of them are easy to implement and I'll get to them soon. This is the first version.</p>",
        "id": 178065162,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1571017907
    },
    {
        "content": "<blockquote>\n<p>Mohammad -- the undergraduates also have some feedback about this game. I have some notes in my office -- we should maybe meet on Monday. It's just about playable but we should make some minor changes before I start banging on about it on Twitter. In my mind one big question is whether we should make it all very beautiful -- but this is something that I am incapable of doing and which might take forever. Another big question is how this compares to the approach which <span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> was taking using Observable. I know that Patrick feels like proving things about natural numbers is hellishly boring, but it's actually what we're teaching the undergraduates at Imperial right now so I thought it was worth pushing on with this.</p>\n</blockquote>\n<p>Yeah, sure. Monday's fine. I'm not an expert on Observable so I'm not sure, but it seems to me that it's ideal for when you want people to be able to play around with \"everything\" in the page, including the javascript. If I understand it correctly, whether it's a website or observable, the codes to make it more beautiful and shiny must be written and are almost the same codes, but Observable might limit how much we will be able to control the design. I'm not sure though.</p>",
        "id": 178065412,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1571018220
    },
    {
        "content": "<p>There are indeed some style limitations for Observable notebooks hosted on the observablehq site. However, it's possible to host notebooks on your own without those restrictions. There's probably not a big advantage to redoing all your work in a notebook if you've already gotten things to work well with the <code>lean-web-editor</code> project though.</p>",
        "id": 178065792,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1571018732
    },
    {
        "content": "<blockquote>\n<p>I have a bunch of levels which aren't pushed. By the way, Mohammad's code which made the website from the Lean code is here <a href=\"https://github.com/mpedramfar/Lean-game-maker\" target=\"_blank\" title=\"https://github.com/mpedramfar/Lean-game-maker\">https://github.com/mpedramfar/Lean-game-maker</a> and the Lean code which we used is here <a href=\"https://github.com/mpedramfar/natural_number_game\" target=\"_blank\" title=\"https://github.com/mpedramfar/natural_number_game\">https://github.com/mpedramfar/natural_number_game</a> although I made some local modifications which I didn't push because I got confused about if I could fork his fork of my project :-)</p>\n</blockquote>\n<p>I forgot that I had access to the repository. I updated it, which didn't modify any files, just added the \"game\" folder.</p>",
        "id": 178066026,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1571019008
    },
    {
        "content": "<blockquote>\n<p>There are indeed some style limitations for Observable notebooks hosted on the observablehq site. However, it's possible to host notebooks on your own without those restrictions. There's probably not a big advantage to redoing all your work in a notebook if you've already gotten things to work well with the <code>lean-web-editor</code> project though.</p>\n</blockquote>\n<p>Makes sense. <br>\nIs it really easier to work with it ?</p>",
        "id": 178066042,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1571019049
    },
    {
        "content": "<blockquote>\n<p>Is it really easier to work with it?</p>\n</blockquote>\n<p>I can't really give an unbiased answer to this. I did try to make it easier to do some things, like embed a bunch of different Lean editors into a document and pass data between Lean and JavaScript...</p>",
        "id": 178066396,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1571019533
    },
    {
        "content": "<p>Yeah, that embedding was good. It definitely makes it easy to make some kinds of interactive pages, in a way that you can play with it.</p>",
        "id": 178066632,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1571019800
    },
    {
        "content": "<p>Hi, I'm interested in doing a foreign language translation of the natural numbers game. Javascript is out of my comfort zone so this might be a stupid question, but if I build a game and it works locally when accessed through the <code>run_locally.sh</code> script, can I just take out the html directory and serve people the index.html or are there other items from the repo that need to be on the server?</p>",
        "id": 187976049,
        "sender_full_name": "Chris B",
        "timestamp": 1581473369
    },
    {
        "content": "<p>Also I guess this is a question for Prof. Buzzard, but are there any resources being used that require an API key or anything like that?</p>",
        "id": 187976053,
        "sender_full_name": "Chris B",
        "timestamp": 1581473381
    },
    {
        "content": "<p>I think the answers are \"yes, you only need the html directory\" and \"no, there are no such resources\", respectively, but the right person to tag would probably be <span class=\"user-mention\" data-user-id=\"132175\">@Mohammad Pedramfar</span> .</p>",
        "id": 187976723,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1581474482
    },
    {
        "content": "<p>Perfect, thanks.</p>",
        "id": 187977037,
        "sender_full_name": "Chris B",
        "timestamp": 1581475029
    },
    {
        "content": "<p>Yes, everything you would need to run the server is in the html directory.</p>",
        "id": 188066546,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1581552499
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> , in Level 6/17 of inequality world, <code>have h0 := eq_zero_of_add_right_eq_self he</code> at some point works, but using <code>ave h0, from eq_zero_of_add_right_eq_self he</code> didn't work! This is strange because the <code>have P, from ...</code> works in some situations but the tactic is documented in the game only with the <code>have P := ...</code> syntax.</p>\n<p>Sorry if this is already reported.</p>",
        "id": 217016581,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1605626571
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">he</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h0</span> <span class=\"o\">:=</span> <span class=\"n\">eq_zero_of_add_right_eq_self</span> <span class=\"n\">he</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">eq_zero_of_add_right_eq_self</span> <span class=\"n\">he</span><span class=\"o\">,</span>\n<span class=\"n\">sorry</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>works for me, and the local context just before the final <code>sorry</code> is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">,</span>\n<span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"n\">hba</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"n\">he</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"n\">h0</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 217020259,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605628136
    },
    {
        "content": "<p>Oh , this is strange! Ok, my mistake</p>",
        "id": 217074351,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1605653415
    },
    {
        "content": "<p>I was just thinking some more about what <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> said during the panel, about students \"spamming\" their solutions into lean (trying every possible tactic without really thinking what they expect to work ahead of time).<br>\nLean and the natural number game are very good at providing positive reinforcement of what works (\"Goals accomplished <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> \") but have no real negatives to trying 100 things without thinking (typing is easier than thinking hard after all, I'm definitely guilty of getting lost in a lean proof and just spamming tactics without taking a step back).<br>\nI'd be very interested in seeing the impact on student experiences if there was some sort of feedback for doing this, I'm thinking something like at each new world you start with 100 points in the top right, each time you enter a new tactic line and the line fails you get your points reduced by 90% of your total, and a cumulative total is kept summing the totals for all levels completed or something, nothing as harsh as actually losing lives and dying and being reset to a new level in a video game, but some extra stat people will want to keep up.<br>\nOf course this might discourage genuine experimentation with different proof strategies (which is of course a good thing), so I really have no idea if its actually a useful addition so it would be very cool to see some actual A/B testing type data on this (as always).</p>",
        "id": 222060918,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1610104614
    },
    {
        "content": "<p>Maybe this could be a \"hard mode\" option on the nng people opt into or something? <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  you don't get any data from the nng do you?</p>",
        "id": 222061007,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1610104697
    },
    {
        "content": "<p>I don't, and I don't know how to, and Mohammad now works for Uber. I've read that penalising people for wrong moves makes your game less popular though ;-)</p>",
        "id": 222062455,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1610105842
    },
    {
        "content": "<p>Can you really go that far in the natural number game just trying random tactics? In my opinion it is not that students realize that for easy stuff they can basically  go in \"autopilot mode\". It is the same for a more experienced mathematician when he has to prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mi>x</mi><mo>−</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mn>5</mn></msup><mo>−</mo><mi>x</mi><msup><mi>y</mi><mn>6</mn></msup><mo>=</mo><mn>32</mn><msup><mi>x</mi><mn>5</mn></msup><mo>−</mo><mn>80</mn><msup><mi>x</mi><mn>4</mn></msup><mi>y</mi><mo>+</mo><mn>80</mn><msup><mi>x</mi><mn>3</mn></msup><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>40</mn><msup><mi>x</mi><mn>2</mn></msup><msup><mi>y</mi><mn>3</mn></msup><mo>−</mo><mi>x</mi><msup><mi>y</mi><mn>6</mn></msup><mo>+</mo><mn>10</mn><mi>x</mi><msup><mi>y</mi><mn>4</mn></msup><mo>−</mo><msup><mi>y</mi><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">(2x-y)^5-xy^6= 32 x^5 - 80 x^4 y + 80 x^3 y^2 - 40 x^2 y^3 - x y^6 + 10 x y^4 - y^5</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\">8</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\">8</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\">4</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span>: we don't think, we just start doing the computation, and we know that this will work. Knowing that sometimes there is no need of thinking is a good skill... of course this is not interesting mathematics, but that will come a little later, with more difficult exercises.</p>",
        "id": 222063780,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1610106854
    },
    {
        "content": "<p>I lacked time yesterday but indeed one of the first thing I tell students in this course is I want them to be able to stop thinking when no thinking is required. When a goal starts with \"forall epsilon : ...\" I don't want them to think before writing: \"Let epsilon be ...\". But somehow this works too well in Lean and they have trouble transferring that skill to paper.</p>",
        "id": 222070810,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1610111940
    },
    {
        "content": "<p>I actually tried to play the NNG in Lean 4 a few days ago, and I was surprised to find out that it really is possible to solve most of these on \"autopilot\", i.e. just try induction with <code>rfl</code> in the base case without even thinking about it, or just keep adding the first lemma that come to mind in an <code>rw</code> call, etc.</p>",
        "id": 222076663,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610115467
    },
    {
        "content": "<p>where is NNG4?</p>",
        "id": 222076757,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610115513
    },
    {
        "content": "<p>Part of that game (the hardest part in fact!) is to translate the definitions of <code>mynat</code> into Lean 4 :-)</p>",
        "id": 222076847,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610115574
    },
    {
        "content": "<p>One benefit of playing in Lean 4 is that you can add the line <code>notation \"ℕ\" =&gt; mynat</code> and not mess up anything.</p>",
        "id": 222077063,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610115694
    },
    {
        "content": "<p>Is it online?</p>",
        "id": 222077481,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610115883
    },
    {
        "content": "<p>I could put what I have online if there is interest.</p>",
        "id": 222077600,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610115940
    },
    {
        "content": "<p>So by you trying to play the NNG in Lean 4 what you meant is that you ported NNG to Lean 4 yourself?</p>",
        "id": 222077754,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610116005
    },
    {
        "content": "<p>It depends what you mean by \"ported the NNG\": I ported the basic setup (definition of <code>mynat</code>, instances to make it usable with numeric literals, etc), but I haven't written custom tactics or anything to make it as beginner-friendly as the original.</p>",
        "id": 222077939,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610116090
    },
    {
        "content": "<p>I found it pretty playable with the tactics currently in Lean 4.</p>",
        "id": 222077977,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610116121
    },
    {
        "content": "<p>oh never mind then</p>",
        "id": 222078555,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610116390
    },
    {
        "content": "<p>I mean, maybe other people might still be interested.</p>",
        "id": 222078602,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610116413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> e.g.</p>",
        "id": 222078619,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1610116424
    },
    {
        "content": "<p>Yeah, there's really not much to it, I just wanted to try out Lean 4.</p>",
        "id": 222078874,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610116551
    },
    {
        "content": "<p>It's on my infinitely long job list to have a go at NNG in Lean 4, I'm sure it will teach me a lot. But I wasn't considering a full port to e.g. a browser game seriously -- it is not clear to me that the gain will be worth the pain.</p>",
        "id": 222086231,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1610120259
    },
    {
        "content": "<p>I encountered far fewer obstacles than I thought, actually. The biggest issue was figuring out what happened to <code>has_zero</code> and <code>has_one</code>.</p>",
        "id": 222095672,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610124732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> I'd be curious in seeing your code if you don't mind putting it online!</p>",
        "id": 222096681,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1610125174
    },
    {
        "content": "<p><a href=\"https://github.com/dupuisf/lean4-experimentation/blob/master/src/nng.lean\">https://github.com/dupuisf/lean4-experimentation/blob/master/src/nng.lean</a></p>",
        "id": 222100150,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1610126720
    },
    {
        "content": "<p>at <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=7&amp;level=10\">https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=7&amp;level=10</a></p>\n<p>there is the tactic <code>by_cases p : P; by_cases q : Q,</code> with the semicolon. if I omit the semicolon, then I would have 3 goals instead of 4, and I can prove all 3 (i.e. no unreachable goals). that seems for me that, say, if I seeded the bug (using colon instead of semicolon), then the fourth case just slipped from the proving. still, the proof is valid from Lean perspective. does it mean that a proof itself might have a bug in tactics?</p>",
        "id": 318858045,
        "sender_full_name": "Alex Myltsev",
        "timestamp": 1672579564
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">by_cases</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"bp\">;</span> <span class=\"n\">by_cases</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Is the same as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">by_cases</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n<span class=\"n\">by_cases</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"n\">by_cases</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Does that answer your question?</p>",
        "id": 318866039,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672583598
    },
    {
        "content": "<p>The answer to your question \"does this mean that lean has a bug\" is \"no\"</p>",
        "id": 318991030,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672665575
    }
]