[
    {
        "content": "<p>In the following code:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">module</span>\n\n<span class=\"c1\">-- From https://github.com/fpvandoorn/group-representations/blob/master/src/group_theory/representation/basic.lean</span>\n<span class=\"kn\">structure</span> <span class=\"n\">G_module</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"kn\">extends</span> <span class=\"n\">has_scalar</span> <span class=\"n\">G</span> <span class=\"n\">M</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"err\">•</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"err\">•</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"err\">•</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">linear</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- A vector space and G-module whose action is 𝕜-linear</span>\n<span class=\"kn\">structure</span> <span class=\"n\">representation</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"err\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"err\">𝕜</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"kn\">extends</span> <span class=\"n\">G_module</span> <span class=\"n\">G</span> <span class=\"n\">V</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">lin</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"err\">𝕜</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span>  <span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"err\">•</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"err\">•</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"n\">v</span><span class=\"o\">))</span>\n\n<span class=\"kn\">definition</span> <span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"err\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"err\">𝕜</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"err\">𝕜</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">representation</span> <span class=\"n\">G</span> <span class=\"err\">𝕜</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">W</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"err\">𝕜</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"err\">∈</span> <span class=\"n\">W</span><span class=\"o\">),</span> <span class=\"o\">((</span><span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"err\">∈</span> <span class=\"n\">W</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>Lean doesn't like the expression <code>g • (v : V)</code> because it can't figure out why <code>has_scalar G V</code></p>\n<p>I find this strange since <code>representation G 𝕜 V</code> extends <code>G_module G V</code> which extends <code>has_scalar G V</code></p>",
        "id": 201779058,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1592944489
    },
    {
        "content": "<p>I just discovered the existence of this stream in one of my periodic scans of hidden streams. I don't have any clue why such a question could be asked in such a secret stream when it could be in <a class=\"stream\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths\">#maths</a></p>",
        "id": 201779294,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592944610
    },
    {
        "content": "<p>I'll put it there then</p>",
        "id": 201779351,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1592944647
    },
    {
        "content": "<p>That will multiply the probability to get an answer by about 20 I think.</p>",
        "id": 201779401,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592944673
    },
    {
        "content": "<p>See?</p>",
        "id": 201779920,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592944928
    },
    {
        "content": "<p>Yes, thanks! (For future reference, apparently replacing \"structure\" with \"class\" fixes things)</p>",
        "id": 201780026,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1592944984
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/240192-Berkeley-Lean.20Seminar/topic/extends.20has_scalar/near/201779294\">said</a>:</p>\n<blockquote>\n<p>I just discovered the existence of this stream in one of my periodic scans of hidden streams. I don't have any clue why such a question could be asked in such a secret stream when it could be in <a class=\"stream\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths\">#maths</a></p>\n</blockquote>\n<p>Sometimes it's nice testing a question among a group with a similar background.  (We are right now having a Zoom session (1-2pm pacific time) where we're working on tutorials or projects for the seminar, and Zulip is <em>much</em> better than the Zoom chat.)</p>",
        "id": 201780706,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1592945293
    },
    {
        "content": "<p>There is no problem having a dedicated stream, I was really commenting that kind of question.</p>",
        "id": 201780810,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592945339
    }
]