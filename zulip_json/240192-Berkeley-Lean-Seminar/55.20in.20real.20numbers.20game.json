[
    {
        "content": "<p>What does the 55 do here?<br>\ninfix <code>is_a_max_of</code>:55 := is_max</p>",
        "id": 198816787,
        "sender_full_name": "Rahul Dalal",
        "timestamp": 1590524626
    },
    {
        "content": "<p><code>:55</code> is a precedence annotation if I am not mistaken.</p>",
        "id": 198816877,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1590524659
    },
    {
        "content": "<p>It's for order of operations</p>",
        "id": 198816880,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1590524661
    },
    {
        "content": "<p>Written without spaces around not to be confused with the typing <code>:</code>.</p>",
        "id": 198816915,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1590524681
    },
    {
        "content": "<p>Avery Morin on the Zoom chat pointed out this documentation: <a href=\"https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html#notation\">https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html#notation</a></p>",
        "id": 198817002,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1590524717
    },
    {
        "content": "<p>is 55 a good default to usually use for consistent style?</p>",
        "id": 198817195,
        "sender_full_name": "Rahul Dalal",
        "timestamp": 1590524795
    },
    {
        "content": "<p>It depends on the precedence assigned to the other operators. We want things like <code>a * b + c</code> to be parsed as we would usually interpret it. So, it depends.</p>",
        "id": 198817387,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1590524895
    },
    {
        "content": "<p>The best practice would be to see whatever mathlib does and stick with it, I believe.</p>",
        "id": 198817434,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1590524923
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 199544425,
        "sender_full_name": "K Y",
        "timestamp": 1591127773
    }
]