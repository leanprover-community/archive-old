[
    {
        "content": "<p>Would it be helpful to explicitly define (and provide notation for?) the automorphism group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>u</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mi mathvariant=\"normal\">/</mi><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Aut(E/F)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span>, the notion of a field extension being solvable (galois and automorphism group is solvable? Or maybe just automorphism group is solvable?) and the notion of an algebraic element being solvable (splitting field is solvable)? It's kind of annoying to have to write things like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">is_solvable</span> <span class=\"o\">((</span><span class=\"n\">minimal_polynomial</span> <span class=\"o\">(</span><span class=\"n\">is_integral</span> <span class=\"n\">α</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">F</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">minimal_polynomial</span> <span class=\"o\">(</span><span class=\"n\">is_integral</span> <span class=\"n\">α</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 221471135,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1609708202
    },
    {
        "content": "<p>Notation would be good. Right now I'm using P for that prop you wrote out.</p>",
        "id": 221474732,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609713236
    },
    {
        "content": "<p>I like the idea of a predicate <code>is_solvable</code> on elements of a field extension; this seems like a natural predicate because it's closed under + - * / .</p>",
        "id": 221474940,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609713508
    },
    {
        "content": "<p>should we have two predicates: is_SBR and is_solvable that turn out to be the same?</p>",
        "id": 221475155,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609713846
    },
    {
        "content": "<p>No</p>",
        "id": 221475161,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609713858
    },
    {
        "content": "<p>Each definition comes with pain.</p>",
        "id": 221475168,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609713869
    },
    {
        "content": "<p>A definition is either useless or has a bunch of theorems proved about it to make it useful. So you want as few as possible, because it's hard work to make a definition useful!</p>",
        "id": 221475191,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609713914
    },
    {
        "content": "<p>Currently we have a predicate is_SBR that automatically defines an intermediate_field</p>",
        "id": 221475194,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609713924
    },
    {
        "content": "<p>What's it a predicate on?</p>",
        "id": 221475199,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609713937
    },
    {
        "content": "<p>If it's on elements then it sounds like you have this predicate already.</p>",
        "id": 221475210,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609713961
    },
    {
        "content": "<p>elements of E (if E is an arbitrary extension of F)</p>",
        "id": 221475246,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609713963
    },
    {
        "content": "<p>So \"the notion of an algebraic element being solvable\" which you mentioned above -- sounds like you have this.</p>",
        "id": 221475254,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714000
    },
    {
        "content": "<p>that predicate is just inductively constructed from the field operations and taking roots</p>",
        "id": 221475262,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609714012
    },
    {
        "content": "<p>rather than being: minimal polynomial has solvable galois group</p>",
        "id": 221475270,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609714027
    },
    {
        "content": "<p>So that's the theorem you want to prove.</p>",
        "id": 221475274,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714035
    },
    {
        "content": "<p>yes, the problem is that it's annoying to write \"minimal polynomial has solvable galois group\"</p>",
        "id": 221475284,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609714061
    },
    {
        "content": "<p>Aah I see! But you don't have to write it once you've proved the theorem :-)</p>",
        "id": 221475295,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714079
    },
    {
        "content": "<p>true, but when proving the theorem you don't want to have to keep writing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">is_solvable</span> <span class=\"o\">((</span><span class=\"n\">minimal_polynomial</span> <span class=\"o\">(</span><span class=\"n\">is_integral</span> <span class=\"n\">α</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">F</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">minimal_polynomial</span> <span class=\"o\">(</span><span class=\"n\">is_integral</span> <span class=\"n\">α</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 221475340,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609714103
    },
    {
        "content": "<p>Definitely don't make a second definition which turns out to be equivalent to something you have already. If you do this then you'll find that you'll have to choose which one of them is the \"normal form\" for e.g. simp lemmas, and then you'll realise that the other one is useless.</p>",
        "id": 221475355,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714135
    },
    {
        "content": "<p>I would definitely be tempted to make notation for Gal(E/F), looking at what you have there.</p>",
        "id": 221475432,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714236
    },
    {
        "content": "<p>but don't make new definitions if you can possibly help it.</p>",
        "id": 221475459,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714274
    },
    {
        "content": "<p>you mean, make notation for Galois group of an element?</p>",
        "id": 221475465,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609714288
    },
    {
        "content": "<p>is_solvable (Gal (splitting_field alpha) F) -- would that be OK?</p>",
        "id": 221475525,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714336
    },
    {
        "content": "<p><code>spl alpha</code>?</p>",
        "id": 221475526,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714343
    },
    {
        "content": "<p>Or maybe F (splitting_field alpha) -- is that the way it usually is?</p>",
        "id": 221475547,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714377
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/240192-Berkeley-Lean.20Seminar/topic/Solvable.20field.20extensions/near/221475525\">said</a>:</p>\n<blockquote>\n<p>is_solvable (Gal (splitting_field alpha) F) -- would that be OK?</p>\n</blockquote>\n<p>seems reasonable</p>",
        "id": 221475562,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609714411
    },
    {
        "content": "<p>Gal(E/F) is one of those weird things where the Lean people would say \"just define it for an arbitrary F-algebra E\" and the maths people go \"aargh no\"</p>",
        "id": 221475620,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714452
    },
    {
        "content": "<p>I think I'd be tempted to call it Aut F E</p>",
        "id": 221475633,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714490
    },
    {
        "content": "<p>hmm except that it's then not clear that it's F-algebra auts I guess, it could be F-module auts.</p>",
        "id": 221475656,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609714519
    }
]