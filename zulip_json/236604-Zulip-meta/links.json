[
    {
        "content": "<p>Maybe it would be nice to also have <code>#tpil</code> <code>#homepage</code> <code>#webeditor</code> <code>#tutorial</code> <code>#docs</code> and such. Or is this asking too much?</p>",
        "id": 196952013,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588972817
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> what do you think?</p>",
        "id": 196952028,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588972827
    },
    {
        "content": "<p>#tpil would be brilliant, I have genuinely lost count of the number of times I've opened a new tab, googled theorem proving in Lean, and then cut and pasted the link</p>",
        "id": 196956344,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588975910
    },
    {
        "content": "<p>Who has the power to do this again? <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> and Rob?</p>",
        "id": 196957463,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588976705
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>. It's linked to the admin role, and you find people with that role by clicking settings -&gt; organization settings -&gt; users and sorting by role</p>",
        "id": 196958627,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588977654
    },
    {
        "content": "<p>give me a list of links please</p>",
        "id": 196974423,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589001364
    },
    {
        "content": "<ul>\n<li><code>#tpil</code> - <a href=\"https://leanprover.github.io/theorem_proving_in_lean/\" title=\"https://leanprover.github.io/theorem_proving_in_lean/\">https://leanprover.github.io/theorem_proving_in_lean/</a></li>\n<li><code>#homepage</code> - <a href=\"https://leanprover-community.github.io\" title=\"https://leanprover-community.github.io\">https://leanprover-community.github.io</a></li>\n<li><code>#webeditor</code> - <a href=\"https://leanprover-community.github.io/lean-web-editor\" title=\"https://leanprover-community.github.io/lean-web-editor\">https://leanprover-community.github.io/lean-web-editor</a></li>\n<li><code>#tutorials</code> - <a href=\"https://github.com/leanprover-community/tutorials\" title=\"https://github.com/leanprover-community/tutorials\">https://github.com/leanprover-community/tutorials</a></li>\n<li><code>#docs</code> - <a href=\"https://leanprover-community.github.io/mathlib_docs\" title=\"https://leanprover-community.github.io/mathlib_docs\">https://leanprover-community.github.io/mathlib_docs</a></li>\n</ul>",
        "id": 196974757,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589002067
    },
    {
        "content": "<p><a href=\"https://leanprover.github.io/theorem_proving_in_lean/\" title=\"https://leanprover.github.io/theorem_proving_in_lean/\">#tpil</a> <a href=\"https://leanprover-community.github.io/\" title=\"https://leanprover-community.github.io/\">#homepage</a> <a href=\"https://leanprover-community.github.io/lean-web-editor\" title=\"https://leanprover-community.github.io/lean-web-editor\">#webeditor</a> <a href=\"https://github.com/leanprover-community/tutorials\" title=\"https://github.com/leanprover-community/tutorials\">#tutorials</a> <a href=\"https://leanprover-community.github.io/mathlib_docs\" title=\"https://leanprover-community.github.io/mathlib_docs\">#docs</a></p>",
        "id": 196974972,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589002545
    },
    {
        "content": "<p>Thanks a lot!</p>",
        "id": 196975011,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589002587
    },
    {
        "content": "<p>This is great! Many thanks all!</p>",
        "id": 196978192,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589009000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Find.20command/near/197997149\">said</a>:</p>\n<blockquote>\n<p>For completeness, <a href=\"https://leanprover-community.github.io/contribute/naming.html\">here</a> are the naming conventions. (Do we need #naming?)</p>\n</blockquote>",
        "id": 197997707,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589837256
    },
    {
        "content": "<p>Testing a few more: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/manifold\">docs#manifold</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat\">docs#nat</a>.succ <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int/src\">src#int</a>.add <a href=\"https://leanprover-community.github.io/mathlib_docs/find/vector_space/src\">src#vector_space</a></p>",
        "id": 198252632,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590006336
    },
    {
        "content": "<p>Ah, seems unhappy parsing dots in identifiers :/</p>",
        "id": 198252813,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590006428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/links/near/198252632\">said</a>:</p>\n<blockquote>\n<p>Testing a few more: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/manifold\">docs#manifold</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.succ\">docs#nat.succ</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int/src\">src#int</a>.add <a href=\"https://leanprover-community.github.io/mathlib_docs/find/vector_space/src\">src#vector_space</a></p>\n</blockquote>",
        "id": 198254199,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590007088
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/links/near/198252632\">said</a>:</p>\n<blockquote>\n<p>Testing a few more: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/manifold\">docs#manifold</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.succ\">docs#nat.succ</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.add/src\">src#int.add</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/vector_space/src\">src#vector_space</a></p>\n</blockquote>",
        "id": 198254279,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590007150
    },
    {
        "content": "<p>there we go</p>",
        "id": 198254284,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590007154
    },
    {
        "content": "<p>wow that's a pretty nifty URL scheme. I might send myself PMs just to use this for lookup</p>",
        "id": 198254475,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590007243
    },
    {
        "content": "<p>Ha ha I had exactly that thought today but I thought better of it! It's certainly quicker than firing up a browser and opening up your bookmarks and navigating to the docs site and then searching for the function name and knowing that the search might not even work...</p>",
        "id": 198267164,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590014989
    },
    {
        "content": "<p>huh i just always have a browser instance with a mathlib docs tab (at least on my laptop where I write code, not on my phone)</p>",
        "id": 198272724,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590019677
    },
    {
        "content": "<p>But even with the docs tab open it can happen that search for a precise term name doesn't take you to the definition of that term</p>",
        "id": 198293854,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590046457
    },
    {
        "content": "<p>Yeah, isn't the docs search just an elasticsearch or google search thing? It would be much better if we could have something more like vscode's <code>#foo</code> menu</p>",
        "id": 198293960,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590046564
    },
    {
        "content": "<p>FYI, <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> has a student working on this.</p>",
        "id": 198293994,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590046604
    },
    {
        "content": "<p>I guess the low effort version is an input field with no live feedback where you can type a name and it just uses the URL scheme</p>",
        "id": 198294089,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590046699
    },
    {
        "content": "<p>The low low effort version is, type <a href=\"https://leanprover-community.github.io/mathlib_docs/find/classical.em\">https://leanprover-community.github.io/mathlib_docs/find/classical.em</a> into the URL. But yes, I've been promised some movement on a real name/doc string search function soon.</p>",
        "id": 198297419,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590049783
    },
    {
        "content": "<p>You could even set up your browser to do something like Zulip linkification if you wanted. So <code>docs classical.em</code> in the URL bar would take you there.</p>",
        "id": 198297534,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590049879
    },
    {
        "content": "<p>I've been using this \"guess the URL\" method for years with metamath, e.g. <a href=\"http://us.metamath.org/mpeuni/pnt.html\">http://us.metamath.org/mpeuni/pnt.html</a> . It is very slightly easier in that case because the URLs are not redirects, so I can just leave a page open and change the label portion of the URL to find a theorem. With the mathlib docs, it immediately redirects to something else, so the URL becomes a kind of magic incantation that you wouldn't know unless you stumble upon it in e.g. a linkifier (which is exactly what happened to me above).</p>",
        "id": 198298679,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590050881
    },
    {
        "content": "<p>Perhaps we could provide a link to help people set up automatic linkification in the browser bar? Would a bookmarklet help?</p>",
        "id": 198299044,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590051125
    },
    {
        "content": "<p>We could, I'm not sure where to put it though. In Chrome I just went to Settings -&gt; Search Engines and added a new search engine with keyword <code>mathlib</code>, query url <code>https://leanprover-community.github.io/mathlib_docs/find/%s</code></p>",
        "id": 198299205,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590051276
    },
    {
        "content": "<p>Not sure exactly what a bookmarklet does compared to that.</p>",
        "id": 198299241,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590051317
    },
    {
        "content": "<p>You stumbled onto this a few hours after it went live btw, not like you were missing it for long!</p>",
        "id": 198299275,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590051359
    },
    {
        "content": "<p>I have so many search engines on this list. Chrome must add them automatically every time you search a site.</p>",
        "id": 198299381,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590051447
    },
    {
        "content": "<p>Ideally there should be a link very close to the google search bar in the mathlib docs explaining this</p>",
        "id": 198299385,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590051452
    },
    {
        "content": "<p>I expect that adding an actual input field there is about as much work as writing a page to explain how to set up the custom search mechanism in your browser</p>",
        "id": 198299500,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590051543
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/links/near/198299275\">said</a>:</p>\n<blockquote>\n<p>You stumbled onto this a few hours after it went live btw, not like you were missing it for long!</p>\n</blockquote>\n<p>I am rather more connected to daily goings-on than the average lean user, though. Also this stream is not a default stream so most people have not seen this discussion, even considering users that use Zulip. I suspect there are a lot of programmer types who don't read Zulip at all and are just looking at stuff that looks like documentation, and this feature needs to be discoverable for them</p>",
        "id": 198299842,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590051850
    },
    {
        "content": "<p>I'm well aware it can be better publicized, it's 12 hours old and I did it while I was procrastinating writing an exam. Something will land on the docs pages when I have time or if anyone else wants to make a PR :)</p>",
        "id": 198300804,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590052619
    },
    {
        "content": "<p>But ultimately this is just a placeholder for better search.</p>",
        "id": 198300811,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590052629
    },
    {
        "content": "<p>chore: change <a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a> to link to <a href=\"https://leanprover-community.github.io/mwe.html\">https://leanprover-community.github.io/mwe.html</a></p>",
        "id": 198467601,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590167249
    },
    {
        "content": "<p>Another request: make #file-not-found point to <a href=\"https://leanprover-community.github.io/file-not-found.html\">https://leanprover-community.github.io/file-not-found.html</a></p>",
        "id": 199428136,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591047968
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/file-not-found.html\">#file-not-found</a> ?</p>",
        "id": 199431547,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591050498
    },
    {
        "content": "<p>#mil should link to <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">https://leanprover-community.github.io/mathematics_in_lean/</a></p>",
        "id": 199571675,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591147445
    },
    {
        "content": "<p>Ooh, I also want to give this a try for once. <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a></p>",
        "id": 199591739,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1591172697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Great! You levelled-up. You now have +5xp in the \"zulip-admin\" skill.</p>",
        "id": 199591910,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591172805
    },
    {
        "content": "<p>Skills have individual XP?? This system sounds harder than I thought...</p>",
        "id": 199592080,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1591172896
    },
    {
        "content": "<p>Ooh well. You shouldn't complain. You're already level 99 in \"lean 4\". Most of us haven't even started that one.</p>",
        "id": 199592209,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591172997
    },
    {
        "content": "<p>I don't think this is the right link. It encourages people to read this book in their web browser when it's designed to be read in VSCode.</p>",
        "id": 199592568,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591173211
    },
    {
        "content": "<p>But maybe it's ok since <a href=\"https://leanprover-community.github.io/mathematics_in_lean/introduction.html#getting-started\">https://leanprover-community.github.io/mathematics_in_lean/introduction.html#getting-started</a> starts by explaining that point.</p>",
        "id": 199592655,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591173244
    },
    {
        "content": "<p>I think <a href=\"https://github.com/leanprover-community/mathlib#installation\">#install</a> should redirect to <a href=\"https://leanprover-community.github.io/get_started.html#regular-install\">https://leanprover-community.github.io/get_started.html#regular-install</a> instead of the mathlib repo.</p>",
        "id": 200030641,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591546612
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/get_started.html#regular-install\">#install</a> ?</p>",
        "id": 200030834,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591546887
    },
    {
        "content": "<p>It works, though we may want to add extra whitespace at the end of the file so it's more obvious that we're linking the last section.</p>",
        "id": 200030912,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591546992
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/fincard\">branch#fincard</a></p>",
        "id": 207746289,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1598138212
    },
    {
        "content": "<p>Can we adjust the linkifier to not consume trailing <code>.</code>? At the moment <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exterior_algebra.\">docs#exterior_algebra.</a> and <a href=\"https://github.com/leanprover-community/mathlib/tree/fincard.\">branch#fincard.</a> give invalid links, as the <code>.</code> is interpreted as part of the link.</p>",
        "id": 212057026,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1601634344
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212057496,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601634632
    },
    {
        "content": "<p>Hmm, the current regex is <code>docs#(?P&lt;decl&gt;[a-zA-Z0-9_.'-]+)</code>, if you can suggest an improvement I'll change it</p>",
        "id": 212057617,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601634727
    },
    {
        "content": "<p>Maybe <code>docs#(?P&lt;decl&gt;[a-zA-Z0-9_.'-]*[a-zA-Z0-9_'-])</code>?</p>",
        "id": 212057677,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1601634793
    },
    {
        "content": "<p>(Untested)</p>",
        "id": 212057690,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1601634808
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/exterior_algebra\">docs#exterior_algebra</a>.</p>",
        "id": 212057872,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601634938
    },
    {
        "content": "<p>Interestingly, <code>docs#37</code> does seem to be parsed by the linkifier but Zulip doesn't want to post it.</p>",
        "id": 212059977,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1601636590
    },
    {
        "content": "<p>That's weird...</p>",
        "id": 212061000,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601637326
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/37a\">docs#37a</a> is fine, but <code>branch#37</code> has the same problem</p>",
        "id": 212066554,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1601641348
    },
    {
        "content": "<p>I went to the Coq Zulip and they have a stackexchange bot. How hard is that to set up? Occasional Lean questions get asked on stackoverflow, and Scott has long observed that they have big google points</p>",
        "id": 212087914,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601651670
    },
    {
        "content": "<p>Looks like Zulip <a href=\"https://github.com/zulip/python-zulip-api/tree/master/zulip_bots/zulip_bots/bots/stack_overflow\">has a bot for it</a> but it's not an outgoing webhook like GitHub so you need a server to run the bot on.</p>",
        "id": 212090623,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601652834
    },
    {
        "content": "<p>There's not exactly a flood of Lean questions: <a href=\"https://stackoverflow.com/questions/tagged/lean\">https://stackoverflow.com/questions/tagged/lean</a></p>",
        "id": 212090725,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601652866
    },
    {
        "content": "<p>I could run it on my server, next to the RSS bot</p>",
        "id": 212096417,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1601655505
    },
    {
        "content": "<p>Can you get an RSS feed of SO posts with a certain tag? Then you don't even need a new bot</p>",
        "id": 212096782,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601655674
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/feeds/tag?tagnames=lean&amp;sort=newest\">https://stackoverflow.com/feeds/tag?tagnames=lean&amp;sort=newest</a></p>",
        "id": 212097125,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601655854
    },
    {
        "content": "<p>Sure, even better!</p>",
        "id": 212105326,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1601660166
    },
    {
        "content": "<p>I don't seem to be able to link to branches...</p>",
        "id": 212144024,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1601685126
    },
    {
        "content": "<p>It seems any message with <code>branch # bell</code> (remove the spaces) fails to post.</p>",
        "id": 212144041,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1601685157
    },
    {
        "content": "<p>I was having trouble linking a tactic doc earlier too. I couldn't even preview <code>tactic # norm_num</code> (without the spaces).</p>",
        "id": 212144124,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601685280
    },
    {
        "content": "<p>If we haven't changed our linkifiers recently, we should see if this has been reported to Zulip already somewhere. I didn't see it in the open issues: <a href=\"https://github.com/zulip/zulip/issues\">https://github.com/zulip/zulip/issues</a></p>",
        "id": 212144204,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601685369
    },
    {
        "content": "<p>I did change the linkifiers yesterday (see earlier in this thread) but the new ones don't seem more dangerous than the old AFAICT</p>",
        "id": 212165129,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1601721282
    },
    {
        "content": "<p>Bizarre, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/norm_num\">docs#norm_num</a> works but I still can't get <code>tactic#norm_num</code> to work.</p>",
        "id": 212178704,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601741840
    },
    {
        "content": "<p>As far as I can tell the regexes are pretty much the same.</p>",
        "id": 212178713,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601741867
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/vscode-lean/issues/227\">vscode-lean#227</a> goes to a nonexistant repo, it should be <code>leanprover</code> not <code>leanprover-community</code></p>",
        "id": 213405066,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1602757506
    },
    {
        "content": "<p>The linkifier doesn't have any logic that looks at the repo name to decide the organisation. You'll need to use <a href=\"https://github.com/leanprover/vscode-lean/issues/227\">leanprover/vscode-lean#227</a></p>",
        "id": 213490105,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602797249
    },
    {
        "content": "<p>I don't know if the tactic linkifier was changed again, but it seems to be completely broken now. Looking again at the linkifier, the URL part says <code>name</code> but the regex group is named <code>decl</code>, which is suspicious.</p>",
        "id": 213491524,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602798022
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#ring\">tactic#ring</a>?</p>",
        "id": 213600924,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602874840
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#norm_num\">tactic#norm_num</a>!</p>",
        "id": 213601232,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602875010
    },
    {
        "content": "<p>We have <code>attr</code> and <code>tactic</code> linkifiers, so we should have <code>hole</code>, <code>cmd</code>, and <code>note</code> for completeness.</p>",
        "id": 214719894,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1603813902
    }
]