[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>I can type codes without the closing backticks\n</code></pre></div>",
        "id": 207145677,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/quoting.20codeblocks/near/207145677\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>I can type codes without the closing backticks\n````\nbut if I reply to such a message, things go south\n</code></pre></div>\n\n\n</blockquote>",
        "id": 207145731,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672085
    },
    {
        "content": "<p>that'll teach you</p>",
        "id": 207145954,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597672216
    },
    {
        "content": "<p>so it's not a feature?</p>",
        "id": 207145972,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672231
    },
    {
        "content": "<p>feel free to open an issue at Zulip :-) Hopefully they'll fix the code-without-closing-backtick bug</p>",
        "id": 207146100,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597672292
    },
    {
        "content": "<p>it wasn't a problem until we decided that backticks without any langugage specification means Lean</p>",
        "id": 207146191,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672326
    },
    {
        "content": "<p>because if you type any language name and press shift+enter, you get the closing backticks automatically</p>",
        "id": 207146223,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672348
    },
    {
        "content": "<p>That was one of the best decisions ever (-;</p>",
        "id": 207146228,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597672350
    },
    {
        "content": "<p>yeah but now the closing backticks aren't provided automatically</p>",
        "id": 207146262,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672365
    },
    {
        "content": "<p>&lt;--- so this lazy guy decided to train his muscle memory to not type the closing backticks</p>",
        "id": 207146283,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672381
    },
    {
        "content": "<p>feel free to still put <code>lean</code></p>",
        "id": 207146287,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597672384
    },
    {
        "content": "<p>&lt;-- lazy</p>",
        "id": 207146298,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597672392
    },
    {
        "content": "<p>&lt;-- muscle memory</p>",
        "id": 207146336,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597672423
    },
    {
        "content": "<p>You must be one of the heathens who opens <code>&lt;p&gt;</code> tags and never closes them</p>",
        "id": 207157911,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597678239
    },
    {
        "content": "<p>/me shivers <code>&lt;br/&gt; &lt;br/&gt; &lt;br/&gt;</code></p>",
        "id": 207158102,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597678334
    },
    {
        "content": "<p>I remember the days when opening &lt;p&gt; tags without closing them was legal</p>",
        "id": 207161367,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597679849
    },
    {
        "content": "<p>or <code>&lt;html&gt;</code> and <code>&lt;body&gt;</code></p>",
        "id": 207161545,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597679946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> It's completely legal not to close <code>&lt;p&gt;</code> elements in (the current version of) HTML5: <a href=\"https://html.spec.whatwg.org/multipage/parsing.html#unclosed-formatting-elements\">https://html.spec.whatwg.org/multipage/parsing.html#unclosed-formatting-elements</a><br>\nIt is even defined what the following means:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">b</span><span class=\"p\">&gt;</span>This is bold\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>This is a different paragraph (not nested in the first one), but still bold!\n</code></pre></div>",
        "id": 207161830,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1597680099
    },
    {
        "content": "<p>what, this is nuts</p>",
        "id": 207162314,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597680330
    },
    {
        "content": "<p>this is what happens when you give in to peer pressure</p>",
        "id": 207162424,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597680368
    },
    {
        "content": "<p>just say no to malformed HTML</p>",
        "id": 207162445,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597680379
    },
    {
        "content": "<p>I went to the Zulip zulip to ask a question about the linkifier and they were pretty friendly</p>",
        "id": 207204066,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597703179
    }
]