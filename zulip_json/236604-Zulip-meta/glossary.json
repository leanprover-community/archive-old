[
    {
        "content": "<p>Can/should we have a linkifier for glossary#diamond ?</p>",
        "id": 259220962,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1635331974
    },
    {
        "content": "<p>More generally should we have linkifiers for everything mentioned in <a href=\"https://leanprover-community.github.io/glossary.html#diamond\">https://leanprover-community.github.io/glossary.html#diamond</a> ?</p>",
        "id": 259227599,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635335921
    },
    {
        "content": "<p>(or perhaps, more reasonably, for many such things)</p>",
        "id": 259227646,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635335974
    },
    {
        "content": "<p>I think Johan is suggesting glossary#foo goes to the entry about foo in the glossary? Although some of the ids that are generated for the titles aren't great for that purpose, eg. (<code>heavy-coderflcode--heavy-codereflcode</code>)</p>",
        "id": 259229593,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1635337115
    },
    {
        "content": "<p>Right I saw that</p>",
        "id": 259229625,
        "sender_full_name": "Julian Berman",
        "timestamp": 1635337144
    },
    {
        "content": "<p>I'm gonna fix that in a PR later</p>",
        "id": 259229633,
        "sender_full_name": "Julian Berman",
        "timestamp": 1635337152
    },
    {
        "content": "<p>(by at least removing all the backticks from the titles)</p>",
        "id": 259229660,
        "sender_full_name": "Julian Berman",
        "timestamp": 1635337177
    },
    {
        "content": "<p>OK, thanks to Bryan, <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/214\">this was merged</a>, so though it's a bit harder to discover these (you need to open Developer Tools or otherwise look at the HTML), you can now write <code>#heavy-rfl</code> for that one, or <code>glossary#heavy-rfl</code> as soon as we have that linkifier.</p>",
        "id": 259292221,
        "sender_full_name": "Julian Berman",
        "timestamp": 1635362148
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/glossary.html#heavy-rfl\">glossary#heavy-rfl</a></p>",
        "id": 259292655,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1635362342
    },
    {
        "content": "<p>Looks like it works!</p>\n<p>Regarding discoverability, I think if we could get the <code>#</code> which pop up when you hover over the heading to give the nicer anchor, that'd probably be sufficient.</p>",
        "id": 259292817,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1635362414
    },
    {
        "content": "<p>(That'll require messing with the python code though.)</p>",
        "id": 259292861,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1635362441
    },
    {
        "content": "<p>Should HoTT, UH (unification hints), TC (type classes) and fbip (functional but in place) be added to the glossary ? As a newcomer I would find it useful as acronyms are hard to search for.</p>",
        "id": 262313469,
        "sender_full_name": "Gabriel DORIATH DÖHLER",
        "timestamp": 1637585129
    },
    {
        "content": "<p>Sounds like a good idea! I think we should also include \"dot notation\" (a.k.a. \"field notation\" or \"generalized (structure) projections\" in the Lean 3 source code)</p>",
        "id": 262313897,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1637585362
    },
    {
        "content": "<p>Maybe also “API”?</p>",
        "id": 262316606,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1637586868
    },
    {
        "content": "<p>All the above definitely seem like good ideas to me too -- maybe put them in an issue ticket so they're tracked -- I haven't made any glossary progress in a week or two, but will get back to it soon unless someone else beats me to these.</p>",
        "id": 262317787,
        "sender_full_name": "Julian Berman",
        "timestamp": 1637587555
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/leanprover-community.github.io/issues/226\">https://github.com/leanprover-community/leanprover-community.github.io/issues/226</a></p>",
        "id": 262320309,
        "sender_full_name": "Gabriel DORIATH DÖHLER",
        "timestamp": 1637588953
    },
    {
        "content": "<p>Created a <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/227\">PR for explaining dot notation</a></p>",
        "id": 262321805,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1637589678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/glossary/near/262321805\">said</a>:</p>\n<blockquote>\n<p>Created a <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/227\">PR for explaining dot notation</a></p>\n</blockquote>\n<p>When I first read that I thought of GraphViz dot notation, then realized it probably means list without the syntactic sugar, e.g. </p>\n<p>[a,b,c] is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">,</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">,[])))</span>\n</code></pre></div>",
        "id": 262322989,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1637590162
    },
    {
        "content": "<p>It's neither of these explanations. Let's put it in the glossary...</p>",
        "id": 262326199,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1637591605
    }
]