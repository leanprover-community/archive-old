[
    {
        "content": "<p>We should make a chatbot that responds to the tag #mwe by regurgitating a short description of why we ask for MWE's and gives a link to a longer discussion. That discussion could be a particular post on this server (which then I think means it's editable by exactly one person?) or it could be a flat html page inside of a github project.</p>",
        "id": 195715984,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588169844
    },
    {
        "content": "<p>Here is the documentation on zulip chatbots<br>\n<a href=\"https://zulipchat.com/api/running-bots\" title=\"https://zulipchat.com/api/running-bots\">https://zulipchat.com/api/running-bots</a></p>",
        "id": 195716009,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588169860
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-(MWE)\" title=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-(MWE)\">https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-(MWE)</a></p>",
        "id": 195716157,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588169906
    },
    {
        "content": "<p>I think the task \"linkify #mwe to the link kenny put up\" accomplishes ~half of the goal and should be pretty quick for <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 195718321,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588170783
    },
    {
        "content": "<p>I have independently thought this. I'd also like it to flag when people post code which doesn't compile</p>",
        "id": 195718359,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588170794
    },
    {
        "content": "<p>obviously it's sometimes fine to post code which doesn't compile sometimes</p>",
        "id": 195718390,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588170808
    },
    {
        "content": "<p>huh that sounds maybe hard</p>",
        "id": 195718412,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588170822
    },
    {
        "content": "<p>I guess you just need a timeout like the codewars server</p>",
        "id": 195718501,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588170842
    },
    {
        "content": "<p>e.g. if someone posts 50 lines and says \"there's an error on line 49\" then the code won't compile and then if someone else posts the bottom 5 lines and fixes it then that won't compile either</p>",
        "id": 195718524,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588170848
    },
    {
        "content": "<p>so I couldn't really think of a framework which was perfect</p>",
        "id": 195718572,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588170869
    },
    {
        "content": "<p>but this is a step in the right direction</p>",
        "id": 195718630,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588170889
    },
    {
        "content": "<p>No, I certainly don't want a bot that starts crying and shouting if a code snippet doesn't compile</p>",
        "id": 195718780,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588170958
    },
    {
        "content": "<p>I'd rather have linkified keywords</p>",
        "id": 195718842,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588170970
    },
    {
        "content": "<p><code>!mwe</code>, <code>!fixyourcode</code>, <code>!usetopic</code>, whatever</p>",
        "id": 195718958,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588171016
    },
    {
        "content": "<p><a href=\"https://github.com/SivagiriVisakan/echo-bot-zulip\" title=\"https://github.com/SivagiriVisakan/echo-bot-zulip\">https://github.com/SivagiriVisakan/echo-bot-zulip</a><br>\nThis code runs a zulip bot that applies the identity function to a message and then sends it. Should be pretty trivial to modify it to a constant function.<br>\nI think it needs to run on a box that is not the zulip server, and that is not trivial for me so I am going to stop digging here.</p>",
        "id": 195719170,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588171095
    },
    {
        "content": "<p>The linkifier is a little more restrictive than I imagined, it looks like Mario just found a solution?</p>",
        "id": 195719696,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171330
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/mwe\" title=\"https://github.com/leanprover-community/mathlib/wiki/mwe\">#mwe</a> ?</p>",
        "id": 195719794,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171380
    },
    {
        "content": "<p>Thanks, Mario!</p>",
        "id": 195719833,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588171402
    },
    {
        "content": "<p>oh wait, that linked me to not-quite-the-right-page</p>",
        "id": 195719873,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588171425
    },
    {
        "content": "<p>Yeah, there are restrictions.</p>",
        "id": 195719890,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171432
    },
    {
        "content": "<p>It won't match arbitrary regexes, so you need to capture <code>mwe</code>, and whatever you capture needs to appear in the output url.</p>",
        "id": 195719975,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171461
    },
    {
        "content": "<p>And there are restrictions on the output url that I didn't figure out before Mario got that one.</p>",
        "id": 195719996,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171473
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\" title=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a></p>",
        "id": 195720001,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588171475
    },
    {
        "content": "<p>I think it works now: <a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\" title=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a></p>",
        "id": 195720008,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588171476
    },
    {
        "content": "<p>we live in the future</p>",
        "id": 195720087,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588171508
    },
    {
        "content": "<p>for reasons I can't understand, the linkifier <em>requires</em> you to have at least one capturing group in the regex, and it <em>requires</em> you to use it in the url</p>",
        "id": 195720168,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588171550
    },
    {
        "content": "<p>I think this is another example of Zulip being bad at url escaping.</p>",
        "id": 195720172,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171551
    },
    {
        "content": "<p>See <a href=\"https://leanprover-community.github.io/archive/stream/218272-FoMM-/-Lean-Together-2020/index.html\" title=\"https://leanprover-community.github.io/archive/stream/218272-FoMM-/-Lean-Together-2020/index.html\">https://leanprover-community.github.io/archive/stream/218272-FoMM-/-Lean-Together-2020/index.html</a></p>",
        "id": 195720198,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171561
    },
    {
        "content": "<p>so I made it capture the <code>e</code> in <code>mwe</code> and map it to a random <code>e</code> in the url</p>",
        "id": 195720265,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588171574
    },
    {
        "content": "<p>Which is in a subdirectory of <a href=\"https://leanprover-community.github.io/archive/stream/218272-FoMM-\" title=\"https://leanprover-community.github.io/archive/stream/218272-FoMM-\">https://leanprover-community.github.io/archive/stream/218272-FoMM-</a></p>",
        "id": 195720276,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171578
    },
    {
        "content": "<p>I tried something similar but it still rejected the target URL, possibly because of <code>-</code> or <code>?</code> symbols, I'm not sure...</p>",
        "id": 195720434,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588171629
    },
    {
        "content": "<p>I also had to escape the parentheses</p>",
        "id": 195720457,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588171641
    },
    {
        "content": "<p>because apparently even though there is a really messy <code>%(id)s</code> notation for regex groups, you can't use parentheses anywhere else in the url</p>",
        "id": 195720566,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588171679
    },
    {
        "content": "<p>and there isn't any actual documentation for the syntax</p>",
        "id": 195720636,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588171700
    },
    {
        "content": "<p>apparently on StackOverflow they call this a reprex - a reproducible example. <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\" title=\"https://stackoverflow.com/help/minimal-reproducible-example\">https://stackoverflow.com/help/minimal-reproducible-example</a></p>",
        "id": 195721303,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1588171932
    },
    {
        "content": "<p>We can also linkify <code>#mre</code>, and we can even do it with one capture!!</p>",
        "id": 195721414,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588171974
    },
    {
        "content": "<p>yeah, they used to use MWE and later changed it to MCVE and other funny things like reprex were tried but I don't think they caught on</p>",
        "id": 195721533,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588172010
    },
    {
        "content": "<p>Nice! anyone looking to push changes to the <a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\" title=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a> page could start by adding a link to that stackoverflow post and/or putting some examples / non-examples of MWEs, say sourced from recent discussions on the new member stream</p>",
        "id": 195721685,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172061
    },
    {
        "content": "<p>I think if they keep changing the acronym it defeats the point</p>",
        "id": 195721686,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588172061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252300\">@Jalex Stark</span> you have edit rights, don't you?</p>",
        "id": 195721759,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588172095
    },
    {
        "content": "<p>I don't really know what that means?</p>",
        "id": 195721835,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172119
    },
    {
        "content": "<p>What is your github user name?</p>",
        "id": 195721873,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588172136
    },
    {
        "content": "<p>khanh93</p>",
        "id": 195721922,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172153
    },
    {
        "content": "<p>See also <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\" title=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a></p>",
        "id": 195722092,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588172196
    },
    {
        "content": "<p>I think if I were trying to edit that page, I would do <code>git clone &lt;url&gt;</code> locally, then edit it in my text editor, then do <code>git push</code> or something like that and wait for someone to approve it</p>",
        "id": 195722139,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172207
    },
    {
        "content": "<p>but that sounds not-fun so I didn't do it</p>",
        "id": 195722186,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172219
    },
    {
        "content": "<p>Does that work for github wiki pages?</p>",
        "id": 195722202,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588172224
    },
    {
        "content": "<p>These are wiki pages, not files in the repo</p>",
        "id": 195722233,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588172235
    },
    {
        "content": "<p>I think <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\" title=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> would be better as a bot message. No one wants to load a page to read that</p>",
        "id": 195722244,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588172240
    },
    {
        "content": "<p>I don't know what a github wiki page is or how to interact with them</p>",
        "id": 195722356,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172274
    },
    {
        "content": "<p>I agree, but it's lower cost to add a linkifier than to write a bot. I'm not gonna do that right now, anyone else should feel free!</p>",
        "id": 195722476,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588172297
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/.23mwe.20bot/near/195722476\" title=\"#narrow/stream/236604-Zulip-meta/topic/.23mwe.20bot/near/195722476\">said</a>:</p>\n<blockquote>\n<p>I agree, but it's lower cost to add a linkifier than to write a bot. I'm not gonna do that right now, anyone else should feel free!</p>\n</blockquote>\n<p>interpretation: the list of linkifiers is a todo list for bots</p>",
        "id": 195722606,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252300\">@Jalex Stark</span> I see a \"edit\" button next to a big green \"new page\" button when I visit <a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\" title=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a></p>",
        "id": 195722686,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588172384
    },
    {
        "content": "<p>that sounds like a good feature. i don't see such a button</p>",
        "id": 195722900,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172454
    },
    {
        "content": "<p>Hmm, I invited you with \"write\" access to the repo</p>",
        "id": 195722957,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588172474
    },
    {
        "content": "<p>it looks like you have write access already</p>",
        "id": 195723083,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588172518
    },
    {
        "content": "<p>I have an edit button now. Thanks!<br>\n(the delay was that I had to click a button in an email to accept an invitation, and I guess i'm just bad at receiving notifications for emails)</p>",
        "id": 195723114,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588172522
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/.23mwe.20bot/near/195722957\" title=\"#narrow/stream/236604-Zulip-meta/topic/.23mwe.20bot/near/195722957\">said</a>:</p>\n<blockquote>\n<p>Hmm, I invited you with \"write\" access to the repo</p>\n</blockquote>\n<p>oh now I get emails related to mathlib development, that's pretty cool. what's the policy for giving people write access to the repo? is it something like \"give it to anyone who seriously claims they want to submit something useful\"?<br>\n(also does this role come with any rules or responsibilities?)</p>",
        "id": 195737042,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1588178150
    },
    {
        "content": "<blockquote>\n<p>\"give it to anyone who seriously claims they want to submit something useful\"?</p>\n</blockquote>\n<p>More or less! No roles or responsibilities, though any contributions are welcome!</p>",
        "id": 195737250,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588178234
    },
    {
        "content": "<p>If (when) you get annoyed by the emails, you can un-watch the repo. They're unrelated to having write access, but I guess you get subscribed automatically.</p>",
        "id": 195737399,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588178292
    },
    {
        "content": "<p>I didn't follow closely the bot conversation, but isn't it too powerful? Does it send terminators visiting people who ask too many questions? Yesterday morning when I woke up there were more than 500 messages in the new members stream, and today 0.</p>",
        "id": 195808117,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588233439
    },
    {
        "content": "<p>Yesterday was almost a record for messages sent, losing only to April 8: <a href=\"stats\" title=\"stats\">https://leanprover.zulipchat.com/stats</a></p>",
        "id": 195814202,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588237879
    },
    {
        "content": "<p>Look at the 15 day actives, what happened on April 8?</p>",
        "id": 195814213,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588237891
    },
    {
        "content": "<p>Or April 13, rather, there's a huge daily user spike.</p>",
        "id": 195814286,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588237939
    },
    {
        "content": "<p>Is that the day we raised the dead by subscribing everyone to some streams?</p>",
        "id": 195815173,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588238550
    },
    {
        "content": "<p>Oh, probably.</p>",
        "id": 195815198,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588238574
    },
    {
        "content": "<p>I guess we should do that more often then</p>",
        "id": 195817706,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1588240254
    },
    {
        "content": "<p>Sending terminators or raising the dead?</p>",
        "id": 195817745,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588240278
    },
    {
        "content": "<p>Yes</p>",
        "id": 195818130,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1588240502
    },
    {
        "content": "<p>I think it would be valuable to have a bot that comments after the <a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a> link is given. I think of the past 10 times I've seen a new person be told to give a <a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a>, all but one required some fairly explicit instructions before they do anything about it.</p>",
        "id": 198461780,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590164471
    },
    {
        "content": "<p>Jalex, you're becoming a grumpy old user. Soon Kevin will start making fun of you when you're grumpy, just like he does with me <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> .</p>",
        "id": 198462105,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590164594
    },
    {
        "content": "<p>:) yes, maybe there is no real substitute for patience</p>",
        "id": 198462611,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590164772
    },
    {
        "content": "<p>This was discussed when we first made the <a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a> linkifier and others like it. I think the consensus was this would be great but needs work and no one volunteered to do it</p>",
        "id": 198485403,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590176121
    },
    {
        "content": "<p>oh... that discussion is in this very thread</p>",
        "id": 198485519,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590176181
    },
    {
        "content": "<p>yes, my point was just that we've gathered data now, whereas before it was just a guess</p>",
        "id": 198485636,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590176267
    },
    {
        "content": "<p>it's still blocked on work, for sure.</p>",
        "id": 198485712,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590176299
    }
]