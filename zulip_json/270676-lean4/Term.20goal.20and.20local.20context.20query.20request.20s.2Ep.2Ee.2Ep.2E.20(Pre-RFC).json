[
    {
        "content": "<h1>Term goal and local context query request server protocol extension proposal (Pre-RFC)</h1>\n<h2>Introduction</h2>\n<p>Tactic proofs are easy to follow because you can step through them line by line and watch how the tactic state changes.  <a href=\"https://github.com/leanprover-community/lean/pull/275\">Lean 3.15 therefore extended this feature to term-mode proofs.</a> With this change, Lean also shows for every subterm a tactic state, printing the local context and the expected type.</p>\n<p>This feature makes it easy to understand term-mode proofs since you can now step through them just like a tactic proof.  It is also useful when reading code, since it tells you the names and types of local variables.</p>\n<h2>Proposal</h2>\n<p>In analogy to the <code>$/lean/plainGoal</code> request, we add a <code>$/lean/plainTermGoal</code> request, returning a pretty-printed goal state consisting of the local context and the expected type at the given position.</p>\n<div class=\"codehilite\" data-code-language=\"TypeScript\"><pre><span></span><code><span class=\"kd\">interface</span> <span class=\"nx\">PlainTermGoalParams</span> <span class=\"k\">extends</span> <span class=\"nx\">TextDocumentPositionParams</span> <span class=\"p\">{}</span>\n\n<span class=\"kd\">interface</span> <span class=\"nx\">PlainTermGoal</span> <span class=\"p\">{</span>\n  <span class=\"nx\">goal</span>: <span class=\"kt\">string</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>In the editor, the term goal state would be shown separately and below of the tactic state.  (This is sometimes a bit confusing in Lean 3, when the term goal was shown <em>instead</em> of the tactic state.)</p>",
        "id": 240627853,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1622219041
    },
    {
        "content": "<p>I see, showing the term goal in addition to and after the tactic goal should address the concerns I had about this feature. For example, didn't test this in Lean 3, but we probably still want to look at the tactic goal when placing the cursor on <code>rw [h hp]</code></p>",
        "id": 240634285,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1622222133
    }
]