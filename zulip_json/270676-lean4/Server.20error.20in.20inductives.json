[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Foo</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Foo</span>\n</code></pre></div>\n<p>There is an error over the word <code>Bar</code> with <code>unknown identifier 'Bar'</code> as expected, but hovering over it causes a server error:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Request textDocument/hover failed.\n  Message: type expected\n  b\n  Code: -32603\n</code></pre></div>",
        "id": 243676147,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1624465216
    },
    {
        "content": "<p>On current master I do get a hover, with funny universes</p>",
        "id": 243676957,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624465603
    },
    {
        "content": "<p>I am on <code>Lean (version 4.0.0-nightly-2021-06-23, commit 8454102fc4b0, Release)</code></p>",
        "id": 243677067,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1624465673
    },
    {
        "content": "<p>it was a little finicky to get a reproducer, so I might have missed something</p>",
        "id": 243677240,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1624465749
    },
    {
        "content": "<p>do you know how I can test it from the command line?</p>",
        "id": 243677419,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1624465840
    },
    {
        "content": "<p>See tests/lean/interactive/hover.lean. Use <code>lean --run run.lean hover.lean</code> to run such a file.</p>",
        "id": 243678001,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624466118
    },
    {
        "content": "<p>okay, that works. <code>inductiveTypeExpected.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Foo</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Foo</span>\n            <span class=\"c1\">--^ textDocument/hover</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2021</span><span class=\"bp\">-</span><span class=\"mi\">06</span><span class=\"bp\">-</span><span class=\"mi\">23</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"mi\">8454102</span><span class=\"n\">fc4b0</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n\n<span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"c1\">--run run.lean inductiveTypeExpected.lean</span>\n<span class=\"o\">{</span><span class=\"s2\">\"textDocument\"</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"s2\">\"uri\"</span><span class=\"o\">:</span> <span class=\"s2\">\"file://inductiveTypeExpected.lean\"</span><span class=\"o\">},</span>\n <span class=\"s2\">\"position\"</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"s2\">\"line\"</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s2\">\"character\"</span><span class=\"o\">:</span> <span class=\"mi\">14</span><span class=\"o\">}}</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">message</span> <span class=\"o\">{</span><span class=\"s2\">\"jsonrpc\"</span><span class=\"o\">:</span> <span class=\"s2\">\"2.0\"</span><span class=\"o\">,</span>\n <span class=\"s2\">\"id\"</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n <span class=\"s2\">\"error\"</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"s2\">\"message\"</span><span class=\"o\">:</span> <span class=\"s2\">\"type expected</span><span class=\"se\">\\n</span><span class=\"s2\">  b\"</span><span class=\"o\">,</span> <span class=\"s2\">\"code\"</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"mi\">32603</span><span class=\"o\">}}</span>\n<span class=\"n\">Watchdog</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">read</span> <span class=\"n\">LSP</span> <span class=\"n\">message</span><span class=\"o\">:</span> <span class=\"n\">Stream</span> <span class=\"n\">was</span> <span class=\"n\">closed</span>\n</code></pre></div>",
        "id": 243679803,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1624466925
    },
    {
        "content": "<p>Oh wow, I can reproduce <em>iff</em> this is the first declaration in the file</p>",
        "id": 243680720,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624467342
    },
    {
        "content": "<p>Must be some issue with error recovery during elaboration, not the actual hover</p>",
        "id": 243680837,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624467384
    }
]