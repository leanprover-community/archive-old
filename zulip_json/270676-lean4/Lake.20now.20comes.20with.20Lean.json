[
    {
        "content": "<p>I am happy to announce that the latest Lean 4 nightly <code>10-16</code> now ships with <code>lake</code>! <span aria-label=\"celebration\" class=\"emoji emoji-1f388\" role=\"img\" title=\"celebration\">:celebration:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ elan which lake\nC:\\Users\\Mac\\.elan\\toolchains\\leanprover--lean4---nightly\\bin\\lake.exe\n$ lake --version\nLake version 3.0.0-pre (Lean version 4.0.0-nightly-2021-10-16)\n</code></pre></div>",
        "id": 257786621,
        "sender_full_name": "Mac",
        "timestamp": 1634345299
    },
    {
        "content": "<p>When running <code>lake</code> on Windows MSYS2, a bunch of errors arise during the link process, even with the simplest <code>lake new</code> template.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ lake build\n&gt; <span class=\"nv\">LEAN_PATH</span><span class=\"o\">=</span>.<span class=\"se\">\\b</span>uild<span class=\"se\">\\l</span>ib c:<span class=\"se\">\\U</span>sers<span class=\"se\">\\x</span>ubaiw<span class=\"se\">\\.</span>elan<span class=\"se\">\\t</span>oolchains<span class=\"se\">\\l</span>eanprover--lean4---nightly-2021-10-16<span class=\"se\">\\b</span>in<span class=\"se\">\\l</span>ean -R .<span class=\"se\">\\.</span> -o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\l</span>ib<span class=\"se\">\\F</span>oo.olean -c .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\F</span>oo.c .<span class=\"se\">\\.\\F</span>oo.lean\n&gt; c:<span class=\"se\">\\U</span>sers<span class=\"se\">\\x</span>ubaiw<span class=\"se\">\\.</span>elan<span class=\"se\">\\t</span>oolchains<span class=\"se\">\\l</span>eanprover--lean4---nightly-2021-10-16<span class=\"se\">\\b</span>in<span class=\"se\">\\l</span>eanc -c -o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\F</span>oo.o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\F</span>oo.c -O3 -DNDEBUG -lstdc++\n&gt; <span class=\"nv\">LEAN_PATH</span><span class=\"o\">=</span>.<span class=\"se\">\\b</span>uild<span class=\"se\">\\l</span>ib c:<span class=\"se\">\\U</span>sers<span class=\"se\">\\x</span>ubaiw<span class=\"se\">\\.</span>elan<span class=\"se\">\\t</span>oolchains<span class=\"se\">\\l</span>eanprover--lean4---nightly-2021-10-16<span class=\"se\">\\b</span>in<span class=\"se\">\\l</span>ean -R .<span class=\"se\">\\.</span> -o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\l</span>ib<span class=\"se\">\\M</span>ain.olean -c .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\M</span>ain.c .<span class=\"se\">\\.\\M</span>ain.lean\n&gt; c:<span class=\"se\">\\U</span>sers<span class=\"se\">\\x</span>ubaiw<span class=\"se\">\\.</span>elan<span class=\"se\">\\t</span>oolchains<span class=\"se\">\\l</span>eanprover--lean4---nightly-2021-10-16<span class=\"se\">\\b</span>in<span class=\"se\">\\l</span>eanc -c -o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\M</span>ain.o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\M</span>ain.c -O3 -DNDEBUG -lstdc++\n&gt; c:<span class=\"se\">\\U</span>sers<span class=\"se\">\\x</span>ubaiw<span class=\"se\">\\.</span>elan<span class=\"se\">\\t</span>oolchains<span class=\"se\">\\l</span>eanprover--lean4---nightly-2021-10-16<span class=\"se\">\\b</span>in<span class=\"se\">\\l</span>eanc -o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\b</span>in<span class=\"se\">\\f</span>oo.exe .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\F</span>oo.o .<span class=\"se\">\\b</span>uild<span class=\"se\">\\i</span>r<span class=\"se\">\\M</span>ain.o -lstdc++\n/usr/lib/gcc/x86_64-pc-msys/10.2.0/../../../../x86_64-pc-msys/bin/ld: c:<span class=\"se\">\\U</span>sers<span class=\"se\">\\x</span>ubaiw<span class=\"se\">\\.</span>elan<span class=\"se\">\\t</span>oolchains<span class=\"se\">\\l</span>eanprover--lean4---nightly-2021-10-16<span class=\"se\">\\l</span>ib<span class=\"se\">\\l</span>ean/libleanrt.a<span class=\"o\">(</span>object.cpp.obj<span class=\"o\">)</span>:object.cpp:<span class=\"o\">(</span>.text+0x105<span class=\"o\">)</span>: undefined reference to <span class=\"sb\">`</span>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;<span class=\"p\">&amp;</span> std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;<span class=\"o\">(</span>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;<span class=\"p\">&amp;</span>, char const*, long long<span class=\"o\">)</span><span class=\"s1\">'</span>\n<span class=\"s1\">/usr/lib/gcc/x86_64-pc-msys/10.2.0/../../../../x86_64-pc-msys/bin/ld: c:\\Users\\xubaiw\\.elan\\toolchains\\leanprover--lean4---nightly-2021-10-16\\lib\\lean/libleanrt.a(object.cpp.obj):object.cpp:(.text+0x11a): undefined reference to `std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long long)'</span>\n/usr/lib/gcc/x86_64-pc-msys/10.2.0/../../../../x86_64-pc-msys/bin/ld: c:<span class=\"se\">\\U</span>sers<span class=\"se\">\\x</span>ubaiw<span class=\"se\">\\.</span>elan<span class=\"se\">\\t</span>oolchains<span class=\"se\">\\l</span>eanprover--lean4---nightly-2021-10-16<span class=\"se\">\\l</span>ib<span class=\"se\">\\l</span>ean/libleanrt.a<span class=\"o\">(</span>object.cpp.obj<span class=\"o\">)</span>:object.cpp:<span class=\"o\">(</span>.text+0xe57<span class=\"o\">)</span>: undefined reference to <span class=\"sb\">`</span>operator new<span class=\"o\">[](</span>unsigned long long<span class=\"o\">)</span><span class=\"err\">'</span>\n<span class=\"c1\"># many more</span>\n</code></pre></div>\n<p>But as both <code>lean --run</code> and <code>g++</code> works correctly on this machine, I'm assuming Lean and c compilers are installed correctly.<br>\nDo we need some special configurations on MSYS2?</p>",
        "id": 257797436,
        "sender_full_name": "Xubai Wang",
        "timestamp": 1634355781
    },
    {
        "content": "<p>Since most of the errors are like <code>undefined reference to operator new</code>,  it's very likely the problem arises from libc++, but adding <code>-lstdc++</code> flag to <code>moreLinkArgs</code> doesn't work.</p>",
        "id": 257797865,
        "sender_full_name": "Xubai Wang",
        "timestamp": 1634356210
    },
    {
        "content": "<p>Does/did it work with <code>leanpkg</code> before?</p>",
        "id": 257807796,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634366530
    },
    {
        "content": "<p>I've <a href=\"#narrow/stream/270676-lean4/topic/build.20requirements.20for.20Lean4\">noticed previously</a> that the build instructions given in the manual don't actually install <code>stdc++</code> on some systems (e.g. a bare ubuntu machine), and you need to also <code>apt-get install -y libstdc++-9-dev</code> in order to run the full test suite and/or do some things with Lake.</p>",
        "id": 257808172,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634366978
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Lake.20now.20comes.20with.20Lean/near/257807796\">said</a>:</p>\n<blockquote>\n<p>Does/did it work with <code>leanpkg</code> before?</p>\n</blockquote>\n<p>Both <code>leanpkg</code> and <code>leanmake</code> fails due to the same reason, so it must be a problem of <code>leanc</code>.</p>",
        "id": 257808969,
        "sender_full_name": "Xubai Wang",
        "timestamp": 1634367735
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/Lake.20now.20comes.20with.20Lean/near/257808172\">said</a>:</p>\n<blockquote>\n<p>I've <a href=\"#narrow/stream/270676-lean4/topic/build.20requirements.20for.20Lean4\">noticed previously</a> that the build instructions given in the manual don't actually install <code>stdc++</code> on some systems (e.g. a bare ubuntu machine), and you need to also <code>apt-get install -y libstdc++-9-dev</code> in order to run the full test suite and/or do some things with Lake.</p>\n</blockquote>\n<p>I'll try it. <br>\nLean 4 manual doesn't mention which compiler to use, so I just use <code>pacman -S msys/gcc</code>.</p>",
        "id": 257809377,
        "sender_full_name": "Xubai Wang",
        "timestamp": 1634368197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>, I've updated mathlib4 to use <code>Lake</code> on <a href=\"https://github.com/leanprover-community/mathlib4/issues/74\">mathlib4#74</a>.</p>\n<p>However it's a bit annoying that we have to type <code>lake build :oleans</code>, rather than just <code>lake build</code>. <code>mathlib4</code> doesn't have a main executable, and probably never will! Is there something we can do to ameliorate this, ideally in Lake, otherwise in <code>mathlib4</code>s <code>lakefile</code>?</p>",
        "id": 257809449,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634368248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"414345\">@Xubai Wang</span>, are you looking at <a href=\"https://leanprover.github.io/lean4/doc/make/index.html\">https://leanprover.github.io/lean4/doc/make/index.html</a>? It has instructions for building from source on windows, and gives advice on compilers.</p>",
        "id": 257809499,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634368321
    },
    {
        "content": "<p>Also, <span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>, to run the tests in mathlib4 I'm just using <code>env LEAN_PATH=build/lib lean test/$*</code>. Could you show me the lake way to do this?</p>",
        "id": 257809833,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634368655
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/Lake.20now.20comes.20with.20Lean/near/257809499\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"414345\">Xubai Wang</span>, are you looking at <a href=\"https://leanprover.github.io/lean4/doc/make/index.html\">https://leanprover.github.io/lean4/doc/make/index.html</a>? It has instructions for building from source on windows, and gives advice on compilers.</p>\n</blockquote>\n<p>Thanks! It works now.</p>",
        "id": 257810311,
        "sender_full_name": "Xubai Wang",
        "timestamp": 1634369073
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/Lake.20now.20comes.20with.20Lean/near/257809449\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span>, I've updated mathlib4 to use <code>Lake</code> on <a href=\"https://github.com/leanprover-community/mathlib4/issues/74\">mathlib4#74</a>.</p>\n<p>However it's a bit annoying that we have to type <code>lake build :oleans</code>, rather than just <code>lake build</code>. <code>mathlib4</code> doesn't have a main executable, and probably never will! Is there something we can do to ameliorate this, ideally in Lake, otherwise in <code>mathlib4</code>s <code>lakefile</code>?</p>\n</blockquote>\n<p>Yes, you can set <a href=\"https://github.com/leanprover/lake/blob/bc89105dc5194ac13d3a7634b928f5d0651f138a/Lake/Package.lean#L174\"><code>defaultFacet</code></a> in your <code>lakefile.lean</code> to <code>defaultFacet := PackageFacet.oleans</code>. </p>\n<p>I am also hoping to make Lake have smarter defaults in the future by making the bin target an optional configuration.</p>",
        "id": 257835712,
        "sender_full_name": "Mac",
        "timestamp": 1634394512
    },
    {
        "content": "<p>Thanks, I've added this setting to the mathlib4 PR: <a href=\"https://github.com/leanprover-community/mathlib4/pull/74\">https://github.com/leanprover-community/mathlib4/pull/74</a>.</p>",
        "id": 257888113,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634446237
    }
]