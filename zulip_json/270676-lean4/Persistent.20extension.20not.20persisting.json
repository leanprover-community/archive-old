[
    {
        "content": "<p>I though I understood how environment extensions works but I realize that I didn't test persistence across files. If I create a project with<br>\n<code>lake +leanprover/lean4:nightly-2022-08-15 new issue &amp;&amp; cd issue &amp;&amp; rm Issue.lean &amp;&amp; mkdir Issue &amp;&amp; cd Issue</code> with <br>\nExtension.lean:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">initialize</span> <span class=\"n\">myExt</span> <span class=\"o\">:</span> <span class=\"n\">SimplePersistentEnvExtension</span> <span class=\"n\">String</span> <span class=\"o\">(</span><span class=\"n\">Array</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"bp\">←</span>\n  <span class=\"n\">registerSimplePersistentEnvExtension</span> <span class=\"o\">{</span>\n    <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">mystuff</span>\n    <span class=\"n\">addEntryFn</span> <span class=\"o\">:=</span> <span class=\"n\">Array.push</span>\n    <span class=\"n\">addImportedFn</span> <span class=\"o\">:=</span> <span class=\"n\">Array.concatMap</span> <span class=\"n\">id</span>\n  <span class=\"o\">}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Elab</span> <span class=\"n\">Command</span> <span class=\"k\">in</span>\n<span class=\"n\">elab</span> <span class=\"s2\">\"#liststuff\"</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">for</span> <span class=\"n\">stuff</span> <span class=\"k\">in</span> <span class=\"n\">myExt.getEntries</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">getEnv</span><span class=\"o\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">dbg_trace</span> <span class=\"n\">stuff</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"addStuff\"</span> <span class=\"n\">msg</span><span class=\"o\">:</span><span class=\"n\">str</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">modifyEnv</span> <span class=\"o\">(</span><span class=\"n\">myExt.addEntry</span> <span class=\"bp\">·</span> <span class=\"n\">msg.getString</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>file1.lean:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Issue.Extension</span>\n\n<span class=\"n\">addStuff</span> <span class=\"s2\">\"Test\"</span>\n\n<span class=\"bp\">#</span><span class=\"n\">liststuff</span>\n</code></pre></div>\n<p>file2.lean</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Issue.file1</span>\n\n<span class=\"bp\">#</span><span class=\"n\">liststuff</span>\n</code></pre></div>\n<p>then everything works fine in <code>file1</code> but I don't get any output in <code>file2</code></p>",
        "id": 293526495,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660572585
    },
    {
        "content": "<p>The implementation of <code>#liststuff</code> is incorrect. You should use <code>myExt.getState</code> instead of <code>myExt.getEntries</code>. The method <code>getEntries</code> returns the entries created in the current file.</p>",
        "id": 293554556,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1660577271
    },
    {
        "content": "<p>Thank you very much. I opened <a href=\"https://github.com/leanprover/lean4/pull/1487\">https://github.com/leanprover/lean4/pull/1487</a>. I know that documenting the whole file would be better but at least I didn't let this answer disappear.</p>",
        "id": 293595513,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660586975
    },
    {
        "content": "<p>We already have <code>getModuleEntries</code>, which suggests <code>getCurrentModuleEntries</code> as a less ambiguous name</p>",
        "id": 293661426,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1660631218
    }
]