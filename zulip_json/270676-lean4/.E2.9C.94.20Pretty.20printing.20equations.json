[
    {
        "content": "<p>Done! <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/Prelude.html\">https://leanprover-community.github.io/mathlib4_docs/Init/Prelude.html</a> ....also this Lambda telescope thing I stole from structural equations looks fancy, I should probably learn more about how to use those if I'm planning to stay in Lean Meta land...</p>",
        "id": 270796142,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1644025080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> has marked this topic as resolved.</p>",
        "id": 270796177,
        "sender_full_name": "Notification Bot",
        "timestamp": 1644025083
    },
    {
        "content": "<p><code>lambdaTelescope</code>, <code>forallTelescope</code> and friends are indeed pretty central to Lean metaprogramming. The idea is that whenever you work with an expression that starts with binders, you 'open' these binders using the telescope functions. This turns the bound variables into temporary <code>FVar</code>s, making sure that the expressions you manipulate don't contain any <code>Expr.bvar</code>s. Many functions for manipulating expressions assume that they are in this form.</p>",
        "id": 270954663,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1644227749
    }
]