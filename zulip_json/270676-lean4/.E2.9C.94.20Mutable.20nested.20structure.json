[
    {
        "content": "<p>Suppose I have a deeply nested structure <code>a : A</code>, e.g. with a field <code>a.b.c.d.e</code>. Now I want to modify this field, either in a functional notation or using the <code>mut</code> syntax. What is the best way to do it? Do we need some kind of lens?</p>",
        "id": 315084876,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1670681820
    },
    {
        "content": "<p>Ahh I see the <code>with</code> notation works.</p>",
        "id": 315085412,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1670682097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"404479\">Trebor Huang</span> has marked this topic as resolved.</p>",
        "id": 315085414,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670682098
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"404479\">Trebor Huang</span> has marked this topic as unresolved.</p>",
        "id": 315086072,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670682386
    },
    {
        "content": "<p>But I would really like a syntactic sugar for <code>a.b.c.d.e := f</code> as <code>a := {a with b.c.d.e := f}</code> if <code>a</code> is declared mutable. Does that exist?</p>",
        "id": 315086218,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1670682459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>  has a proposal for that on an issue somewhere (search \"generalized lvalues\"), I think it was stuck on some syntax for the modify operation</p>",
        "id": 315090439,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670684145
    },
    {
        "content": "<p>Ah I see. Thanks for the pointer!</p>",
        "id": 315091409,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1670684530
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"404479\">Trebor Huang</span> has marked this topic as resolved.</p>",
        "id": 315091413,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670684533
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/issues/905#issuecomment-1165768170\">https://github.com/leanprover/lean4/issues/905#issuecomment-1165768170</a></p>",
        "id": 315091684,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1670684666
    },
    {
        "content": "<p>Supporting <code>a.b := c</code> is not really dependent on that RFC I'd say. It's already syntactically valid after all!</p>",
        "id": 315092109,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1670684835
    }
]