[
    {
        "content": "<p>Suppose I have a function <code>A</code> whose return type is <code>IO String</code> and another function <code>B</code> whose return type is <code>MetaM String</code>.<br>\nIs there a way to call <code>let x : String ‚Üê B &lt;args&gt;</code> inside <code>A</code>?<br>\nDetail: I have an instance of <code>Environment</code> as an input of <code>A</code> that can be used, if needed.<br>\nC.C.: <span class=\"user-mention\" data-user-id=\"346070\">@Tomas Skrivan</span></p>",
        "id": 265507821,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639958457
    },
    {
        "content": "<p>I would phrase the question a bit differently. Given <code>e : Environment</code> can you initialize fresh state of <code>MetaM</code> and execute some functions in <code>MetaM</code> like <code>whnf</code> and then obtain the value  i.e. turn for example <code>MetaM String</code> to <code>Option String</code> (none if some exception happened)?</p>",
        "id": 265508114,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1639958800
    },
    {
        "content": "<p>That's indeed a better way to put it</p>",
        "id": 265508136,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639958859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> both <code>MetaM</code> and <code>CoreM</code> have a lot of settings that you may wish to configure, but here is the most minimal example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span> <span class=\"k\">show</span> <span class=\"n\">IO</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">env</span> <span class=\"o\">:</span> <span class=\"n\">Environment</span> <span class=\"o\">:=</span> <span class=\"n\">arbitrary</span>\n  <span class=\"k\">let</span> <span class=\"n\">act</span> <span class=\"o\">:</span> <span class=\"n\">MetaM</span> <span class=\"n\">PUnit</span> <span class=\"o\">:=</span> <span class=\"n\">pure</span> <span class=\"o\">()</span>\n  <span class=\"n\">Prod.fst</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">act.run'.toIO</span> <span class=\"o\">{}</span> <span class=\"o\">{</span><span class=\"n\">env</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 265510719,
        "sender_full_name": "Mac",
        "timestamp": 1639961853
    }
]