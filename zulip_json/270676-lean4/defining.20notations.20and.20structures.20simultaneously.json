[
    {
        "content": "<p>Is there a way to do something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Cat</span> <span class=\"n\">where</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n  <span class=\"kd\">infix</span> <span class=\"s2\">\" ~&gt; \"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Hom</span>\n  <span class=\"n\">id</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">},</span> <span class=\"n\">a</span> <span class=\"bp\">~&gt;</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>?</p>",
        "id": 229739572,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615408618
    },
    {
        "content": "<p>There was in Lean 3, but not yet in Lean 4. However, there is a workaround:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">section</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">hygiene</span> <span class=\"n\">false</span>\n<span class=\"kn\">local</span> <span class=\"kd\">infix</span> <span class=\"s2\">\" ~&gt; \"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Hom</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Cat</span> <span class=\"n\">where</span>\n  <span class=\"n\">Obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">Hom</span> <span class=\"o\">:</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"n\">Obj</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">id</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">},</span> <span class=\"n\">a</span> <span class=\"bp\">~&gt;</span> <span class=\"n\">a</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">infix</span> <span class=\"s2\">\" ~&gt; \"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Cat.Hom</span>\n<span class=\"k\">#check</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span> <span class=\"bp\">~&gt;</span> <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 229741087,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1615409176
    }
]