[
    {
        "content": "<p>Is there anything built-in or in Mathlib4 that gives you this without a tactic?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 273371543,
        "sender_full_name": "Mark Wilhelm",
        "timestamp": 1645921071
    },
    {
        "content": "<p>that's a proposition so it should be <del><code>lemma</code></del> <code>theorem</code> not <code>def</code>. In Lean 3 you could prove this by <code>dec_trivial</code>.</p>",
        "id": 273371598,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645921125
    },
    {
        "content": "<p>Explicitly without a tactic? <code>theorem p: 1 &lt; 2 := of_decide_eq_true (Eq.refl _)</code> should work.</p>",
        "id": 273371660,
        "sender_full_name": "František Silváši",
        "timestamp": 1645921215
    },
    {
        "content": "<p>In lean 4 I would normally probably write <code>by decide</code> here, because it's one of those... things that you can immediately see that a computer has a way of evaluating, and saying <code>by decide</code> reads as a proof that says: \"just compute this\". Unlike <code>simp</code> which is the more general rewriter.</p>",
        "id": 273371686,
        "sender_full_name": "František Silváši",
        "timestamp": 1645921290
    },
    {
        "content": "<p>After checking the definition I see that the following rather obfuscated proof works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.le.refl</span>\n</code></pre></div>",
        "id": 273371744,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645921372
    },
    {
        "content": "<p>Ah that's clever indeed.</p>",
        "id": 273371750,
        "sender_full_name": "František Silváši",
        "timestamp": 1645921390
    },
    {
        "content": "<p>tyty</p>",
        "id": 273371836,
        "sender_full_name": "Mark Wilhelm",
        "timestamp": 1645921530
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"431462\">Mark Wilhelm</span> has marked this topic as resolved.</p>",
        "id": 273371839,
        "sender_full_name": "Notification Bot",
        "timestamp": 1645921548
    }
]