[
    {
        "content": "<p>For mathlib4 porting, we sometimes have lemmas under similar names yet namespaced. Here is a mwe of an error of recursion that is occurring, where <code>Left.foo</code> sees <code>foo</code> as referring to itself:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Left.foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">foo</span>\n</code></pre></div>\n<p>This is on <code>leanprover/lean4:nightly-2022-10-12</code></p>",
        "id": 305071562,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1666234453
    },
    {
        "content": "<p>This may just be a change in behaviour in Lean 4 that we have to cope with while porting.</p>",
        "id": 305072158,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666234998
    },
    {
        "content": "<p>It is a bit annoying to have to write <code>_root_.foo</code> here.</p>",
        "id": 305072176,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666235011
    },
    {
        "content": "<p>Yes, the change is intentional.  Although I don't remember exactly who asked for it or why.</p>",
        "id": 305072439,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1666235215
    },
    {
        "content": "<p>It's a result of the implementation. In Lean 4, the snippet is shorthand for:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Left</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">foo</span>\n<span class=\"kd\">end</span> <span class=\"n\">Left</span>\n</code></pre></div>\n<p>The two alternatives are using <code>_root_</code> (or whatever overarching namespace):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Left.foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">_root_.foo</span>\n</code></pre></div>\n<p>or using protect:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">protected</span> <span class=\"kd\">theorem</span> <span class=\"n\">Left.foo</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n  <span class=\"n\">foo</span>\n</code></pre></div>\n<p>IMHO, the latter usually makes more sense.</p>",
        "id": 305075744,
        "sender_full_name": "Fran√ßois G. Dorais",
        "timestamp": 1666238065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/270676-lean4/topic/Namespacing.20a.20synonym.20lemma.20under.20a.20prefix/near/305072439\">said</a>:</p>\n<blockquote>\n<p>Yes, the change is intentional.  Although I don't remember exactly who asked for it or why.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> It was you, right? when you visited MSR <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span><br>\nI may be mistaken, but I have vivid memories of you and Daniel championing this feature.<br>\nI have to say I now love this feature.</p>",
        "id": 305148811,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1666272166
    },
    {
        "content": "<p>Hmm, I actually don't remember that, but I am happy to take credit for it anyways</p>",
        "id": 305149065,
        "sender_full_name": "Reid Barton",
        "timestamp": 1666272261
    }
]