[
    {
        "content": "<p>I'd like to report a minor issue with operator levels that I ran into when upgrading from nightly build 2021-03-22 to 2021-03-23 -- or maybe it's just a documentation problem. I define a postfix <code>⁻¹</code> operator as described in <code>syntax.md</code>, but I had to increase its level to at least 1024 so I could use it in function arguments without superfluous parentheses. Up to 2021-03-22, this worked with all levels &gt;= 1024, but since 2021-03-23, only 1023 and 1024 work; otherwise it binds too strongly. In any case, 1000 is too weak, and I'm a bit concerned that <code>max</code> is actually defined to be 1000. Am I missing something?</p>",
        "id": 233383689,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1617741156
    },
    {
        "content": "<p>Do you have examples where the binding is \"too strong\" and what you expect?</p>",
        "id": 233410743,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617754285
    },
    {
        "content": "<p>The precendence of application is 1024, which explains why it would be relevant here. For example, <code>f x⁻¹</code> is interpreted as <code>(f x)⁻¹</code> if the precedence is less than 1024 and <code>f (x⁻¹)</code> if it is higher than 1024. (If it is equal then I guess it depends on whether it is left- or right-associative, and I doubt this is what you want in any case)</p>",
        "id": 233410952,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617754429
    },
    {
        "content": "<p><code>max</code> is 1024. 1000 was a typo in syntax.md.</p>",
        "id": 233443883,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1617780041
    }
]