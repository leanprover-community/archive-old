[
    {
        "content": "<p>There seems to be no <code>DecidableEq</code> instance for ByteArray, so I wanted to declare one. Both the deriving:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">deriving</span> <span class=\"kd\">instance</span> <span class=\"n\">DecidableEq</span> <span class=\"n\">for</span> <span class=\"n\">ByteArray</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">ByteArray.empty</span> <span class=\"bp\">=</span> <span class=\"n\">ByteArray.empty</span>\n</code></pre></div>\n<p>and trying to prove it by hand:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">DecidableEq</span> <span class=\"n\">ByteArray</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">b</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">match</span> <span class=\"n\">decEq</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">isTrue</span> <span class=\"n\">h₁</span>  <span class=\"bp\">=&gt;</span> <span class=\"n\">isTrue</span> <span class=\"bp\">$</span> <span class=\"n\">congrArg</span> <span class=\"n\">ByteArray.mk</span> <span class=\"n\">h₁</span>\n    <span class=\"bp\">|</span> <span class=\"n\">isFalse</span> <span class=\"n\">h₂</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">isFalse</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">p</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">p</span><span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"n\">rfl</span><span class=\"o\">))</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">ByteArray.empty</span> <span class=\"bp\">=</span> <span class=\"n\">ByteArray.empty</span>\n</code></pre></div>\n<p>cause Lean server to crash and <code>lean</code> to fail with an error: <code>error: external command /home/ix/.elan/toolchains/leanprover--lean4---nightly-2022-07-11/bin/lean exited with status 139</code></p>\n<p>Is this expected?</p>",
        "id": 289747917,
        "sender_full_name": "Ilona Prikule",
        "timestamp": 1657901321
    },
    {
        "content": "<p>Actually, the following instance works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">DecidableEq</span> <span class=\"n\">ByteArray</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">match</span> <span class=\"n\">decEq</span> <span class=\"n\">a.data</span> <span class=\"n\">b.data</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">isTrue</span> <span class=\"n\">h₁</span>  <span class=\"bp\">=&gt;</span> <span class=\"n\">isTrue</span> <span class=\"bp\">$</span> <span class=\"n\">congrArg</span> <span class=\"n\">ByteArray.mk</span> <span class=\"n\">h₁</span>\n    <span class=\"bp\">|</span> <span class=\"n\">isFalse</span> <span class=\"n\">h₂</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">isFalse</span> <span class=\"bp\">$</span> <span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n</code></pre></div>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 289762297,
        "sender_full_name": "Ilona Prikule",
        "timestamp": 1657908282
    },
    {
        "content": "<p>This seems like a buggy interaction with an <code>extern</code> declaration, you might consider filing an issue.</p>",
        "id": 289786044,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1657920844
    },
    {
        "content": "<p>The bug here seems to be that the pattern match <code>⟨a⟩</code>, <code>⟨b⟩</code> is not using the proper  <code>extern</code> like <code>a.data</code>.</p>",
        "id": 289793641,
        "sender_full_name": "Mac",
        "timestamp": 1657926561
    }
]