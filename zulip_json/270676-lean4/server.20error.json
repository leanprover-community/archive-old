[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/998/commits/d1012b892e0d1f8c87dae113607b6ab37d4aadf0\">https://github.com/leanprover-community/mathlib4/pull/998/commits/d1012b892e0d1f8c87dae113607b6ab37d4aadf0</a>, opening the file data.rat.defs reliably gives a weird error message </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"bp\">`</span><span class=\"n\">Name.append</span><span class=\"bp\">`</span><span class=\"o\">,</span> <span class=\"n\">both</span> <span class=\"n\">arguments</span> <span class=\"k\">have</span> <span class=\"n\">macro</span> <span class=\"n\">scopes</span><span class=\"o\">,</span> <span class=\"n\">consider</span> <span class=\"n\">using</span> <span class=\"bp\">`</span><span class=\"n\">eraseMacroScopes</span><span class=\"bp\">`</span>\n</code></pre></div>\n<p>The error output is 400 lines long and can be found at <a href=\"https://gist.github.com/PatrickMassot/fcc633c44014e25fb458bfd620ec2a13\">https://gist.github.com/PatrickMassot/fcc633c44014e25fb458bfd620ec2a13</a></p>",
        "id": 315845493,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671031562
    },
    {
        "content": "<p>Yep, that's a bug in <code>conv</code> <code>congr</code>. As it was a simple case of \"called the wrong function\", I've taken the liberty to push the fix directly without test case.</p>",
        "id": 315848815,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671032411
    },
    {
        "content": "<p>oops, I have a PR coming with test case</p>",
        "id": 315849276,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671032532
    },
    {
        "content": "<p>Happy to merge that :)</p>",
        "id": 315849419,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671032575
    },
    {
        "content": "<p>Thanks to both of you!</p>",
        "id": 315849441,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671032579
    },
    {
        "content": "<p>I think that fixed it fwiw</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ nix build nale+github:leanprover-community/mathlib4/pull/998/head#Mathlib.mods.<span class=\"se\">\\\"</span>Mathlib.Data.Rat.Defs<span class=\"se\">\\\"</span> --override-input lean github:leanprover/lean4 -L\nwarning: not writing modified lock file of flake <span class=\"s1\">'nale+github:leanprover-community/mathlib4/pull/998/head'</span>:\n• Updated input <span class=\"s1\">'lean'</span>:\n    <span class=\"s1\">'github:leanprover/lean4-nightly/88c8cd5cf29a74a7cdb21db78791644e52401b95'</span> <span class=\"o\">(</span><span class=\"m\">2022</span>-12-13<span class=\"o\">)</span>\n  → <span class=\"s1\">'github:leanprover/lean4/d5fb32a393010e03aa13c7bfe453123cb3278e26'</span> <span class=\"o\">(</span><span class=\"m\">2022</span>-12-14<span class=\"o\">)</span>\nMathlib.Data.Rat.Defs&gt; Mathlib/Data/Rat/Defs.lean:125:4: error: tactic <span class=\"s1\">'injection'</span> failed, equality of constructor applications expected\nMathlib.Data.Rat.Defs&gt; <span class=\"k\">case</span> mk\nMathlib.Data.Rat.Defs&gt; a✝ b✝ : ℤ\nMathlib.Data.Rat.Defs&gt; b0 : b✝ ≠ <span class=\"m\">0</span>\nMathlib.Data.Rat.Defs&gt; h✝ : a✝ /. b✝ <span class=\"o\">=</span> <span class=\"m\">0</span>\nMathlib.Data.Rat.Defs&gt; a : ℤ\nMathlib.Data.Rat.Defs&gt; b : ℕ\nMathlib.Data.Rat.Defs&gt; h : <span class=\"m\">0</span> &lt; b\nMathlib.Data.Rat.Defs&gt; e : mkPNat a <span class=\"o\">{</span> val :<span class=\"o\">=</span> b, property :<span class=\"o\">=</span> h <span class=\"o\">}</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\nMathlib.Data.Rat.Defs&gt; ⊢ <span class=\"nv\">a</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\n...\n</code></pre></div>",
        "id": 315856935,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671034545
    },
    {
        "content": "<p>I think I have a new one, and it's pretty spectacular in its use of stderr:<br>\n<a href=\"/user_uploads/3121/KdNvx2uPIFXxY__H-ki3F9Jy/bug.gif\">bug.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/KdNvx2uPIFXxY__H-ki3F9Jy/bug.gif\" title=\"bug.gif\"><img src=\"/user_uploads/3121/KdNvx2uPIFXxY__H-ki3F9Jy/bug.gif\"></a></div>",
        "id": 316076314,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671119907
    },
    {
        "content": "<p>What did you do to trigger it? I can't quite see from the video (I was trying to reproduce)</p>",
        "id": 316076867,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671120037
    },
    {
        "content": "<p>Opening a file...</p>",
        "id": 316077043,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671120068
    },
    {
        "content": "<p>I'll push in one minute</p>",
        "id": 316077082,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671120078
    },
    {
        "content": "<p>Not aborting on panics for general Lean programs was a conscious decision, but I'm starting to wonder whether it's the right decision for <code>lean</code> itself</p>",
        "id": 316077158,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671120098
    },
    {
        "content": "<p>Aah OK -- I was wondering if I'd missed some subtlety.</p>",
        "id": 316077215,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671120110
    },
    {
        "content": "<p>(which would make sure you get one message at most)</p>",
        "id": 316077292,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671120123
    },
    {
        "content": "<p>See <a href=\"https://github.com/leanprover-community/mathlib4/pull/1053\">https://github.com/leanprover-community/mathlib4/pull/1053</a></p>",
        "id": 316077462,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671120162
    }
]