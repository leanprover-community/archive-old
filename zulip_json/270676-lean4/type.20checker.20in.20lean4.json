[
    {
        "content": "<p>is it reasonable to write a type checker for a small calculus  in lean4? I have tried to write it in lean3 and found that many \"simple\" things have not implemented fully</p>",
        "id": 268848214,
        "sender_full_name": "Eirene Pandi",
        "timestamp": 1642774593
    },
    {
        "content": "<p>Yes it is. You could also be a bit more specific with what issues you encountered with Lean 3, perhaps Lean 4's addressed them directly or indirectly. I will say that 'simply programming' in Lean 4 (i.e.  disregarding proofs) is miles ahead of Lean 3 in terms of convenience and ergonomics.</p>",
        "id": 268849175,
        "sender_full_name": "František Silváši",
        "timestamp": 1642775077
    },
    {
        "content": "<p>You will find that right now the Lean 4 builtin libraries are certainly lacking a bit if functionality that you might expect from more evolved programming languages but since Lean is perfectly capable of interpreting itself right now I see no reason why it shouldnt be possible to interpret something simpler with it.</p>",
        "id": 268849568,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1642775280
    },
    {
        "content": "<p>thanks, are you aware of any snippets of code that could be useful? (not examples with proofs or really simple programs)</p>",
        "id": 268855029,
        "sender_full_name": "Eirene Pandi",
        "timestamp": 1642777755
    },
    {
        "content": "<p>Useful in what regard? For writing a type checker for some lambda calculus no. For general programs that are done in Lean you could take a look at:</p>\n<ul>\n<li>The compiler itself</li>\n<li>The Lake build system</li>\n<li>The doc-gen4 docuemntation generator (although its mostly a Meta program for Lean 4 itself)</li>\n<li>Sebastian posted his AoC solutions over here <a href=\"https://github.com/Kha/aoc-2021/\">https://github.com/Kha/aoc-2021/</a></li>\n<li>There is some non trivial datastructure code for stuff like binary heaps in mathlib4 as of now.</li>\n</ul>",
        "id": 268855690,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1642778048
    },
    {
        "content": "<p>Mario Carneiro wrote a metamath verifier in Lean 4, but quite a bit has changed in the last nine months (for the better). <a href=\"https://github.com/digama0/mm-lean4\">https://github.com/digama0/mm-lean4</a></p>",
        "id": 268857110,
        "sender_full_name": "Chris B",
        "timestamp": 1642778664
    }
]