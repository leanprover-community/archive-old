[
    {
        "content": "<p>Where do attributes such as @[extern ...] or @[inline] comes from in Lean4? Are these basically built-in or part of a general strategy to allow custom metadata added to syntax elements? This question came up wondering whether they could be used to build a library for parsing command line arguments.</p>",
        "id": 265231600,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1639695318
    },
    {
        "content": "<p>They are syntactically elements of the <code>attr</code> syntax category, although many of them fall into a simple subcategory of the form <code>ident : attr</code></p>",
        "id": 265231728,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1639695387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"463095\">@Yuri de Wit</span> maybe <a href=\"https://github.com/leanprover/lean4/blob/e65f3fe81032ebcc354054e058196cc28c30f8f2/src/Lean/Compiler/ExternAttr.lean#L61\">this</a> can help you. <code>extern</code> is a parametric attribute (rather than a simple tag attribute that takes no parameters)</p>",
        "id": 265232153,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639695623
    },
    {
        "content": "<p>More: <a href=\"https://github.com/leanprover/lean4/tree/master/src/Lean/Compiler\">https://github.com/leanprover/lean4/tree/master/src/Lean/Compiler</a></p>",
        "id": 265232215,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639695656
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span>  and <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> ! I found the definitions for TagAttribute and ParametricAttribute and now have something to chase from here. I have never defined custom syntax/macros in Lean (in fact know practically nothing about Lean) and may come back with more questions.</p>",
        "id": 265233310,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1639696288
    }
]