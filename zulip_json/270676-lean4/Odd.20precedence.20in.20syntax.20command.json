[
    {
        "content": "<p>I find these precedence relations involving <code>&lt;|&gt;</code> unintuitive:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"foo\"</span> <span class=\"n\">term</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"s2\">\"bar\"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"foo\"</span> <span class=\"o\">(</span><span class=\"s2\">\"*\"</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">term</span><span class=\"o\">,</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n</code></pre></div>\n<p>means</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"foo\"</span> <span class=\"o\">(</span><span class=\"n\">term</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"s2\">\"bar\"</span><span class=\"o\">)</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"foo\"</span> <span class=\"o\">((</span><span class=\"s2\">\"*\"</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">term</span><span class=\"o\">),</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n</code></pre></div>\n<p>For the first example (of <code>&lt;|&gt;</code> over adjacency), I would also look to regex for inspiration, where <code>foo|bar</code> means <code>(foo)|(bar)</code> rather than <code>fo(o|b)ar</code>, and similarly <code>a|b*</code>means <code>a|(b*)</code> instead of <code>(a|b)*</code>.</p>",
        "id": 249797563,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1629249150
    },
    {
        "content": "<p>The second case should be fixed since <a href=\"https://github.com/leanprover/lean4/commit/6c220423ed8c7d605debe54973d88df98ed49cef#diff-540183f8aeafc938225f04a4930bd51fbbbe9cb4ebdf3ce35136a7d816f250bcR55\">https://github.com/leanprover/lean4/commit/6c220423ed8c7d605debe54973d88df98ed49cef#diff-540183f8aeafc938225f04a4930bd51fbbbe9cb4ebdf3ce35136a7d816f250bcR55</a></p>",
        "id": 249837603,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629287542
    }
]