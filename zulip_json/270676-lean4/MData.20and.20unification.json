[
    {
        "content": "<p>When unifying a meta variable with an expression that has metadata on the top level, the metadata disappears:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Meta</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Expr</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">:</span> <span class=\"n\">MetaM</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">e</span> <span class=\"bp\">←</span> <span class=\"n\">mkAnnotation</span> <span class=\"bp\">`</span><span class=\"n\">test</span> <span class=\"o\">(</span><span class=\"n\">mkConst</span> <span class=\"bp\">`</span><span class=\"n\">Nat</span><span class=\"o\">)</span>\n  <span class=\"k\">let</span> <span class=\"n\">m</span> <span class=\"bp\">←</span> <span class=\"n\">mkFreshExprMVar</span> <span class=\"n\">none</span>\n  <span class=\"k\">let</span> <span class=\"n\">_</span> <span class=\"bp\">←</span> <span class=\"n\">isDefEq</span> <span class=\"n\">e</span> <span class=\"n\">m</span>\n  <span class=\"k\">let</span> <span class=\"n\">m</span> <span class=\"bp\">←</span> <span class=\"n\">instantiateMVars</span> <span class=\"n\">m</span>\n  <span class=\"n\">trace</span><span class=\"o\">[</span><span class=\"n\">Meta.debug</span><span class=\"o\">]</span> <span class=\"s2\">\"e: {toString e}\"</span>\n  <span class=\"n\">trace</span><span class=\"o\">[</span><span class=\"n\">Meta.debug</span><span class=\"o\">]</span> <span class=\"s2\">\"m: {toString m}\"</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.Meta.debug</span> <span class=\"n\">true</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">test</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">[Meta.debug] e: [mdata test:1 Nat]</span>\n<span class=\"cm\">[Meta.debug] m: Nat</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Is this the intended behavior? I'd prefer if it wasn't <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 257737960,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1634320276
    },
    {
        "content": "<p>Yes, this is the intended behavior. In this particular example, it would be feasible to modify <code>isDefEq</code> to make sure the metadata is part of the expression assigned to <code>m</code>, but it would not be a general solution. Not sure why you need the metadata to be preserved.</p>",
        "id": 258040071,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1634568359
    }
]