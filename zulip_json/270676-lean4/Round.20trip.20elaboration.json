[
    {
        "content": "<p>What is the current approach to proving that the defined elaboration and delaboration round trip successfully? In other words, how does one right the theorem that in the following example, elaborating and delaborating <code>C : term</code> gives the same output? Or that delaborating and elaborating <code>C : atom</code> gives the same value?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">PrettyPrinter</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">atom</span>\n<span class=\"bp\">|</span> <span class=\"n\">carbon</span> <span class=\"bp\">|</span> <span class=\"n\">nitrogen</span> <span class=\"bp\">|</span> <span class=\"n\">oxygen</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"C\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"N\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"O\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">atom.carbon</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">atom.nitrogen</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">O</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">atom.oxygen</span><span class=\"o\">)</span>\n\n<span class=\"kd\">@[appUnexpander atom.carbon]</span>\n<span class=\"kd\">def</span> <span class=\"n\">unexpandCarbon</span> <span class=\"o\">:</span> <span class=\"n\">Unexpander</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span>       <span class=\"bp\">=&gt;</span> <span class=\"n\">unreachable</span><span class=\"bp\">!</span>\n\n<span class=\"kd\">@[appUnexpander atom.nitrogen]</span>\n<span class=\"kd\">def</span> <span class=\"n\">unexpandNitrogen</span> <span class=\"o\">:</span> <span class=\"n\">Unexpander</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span>       <span class=\"bp\">=&gt;</span> <span class=\"n\">unreachable</span><span class=\"bp\">!</span>\n\n<span class=\"kd\">@[appUnexpander atom.oxygen]</span>\n<span class=\"kd\">def</span> <span class=\"n\">unexpandOxygen</span> <span class=\"o\">:</span> <span class=\"n\">Unexpander</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">O</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span>       <span class=\"bp\">=&gt;</span> <span class=\"n\">unreachable</span><span class=\"bp\">!</span>\n</code></pre></div>",
        "id": 252043088,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1630809155
    }
]