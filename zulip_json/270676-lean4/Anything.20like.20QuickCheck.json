[
    {
        "content": "<p>The <a href=\"https://mmhaskell.com/monads/laws\">https://mmhaskell.com/monads/laws</a> at the end mentions a handy tool named <code>QuickCheck</code>.  Does Lean have an equivalent?</p>",
        "id": 295994442,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1661804372
    },
    {
        "content": "<p>SlimCheck is in mathlib4 at the moment, but it might be moved elsewhere in the near future (perhaps to the newly-created std4?)</p>",
        "id": 295995057,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1661804621
    },
    {
        "content": "<p>Last I saw <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/Where.20should.20SlimCheck.2FQuickCheck.20be.3F\">#lean4 &gt; Where should SlimCheck/QuickCheck be?</a> it was in mathlib4</p>",
        "id": 295995080,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1661804627
    },
    {
        "content": "<p>QuickCheck is still useful in Lean, but a big difference between Haskell and Lean is that in Lean you can prove that your monads are lawful (e.g., <a href=\"https://github.com/leanprover/lean4/blob/0925051c51e183a0b8c504ae53f5cab0525d6cac/src/Init/Control/Lawful.lean#L298-L307\">https://github.com/leanprover/lean4/blob/0925051c51e183a0b8c504ae53f5cab0525d6cac/src/Init/Control/Lawful.lean#L298-L307</a>)</p>",
        "id": 295996167,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1661805094
    },
    {
        "content": "<p>As mentioned in the above thread the Slimcheck parts of mathlib4 were copied into a separate testing repository LSpec (<a href=\"https://github.com/yatima-inc/LSpec\">https://github.com/yatima-inc/LSpec</a>) which is itself a port of Haskell's <a href=\"https://hspec.github.io/\">Hspec</a>.  Currently the documentation for the <code>SlimCheck</code> integration with LSpec isn't written down, but I'm planning on spelling it out in the next couple days</p>",
        "id": 296032271,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1661832131
    }
]