[
    {
        "content": "<p>(deleted, moved to lean4)</p>",
        "id": 257061580,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1633957604
    },
    {
        "content": "<p>The program below which uses <code>\\rf...</code> parses strangely:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n    <span class=\"n\">IO.eprintln</span> <span class=\"bp\">$</span> <span class=\"s2\">\"</span><span class=\"err\">\\</span><span class=\"s2\">rfailed at counter-example:\"</span>\n</code></pre></div>\n<p>on compiling, one gets the C compiler warning:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">bollu</span><span class=\"bp\">/</span><span class=\"n\">temp</span><span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"n\">escaper.lean</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">bollu</span><span class=\"bp\">/</span><span class=\"n\">temp</span><span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"n\">escaper.lean</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"n\">escaper.c</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">bollu</span><span class=\"bp\">/</span><span class=\"n\">temp</span><span class=\"bp\">$</span> <span class=\"n\">leanc</span> <span class=\"n\">escaper.c</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"n\">a.out</span>\n<span class=\"n\">escaper.c</span><span class=\"o\">:</span> <span class=\"n\">In</span> <span class=\"n\">function</span> <span class=\"bp\">‘</span><span class=\"n\">_init_l_main___closed__1</span><span class=\"bp\">’</span><span class=\"o\">:</span>\n<span class=\"n\">escaper.c</span><span class=\"o\">:</span><span class=\"mi\">23</span><span class=\"o\">:</span><span class=\"mi\">54</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">hex</span> <span class=\"n\">escape</span> <span class=\"n\">sequence</span> <span class=\"n\">out</span> <span class=\"n\">of</span> <span class=\"n\">range</span>\n   <span class=\"mi\">23</span> <span class=\"bp\">|</span> <span class=\"n\">x_1</span> <span class=\"bp\">=</span> <span class=\"n\">lean_mk_string</span><span class=\"o\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\x0d</span><span class=\"s2\">failed at counter-example:\"</span><span class=\"o\">)</span><span class=\"bp\">;</span>\n</code></pre></div>\n<p>And on running, one gets the string:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">bollu</span><span class=\"bp\">/</span><span class=\"n\">temp</span><span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">a.out</span>\n<span class=\"bp\">�</span><span class=\"n\">iled</span> <span class=\"n\">at</span> <span class=\"n\">counter</span><span class=\"bp\">-</span><span class=\"kd\">example</span><span class=\"o\">:</span>\n</code></pre></div>\n<p>I would expect the program to print:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">at</span> <span class=\"n\">counter</span><span class=\"bp\">-</span><span class=\"kd\">example</span>\n</code></pre></div>",
        "id": 257061704,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1633957673
    },
    {
        "content": "<p>Thanks for reporting the issue. I am going to push a fix soon. The <code>\\t</code> is also broken.</p>",
        "id": 257062617,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1633958139
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/commit/48a40c4d0a974e7f25565c09feb1536390a73c83\">https://github.com/leanprover/lean4/commit/48a40c4d0a974e7f25565c09feb1536390a73c83</a></p>",
        "id": 257062981,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1633958301
    }
]