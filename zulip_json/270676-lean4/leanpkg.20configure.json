[
    {
        "content": "<p>The current manual says:</p>\n<blockquote>\n<p>There is no integration of leanpkg and the language server at the moment, so the LEAN_PATH, which is the last line returned by leanpkg configure, must be set explicitly before starting the editor. Changes must be saved and compiled with leanpkg build to be visible in other files, which must then be invalidated using an editor command (see links above).</p>\n</blockquote>\n<p>That's interesting... but it's not very detailed. My main issue right now is that import doesn't work as expected, presumably since I never set LEAN_PATH. But leanpkg configure gives me bogus error messages instead of a path:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">WARNING</span><span class=\"o\">:</span> <span class=\"n\">Lean</span> <span class=\"n\">version</span> <span class=\"n\">mismatch</span><span class=\"o\">:</span> <span class=\"n\">installed</span> <span class=\"n\">version</span> <span class=\"n\">is</span> <span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">package</span> <span class=\"n\">requires</span> <span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">m1</span>\n<span class=\"n\">configuring</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">2021</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">leanpkg</span> <span class=\"n\">build</span>    <span class=\"bp\">#</span> <span class=\"k\">in</span> <span class=\"n\">directory</span> <span class=\"bp\">./</span><span class=\"n\">src</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"n\">leanpkg.toml</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">status</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>The toml file is totally right there. Changing the toml file lean_version to leanprover/lean4:4.0.0 doesn't work either.</p>\n<p>I'm moving to a different (better) computer for today but I thought I'd post this in case someone has a similar issue.</p>",
        "id": 221658148,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1609860033
    },
    {
        "content": "<p>I'm getting this error too</p>",
        "id": 222019857,
        "sender_full_name": "Reid Barton",
        "timestamp": 1610064707
    },
    {
        "content": "<p>It seems to be changing directory to <code>src</code> and then trying to read <code>leanpkg.toml</code></p>",
        "id": 222020119,
        "sender_full_name": "Reid Barton",
        "timestamp": 1610064885
    },
    {
        "content": "<p>as a workaround, I'm going to try using <code>path = \".\"</code> for now</p>",
        "id": 222020132,
        "sender_full_name": "Reid Barton",
        "timestamp": 1610064894
    },
    {
        "content": "<p>Ah, I don't think I ever tested <code>path</code> (<code>leanpkg</code> is about a week old...). The tentatively preferred structure in Lean 4 is to put a <code>MyPackage.lean</code> root file right into the repo root (like in e.g. Python), though I don't think we've documented that anywhere aside from the Nix template package...</p>",
        "id": 222055790,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1610101046
    },
    {
        "content": "<p>If that is in fact how Lean 4 packages will be structured, we should probably remove <code>path</code></p>",
        "id": 222055889,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1610101089
    },
    {
        "content": "<p>Note that in Lean 4 there is no <code>default.lean</code>, so having both <code>MyPackage.lean</code> and <code>MyPackage/Foo.lean</code> is no problem.</p>",
        "id": 222056096,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1610101227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> If path is <code>.</code> then will LEAN_PATH always be <code>./build</code>?</p>",
        "id": 222056628,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1610101586
    },
    {
        "content": "<p>Only if you have no dependencies</p>",
        "id": 222056708,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1610101643
    },
    {
        "content": "<p>I'm working on a solution for both automatically setting up LEAN_PATH and compiling dependencies right from inside the editor though</p>",
        "id": 222056918,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1610101792
    },
    {
        "content": "<p>I'm still getting Lean version mismatch warnings because lean_version = \"leanprover/lean4:4.0.0-m1\" is needed for elan to fetch the right lean build but then the installed Lean identifies itself as \"leanprover/lean4:4.0.0\". </p>\n<p>It's just an annoyance, it doesn't seem to affect anything. I can eliminate these warnings using elan override to bypass leanpkg's lean_version.</p>",
        "id": 222057377,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1610102091
    },
    {
        "content": "<p>It took me a while to figure out how to import modules from the same project, so to summarize the information here and elsewhere:</p>\n<ul>\n<li>You must have a single <code>.lean</code> file <code>Foo.lean</code> in the root of your project</li>\n<li>The rest of your files must be in the directory <code>Foo</code>, and <code>import Foo.Bar.Baz</code> will read <code>Foo/Bar/Baz.lean</code></li>\n<li>You must set <code>LEAN_PATH</code> to the <code>build</code> directory for emacs to tell Lean where to find the modules</li>\n<li>You have to run <code>leanpkg build</code> and <code>M-x lsp-workspace-restart</code> in order to see changes in imported modules</li>\n</ul>\n<p>I set <code>LEAN_PATH</code> for my whole tmux session (and also <code>LEAN4=y</code> which I test in my <code>.emacs</code> to know whether to load <code>lean4-mode</code>).</p>",
        "id": 222079977,
        "sender_full_name": "Reid Barton",
        "timestamp": 1610117216
    },
    {
        "content": "<p>thanks for documenting this; I discovered these steps myself through trial and error and was about to post something when zulip pointed me to this topic.<br>\nif this behavior isn't too tentative it would be helpful to include in the Setup section of the new manual, and maybe <code>leanpkg init</code> could suggestively create the directory <code>Foo</code> in addition to <code>Foo.lean</code></p>",
        "id": 223428205,
        "sender_full_name": "Scott Kovach",
        "timestamp": 1611173389
    },
    {
        "content": "<p>I added more documentation and a way to use <code>leanpkg</code> for creating executables in <a href=\"https://github.com/leanprover/lean4/pull/295\">https://github.com/leanprover/lean4/pull/295</a></p>",
        "id": 223915873,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1611589883
    },
    {
        "content": "<p>Manually setting LEAN_PATH and running <code>leanpkg build</code> after each change should not be necessary anymore since <a href=\"https://github.com/leanprover/lean4/pull/263\">https://github.com/leanprover/lean4/pull/263</a></p>",
        "id": 223916026,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1611589951
    }
]