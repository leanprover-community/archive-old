[
    {
        "content": "<p>We have a new github repo for <a href=\"https://github.com/leanprover/lean4-samples/\">lean4-samples</a> so if any one has any ideas for some great samples please list your ideas here, or feel free to submit a PR.  The VS Code lean4 extension will be highlighting some of these samples in the <code>Lean4: Open Documentation View</code>.</p>",
        "id": 272310630,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1645126167
    },
    {
        "content": "<p>What qualifies as a great sample? Should it be particularly simple to digest?</p>",
        "id": 272311100,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1645126364
    },
    {
        "content": "<p>Good question, love to know what everyone thinks for Lean, but I'm sure it will evolve over time.  I like samples that do something fun, that can be organized into a meaningful taxonomy over time, are not too huge (upper limit in  the thousands of lines of code) and have good documentation on how they work both in readme and code comments.  They also show best practices, and useful programming patterns.  I think it's best if readers can \"grock\" most of the sample code in a couple hours max.</p>",
        "id": 272317186,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1645129127
    },
    {
        "content": "<p>Maybe a good sample is \"how do I write a FFI-using wrapper for a C library\"? I stole a thing or two from <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span>'s MySQL repo to try to do so but it may be a useful pattern to show more generally. (I think this kind of repo is a perfect idea)</p>",
        "id": 272335120,
        "sender_full_name": "Julian Berman",
        "timestamp": 1645137767
    },
    {
        "content": "<p>Would be super cool if we could create a MySQL (or better yet SQLite) wrapper that implements <a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/\">LINQ to SQL</a>-style embedded DSL's in Lean!!  That would be a convincing proof of the usefulness and power of Lean4 extensibility.  And would be useful for implementing Lean package manager local cache indexes...</p>",
        "id": 274075023,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1646364272
    },
    {
        "content": "<p>Another cool thing, that probably could be useful for LINQ-to-SQL too, is Type Providers: <a href=\"https://docs.microsoft.com/en-us/dotnet/fsharp/tutorials/type-providers/\">https://docs.microsoft.com/en-us/dotnet/fsharp/tutorials/type-providers/</a></p>",
        "id": 274126833,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1646400061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"463095\">@Yuri de Wit</span> perfect, that's what I was imaging also when I said <a href=\"#narrow/stream/270676-lean4/topic/Lean.20SQL.20initiatives/near/274178722\">this</a></p>",
        "id": 275066979,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1647045594
    },
    {
        "content": "<p>I think a small interpreter written in lean would be a great example. Possibly a small lisp, or a more complicated example using combinators, though that would be less beginner friendly</p>",
        "id": 275068620,
        "sender_full_name": "Joseph O",
        "timestamp": 1647047613
    }
]