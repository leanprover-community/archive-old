[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> <a href=\"#narrow/stream/270676-lean4/topic/Can't.20provide.20impl.20for.20structure.20accessor.3F/near/280885720\">said</a>:</p>\n<blockquote>\n<p>It also seems like the calling convention modifiers prevent it from matching; is there a way to modify the conventions on auto-generated accessors? (if not I can just put another def between them)</p>\n</blockquote>\n<p>What do you mean by calling convention here?</p>",
        "id": 280889644,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1651505565
    },
    {
        "content": "<p>The <code>@&amp;</code> borrow annotations</p>",
        "id": 280890144,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1651505807
    },
    {
        "content": "<p>I would have to think about this one and check whether it could generate problems or not. Even if it could, I think it would be fixable, but we don't want to touch the code generation code at this point since part of it is still implemented in C/C++.</p>",
        "id": 280890668,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1651506014
    },
    {
        "content": "<p>Understood :) easy enough for me to work around</p>",
        "id": 280890714,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1651506038
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> has marked this topic as resolved.</p>",
        "id": 280890964,
        "sender_full_name": "Notification Bot",
        "timestamp": 1651506149
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"407274\">@James Gallicchio</span> <a href=\"https://github.com/leanprover/lean4/commit/94abfdba6c75b6efee68c1838f05fa26efee9a2d\">https://github.com/leanprover/lean4/commit/94abfdba6c75b6efee68c1838f05fa26efee9a2d</a></p>",
        "id": 280892755,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1651506895
    },
    {
        "content": "<p>Oh awesome, looks good!</p>",
        "id": 280893456,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1651507199
    }
]