[
    {
        "content": "<p>I just noticed that both <code>Eq.ndrec</code> and <code>Eq.rec</code> unexpand to \"▸\" notation:</p>\n<p><a href=\"https://github.com/leanprover/lean4/blob/474395aae486800d5ce7c7fe7e9d51a383614267/src/Init/NotationExtra.lean#L133\">https://github.com/leanprover/lean4/blob/474395aae486800d5ce7c7fe7e9d51a383614267/src/Init/NotationExtra.lean#L133</a></p>\n<p>So it's impossible to tell them apart without disabling the \"▸\" notation. Is there a way to disable a single notation? Disabling all notations works but it can be hard to read very long terms that way. Is there any other way to tell <code>Eq.ndrec</code> from <code>Eq.rec</code>?</p>",
        "id": 252587550,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1631175206
    },
    {
        "content": "<p>I added support for temporarily erasing keyed attributes. It includes <code>appUnexpander</code>, <code>termElab</code>, <code>commandElab</code>, <code>tactic</code>,  etc. Example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ex</span> <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">i.val</span> <span class=\"bp\">=</span> <span class=\"n\">j.val</span> <span class=\"o\">:=</span>\n  <span class=\"n\">h</span> <span class=\"bp\">▸</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"bp\">-</span><span class=\"n\">appUnexpander</span><span class=\"o\">]</span> <span class=\"n\">unexpandEqNDRec</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">ex</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">theorem ex : ∀ {n : Nat} {i j : Fin n}, i = j → i.val = j.val :=</span>\n<span class=\"cm\">fun {n} {i j} h =&gt; Eq.ndrec rfl h</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 252700048,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1631223404
    }
]