[
    {
        "content": "<p>For the <code>polyrith</code> tactic, there is a bit of code that locates a python file like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">do</span>\n  <span class=\"n\">path</span> <span class=\"bp\">←</span> <span class=\"n\">get_mathlib_dir</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">args</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"n\">path</span> <span class=\"bp\">++</span> <span class=\"s2\">\"../scripts/polyrith_sage.py\"</span><span class=\"o\">]</span> <span class=\"bp\">++</span> <span class=\"n\">arg_list</span><span class=\"o\">,</span>\n  <span class=\"n\">s</span> <span class=\"bp\">←</span> <span class=\"n\">unsafe_run_io</span> <span class=\"bp\">$</span> <span class=\"n\">io.cmd</span> <span class=\"o\">{</span> <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"s2\">\"python3\"</span><span class=\"o\">,</span> <span class=\"n\">args</span> <span class=\"o\">:=</span> <span class=\"n\">args</span><span class=\"o\">},</span>\n</code></pre></div>\n<p>where <code>get_mathlib_dir</code> locates the mathlib directory by hacks that I won't reproduce here. The question is: how do we do this robustly in lean 4? I would like a method that works in interactive mode (of mathlib or a downstream project), as well as in compiled code in downstream projects.</p>",
        "id": 314606602,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670477439
    },
    {
        "content": "<p>I wonder if the lakefile for mathlib could put something in scope for the current project and dependent projects</p>",
        "id": 319124021,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1672718015
    }
]