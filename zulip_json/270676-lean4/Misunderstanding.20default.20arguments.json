[
    {
        "content": "<p>Suppose I have something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">default</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">default</span> <span class=\"bp\">+</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>Then, <code>#check f</code> shows <code>f 0 : Nat → Nat</code> as I would expect, but if I try to apply it as in <code>#check f 4</code> I still get a function, whereas what I expected was a <code>Nat</code> (i.e. <code>f 0 4 : Nat</code>). What am I doing wrong?</p>",
        "id": 262919998,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1638093287
    },
    {
        "content": "<p>Oh, nevermind, I just needed parantheses <code>#check (f) 4</code> is indeed a <code>f 0 4 : Nat</code>.</p>",
        "id": 262920056,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1638093372
    },
    {
        "content": "<p>Haha, I didn't know that worked</p>",
        "id": 262920139,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1638093530
    },
    {
        "content": "<p>Usually default parameters should only be declared <em>after</em> non-default parameters</p>",
        "id": 262920145,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1638093557
    },
    {
        "content": "<p>Yeah, that makes a lot more sense now that you're saying it</p>",
        "id": 262920248,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1638093632
    }
]