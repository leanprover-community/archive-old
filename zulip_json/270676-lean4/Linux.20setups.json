[
    {
        "content": "<p>I have just installed Lean 4 in my Arch Linux with:</p>\n<div class=\"codehilite\"><pre><span></span><code>yay -Syu elan-lean\nelan default leanprover/lean4:nightly\n</code></pre></div>\n\n<p>but I can't find <code>lake</code>? Any suggestion?</p>",
        "id": 265377435,
        "sender_full_name": "antonio",
        "timestamp": 1639785094
    },
    {
        "content": "<p>Does updating elan via <code>elan self update</code> help?</p>",
        "id": 265379098,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639786336
    },
    {
        "content": "<p>Would that install a new version of elan in <code>$HOME/.local/bin/</code> (or somewhere else in the home folder)?</p>",
        "id": 265379122,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639786368
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code> &gt;&gt;&gt; elan self update\n\nerror: self-update is disabled for this build of elan\nerror: you should probably use your system package manager to update elan\n</code></pre></div>",
        "id": 265379224,
        "sender_full_name": "antonio",
        "timestamp": 1639786451
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455932\">@antonio</span> this message was posted in the wrong thread. You can change the title of the thread to your message to move it.</p>",
        "id": 265379372,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639786612
    },
    {
        "content": "<p>I think the version in AUR should be sufficiently up-to-date to include lake anyways. <code>elan -V</code> yields the version if you want to check.</p>",
        "id": 265379384,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639786635
    },
    {
        "content": "<p>I'm on arch, and I installed elan with the official script, not via aur. It might be worthwhile trying that.</p>",
        "id": 265379473,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639786732
    },
    {
        "content": "<p>Sorry <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span><br>\nbtw   I have a $HOME/.elan/toolchains/leanprover--lean4---nightly</p>",
        "id": 265379488,
        "sender_full_name": "antonio",
        "timestamp": 1639786756
    },
    {
        "content": "<p>and there is a <code>lake</code> in <code>bin</code></p>",
        "id": 265379568,
        "sender_full_name": "antonio",
        "timestamp": 1639786827
    },
    {
        "content": "<p>but it is not linked to  the path</p>",
        "id": 265379612,
        "sender_full_name": "antonio",
        "timestamp": 1639786870
    },
    {
        "content": "<p>Usually the official script does that by default, but the AUR version probably doesn't. Should be fine if you add it yourself</p>",
        "id": 265379731,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639787017
    },
    {
        "content": "<p><code>elan --help</code> says</p>\n<blockquote>\n<p>elan manages your installations of the Lean theorem prover.   <br>\nIt places <code>lean</code> and <code>leanpkg</code> binaries in your <code>PATH</code> that automatically select</p>\n</blockquote>\n<p>Not <code>lake</code>.  It may be my <code>elan</code> is too old .</p>",
        "id": 265379889,
        "sender_full_name": "antonio",
        "timestamp": 1639787170
    },
    {
        "content": "<p>~ &gt;&gt;&gt; elan --version                                                                                                    <br>\nelan 1.3.1 (26ce65531 2021-11-11)</p>",
        "id": 265379903,
        "sender_full_name": "antonio",
        "timestamp": 1639787207
    },
    {
        "content": "<p>I think <a href=\"https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=elan-lean#n23\">line 23 of the PKGBUILD</a> just needs to be updated.</p>",
        "id": 265379932,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639787252
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455932\">antonio</span> <a href=\"#narrow/stream/270676-lean4/topic/Linux.20setups/near/265379903\">said</a>:</p>\n<blockquote>\n<p>~ &gt;&gt;&gt; elan --version                                                                                                    <br>\nelan 1.3.1 (26ce65531 2021-11-11)</p>\n</blockquote>\n<p>That's the recent version, I think if you add elan's bin folder to your PATH it'll work</p>",
        "id": 265380044,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639787377
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>export PATH=&quot;$HOME/.elan/toolchains/leanprover--lean4---nightly/bin:$PATH&quot;\n</code></pre></div>",
        "id": 265380237,
        "sender_full_name": "antonio",
        "timestamp": 1639787595
    },
    {
        "content": "<p>There should be a $HOME/.elan/bin too where the binaries that elan manages reside (this way <code>lean</code> or <code>lake</code> will refer to the version managed by elan, not the concrete nightly version you just installed)</p>",
        "id": 265380365,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639787730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>   but <code>$HOME/.elan/bin</code> is empty</p>",
        "id": 265380505,
        "sender_full_name": "antonio",
        "timestamp": 1639787879
    },
    {
        "content": "<p>Hm. It shouldn't be <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\nOne easy solution to all this is to remove the AUR version you've installed and use <a href=\"https://github.com/leanprover/elan#manual-installation\">https://github.com/leanprover/elan#manual-installation</a> instead, which should hopefully work.</p>",
        "id": 265380870,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639788183
    },
    {
        "content": "<p>BTW</p>\n<div class=\"codehilite\"><pre><span></span><code>lake new hello\ncd hello\n</code></pre></div>\n\n<p>works and opening <code>Hello.lean</code> in Emacs (with <code>lean-mode</code>) shows the code highlighted</p>",
        "id": 265381555,
        "sender_full_name": "antonio",
        "timestamp": 1639788834
    },
    {
        "content": "<p>Yup, after adding <code>.elan/toolchains/leanprover--lean4---nightly/bin</code> to your path the commands will work, but it's one specific version that you downloaded via elan. The purpose of elan is to manage lean versions for you. E.g. if a project says that it works with a specific version, elan will automatically download and install that version for you and use that binary locally for that project. Ideally, for everything to fully work, it should use the <code>.elan/bin</code> directory (it contains links to the \"real\" binary for the specific version of the project in the toolchain directory), which doesn't seem to contain anything for some reason for you. But the manual install version should do this correctly.</p>",
        "id": 265381911,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639789174
    },
    {
        "content": "<p>Got your point! Do you perhaps use Emacs  elan-mode?</p>",
        "id": 265382073,
        "sender_full_name": "antonio",
        "timestamp": 1639789277
    },
    {
        "content": "<p>To fix this using the AUR version, it suffices to mimic the PKGBUILD. That is, add a symlink to /usr/bin/elan named \"lake\" somewhere in your path. Elan will take care of the rest.</p>",
        "id": 265382160,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639789357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455932\">antonio</span> <a href=\"#narrow/stream/270676-lean4/topic/Linux.20setups/near/265382073\">said</a>:</p>\n<blockquote>\n<p>Got your point! Do you perhaps use Emacs  elan-mode?</p>\n</blockquote>\n<p>I used Emacs lean4-mode before the lean4 VSCode extension existed <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 265382189,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639789399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> <br>\nthanks,  it works like a charm</p>",
        "id": 265382515,
        "sender_full_name": "antonio",
        "timestamp": 1639789732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> is there a separate procedure for installing Mathlib?</p>",
        "id": 265383179,
        "sender_full_name": "antonio",
        "timestamp": 1639790457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455932\">antonio</span> <a href=\"#narrow/stream/270676-lean4/topic/Linux.20setups/near/265383179\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> is there a separate procedure for installing Mathlib?</p>\n</blockquote>\n<p>Every other poster in this thread is more qualified to answer this than I am, but I'll try to answer anyway :) You should install <a href=\"https://aur.archlinux.org/packages/python-mathlibtools/\">https://aur.archlinux.org/packages/python-mathlibtools/</a> and then use <code>leanproject</code> to fetch mathlib along with its precompiled oleans, saving many hours of CPU time. See <a href=\"https://leanprover-community.github.io/leanproject.html\">https://leanprover-community.github.io/leanproject.html</a> for details.</p>\n<p>(The connection to elan is the following: Mathlib contains a <code>leanpkg.toml</code> file which is automatically read by elan to provide the correct toolchain, which is useful because the oleans are tied to the version they were generated with.)</p>",
        "id": 265383902,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639791365
    },
    {
        "content": "<p>You can also clone mathlib manually and use leanproject to just fetch the oleans, if you prefer.</p>",
        "id": 265383956,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639791455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span>, <span class=\"user-mention\" data-user-id=\"455932\">@antonio</span> may be talking about mathlib for Lean 4, not Lean 3, especially since he just got finished installing Lean 4.</p>",
        "id": 265383966,
        "sender_full_name": "Mac",
        "timestamp": 1639791482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> <a href=\"#narrow/stream/270676-lean4/topic/Linux.20setups/near/265383966\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span>, <span class=\"user-mention silent\" data-user-id=\"455932\">antonio</span> may be talking about mathlib for Lean 4, not Lean 3, especially since he just got finished installing Lean 4.</p>\n</blockquote>\n<p>Or it's the other way around and they really want Lean 3 together with the real mathlib :)</p>",
        "id": 265384029,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639791534
    },
    {
        "content": "<p>In any case, for Lean 3 and mathlib the leanprover-community site is a great place to start. Mathlib for Lean 4 is still very much a work in progress.</p>",
        "id": 265384132,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1639791627
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> Ah, yes, good point! <span class=\"user-mention\" data-user-id=\"455932\">@antonio</span> I should've mentioned that the full-blown mathlib only exists for Lean 3 at this point. It is being ported to Lean 4, but IMO you should only use mathlib4 if you're really interested in helping with porting, or want to have a very early sneak peek. If you want to do mathematics, you should stick with Lean 3 for a little longer :)</p>",
        "id": 265384163,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639791678
    },
    {
        "content": "<p>Elan handles the transition seamlessly. \"lean\" will run Lean 3 if that's the version specified in <code>leanpkg.toml</code>, so you should be good to go if your plan is to use the main mathlib.</p>",
        "id": 265384242,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639791778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span>, so no more lake but leanpkg with lean3?</p>",
        "id": 265384576,
        "sender_full_name": "antonio",
        "timestamp": 1639792256
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455932\">@antonio</span> It depends on what you want to do. Do you want to play inside mathlib code or do you want to use mathlib to build something else (using mathlib as a dependency)?</p>",
        "id": 265384769,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639792550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span>  well, I would like to do things with set theory, and I am interested to create something similar to this project <a href=\"https://github.com/asouther4/lean-social-choice\">https://github.com/asouther4/lean-social-choice</a></p>",
        "id": 265385123,
        "sender_full_name": "antonio",
        "timestamp": 1639792997
    },
    {
        "content": "<p>Then you'd probably use leanproject (which uses <code>leanpkg</code> internally) and Lean 3, so you can use mathlib theorems. Lake only supports Lean 4. <a href=\"https://leanprover-community.github.io/toolchain.html\">https://leanprover-community.github.io/toolchain.html</a> is a good explanation of how it all fits together.</p>",
        "id": 265385296,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639793228
    },
    {
        "content": "<p>But please read the warning at the top of this last page! To reiterate it, if you just want to know how to do package management, <a href=\"https://leanprover-community.github.io/leanproject.html\">https://leanprover-community.github.io/leanproject.html</a> is the page you should be reading, not the Toolchain one. The Toolchain page is more of a deeper dive, but I figured it would help clarify the lake/leanpkg/leanproject choice.</p>",
        "id": 265385475,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639793474
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>yay -Sy leanproject\n</code></pre></div>\n\n<p>worked</p>",
        "id": 265386256,
        "sender_full_name": "antonio",
        "timestamp": 1639794600
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>elan default leanprover/lean3:nightly\n</code></pre></div>\n\n<p>does not work, and I can't find instruction for Lean3</p>",
        "id": 265386565,
        "sender_full_name": "antonio",
        "timestamp": 1639795051
    },
    {
        "content": "<p>A valid lean3 version is <code>leanprover-community/lean:3.35.1</code>, for example.</p>",
        "id": 265386784,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1639795384
    },
    {
        "content": "<p>perfect, thanks</p>",
        "id": 265388082,
        "sender_full_name": "antonio",
        "timestamp": 1639797013
    },
    {
        "content": "<p>Lake can also be loaded with nix flakes <code>nix run github:leanprover/lake</code> or installed in your profile with <code>nix profile install  github:leanprover/lake</code>. Flakes is still experimental though.</p>",
        "id": 265473830,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1639910458
    },
    {
        "content": "<p>No, this is not a reasonable alternative, so please don't advertise it. The only <code>lean</code> and <code>lake</code> executables that correctly interpret projects' <code>lean-toolchain</code> files currently are <code>elan</code>'s.</p>",
        "id": 265474423,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1639911514
    },
    {
        "content": "<p>As I understand, I can't use Lean4, because I cannot do actual mathematics without Mathlib library. At this point, where can I find the Lean3 docs?  The official site only mentions Lean4.<br>\n<a href=\"https://leanprover.github.io/documentation/\">leanprover.github.io/documentation/</a></p>",
        "id": 265487525,
        "sender_full_name": "antonio",
        "timestamp": 1639930931
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455932\">@antonio</span> don't forget that the community site exists! <a href=\"https://leanprover-community.github.io\">https://leanprover-community.github.io</a></p>",
        "id": 265487563,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1639931001
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io\">https://leanprover-community.github.io</a> is the place for all your Lean 3 related stuff</p>",
        "id": 265487568,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639931013
    },
    {
        "content": "<p>The community runs Lean 3 right now; Microsoft are working on Lean 4. The community maintains a fork of Lean 3 and they also maintain mathlib.</p>",
        "id": 265487623,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639931053
    },
    {
        "content": "<p>Clear, thanks, strange  that Microsoft does not  give explicit directions on this</p>",
        "id": 265488424,
        "sender_full_name": "antonio",
        "timestamp": 1639932165
    },
    {
        "content": "<p>The official site you linked to does link to the community page</p>",
        "id": 265488462,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1639932241
    },
    {
        "content": "<p>Installing on a new Linux via the \"Install Lean using Elan\" button triggers this error:<br>\n<a href=\"/user_uploads/3121/sUg5oAZ5OdS_TaPeTDTVFUoG/Captura-de-tela-de-2022-06-21-12-51-59.png\">Captura-de-tela-de-2022-06-21-12-51-59.png</a> <br>\nThat is, it's not finding <code>curl</code> (it's a brand new Linux installation). The terminal disappears super fast and I had to be a bit ninja to get this screenshot. Maybe installing <code>curl</code> before is safer</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/sUg5oAZ5OdS_TaPeTDTVFUoG/Captura-de-tela-de-2022-06-21-12-51-59.png\" title=\"Captura-de-tela-de-2022-06-21-12-51-59.png\"><img src=\"/user_uploads/3121/sUg5oAZ5OdS_TaPeTDTVFUoG/Captura-de-tela-de-2022-06-21-12-51-59.png\"></a></div>",
        "id": 286935327,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1655826900
    },
    {
        "content": "<p>Installing curl on a Linux machine would require root privs though and you'd have to guess the system package manager (well you can figure out the distro from /etc/os-release and then run the according manager but still) that doesn't seem like a good (and sometimes even impossible, consider e.g. uni PCs) idea to do unasked.</p>",
        "id": 286935595,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1655827005
    },
    {
        "content": "<p>Right now, the user can't even see that <code>curl</code> wasn't found</p>",
        "id": 286935832,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1655827102
    },
    {
        "content": "<p>(the terminal disappears very very fast. I was lucky to get the timing right for that screenshot and be able to see the error)</p>",
        "id": 286935857,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1655827117
    },
    {
        "content": "<p>Similar issue, but prior to clicking \"Install Elan\": <a href=\"https://github.com/leanprover/vscode-lean4/issues/181\">https://github.com/leanprover/vscode-lean4/issues/181</a></p>",
        "id": 286936535,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1655827389
    }
]