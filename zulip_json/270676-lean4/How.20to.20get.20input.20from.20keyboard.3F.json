[
    {
        "content": "<p>How to get input from keyboard in Lean4? (IO String)<br>\nWhat is the typeclass that provides read : String -&gt; a?</p>",
        "id": 287200712,
        "sender_full_name": "dudubao2007",
        "timestamp": 1655995489
    },
    {
        "content": "<p>There is no typeclass but there is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IO.getStdin#doc\">docs4#IO.getStdin</a> which has a way to read from it.</p>",
        "id": 287201039,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1655995631
    },
    {
        "content": "<p><code>let input ← (← (← IO.getStdin).getLine)</code></p>",
        "id": 287201642,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1655995861
    },
    {
        "content": "<p>Sorry, but that can't compile.</p>",
        "id": 287202520,
        "sender_full_name": "dudubao2007",
        "timestamp": 1655996239
    },
    {
        "content": "<p>Arthur did one left arrow too much, apart from that it's fine.</p>",
        "id": 287203206,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1655996502
    },
    {
        "content": "<p>Yeah, this is the fixed version: <code>let input : String ← (← IO.getStdin).getLine</code>, sorry</p>",
        "id": 287203414,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1655996582
    },
    {
        "content": "<p>Thank you very much. <span aria-label=\"rose\" class=\"emoji emoji-1f339\" role=\"img\" title=\"rose\">:rose:</span></p>",
        "id": 287203636,
        "sender_full_name": "dudubao2007",
        "timestamp": 1655996673
    },
    {
        "content": "<p>A complete program that echos input would be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">argv</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">input</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">IO.getStdin</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">getLine</span><span class=\"o\">)</span>\n  <span class=\"n\">IO.print</span> <span class=\"n\">input</span>\n</code></pre></div>",
        "id": 287203697,
        "sender_full_name": "Christian Pehle",
        "timestamp": 1655996706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20get.20input.20from.20keyboard.3F/near/287201039\">said</a>:</p>\n<blockquote>\n<p>There is no typeclass but there is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IO.getStdin#doc\">docs4#IO.getStdin</a> which has a way to read from it.</p>\n</blockquote>\n<p>I'm curious about <span class=\"user-mention\" data-user-id=\"478392\">@dudubao2007</span>'s second question. I guess you can do <code>input.toInt?</code> to get an <code>Option Int</code>. But there is no standard \"inverse\" to <code>show</code> or <code>repr</code> in general, if I understand correctly.</p>",
        "id": 287204737,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1655997204
    },
    {
        "content": "<p>We don't have haskel style read right now no, although that will most likely be in scope of a standard librayr for the future.</p>",
        "id": 287205255,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1655997434
    },
    {
        "content": "<p>Thank you for your great help.</p>",
        "id": 287279325,
        "sender_full_name": "dudubao2007",
        "timestamp": 1656035371
    },
    {
        "content": "<p>The result of \"toInt?\" is always none because of the ending '\\n'. Is there a version of \"toInt\" that ignores spaces?</p>",
        "id": 287280078,
        "sender_full_name": "dudubao2007",
        "timestamp": 1656036209
    },
    {
        "content": "<p>Use <code>String.trim</code></p>",
        "id": 287298566,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1656055751
    }
]