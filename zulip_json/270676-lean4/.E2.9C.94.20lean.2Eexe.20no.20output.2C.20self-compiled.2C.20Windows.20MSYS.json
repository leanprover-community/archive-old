[
    {
        "content": "<p>Decided to play around with the lean4 compiler a little, and followed the Windows MSYS instructions. I ran <code>make</code> and compilation succeeded.<br>\nRunning <code>build/releases/bin/lean.exe</code> in the mingw64 shell seems to work just fine.</p>\n<p>But from a non-mingw64 shell like powershell, running my freshly compiled <code>lean.exe</code> simply produces no output whatsoever, just gives me an exit code -1073741515. Same story for stage0 and stage2 lean.exe, and probably also for all other executables. This means that the development setup via <code>elan link mystuff build/releases/stage1</code> recommended in <a href=\"https://leanprover.github.io/lean4/doc/dev/index.html\">https://leanprover.github.io/lean4/doc/dev/index.html</a> doesn't work either.</p>",
        "id": 284011635,
        "sender_full_name": "Max Nowak",
        "timestamp": 1653574727
    },
    {
        "content": "<p>Have you tried the quickstart instructions? <a href=\"https://leanprover.github.io/lean4/doc/quickstart.html\">https://leanprover.github.io/lean4/doc/quickstart.html</a><br>\nThey rely on pre-compiled binaries.</p>",
        "id": 284012227,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1653575019
    },
    {
        "content": "<p>It has been a really long time since I've done the quickstart, but I think I have done it at least once.<br>\nI have no issue with using lean with elan. Everything works just fine. But I wanted to hack the compiler a little, that is why I decided to compile lean on my own.</p>",
        "id": 284013535,
        "sender_full_name": "Max Nowak",
        "timestamp": 1653575672
    },
    {
        "content": "<p>What do you mean with \"They rely on pre-compiled binaries\"?</p>",
        "id": 284013773,
        "sender_full_name": "Max Nowak",
        "timestamp": 1653575818
    },
    {
        "content": "<p>Cool.<br>\n<span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> Are you still using Windows for development? Have you hit a similar problem?</p>",
        "id": 284013843,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1653575863
    },
    {
        "content": "<p>Sigh, I really need to move away from Windows some day haha.</p>",
        "id": 284013957,
        "sender_full_name": "Max Nowak",
        "timestamp": 1653575907
    },
    {
        "content": "<p>Someone had a similar problem with Python and Git Bash a while ago. Does prefixing your command with <code>winpty</code> (e.g., <code>winpty lean</code>) help?</p>",
        "id": 284015474,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1653576624
    },
    {
        "content": "<p>(<a href=\"https://github.com/rprichard/winpty\">https://github.com/rprichard/winpty</a> if you don't have it installed)</p>",
        "id": 284015635,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1653576720
    },
    {
        "content": "<p>I... think I will just dedust my dualbooted ubuntu at this point. I appreciate the suggestion, but even if winpty would work, then I would have to figure out how to tell elan / VSCode to use that. So I'll just switch to linux.<br>\nBut thank you!</p>",
        "id": 284016088,
        "sender_full_name": "Max Nowak",
        "timestamp": 1653576946
    },
    {
        "content": "<p>I think a few people also build Lean in WSL, which VS Code can connect to</p>",
        "id": 284016434,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1653577113
    },
    {
        "content": "<p>One notable difference to the release binaries is that they are builtin a clang64 shell, not mingw64. But that's just a guess given the not very helpful error message... :)</p>",
        "id": 284016696,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1653577220
    },
    {
        "content": "<p>Ah yeah, haven't even considered the WSL option <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 284017276,
        "sender_full_name": "Max Nowak",
        "timestamp": 1653577493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"416280\">Max Nowak</span> has marked this topic as resolved.</p>",
        "id": 284017328,
        "sender_full_name": "Notification Bot",
        "timestamp": 1653577520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112857\">Leonardo de Moura</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20lean.2Eexe.20no.20output.2C.20self-compiled.2C.20Windows.20MSYS/near/284013843\">said</a>:</p>\n<blockquote>\n<p>Cool.<br>\n<span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> Are you still using Windows for development? Have you hit a similar problem?</p>\n</blockquote>\n<p>Yes I am. However, I have not compiled Lean from the source recently. Furthermore, when I did previously, I tend to use it from the MSYS2 shell. So it is quite possible I have managed to dodge this error through pure luck...</p>\n<p>I went and tested my old build of Lean from the source (commit <code>5e462f704ab8</code>) and hit the same <code>-1073741515</code> error. However, I also got a nice little GUI telling me the problem is that it cannot find <code>libgmp-10.dll</code>. Are we still using GMP? If not, it appears that the lean executable is still trying to link to it on Windows. If we are still using it, I guess such an error is expected?</p>",
        "id": 284044360,
        "sender_full_name": "Mac",
        "timestamp": 1653590535
    },
    {
        "content": "<blockquote>\n<p>Are we still using GMP?</p>\n</blockquote>\n<p>Yes. We can compile without GMP, but our own big-number implementation has not been extensively tested yet. <br>\nYou can use <code>-D USE_GMP=OFF</code> with <code>cmake</code> to build Lean without GMP.</p>",
        "id": 284062045,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1653599558
    }
]