[
    {
        "content": "<p>What is the idiomatic approach to creating the <code>Syntax</code> object for some given object?<br>\nE.g. I have a simple <code>Pos</code> type, and right now I convert it to syntax as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Pos</span> <span class=\"n\">where</span>\n  <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Int</span>\n  <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Int</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Pos.toSyntax</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Pos</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Syntax.mkCApp</span> <span class=\"bp\">`</span><span class=\"n\">Pos.mk</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">Syntax.mkNumLit</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"{p.x}\"</span><span class=\"o\">,</span> <span class=\"n\">Syntax.mkNumLit</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"{p.y}\"</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>But if e.g. I'd have to create a <code>Syntax</code> object for a <code>List Pos</code> I'd already struggle with that.<br>\nI guess I could express it as nested applications of <code>List.insert</code> with all the elements in the list, but that feels unnecessarily cumbersome to me - so I'm not sure if I understand how to construct <code>Syntax</code> objects correctly/idiomatically.</p>",
        "id": 266257638,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1640696551
    },
    {
        "content": "<p>That's easy.  You first declare a <code>Quote Pos</code> instance using your <code>Pos.toSyntax</code> function.</p>",
        "id": 266257682,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1640696610
    },
    {
        "content": "<p>(Which should probably be written as <code> Unhygienic.run `(Pos.mk $(quote p.x) $(quote p.y)) </code>)</p>",
        "id": 266257697,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1640696628
    },
    {
        "content": "<p>And then you automatically get a <code>quote : List Pos → Syntax</code> function because we have a <code>[Quote α] → Quote (List α)</code> instance.</p>",
        "id": 266257763,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1640696667
    }
]