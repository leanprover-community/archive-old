[
    {
        "content": "<p>Sometimes you'd like to take an existing <code>Name</code> and append a number to it. What's the best way of doing this? Using numerical names doesn't seem to work well, at least not in the context I'm interested in:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elab</span> <span class=\"s2\">\"newMVar\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">mkFreshExprMVar</span> <span class=\"n\">none</span> <span class=\"bp\">.</span><span class=\"n\">synthetic</span> <span class=\"o\">(</span><span class=\"n\">userName</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"bp\">`</span><span class=\"n\">x</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">refine</span> <span class=\"n\">newMVar</span><span class=\"bp\">;</span> <span class=\"n\">case</span> <span class=\"n\">x.1</span> <span class=\"bp\">=&gt;</span>    <span class=\"c1\">-- error: \"expected =&gt;\"</span>\n</code></pre></div>\n<p>Is this a problem with <code>case</code>, or (I'm guessing) because numerical names aren't meant to be used this way? </p>\n<p>If the latter, how would one turn a <code>Name</code> and a <code>Nat</code> into an indexed name, e.g. with a separating underscore?</p>",
        "id": 308921079,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1668057219
    },
    {
        "content": "<p>Use <code>Name.appendAfter</code> function for this.</p>",
        "id": 308934340,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1668066303
    },
    {
        "content": "<p>And indeed the <code>Name.num</code> constructor is only used for internal names afaik.</p>",
        "id": 308958157,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1668076004
    }
]