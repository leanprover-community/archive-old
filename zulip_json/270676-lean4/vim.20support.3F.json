[
    {
        "content": "<p>Just wondering if anyone has syntax coloring for vim <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <br>\nI got the LSP to work, at least:<br>\n<a href=\"/user_uploads/3121/nH1T8qKFPGjnaU4blYAGPIeS/2021-01-05-161248_773x400_scrot.png\">vim.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/nH1T8qKFPGjnaU4blYAGPIeS/2021-01-05-161248_773x400_scrot.png\" title=\"vim.png\"><img src=\"/user_uploads/3121/nH1T8qKFPGjnaU4blYAGPIeS/2021-01-05-161248_773x400_scrot.png\"></a></div>",
        "id": 221702523,
        "sender_full_name": "Simon Cruanes",
        "timestamp": 1609881243
    },
    {
        "content": "<p>Hah, that was fast! LSP for the win!</p>",
        "id": 221702658,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1609881314
    },
    {
        "content": "<p>Sadly I never really went back to vim after being forced to use Emacs for Lean (2), but surely you can borrow the highlighting from the Lean 3 vim extension?</p>",
        "id": 221702971,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1609881484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> has been recently improving the vim plugin: <a href=\"https://github.com/Julian/lean.nvim\">https://github.com/Julian/lean.nvim</a><br>\nThe \"normal\" vim plugin has always used LSP for autocompletion/goal view/go-to-definition/etc.: <a href=\"https://github.com/leanprover/lean.vim\">https://github.com/leanprover/lean.vim</a><br>\nEDIT: this is all for lean 3, but you just need to change the server executable path.</p>",
        "id": 221703893,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1609882028
    },
    {
        "content": "<p>Yeah it works for Lean 4 too.</p>",
        "id": 221704784,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609882464
    },
    {
        "content": "<p>If you want to use both, I made a small thing called <code>frankenlean</code> for myself which contains:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#!/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">env</span> <span class=\"n\">python3</span>\n<span class=\"k\">from</span> <span class=\"n\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">import</span> <span class=\"n\">os</span>\n<span class=\"kn\">import</span> <span class=\"n\">sys</span>\n\n\n<span class=\"k\">if</span> <span class=\"n\">Path</span><span class=\"o\">(</span><span class=\"s2\">\"leanpkg.toml\"</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">exists</span><span class=\"o\">():</span>\n    <span class=\"n\">argv</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"s2\">\"lean-language-server\"</span><span class=\"o\">,</span> <span class=\"s2\">\"--stdio\"</span><span class=\"o\">,</span> <span class=\"s2\">\"--\"</span><span class=\"o\">]</span>\n<span class=\"k\">else</span><span class=\"o\">:</span>\n    <span class=\"n\">argv</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"s2\">\"lean4\"</span><span class=\"o\">,</span> <span class=\"s2\">\"--server\"</span><span class=\"o\">]</span>\n\n<span class=\"n\">os.execvp</span><span class=\"o\">(</span><span class=\"n\">argv</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">],</span> <span class=\"n\">argv</span> <span class=\"bp\">+</span> <span class=\"n\">sys.argv</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">:])</span>\n</code></pre></div>\n<p>and then set that as the LSP command.</p>",
        "id": 221704918,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609882532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> I'm happy to donate that new neovim plugin by the way if that's useful / others care about this at all.</p>",
        "id": 221705038,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609882587
    },
    {
        "content": "<p>I just added support for crudely adding as many <code>sorry</code>s as there are goals.</p>",
        "id": 221705058,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609882603
    },
    {
        "content": "<p>the LSP server gives me errors/info, but no completions apparently. Like I type <code>Nat. &lt;tab&gt;</code> (which works on other LSPs) and get nothing. Is there a path that needs to be given to the server?</p>",
        "id": 221705123,
        "sender_full_name": "Simon Cruanes",
        "timestamp": 1609882643
    },
    {
        "content": "<p><del>It works here</del> -- what LSP client did you use?</p>",
        "id": 221705281,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609882727
    },
    {
        "content": "<p>(Tab completion that is)</p>",
        "id": 221705296,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609882737
    },
    {
        "content": "<p>There is no auto completion support in the Lean 4 server so far</p>",
        "id": 221705337,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1609882767
    },
    {
        "content": "<p>Note that completion isn't implemented for Lean 4 yet, but for Lean 3 it should work.</p>",
        "id": 221705345,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1609882770
    },
    {
        "content": "<p><del>Oh hm not sure actually -- it is giving some results but.. yeah they don't resolve</del></p>",
        "id": 221705354,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609882775
    },
    {
        "content": "<p>I actually use neovim and LanguageClient</p>",
        "id": 221706012,
        "sender_full_name": "Simon Cruanes",
        "timestamp": 1609883150
    },
    {
        "content": "<p>Good to know, that completion isn't there yet! :)</p>",
        "id": 221706067,
        "sender_full_name": "Simon Cruanes",
        "timestamp": 1609883166
    },
    {
        "content": "<p>Yeah sorry the results I was getting were from non-LSP returned results (they were from other open buffers).</p>",
        "id": 221706083,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609883181
    },
    {
        "content": "<p>the lean4 server supports the features stated in the README of vscode-lean4: <a href=\"https://github.com/mhuisi/vscode-lean4\">https://github.com/mhuisi/vscode-lean4</a><br>\ni will update the readme as we build support for more requests.</p>",
        "id": 221706123,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1609883199
    }
]