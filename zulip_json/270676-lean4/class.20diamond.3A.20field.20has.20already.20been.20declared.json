[
    {
        "content": "<p>Hello! I am trying to set up a type class diamond in Lean4:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n<span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">FooBar1</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">Foo</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n<span class=\"n\">bar1</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">FooBar2</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">Foo</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n<span class=\"n\">bar2</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">FooBar12</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">FooBar1</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">FooBar2</span> <span class=\"n\">α</span>\n<span class=\"c1\">-- field 'toFoo' from 'FooBar2' has already been declared</span>\n</code></pre></div>\n<p>Shouldn't the two occurrences of <code>foo</code> just be merged into one here?</p>\n<p>I am on lean4---nightly-2021-05-21.</p>",
        "id": 240584917,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1622196558
    },
    {
        "content": "<p>Ok, <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> just told me what's going on here. Apparently this kind of type class diamond is computationally inefficent and has been disabled by default even in Lean3. It still exists in Lean3 when using <code>set_option old_structure_cmd true</code>.</p>\n<p>In Lean4 a diamond can be constructed like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n<span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">FooBar1</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">Foo</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n<span class=\"n\">bar1</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">FooBar2</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">Foo</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n<span class=\"n\">bar2</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">FooBar12</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">FooBar1</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n<span class=\"n\">bar2</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">[</span><span class=\"n\">FooBar12</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">FooBar2</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"n\">bar2</span> <span class=\"o\">:=</span> <span class=\"n\">FooBar12.bar2</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 241401797,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1622731969
    }
]