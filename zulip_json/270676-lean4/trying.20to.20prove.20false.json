[
    {
        "content": "<p>I was trying to trick the kernel with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elab</span> <span class=\"s2\">\"intro_false\"</span> <span class=\"n\">id</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">liftMetaTactic</span> <span class=\"k\">fun</span> <span class=\"n\">mvarId</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"k\">let</span> <span class=\"n\">mvarIdNew</span> <span class=\"bp\">←</span> <span class=\"n\">assert</span> <span class=\"n\">mvarId</span> <span class=\"n\">id.getId</span>\n      <span class=\"o\">(</span><span class=\"n\">mkApp2</span> <span class=\"o\">(</span><span class=\"n\">mkConst</span> <span class=\"bp\">`</span><span class=\"n\">Eq</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mkConst</span> <span class=\"bp\">``</span><span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mkConst</span> <span class=\"bp\">``</span><span class=\"n\">true</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">mkConst</span> <span class=\"bp\">`</span><span class=\"gr\">sorry</span><span class=\"o\">)</span>\n    <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">mvarIdNew</span><span class=\"o\">)</span> <span class=\"bp\">←</span> <span class=\"n\">intro1P</span> <span class=\"n\">mvarIdNew</span>\n    <span class=\"n\">return</span> <span class=\"o\">[</span><span class=\"n\">mvarIdNew</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro_false</span> <span class=\"n\">h</span>\n  <span class=\"c1\">-- h : false = true</span>\n  <span class=\"c1\">-- ⊢ false = true</span>\n  <span class=\"n\">assumption</span>\n  <span class=\"c1\">-- tactic 'assumption' failed</span>\n  <span class=\"c1\">-- h : false = true</span>\n  <span class=\"c1\">-- ⊢ false = true</span>\n</code></pre></div>\n<p>But I don't understand why this doesn't work. Why is this so?</p>",
        "id": 275535370,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647447200
    },
    {
        "content": "<p><code>exact h</code> causes: <code>incorrect number of universe levels Eq</code></p>",
        "id": 275535593,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647447263
    }
]