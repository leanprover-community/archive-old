[
    {
        "content": "<p>I would like to port some Lean3 code (not a part of <code>mathlib3</code>) over to Lean4, and I have been experimenting with the code in <a href=\"https://github.com/leanprover-community/mathport\"><code>Mathport</code></a> to see if I can use it for this purpose. Here is what I have done so far:</p>\n<ul>\n<li>Run <code>lean --tlean --ast --make --recursive src/</code> in the Lean3 repository to build the intermediate <code>.tlean</code> and <code>.ast.json</code> files</li>\n<li>Edit the <code>pathConfig.packages</code> field of the <code>config.json</code> file to point to the above repository containing the Lean3 code</li>\n<li>Add <code>./Outputs/oleans/&lt;repo_name&gt;</code> to <code>pathConfig.lean.leanPath</code> in <code>config.json</code></li>\n<li>Build the <code>Mathport</code> package with <code>lake build</code> and run <code>./build/bin/mathport config.json &lt;PkgName&gt;::&lt;filename&gt;</code></li>\n</ul>\n<p>I was hoping that these changes would suffice, but trying to port a file this way resulted in the error <code>uncaught exception: [resolveMod3] failed to resolve 'init'</code>. Some investigation revealed that the headers of the <code>.tlean</code> files all contained the line <code>IMPORT 1 init -1</code>, which tries to import a file called <code>init.lean</code> and results in the error. </p>\n<p>I have tried a few ways to get around this, but none of them have worked. I would really appreciate any help in modifying these steps to make the porting work.</p>",
        "id": 289292742,
        "sender_full_name": "Anand Rao",
        "timestamp": 1657614551
    },
    {
        "content": "<p>Does <code>mathport --make config.json ....</code> work?</p>",
        "id": 289294216,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657615476
    },
    {
        "content": "<p>Without the make it will only port the specified module (which fails since it hasn't ported init yet)</p>",
        "id": 289294271,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657615514
    },
    {
        "content": "<p>Unfortunately the error still remains after running with the <code>--make</code> flag.</p>\n<p>Here are the changes I made in more detail to the <code>.config.json</code> (for concreteness, I am now trying this with the <code>lean-community/tutorials</code> repository, which I have copied to the folder <code>./sources</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"w\"> </span>    \"pathConfig\": {<span class=\"w\"></span>\n<span class=\"w\"> </span>        \"outRoot\": \"Outputs\",<span class=\"w\"></span>\n<span class=\"w\"> </span>        \"packages\": {<span class=\"w\"></span>\n<span class=\"gd\">-            \"Leanbin\": \"sources/lean/library\",</span><span class=\"w\"></span>\n<span class=\"gd\">-            \"Mathbin\": \"sources/mathlib/src\"</span><span class=\"w\"></span>\n<span class=\"gi\">+            \"Tutorialbin\": \"sources/tutorials/src\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span>        },<span class=\"w\"></span>\n<span class=\"w\"> </span>        \"leanPath\": [<span class=\"w\"></span>\n<span class=\"gd\">-            \"./lean_packages/mathlib/build/lib\",</span><span class=\"w\"></span>\n<span class=\"gd\">-            \"./Outputs/oleans/leanbin\",</span><span class=\"w\"></span>\n<span class=\"gd\">-            \"./Outputs/oleans/mathbin\"</span><span class=\"w\"></span>\n<span class=\"gi\">+           \"./lean_packages/mathlib/build/lib\",</span><span class=\"w\"></span>\n<span class=\"gi\">+            \"./Outputs/oleans/tutorialbin\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span>        ]<span class=\"w\"></span>\n</code></pre></div>\n<p>The command I entered was: <code>./build/bin/mathport --make config.json Tutorialbin::exercises.00_first_proofs</code><br>\nand the error I got was:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">visit</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">package</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Tutorialbin\"</span><span class=\"o\">,</span> <span class=\"n\">mod3</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">exercises.</span><span class=\"bp\">«</span><span class=\"mi\">00</span><span class=\"n\">_first_proofs</span><span class=\"bp\">»</span> <span class=\"o\">}</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"n\">resolveMod3</span><span class=\"o\">]</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">resolve</span> <span class=\"bp\">'</span><span class=\"n\">init'</span>\n</code></pre></div>",
        "id": 289297930,
        "sender_full_name": "Anand Rao",
        "timestamp": 1657617977
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/270676-lean4/topic/Porting.20Lean3.20code.20to.20Lean4.20with.20.60Mathport.60/near/289294271\">said</a>:</p>\n<blockquote>\n<p>Without the make it will only port the specified module (which fails since it hasn't ported init yet)</p>\n</blockquote>\n<p>Does <code>init</code> here refer to a specific file in the repository I am porting? I could not find a file called <code>init.lean</code> in the <code>tutorials</code> repository, which I why I was puzzled by the error message.</p>",
        "id": 289298240,
        "sender_full_name": "Anand Rao",
        "timestamp": 1657618187
    },
    {
        "content": "<p><code>init</code> in Lean 3 or <code>Init</code> in Lean 4 is the prelude so the files that implicitly always get imported into any Lean file, its part of the compiler source.</p>",
        "id": 289298367,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1657618273
    },
    {
        "content": "<p>I see, thanks.</p>",
        "id": 289298403,
        "sender_full_name": "Anand Rao",
        "timestamp": 1657618307
    },
    {
        "content": "<p>Oh you need to keep the old entries in config.json</p>",
        "id": 289300092,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657619345
    },
    {
        "content": "<p>Okay. Do I also need to generate the <code>.tlean</code> and <code>.ast.json</code> pre-data for the <code>lean</code> and <code>mathlib</code> folders (say via <code>make predata</code>)?</p>",
        "id": 289302058,
        "sender_full_name": "Anand Rao",
        "timestamp": 1657620506
    },
    {
        "content": "<p>Yes!</p>",
        "id": 289302252,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657620619
    }
]