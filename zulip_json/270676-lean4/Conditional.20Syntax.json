[
    {
        "content": "<p>How does one conditionally include/exclude parts in a quotation?<br>\nFor example, given the following type:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">T</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"bp\">|</span> <span class=\"n\">c</span>\n</code></pre></div>\n<p>I want to write a macro <code>to_option</code> that takes a list <code>t1, t2, ...</code> of elements of <code>T</code> and generates the following function:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">T</span>\n  <span class=\"bp\">|</span> <span class=\"n\">t1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"n\">t1</span>\n  <span class=\"bp\">|</span> <span class=\"n\">t2</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"n\">t2</span>\n  <span class=\"bp\">...</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>Now the <code>| _ =&gt; none</code> clause only needs to be present if the given <code>t</code>s don't cover all cases.<br>\nFor the purposes of this example, let's say we magically know whether this is the case (via <code>needsNone</code>).<br>\n(Also let's assume that we only get valid <code>t</code>s and no duplicates). <br>\nThen I'd write the macro as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span> <span class=\"s2\">\"to_option\"</span> <span class=\"n\">cases</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"bp\">*</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">cases'</span> <span class=\"o\">:=</span> <span class=\"n\">cases</span>\n  <span class=\"k\">let</span> <span class=\"n\">needsNone</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span>\n    <span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">T</span>\n      <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">cases</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"bp\">$</span><span class=\"n\">cases'</span><span class=\"o\">]</span><span class=\"bp\">*</span>\n      <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>  <span class=\"c1\">-- ?</span>\n  <span class=\"o\">)</span>\n</code></pre></div>\n<p>How can I conditionally include the <code>none</code> clause here?</p>",
        "id": 302786196,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1665123148
    },
    {
        "content": "<p>what's wrong with using an <code>if</code>? like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">if</span> <span class=\"n\">needsNone</span> <span class=\"k\">then</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span>\n    <span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">T</span>\n      <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">cases</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"bp\">$</span><span class=\"n\">cases'</span><span class=\"o\">]</span><span class=\"bp\">*</span>\n      <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>  <span class=\"c1\">-- ?</span>\n  <span class=\"o\">)</span>\n  <span class=\"k\">else</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span>\n    <span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">T</span>\n      <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">cases</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"bp\">$</span><span class=\"n\">cases'</span><span class=\"o\">]</span><span class=\"bp\">*</span>\n  <span class=\"o\">)</span>\n</code></pre></div>",
        "id": 302798568,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1665129862
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315434\">@Andrés Goens</span> I've considered that option, but would just like to avoid the duplication (if easily possible).</p>",
        "id": 302798866,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1665129970
    },
    {
        "content": "<p>you can conditionally push to the array of arms before interpolating them in the syntax quotation</p>",
        "id": 302799299,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665130180
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 302799752,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1665130370
    },
    {
        "content": "<p>do you have a MWE?</p>",
        "id": 302801656,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665131215
    },
    {
        "content": "<p>I would presume the answer to your question is <code>cases.push (&lt;- `(_))</code></p>",
        "id": 302801702,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665131240
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Conditional.20Syntax/near/302801656\">said</a>:</p>\n<blockquote>\n<p>do you have a MWE?</p>\n</blockquote>\n<p>Sorry, I think I got it working now. Thanks!</p>",
        "id": 302801707,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1665131241
    },
    {
        "content": "<p>Follow-up for future readers:<br>\nThe pattern I tend to use for conditional syntax now is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span> <span class=\"s2\">\"test\"</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">optionalSyntaxPart</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"n\">x</span> <span class=\"k\">with</span> <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">#</span><span class=\"o\">[]</span> <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">y</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">y</span><span class=\"o\">]</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">def</span> <span class=\"n\">mightNeedAParam</span> <span class=\"o\">:=</span> <span class=\"n\">test</span> <span class=\"bp\">$</span><span class=\"o\">[</span> <span class=\"bp\">$</span><span class=\"n\">optionalSyntaxPart</span> <span class=\"o\">]</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>If <code>optionalSyntaxPart</code> is empty, the <code>$[ $optionalSyntaxPart ]*</code> seems to just disappear.<br>\nFeels kind of gross, but ¯\\_(ツ)_/¯</p>",
        "id": 311837389,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1669213751
    },
    {
        "content": "<p>Why not <code>$[$x]?</code>?</p>",
        "id": 311857316,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1669219814
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256311\">Jannis Limperg</span> <a href=\"#narrow/stream/270676-lean4/topic/Conditional.20Syntax/near/311857316\">said</a>:</p>\n<blockquote>\n<p>Why not <code>$[$x]?</code>?</p>\n</blockquote>\n<p><span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span> I didn't know that was a thing.</p>",
        "id": 311900738,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1669234208
    }
]