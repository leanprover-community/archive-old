[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112857\">Leonardo de Moura</span> <a href=\"#narrow/stream/270676-lean4/topic/.5B.5D.20vs.20.23.5B.5D.20notation/near/298989516\">said</a>:</p>\n<blockquote>\n<p>This is a possibility, but we would need to use the expected type, which is not always available.</p>\n</blockquote>\n<p>Thanks for the detailed explanation! I had a suspicion that there was a deeper reason and that this is not a can of worms to be opened now.</p>",
        "id": 299064573,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1663282538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> <a href=\"#narrow/stream/270676-lean4/topic/.5B.5D.20vs.20.23.5B.5D.20notation/near/299024685\">said</a>:</p>\n<blockquote>\n<p>Fwiw, I like the distinction. Lists and arrays have very different uses and performance characteristics and this makes it immediately clear which one is being used.</p>\n</blockquote>\n<p>I don't disagree and don't have strong opinion either way.</p>\n<p>I tend to see the performance characteristics coming into play when creating the data type and not when using it. A consumer of a library usually assumes that the producer of the library made the right data type choice and just wants to use it.</p>\n<p>But my question was mostly a curiosity about the distinction.</p>",
        "id": 299065368,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1663282974
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"463095\">Yuri de Wit</span> has marked this topic as resolved.</p>",
        "id": 299065517,
        "sender_full_name": "Notification Bot",
        "timestamp": 1663283068
    },
    {
        "content": "<p>FYI you can use <code>{}</code> or <code>âˆ…</code> for both arrays and lists, via the <code>EmptyCollection</code> class (but only for empty structures).</p>",
        "id": 299132407,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1663324284
    }
]