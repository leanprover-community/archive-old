[
    {
        "content": "<p>Consider:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">liftOrGet</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">α</span>\n  <span class=\"bp\">|</span> <span class=\"n\">none</span><span class=\"o\">,</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"n\">a</span>\n  <span class=\"bp\">|</span> <span class=\"n\">none</span><span class=\"o\">,</span> <span class=\"n\">some</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"n\">b</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">some</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">some</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">IsCommutative</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">op</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">comm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">op</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">op</span> <span class=\"n\">b</span> <span class=\"n\">a</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">IsCommutative</span> <span class=\"n\">α</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsCommutative</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">liftOrGet</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">liftOrGet</span><span class=\"o\">,</span> <span class=\"n\">h.comm</span><span class=\"o\">]⟩</span> <span class=\"c1\">-- doesn't work</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">IsCommutative</span> <span class=\"n\">α</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsCommutative</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">liftOrGet</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">cases</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">liftOrGet</span><span class=\"o\">]</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h.comm</span><span class=\"o\">]⟩</span> <span class=\"c1\">-- works</span>\n</code></pre></div>",
        "id": 305941472,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1666660821
    },
    {
        "content": "<p>The first proof does work in lean3 AFAIU</p>",
        "id": 305941505,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1666660849
    },
    {
        "content": "<p>Lean 3's <code>simp</code> was clever with <code>comm</code> lemmas. What happens here? Does it loop?</p>",
        "id": 305955856,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666674720
    },
    {
        "content": "<p>The h.comm doesn't ever fire. The same would happen if I was showcasing IsAssociative</p>",
        "id": 305957356,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1666675788
    }
]