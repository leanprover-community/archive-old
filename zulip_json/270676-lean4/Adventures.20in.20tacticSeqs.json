[
    {
        "content": "<p>It took me a while to diagnose some curious behavior involving <code>tacticSeq</code>s so I thought I would share in case others hit similar issues:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- works</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">first</span>\n  <span class=\"bp\">|</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span>\n    <span class=\"n\">repeat</span> <span class=\"n\">assumption</span>\n    <span class=\"n\">done</span>\n  <span class=\"bp\">|</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inr</span>\n    <span class=\"n\">repeat</span> <span class=\"n\">assumption</span>\n    <span class=\"n\">done</span>\n\n<span class=\"c1\">-- fails: `repeat` claims `assumption; done`</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"c1\">-- error: unsolved goals</span>\n  <span class=\"n\">first</span>\n  <span class=\"bp\">|</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"bp\">;</span> <span class=\"n\">done</span>\n  <span class=\"bp\">|</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inr</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"bp\">;</span> <span class=\"n\">done</span>\n\n<span class=\"c1\">-- fails: `repeat` claims `assumption; done`</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"c1\">-- error: unsolved goals</span>\n  <span class=\"n\">first</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">apply</span> <span class=\"n\">Or.inl</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"bp\">;</span> <span class=\"n\">done</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">apply</span> <span class=\"n\">Or.inr</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"bp\">;</span> <span class=\"n\">done</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- works</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">first</span>\n  <span class=\"bp\">|</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span><span class=\"bp\">;</span> <span class=\"o\">(</span><span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"n\">done</span>\n  <span class=\"bp\">|</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inr</span><span class=\"bp\">;</span> <span class=\"o\">(</span><span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"n\">done</span>\n\n<span class=\"c1\">-- works: `{` indicates a tacticSeq, so `repeat` only claims `assumption`</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">first</span>\n  <span class=\"bp\">|</span> <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"bp\">;</span> <span class=\"n\">done</span> <span class=\"o\">}</span>\n  <span class=\"bp\">|</span> <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">Or.inr</span><span class=\"bp\">;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span><span class=\"bp\">;</span> <span class=\"n\">done</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>Takeaway: be very careful with tactic combinators, since they may take <code>tacticSeq</code>s and if so they won't play well with chains.</p>",
        "id": 238224263,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1620687411
    }
]