[
    {
        "content": "<p>This is a re-post from #announce, because that's not a great place for follow-up discussion.</p>\n<p>With generous support from Microsoft Research, I've been working on an online book called _Functional Programming in Lean_. The goal of the book is to be an accessible introduction to using Lean 4 as a programming language. My hope is that it is useful both to people who want to use Lean as a general-purpose programming language and to mathematicians who want to develop larger-scale proof automation but do not have a background in functional programming. I'm not assuming any background with FP, though it's probably not a good first book on programming in general.</p>\n<p>New content will be added once per month until it's done. I'll announce new updates here and in the usual venues.</p>\n<p>You can read what's there and follow along with the development at <a href=\"https://leanprover.github.io/functional_programming_in_lean/\">https://leanprover.github.io/functional_programming_in_lean/</a> .</p>\n<p>I'd like this book to be as useful as possible, and feedback is always welcome if there's some part that you didn't understand. You can contact me here or at <a href=\"mailto:david@davidchristiansen.dk\">david@davidchristiansen.dk</a>.</p>",
        "id": 285568236,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1654795350
    },
    {
        "content": "<p>This is really nice. It will be really useful in combination with the metaprogramming book that basically assumes people have read this one.</p>",
        "id": 285568518,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654795463
    },
    {
        "content": "<p>Do you have any idea how soon you'll have covered enough monad magic to read that metabook?</p>",
        "id": 285568601,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654795499
    },
    {
        "content": "<p>As an idea for David what counts as \"enough monad magic\", the metaprogramming book takes over at monad transformers and stacks, everything up to that is assumed as given.</p>",
        "id": 285568937,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1654795651
    },
    {
        "content": "<p>Henrik, are you sure the latest version covers transformers and stacks? I think that got removed</p>",
        "id": 285569168,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654795740
    },
    {
        "content": "<p>It's in the <code>temp/</code> folder right now but not rendered yes.</p>",
        "id": 285569205,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1654795756
    },
    {
        "content": "<p><a href=\"https://github.com/arthurpaulino/lean4-metaprogramming-book/tree/master/temp\">https://github.com/arthurpaulino/lean4-metaprogramming-book/tree/master/temp</a> here</p>",
        "id": 285569256,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1654795774
    },
    {
        "content": "<p>Though it would make sense to eventually move this knowledge to functional programming in lean I think.</p>",
        "id": 285569402,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1654795823
    },
    {
        "content": "<p>I'm an old man, I <em>printed</em> the book two days ago. Nothing else exists <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 285569406,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654795824
    },
    {
        "content": "<p>There'll likely be a few months until then. I expect the next few chapters to have this rough outline:</p>\n<ul>\n<li>\"Hello world\", including how to think about side effects in a pure language, though without the M-word, along with practical tasks like how to use the compiler to build executables</li>\n<li>Type classes as a principled way to do ad-hoc polymorphism</li>\n<li>Monads for things like Option</li>\n<li>Revisit \"hello world\", show how do-notation works, cover the nifty Lean features</li>\n<li>Do other stuff for a while...</li>\n<li>Then do some monad transformers and introduce big parts of the Lean library that use them</li>\n</ul>",
        "id": 285569493,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1654795865
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/First.20release.20of.20.22Functional.20Programming.20in.20Lean.22/near/285569406\">said</a>:</p>\n<blockquote>\n<p>I'm an old man, I <em>printed</em> the book two days ago. Nothing else exists <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>\n</blockquote>\n<p>You actually went through with it hahaha.</p>",
        "id": 285569554,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1654795896
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"354934\">David Thrane Christiansen</span> <a href=\"#narrow/stream/270676-lean4/topic/First.20release.20of.20.22Functional.20Programming.20in.20Lean.22/near/285569493\">said</a>:</p>\n<blockquote>\n<p>There'll likely be a few months until then. I expect the next few chapters to have this rough outline:</p>\n<ul>\n<li>\"Hello world\", including how to think about side effects in a pure language, though without the M-word, along with practical tasks like how to use the compiler to build executables</li>\n<li>Type classes as a principled way to do ad-hoc polymorphism</li>\n<li>Monads for things like Option</li>\n<li>Revisit \"hello world\", show how do-notation works, cover the nifty Lean features</li>\n<li>Do other stuff for a while...</li>\n<li>Then do some monad transformers and introduce big parts of the Lean library that use them</li>\n</ul>\n</blockquote>\n<p>I think one of the reasons patrick is asking is that towards the end of july there is a plan to teach a bunch of Lean mathematicians how to meta program in lean 4 so they can help porting the tactics over and for that it would be optimal if we had resources that lead the way from very little Lean 4 programming knowledge to meta programming.</p>",
        "id": 285569745,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1654795980
    },
    {
        "content": "<p>I'm working as fast as I can on this, but I'm not so sure that I can get all the way to monad transformers by July. But let's check in at the next release and see where things stand.</p>",
        "id": 285569972,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1654796082
    },
    {
        "content": "<p>Indeed that's part of the motivation. It seems that Lean 4 requires more monadic understanding than Lean 3.</p>",
        "id": 285570002,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654796097
    },
    {
        "content": "<p>In Lean 3 I was able to write <a href=\"https://leanprover-community.github.io/extras/tactic_writing.html\">https://leanprover-community.github.io/extras/tactic_writing.html</a> which covers very little monadology and still allows to write easy tactics.</p>",
        "id": 285570069,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654796138
    },
    {
        "content": "<p>Not sure how important it is at this very moment but have you given any thought to contacting a publisher? O'Reilly at least always says they're trying to find the next new thing. Maybe they'd be interested in funding some of the writing of these books (which yeah seems also super helpful!).</p>",
        "id": 285571474,
        "sender_full_name": "Julian Berman",
        "timestamp": 1654796903
    },
    {
        "content": "<p>Ah sorry, I see you said you're already getting supported by MS.</p>",
        "id": 285571617,
        "sender_full_name": "Julian Berman",
        "timestamp": 1654796992
    },
    {
        "content": "<p>Patrick I'm curious why you say that Lean4 requires more monadic understanding? Is it because of the uses of <code>lift</code>s all over the place? I would think the fact that you can write for loops in the usual way is an argument against this claim!</p>",
        "id": 285590741,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654806237
    },
    {
        "content": "<p>Yes, I'm thinking about <code>liftWhatever</code> and <code>withStuff</code> that appear everywhere. The words \"monad stack\" and \"monad transformer\" don't appear anywhere in our elementary Lean 3 tactic writing documentation (and I don't think they appear in Rob's lectures).</p>",
        "id": 285591664,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654806741
    },
    {
        "content": "<p>However this is a very superficial comment. I only claim I see things that I didn't need to know in Lean 3 and seem really important from the very beginning here.</p>",
        "id": 285591759,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654806786
    },
    {
        "content": "<p>I spoke in ETH Zurich last Friday and after the talk a Springer/Birkhäuser publisher approached me and asked if I was interested in writing a book. I said no but I can pass their details on if you're interested.</p>",
        "id": 285596553,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654809300
    },
    {
        "content": "<p>I think tactic writing / monadic programming in Lean 4 can look scarier because the syntax is richer, there are more monads and the API is more extensive. But in the very core, it's still monads and the fundamental concepts remain</p>",
        "id": 285601106,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1654811975
    },
    {
        "content": "<p>In my personal experience one can work with <code>liftWhatever</code> and <code>withStuff</code> without really knowing monad transformers. Signatures of these things and examples (from the lean 4 source, now from the metaprogramming book) are often enough.</p>",
        "id": 285636956,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1654843068
    },
    {
        "content": "<p>The book is for free on the Lean web page - no publisher needed right now, but that might be a nice way to extend the reach of Lean someday. I was also very happy with my experience with the MIT Press for _The Little Typer_, so they'd be good to talk to.</p>",
        "id": 285638405,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1654844394
    }
]