[
    {
        "content": "<p>Hi, I'm trying out the VSCode extension and checking the Theorem Proving book(?), and I get this indication that there are \"problems\" with # commands. I was wondering whether that's normal, why it happens, can it be disabled, etc? At a quick glance couldn't find any issues/references to this. It's not critical <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span> , but I find it a bit annoying (maybe it triggers some old memories, idk). <br>\nAn example:<br>\n<a href=\"/user_uploads/3121/_UyE7KKAwPQ2Qm-6D9XsaM_Y/image.png\">image.png</a> <br>\n<a href=\"/user_uploads/3121/Hy5_FkZKD3MJVLbimBZjHR6A/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/_UyE7KKAwPQ2Qm-6D9XsaM_Y/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/_UyE7KKAwPQ2Qm-6D9XsaM_Y/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Hy5_FkZKD3MJVLbimBZjHR6A/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Hy5_FkZKD3MJVLbimBZjHR6A/image.png\"></a></div>",
        "id": 272466234,
        "sender_full_name": "Tomás Díaz",
        "timestamp": 1645222982
    },
    {
        "content": "<p>\"#\" commands aren't supposed to be at the final state of your files. They are just helper commands, that you use while working but then get deleted after you're informed of what they say. For instance, if you define a function <code>f</code> and you want to test it with some inputs <code>x y z</code>, you might be able to use <code>#eval f x y z</code> just to see what it returns.</p>",
        "id": 272467808,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1645223832
    },
    {
        "content": "<p>perfect, thx <span aria-label=\"ok\" class=\"emoji emoji-1f44c\" role=\"img\" title=\"ok\">:ok:</span></p>",
        "id": 272468324,
        "sender_full_name": "Tomás Díaz",
        "timestamp": 1645224133
    },
    {
        "content": "<p>Hi there, I'm wondering how to use lean to prove a proposition such as 6 \\in {6}. Which tactic should I use?</p>",
        "id": 273604483,
        "sender_full_name": "Zhengying",
        "timestamp": 1646123320
    },
    {
        "content": "<p>You should ask this in a separate thread, this thread is about VS Code problems in Lean 4. Are you talking about Lean 3? I would use <code>library_search</code>.</p>",
        "id": 273604801,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1646123454
    }
]