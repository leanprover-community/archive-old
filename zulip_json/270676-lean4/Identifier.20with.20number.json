[
    {
        "content": "<p>Is it possible to use identifiers with numbers in them for the <code>def</code> or <code>inductive</code> commands - e.g. <code>inductive Foo.1.Bar</code>?<br>\nI tried:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"k\">in</span>\n<span class=\"n\">macro</span> <span class=\"s2\">\"gen\"</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"n\">mkIdent</span> <span class=\"bp\">$</span> <span class=\"bp\">.</span><span class=\"n\">str</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">str</span> <span class=\"bp\">.</span><span class=\"n\">anonymous</span> <span class=\"s2\">\"x\"</span><span class=\"o\">)</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"s2\">\"y\"</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">inductive</span> <span class=\"bp\">$</span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"n\">gen</span> <span class=\"c1\">-- invalid 'end', insufficient scopes</span>\n</code></pre></div>",
        "id": 299278468,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1663397012
    },
    {
        "content": "<p>I think numbers right after the dot are reserved for projections? But you can do <code>._1</code></p>",
        "id": 299279401,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1663397844
    },
    {
        "content": "<p>There was a description somewhere in the metaprogramming tutorial about how <code>.num</code> is reserved for internal use, I don't remember for what exactly</p>",
        "id": 299279562,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1663397932
    }
]