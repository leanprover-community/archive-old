[
    {
        "content": "<p>I have very little understanding how priorities work, what would be a good way to set up priority for 'inner product like' notation?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">100</span> <span class=\"s2\">\"⟪\"</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"mi\">60</span> <span class=\"s2\">\", \"</span> <span class=\"n\">y</span><span class=\"o\">:</span><span class=\"mi\">61</span> <span class=\"s2\">\"⟫\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Inner</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n</code></pre></div>\n<p>but this does not work properly as function application does not work properly. Writing <code>f  ⟪x,x⟫</code> gives an error but <code>f (⟪x,x⟫)</code> works.</p>",
        "id": 263912238,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1638820675
    },
    {
        "content": "<p>mwe:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">inner</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span>\n\n<span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">100</span> <span class=\"s2\">\"⟪\"</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"mi\">60</span> <span class=\"s2\">\", \"</span> <span class=\"n\">y</span><span class=\"o\">:</span><span class=\"mi\">61</span> <span class=\"s2\">\"⟫\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">inner</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"o\">(</span><span class=\"bp\">⟪</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"bp\">⟫</span><span class=\"o\">))</span>   <span class=\"c1\">--- works</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"bp\">⟪</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"bp\">⟫</span><span class=\"o\">)</span>    <span class=\"c1\">--- error</span>\n</code></pre></div>",
        "id": 263912730,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1638820781
    }
]