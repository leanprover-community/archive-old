[
    {
        "content": "<p><code>Test/A.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">initialize</span> <span class=\"n\">fooAttr</span> <span class=\"o\">:</span> <span class=\"n\">TagAttribute</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">registerTagAttribute</span> <span class=\"bp\">`</span><span class=\"n\">foo</span> <span class=\"s2\">\"foo\"</span>\n</code></pre></div>\n<p><code>Test.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Test.A</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">unsafe</span> <span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">Lean.initSearchPath</span> <span class=\"s2\">\"/home/mario/.elan/toolchains/leanprover--lean4---nightly/lib/lean/:build\"</span>\n  <span class=\"n\">withImportModules</span> <span class=\"o\">[{</span> <span class=\"n\">module</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Test.A</span> <span class=\"o\">:</span> <span class=\"n\">Import</span> <span class=\"o\">}]</span> <span class=\"o\">{}</span> <span class=\"mi\">0</span> <span class=\"k\">fun</span> <span class=\"n\">env</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">()</span>\n</code></pre></div>\n<p>result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">Test</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">environment</span> <span class=\"n\">extension</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">foo'</span> <span class=\"n\">has</span> <span class=\"n\">already</span> <span class=\"n\">been</span> <span class=\"n\">used</span>\n</code></pre></div>\n<p>I don't see where the conflict is here, since <code>withImportModules</code> should presumably be working from a clean environment, not containing the declarations in the ambient environment (i.e. the one in the <code>CommandElabM</code> used to elaborate <code>main</code>). There are no diamonds or anything either</p>",
        "id": 249644483,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1629146359
    },
    {
        "content": "<p>I have no idea if this is related, but if <code>Test.lean</code> doesn't import <code>Test.A</code> and just imports <code>Lean</code>, then it segfaults at runtime</p>",
        "id": 249644837,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1629146541
    },
    {
        "content": "<p>Pushed a fix for it. The example above should now work using <code>master</code>.</p>",
        "id": 249667518,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1629162350
    }
]