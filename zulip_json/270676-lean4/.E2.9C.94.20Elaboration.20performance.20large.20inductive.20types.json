[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130511\">Christian Pehle</span> has marked this topic as resolved.</p>",
        "id": 252170899,
        "sender_full_name": "Notification Bot",
        "timestamp": 1630932679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130511\">@Christian Pehle</span>  I optimized the <code>inductive</code> command for the enumeration type case.  The problem was that the <code>noConfusion</code> auxiliary construction is quadratic on the number of constructors. I added a custom version for enumeration types that is linear.<br>\nNow, <code>inductive CXCursorKind where ...</code> is very efficient.<br>\nI removed the <code>enum</code> command macro from the main repo since it is not needed anymore.</p>",
        "id": 252212928,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1630955280
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"112857\">@Leonardo de Moura</span>, this works nicely now. I took the liberty to implement a special case for <code>deriving BEq</code> as well. Of course it is easy to define it by hand, but I thought it might be convenient still.</p>",
        "id": 252527770,
        "sender_full_name": "Christian Pehle",
        "timestamp": 1631133044
    },
    {
        "content": "<p>This is useful. We should also have special support for <code>DecidableEq</code>.</p>",
        "id": 252528581,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1631133377
    }
]