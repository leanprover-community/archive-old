[
    {
        "content": "<p>I have been working with indexed inductive types (to define group rings). One piece of code (surprisingly to me) times out even with high limits. A self-contained piece of the code is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">FormalSum</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Nat</span> <span class=\"bp\">×</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">BasicRel</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span>  <span class=\"bp\">→</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span>   <span class=\"bp\">→</span>  <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">zeroCoeff</span> <span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)::</span> <span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"n\">tail</span>\n<span class=\"bp\">|</span> <span class=\"n\">addCoeffs</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">tail</span><span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"bp\">→</span> <span class=\"n\">BasicRel</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">s₁</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span>  <span class=\"n\">s₂</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">swap</span> <span class=\"o\">(</span><span class=\"n\">a₁</span> <span class=\"n\">a₂</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">x₁</span> <span class=\"n\">x₂</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">tail</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"o\">((</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">,</span> <span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span>\n                    <span class=\"o\">((</span><span class=\"n\">a₂</span><span class=\"o\">,</span> <span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">linear_extension</span><span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">X</span><span class=\"o\">](</span><span class=\"n\">f₀</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span>\n<span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">t</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">h</span>\n      <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"n\">termination_by</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">s.length</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">2000000</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BasicRel</span> <span class=\"k\">in</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">invariance_of_linear_extension</span><span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">X</span><span class=\"o\">](</span><span class=\"n\">f₀</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">rel</span> <span class=\"o\">:</span> <span class=\"n\">BasicRel</span> <span class=\"n\">X</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span><span class=\"o\">,</span> <span class=\"n\">linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">s₁</span> <span class=\"bp\">=</span> <span class=\"n\">linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">s₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n    <span class=\"k\">fun</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"n\">rel</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">match</span> <span class=\"n\">s₁</span><span class=\"o\">,</span> <span class=\"n\">s₂</span><span class=\"o\">,</span> <span class=\"n\">rel</span> <span class=\"k\">with</span>\n        <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">),</span> <span class=\"n\">zeroCoeff</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">hyp</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n          <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hyp</span><span class=\"o\">]</span>\n          <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">linear_extension</span><span class=\"o\">]</span>\n        <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">),</span>\n          <span class=\"n\">addCoeffs</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">linear_extension</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">Nat.add_assoc</span><span class=\"o\">]</span>\n            <span class=\"k\">have</span> <span class=\"n\">step</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n              <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Nat.right_distrib</span><span class=\"o\">]</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">step</span><span class=\"o\">]</span>\n        <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">t₁</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"n\">t₂</span><span class=\"o\">,</span> <span class=\"n\">cons</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">t₁</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">t₂</span><span class=\"o\">)</span> <span class=\"n\">r</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">linear_extension</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">Nat.add_assoc</span><span class=\"o\">]</span>\n            <span class=\"k\">let</span> <span class=\"n\">ih</span> <span class=\"o\">:=</span> <span class=\"n\">invariance_of_linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">t₁</span> <span class=\"n\">t₂</span> <span class=\"n\">r</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ih</span><span class=\"o\">]</span>\n        <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">,</span> <span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">,</span>\n            <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">),</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₂</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">),</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₁</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"o\">,</span>\n              <span class=\"n\">swap</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n              <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">linear_extension</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">Nat.add_assoc</span><span class=\"o\">]</span>\n              <span class=\"k\">have</span> <span class=\"n\">step</span> <span class=\"o\">:</span> <span class=\"n\">a₁</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x₁</span> <span class=\"bp\">+</span> <span class=\"n\">a₂</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x₂</span> <span class=\"bp\">=</span> <span class=\"n\">a₂</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x₂</span> <span class=\"bp\">+</span> <span class=\"n\">a₁</span> <span class=\"bp\">*</span> <span class=\"n\">f₀</span> <span class=\"n\">x₁</span> <span class=\"o\">:=</span>\n                  <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Nat.add_comm</span><span class=\"o\">]</span>\n              <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">step</span><span class=\"o\">]</span>\n<span class=\"n\">termination_by</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">s₁.length</span>\n</code></pre></div>\n<p>Is there something I should be doing differently? Or is this an issue with the server. For context, I tried using the induction tactic, which worked very well in related code, but could not prove termination in this case as the relation between <code>s</code> and its tail <code>t</code> was lost.</p>\n<p>Thanks.</p>",
        "id": 281649521,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1652082410
    },
    {
        "content": "<p>Actually, there is an obvious thing I should (and will try) - prove separate theorems for the cases. But I anyway wanted to report this as a possible performance issue.</p>",
        "id": 281650199,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1652082985
    },
    {
        "content": "<p>With more experiments, this is clearly a case of checking exhaustiveness of pattern matching taking too long. I could minimize further to the following code hanging:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">FormalSum</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Nat</span> <span class=\"bp\">×</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">BasicRel</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span>  <span class=\"bp\">→</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span>   <span class=\"bp\">→</span>  <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">zeroCoeff</span> <span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)::</span> <span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"n\">tail</span>\n<span class=\"bp\">|</span> <span class=\"n\">addCoeffs</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">tail</span><span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"bp\">→</span> <span class=\"n\">BasicRel</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">s₁</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span>  <span class=\"n\">s₂</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">swap</span> <span class=\"o\">(</span><span class=\"n\">a₁</span> <span class=\"n\">a₂</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">x₁</span> <span class=\"n\">x₂</span><span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">tail</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">):</span>\n        <span class=\"n\">BasicRel</span>  <span class=\"o\">((</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">,</span> <span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span>\n                    <span class=\"o\">((</span><span class=\"n\">a₂</span><span class=\"o\">,</span> <span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">linear_extension</span><span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">X</span><span class=\"o\">](</span><span class=\"n\">f₀</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">2000000</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BasicRel</span> <span class=\"k\">in</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">invariance_of_linear_extension</span><span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">s₁</span> <span class=\"n\">s₂</span><span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">BasicRel</span> <span class=\"n\">X</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span><span class=\"o\">)(</span><span class=\"n\">f₀</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">s₁</span> <span class=\"bp\">=</span> <span class=\"n\">linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">s₂</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">s₁</span><span class=\"o\">,</span> <span class=\"n\">s₂</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n        <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">,</span> <span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">,</span>\n            <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">),</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₂</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">),</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₁</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"o\">,</span>\n              <span class=\"n\">swap</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n        <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">),</span> <span class=\"n\">zeroCoeff</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">hyp</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"gr\">sorry</span>\n        <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>For comparison, if I remove the second case match then everything is instantaneous. By this I mean replacing the theorem with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">invariance_of_linear_extension</span><span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">s₁</span> <span class=\"n\">s₂</span><span class=\"o\">:</span> <span class=\"n\">FormalSum</span> <span class=\"n\">X</span><span class=\"o\">)(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">BasicRel</span> <span class=\"n\">X</span> <span class=\"n\">s₁</span> <span class=\"n\">s₂</span><span class=\"o\">)(</span><span class=\"n\">f₀</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">s₁</span> <span class=\"bp\">=</span> <span class=\"n\">linear_extension</span> <span class=\"n\">f₀</span> <span class=\"n\">s₂</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">s₁</span><span class=\"o\">,</span> <span class=\"n\">s₂</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n        <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">,</span> <span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">tail</span><span class=\"o\">,</span>\n            <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">),</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₂</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">),</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₁</span><span class=\"o\">))</span> <span class=\"o\">::</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"o\">,</span>\n              <span class=\"n\">swap</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₁</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₁</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">x₂</span><span class=\"o\">)</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n        <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I am using the nightly: <code>leanprover/lean4:nightly-2022-05-08</code></p>",
        "id": 281653896,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1652085545
    }
]