[
    {
        "content": "<p>Why can I not do this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">enum</span> <span class=\"bp\">$</span><span class=\"n\">id</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">{</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">,]</span><span class=\"bp\">*</span> <span class=\"o\">})</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">inductive</span> <span class=\"bp\">$</span><span class=\"n\">id</span> <span class=\"n\">where</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">]</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unexpected</span> <span class=\"n\">syntax</span>\n  <span class=\"kd\">inductive</span> <span class=\"bp\">$</span><span class=\"n\">id</span> <span class=\"n\">where</span><span class=\"bp\">$</span><span class=\"o\">[</span>\n    <span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">]</span><span class=\"bp\">*</span>\n\n<span class=\"n\">expected</span> <span class=\"n\">command</span>\n</code></pre></div>",
        "id": 284239810,
        "sender_full_name": "Joseph O",
        "timestamp": 1653759419
    },
    {
        "content": "<p>Did you define the enum-<em>syntax</em> before?</p>",
        "id": 284240068,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1653759728
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"372804\">Marcus Rossel</span> <a href=\"#narrow/stream/270676-lean4/topic/Enum.20Macro/near/284240068\">said</a>:</p>\n<blockquote>\n<p>Did you define the enum-<em>syntax</em> before?</p>\n</blockquote>\n<p>Oh wait i think i forgot to change it</p>",
        "id": 284240105,
        "sender_full_name": "Joseph O",
        "timestamp": 1653759828
    },
    {
        "content": "<p>It works now</p>",
        "id": 284240159,
        "sender_full_name": "Joseph O",
        "timestamp": 1653759866
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 284240160,
        "sender_full_name": "Notification Bot",
        "timestamp": 1653759868
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as unresolved.</p>",
        "id": 284240695,
        "sender_full_name": "Notification Bot",
        "timestamp": 1653760543
    },
    {
        "content": "<p>Any way I can make this possible?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"enum\"</span> <span class=\"n\">ident</span> <span class=\"s2\">\"{\"</span> <span class=\"o\">(</span><span class=\"n\">ident</span> <span class=\"s2\">\",\"</span><span class=\"o\">)</span><span class=\"bp\">*</span> <span class=\"n\">ident</span> <span class=\"s2\">\"}\"</span> <span class=\"s2\">\";\"</span><span class=\"o\">:</span> <span class=\"n\">command</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">enum</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">{</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">,]</span><span class=\"bp\">*</span> <span class=\"bp\">$</span><span class=\"n\">id</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">}</span><span class=\"bp\">;</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">inductive</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"n\">where</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">]</span><span class=\"bp\">*</span> <span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">id</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 284240700,
        "sender_full_name": "Joseph O",
        "timestamp": 1653760554
    },
    {
        "content": "<p>Even better, make the last comma optional</p>",
        "id": 284240745,
        "sender_full_name": "Joseph O",
        "timestamp": 1653760564
    }
]