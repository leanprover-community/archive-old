[
    {
        "content": "<p>Basic question, but: in Lean 3 we seemed to be able to do things like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">foo</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">bar</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>and then, in other definitions, <code>bar.foo α</code> could be used to refer to that instance. (This doesn't seem to work anymore.)</p>\n<p>What's the equivalent way to refer to that instance in Lean 4?</p>\n<p>(I tried <code>(_) : foo (bar α)</code>, but I'm not sure this is the best way.)</p>",
        "id": 315906575,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671048662
    },
    {
        "content": "<p>I think you can use <code>#synth foo (bar \\a)</code> to print the name of the instance</p>",
        "id": 315907672,
        "sender_full_name": "Horațiu Cheval",
        "timestamp": 1671049119
    },
    {
        "content": "<p>Nice, that works thanks! (I just had to put <code>variable (α : Type) [HasBtw α]</code> in front). Looks like it's <code>instFooBar</code> in general!</p>",
        "id": 315908396,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671049408
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> has marked this topic as resolved.</p>",
        "id": 315908688,
        "sender_full_name": "Notification Bot",
        "timestamp": 1671049532
    },
    {
        "content": "<p>Some people would discourage explicit references to the auto-generated name.</p>",
        "id": 315909518,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671049916
    },
    {
        "content": "<p>Lean itself discourages the reference by making the name obnoxiously long now ;)</p>",
        "id": 315910423,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671050262
    },
    {
        "content": "<p>Hmm, yeah, but a mathlib file I’m porting uses explicit references in Lean 3. Should I try to find a workaround, or is it ok to reference it directly?</p>",
        "id": 315927442,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671057181
    },
    {
        "content": "<p>Yeah this came up with a file I was porting and I just translated the proof ie used the new instance names explicitly because I figured that if it was bad style then it wasn't really my fault</p>",
        "id": 315927832,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671057340
    },
    {
        "content": "<p>I've been going back and renaming the automatically named instances whenever I want to refer to them by hand.</p>",
        "id": 315948007,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1671070256
    }
]