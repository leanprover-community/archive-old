[
    {
        "content": "<p>Suppose I am proving a  theorem like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">splitme</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">P</span><span class=\"o\">:</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"n\">Q</span> <span class=\"k\">else</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">Q</span> <span class=\"bp\">∨</span> <span class=\"n\">R</span>\n</code></pre></div>\n<p>How would I \"split the if statement\" in P into two cases?  The <code>split</code> tactic seems to only be for the goal, not hypotheses.  The <code>cases</code> tactic refuses to split on <code>i=0</code>.  I have figured out a workaround of using<code>cases heq: i==0</code> and then using <code>(i==0) = true</code> to prove <code>i=0</code> and simplify away the <code>if</code>, but this seems overly convoluted.</p>",
        "id": 317216248,
        "sender_full_name": "Jeremy Salwen",
        "timestamp": 1671645576
    },
    {
        "content": "<p>does <code>split at P</code> work?</p>",
        "id": 317216573,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671645660
    },
    {
        "content": "<p>Ah, that does work! It is not mentioned by the <code>split</code> docs!</p>",
        "id": 317216866,
        "sender_full_name": "Jeremy Salwen",
        "timestamp": 1671645744
    },
    {
        "content": "<p>Nice catch! Docs PRs are always welcome!</p>",
        "id": 317219829,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671646611
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=split#doc\">docs4#split</a></p>",
        "id": 317219873,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671646628
    },
    {
        "content": "<p>tactic4#split</p>",
        "id": 317219967,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671646664
    },
    {
        "content": "<p>hmm, I don't know how to summon links to tactic docstrings in Lean 4.</p>",
        "id": 317220009,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671646679
    },
    {
        "content": "<p>Created this PR to improve the docs! <a href=\"https://github.com/leanprover/lean4/pull/1988\">https://github.com/leanprover/lean4/pull/1988</a></p>",
        "id": 317491084,
        "sender_full_name": "Jeremy Salwen",
        "timestamp": 1671768911
    }
]