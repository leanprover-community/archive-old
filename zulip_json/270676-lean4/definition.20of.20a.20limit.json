[
    {
        "content": "<p>Hello,</p>\n<p>With lean 3 I can write write the definition very clearly.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">limit</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">):</span> <span class=\"kt\">Prop</span><span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span><span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span><span class=\"n\">δ</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">|</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"bp\">|</span><span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span>\n</code></pre></div>\n<p>How to do the same thing with lean 4?<br>\nThanks</p>",
        "id": 315241583,
        "sender_full_name": "tica",
        "timestamp": 1670782966
    },
    {
        "content": "<p>Two things:</p>\n<ol>\n<li>To my knowledge this is not the definition of a limit used in mathlib, so if you are interested in working with mathlib you should probably stick to their definition which is filter based iirc</li>\n<li>Since a limit requires real numbers and real numbers have not been defined yet in mathlib4 i'd say you don't right now, if you wait a few months or weeks however basically the same thing as above should work out in a mathlib4 project.</li>\n</ol>",
        "id": 315241830,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1670783106
    },
    {
        "content": "<p>Yes several definitions are usable but I try to learn to make my own definitions to learn the language.</p>\n<p>I'm going to stay on lean 3 until the real numbers are set.</p>\n<p>Thanks</p>",
        "id": 315242593,
        "sender_full_name": "tica",
        "timestamp": 1670783495
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"570115\">@tica</span> I would recommend playing with Lean3 first, as mathlib in Lean4 is still quite bare at the moment. You may find <a href=\"https://leanprover-community.github.io/mathematics_in_lean/index.html\">this reference</a> useful. Tracing chains of definitions on the mathlib3 docs site is also a good way to learn the language/library.</p>",
        "id": 315500095,
        "sender_full_name": "Winston Yin",
        "timestamp": 1670898051
    },
    {
        "content": "<p>Yes that is what I will do and I will learn lean 4 later.<br>\nThanks for the reference  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 315616982,
        "sender_full_name": "tica",
        "timestamp": 1670945162
    }
]