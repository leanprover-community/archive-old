[
    {
        "content": "<p>Hi! So, I was trying to compile a file inside a lake project from command line (I want to build a testing script), with <code>lean --load-dynlib=&lt;path-to-lib.so&gt; file.lean</code> which was working fine. Now I added mathlib4 as a dependency of the project, and I got <code>error: unknown package 'Mathlib'</code> when trying to run the same command. I tried to build Mathlib's shared library and add it to the command, getting  <code>lean --load-dynlib=&lt;path-to-lib.so&gt; --load-dynlib=&lt;path-to-Mathlib.so&gt; file.lean</code>, but then I get the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">libc</span><span class=\"bp\">++</span><span class=\"n\">abi</span><span class=\"o\">:</span> <span class=\"n\">terminating</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">uncaught</span> <span class=\"n\">exception</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">error</span> <span class=\"n\">loading</span> <span class=\"n\">library</span><span class=\"o\">,</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">tomazgomes</span><span class=\"bp\">/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">Projects</span><span class=\"bp\">/</span><span class=\"n\">masters</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">smt</span><span class=\"bp\">/</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">libMathlib.so</span><span class=\"o\">:</span> <span class=\"n\">undefined</span> <span class=\"n\">symbol</span><span class=\"o\">:</span> <span class=\"n\">l_Lean_NameMapExtension_find_x3f___rarg___boxed</span>\n</code></pre></div>\n<p>What should I do?</p>",
        "id": 323094259,
        "sender_full_name": "Tomaz Gomes Mascarenhas",
        "timestamp": 1674500083
    },
    {
        "content": "<p>I'm not sure how to get things running without Lake. Is there a particular reason you're avoiding using Lake?</p>",
        "id": 323106823,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674504039
    },
    {
        "content": "<p>I'm not by a computer right now but I got this working few months back.</p>\n<p>Make sure your Lean and mathlib versions are matching, include mathlib oleans in <code>LEAN_PATH</code> environment variable(not sure if I remember the variable name correctly).</p>\n<p>However, I'm not familiar with your error and I have no clue if my suggestion will solve it.</p>",
        "id": 323117400,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1674507704
    },
    {
        "content": "<p>Also you might have to provide paths for *.olean and *.so for Std4, quote4, ... i.e. mathlib's dependencies</p>",
        "id": 323117971,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1674507922
    },
    {
        "content": "<p>Do not set <code>LEAN_PATH</code> manually. Use <code>lake env</code></p>",
        "id": 323119523,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674508562
    },
    {
        "content": "<p>I was doing it to create shared library that I then loaded from a different application. It was a pain to get it working, especially with some dependencies like mathlib. Later I figured out how to do it with lake and my life was much happier :) </p>\n<p>I would strongly suggest to think hard if you can achieve what you want with lake.</p>",
        "id": 323119862,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1674508688
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> <a href=\"#narrow/stream/270676-lean4/topic/Running.20lean.20from.20command.20line/near/323106823\">said</a>:</p>\n<blockquote>\n<p>I'm not sure how to get things running without Lake. Is there a particular reason you're avoiding using Lake?</p>\n</blockquote>\n<p>I need a way to compile just a file as opposed to the entire project. Is there a way to do it using lake?</p>",
        "id": 323123105,
        "sender_full_name": "Tomaz Gomes Mascarenhas",
        "timestamp": 1674510025
    },
    {
        "content": "<p>I think you should be able to make a target with that file as its root? see <a href=\"https://github.com/leanprover/Lake#creating-and-building-a-package\">lake readme</a></p>",
        "id": 323123506,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674510199
    },
    {
        "content": "<p><a href=\"https://github.com/lecopivo/HouLean/blob/f2fd297da8ebcc51432baf592c5f74c9e4541d94/lakefile.lean#L18\">This function</a> generates a target for every directory in <code>Wrangles</code> directory and the root Lean file is <code>Main.lean</code>. Likely you can modify this approach.</p>",
        "id": 323126193,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1674511278
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"360938\">Tomaz Gomes Mascarenhas</span> <a href=\"#narrow/stream/270676-lean4/topic/Running.20lean.20from.20command.20line/near/323123105\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> <a href=\"#narrow/stream/270676-lean4/topic/Running.20lean.20from.20command.20line/near/323106823\">said</a>:</p>\n<blockquote>\n<p>I'm not sure how to get things running without Lake. Is there a particular reason you're avoiding using Lake?</p>\n</blockquote>\n<p>I needed a way to compile just a file as opposed to the entire project. Is there a way to do it using lake?</p>\n</blockquote>\n<p>I've only ever used <code>lake</code> with Mathlib but <code>lake build +Mathlib.Path.To.File</code> will just compile that one file and all its dependencies.</p>",
        "id": 323126760,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674511486
    }
]