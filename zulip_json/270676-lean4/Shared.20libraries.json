[
    {
        "content": "<p>How can I generate Lean's shared libraries? Lean's installation contains only static ones <code>libInit.a libLean.a libleancpp.a libStd.a</code>. Peeking into CMakeLists they are not generated because of some cross-compiling issues. I'm on linux and want to develop only for linux right now, so that should not be an issue for me. I have tried to un-comment that block, but I'm getting bunch of errors about recompiling with -fPIC.</p>\n<p>Alternatively, how can I recompile those static libraries with fPIC such that I can use them when creating a plugin for some application.</p>",
        "id": 253884986,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1631989170
    },
    {
        "content": "<p>The nightlies come with <code>libleanshared.so</code></p>",
        "id": 253927774,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1632039113
    },
    {
        "content": "<p>and all code compiled with fPIC</p>",
        "id": 253927834,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1632039153
    },
    {
        "content": "<p>Thanks! I have missed that, I was using only stable.</p>",
        "id": 253933595,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1632045609
    },
    {
        "content": "<p>Ok, managed to get it working! Successfully created a shared library with lean, loaded it and executed from external application. Took me a while. One thing I was confused about, why is <code>void lean_initialize_runtime_module()</code> not declared in <code>lean.h</code>? It seems to be defined in lean library and it has to be called before anything.</p>",
        "id": 254070645,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1632152520
    }
]