[
    {
        "content": "<p>I have an expression <code>e</code> such as <code>(m : Ty) -&gt; Rest</code> (i.e. a <code>Expr.forallE</code>), which I want to turn into <code>Rest[m/mything]</code>, so basically just like Œ≤-Reduction for Œª-Terms, just for ‚àè-Types this time. I'm doing some tactics programming. I forgot what this is even called <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 300733814,
        "sender_full_name": "Max Nowak üê∫",
        "timestamp": 1664178066
    },
    {
        "content": "<p>If you have a <code>forallE</code> with no \"loose bvars\", then the binder is an open term with only the bvar index 0 in it. You can instantiate it using <code>Expr.instantiate1</code></p>",
        "id": 300741451,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1664181364
    },
    {
        "content": "<p>Alternatively, you can \"enter\" the binder using <code>forallMetaTelescope</code>, which will automatically instantiate it with a fresh fvar. You can then substitute for that fvar using <code>Expr.replaceFVar</code></p>",
        "id": 300741766,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1664181503
    },
    {
        "content": "<p>Thank you, that is exactly what I was looking for!</p>",
        "id": 300769149,
        "sender_full_name": "Max Nowak üê∫",
        "timestamp": 1664192246
    }
]