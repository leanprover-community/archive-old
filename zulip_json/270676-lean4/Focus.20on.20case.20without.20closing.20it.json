[
    {
        "content": "<p>Is there a way to focus on a specific goal in a <code>cases</code> proof, preferably by tag/name, without having to close it within the focused block?</p>\n<p>I currently have something like this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">intro</span> <span class=\"n\">eqv</span> <span class=\"n\">wt</span><span class=\"bp\">;</span>\n  <span class=\"n\">induction</span> <span class=\"n\">wt</span>\n  <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">eqv</span>\n  <span class=\"n\">case</span> <span class=\"n\">SndLeft.refl</span>     <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">SndLeft</span>          <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span>\n  <span class=\"n\">case</span> <span class=\"n\">SndRight.refl</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">SndRight</span>         <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span>\n  <span class=\"n\">case</span> <span class=\"n\">RcvLeft.refl</span>     <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">RcvLeft</span>          <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span>\n  <span class=\"n\">case</span> <span class=\"n\">RcvRight.refl</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">RcvRight</span>         <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">repeat</span> <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>Where each case starts differently, but they all end the same. Instead of having <code>&lt;;&gt; repeat assumption</code> everywhere, I'd much rather have the following</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">case</span> <span class=\"n\">SndLeft.refl</span>     <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">SndLeft</span>\n  <span class=\"n\">case</span> <span class=\"n\">SndRight.refl</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">SndRight</span>\n  <span class=\"n\">case</span> <span class=\"n\">RcvLeft.refl</span>     <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">RcvLeft</span>\n  <span class=\"n\">case</span> <span class=\"n\">RcvRight.refl</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">RcvRight</span>\n  <span class=\"n\">any_goals</span>\n    <span class=\"n\">repeat</span> <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>But this fails with unsolved goals at each <code>case</code></p>",
        "id": 280790085,
        "sender_full_name": "Alex Keizer",
        "timestamp": 1651405472
    },
    {
        "content": "<p>Mathlib4 has the <code>on_goal</code> tactic, which is similar to <code>work_on_goal</code>. The difference is basically the syntax, since tactic mode is slightly different from Lean 3</p>",
        "id": 280793234,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651409890
    },
    {
        "content": "<p>Ah, the index now starts from 1 instead of 0 (for standardization purposes). You'll see it in the docstring</p>",
        "id": 280793590,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651410271
    }
]