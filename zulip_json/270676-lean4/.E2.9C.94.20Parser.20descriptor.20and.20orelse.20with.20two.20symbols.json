[
    {
        "content": "<p>Success! For some reason in the last case you need to explicitly state the variable with its parser descriptor.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">IsSmooth</span>  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"kd\">class</span> <span class=\"n\">IsLin</span>  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n\n<span class=\"n\">syntax</span> <span class=\"n\">smoothProp</span> <span class=\"o\">:=</span> <span class=\"s2\">\"smooth\"</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"n\">linearProp</span> <span class=\"o\">:=</span> <span class=\"s2\">\"linear\"</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"n\">funProp</span> <span class=\"o\">:=</span> <span class=\"n\">smoothProp</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">linearProp</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"function_properties \"</span> <span class=\"n\">term</span> <span class=\"n\">funProp</span><span class=\"bp\">+</span> <span class=\"o\">:</span> <span class=\"n\">command</span>\n\n<span class=\"n\">macro_rules</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">function_properties</span> <span class=\"bp\">$</span><span class=\"n\">f</span> <span class=\"n\">smooth</span> <span class=\"bp\">$</span><span class=\"n\">proof</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">dbg_trace</span> <span class=\"s2\">\"making smooth\"</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">instance</span> <span class=\"n\">function_is_smooth</span> <span class=\"o\">:</span> <span class=\"n\">IsSmooth</span> <span class=\"bp\">$</span><span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">proof</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">function_properties</span> <span class=\"bp\">$</span><span class=\"n\">f</span> <span class=\"n\">linear</span> <span class=\"bp\">$</span><span class=\"n\">proof</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">dbg_trace</span> <span class=\"s2\">\"making linear\"</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">instance</span> <span class=\"n\">function_is_linear</span> <span class=\"o\">:</span> <span class=\"n\">IsLin</span> <span class=\"bp\">$</span><span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">proof</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">function_properties</span> <span class=\"bp\">$</span><span class=\"n\">f</span> <span class=\"bp\">$</span><span class=\"n\">prop</span><span class=\"o\">:</span><span class=\"n\">funProp</span> <span class=\"bp\">$</span><span class=\"n\">props</span><span class=\"o\">:</span><span class=\"n\">funProp</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">function_properties</span> <span class=\"bp\">$</span><span class=\"n\">f</span> <span class=\"bp\">$</span><span class=\"n\">prop</span><span class=\"o\">:</span><span class=\"n\">funProp</span>\n      <span class=\"n\">function_properties</span> <span class=\"bp\">$</span><span class=\"n\">f</span> <span class=\"bp\">$</span><span class=\"n\">props</span><span class=\"o\">:</span><span class=\"n\">funProp</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n\n<span class=\"n\">function_properties</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">id</span> <span class=\"n\">Float</span><span class=\"o\">)</span>\n  <span class=\"n\">linear</span> <span class=\"o\">⟨⟩</span>\n  <span class=\"n\">smooth</span> <span class=\"o\">⟨⟩</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">IsSmooth</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">id</span> <span class=\"n\">Float</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">infer_instance</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">IsLin</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">id</span> <span class=\"n\">Float</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">infer_instance</span>\n</code></pre></div>",
        "id": 280693453,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1651268984
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"346070\">Tomas Skrivan</span> has marked this topic as resolved.</p>",
        "id": 280693610,
        "sender_full_name": "Notification Bot",
        "timestamp": 1651269045
    }
]