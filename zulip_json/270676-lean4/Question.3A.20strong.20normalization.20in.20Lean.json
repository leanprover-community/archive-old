[
    {
        "content": "<p>I was a bit surprised (not that my surprise means much) when I read in \"An Abstract Machine for Strong Call by Need\" that \"the current version of the Coq proof assistant employs an abstract machine that uses a lazy strategy to fully normalize terms\".</p>\n<p>Is the (strong) normalization strategy used in Lean4 also lazy/call-by-need? Or is it strict/call-by-value?</p>",
        "id": 296437972,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1661975200
    },
    {
        "content": "<p>It's not exactly the call by need algorithm, but it is essentially a lazy algorithm</p>",
        "id": 296438564,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661975414
    },
    {
        "content": "<p>(this is in contrast to the VM / compiler, which is strictly call by value)</p>",
        "id": 296438694,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661975464
    },
    {
        "content": "<p>This is because it's not really an evaluation strategy, it is doing unification</p>",
        "id": 296438764,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661975496
    }
]