[
    {
        "content": "<p>Page 5 of <a href=\"https://leanprover-community.github.io/lt2021/slides/leo-LT2021-meta.pdf\">https://leanprover-community.github.io/lt2021/slides/leo-LT2021-meta.pdf</a> has the following diagram:<br>\n<a href=\"/user_uploads/3121/xaTW1b-J__2PanOoOy1NDykh/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/xaTW1b-J__2PanOoOy1NDykh/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/xaTW1b-J__2PanOoOy1NDykh/image.png\"></a></div><p>I have some questions about it:</p>\n<ul>\n<li>What do those arrows really mean? I don't see a direct relationship between <code>CommandElabM</code> and <code>TermElabM</code> and still it's possible to perform computations in the later from the former through <code>liftTermElabM</code></li>\n<li>Are there more \"transitions\" available like the one mentioned in the previous question?</li>\n</ul>",
        "id": 275879330,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647650978
    },
    {
        "content": "<p>The arrows represent \"lifts\"; this means that you can use a value in a lower monad in a higher monad with no notation (or with <code>liftM</code> if you want to be explicit or coercion doesn't work)</p>",
        "id": 275879683,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651377
    },
    {
        "content": "<p>If we draw arrows whenever one monad can run another a la <code>liftTermElabM</code>, then there are generally arrows going in the reverse direction of all present</p>",
        "id": 275879722,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651444
    },
    {
        "content": "<p>What do you mean by \"lower\" monad in the diagram? Literally the vertical orientation of the image?<br>\n(thus <code>TacticM</code> is lower than <code>TermElabM</code>?)</p>",
        "id": 275879838,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647651561
    },
    {
        "content": "<p>sorry, I mean upward in the diagram</p>",
        "id": 275879938,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651614
    },
    {
        "content": "<p>lower in the dependency hierarchy, more or less</p>",
        "id": 275879978,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651631
    },
    {
        "content": "<p>How is it possible to lift from <code>CommandElabM</code> to <code>TermElabM</code> if there's no path between them in the diagram (not even if we invert all arrows)?</p>",
        "id": 275880036,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647651710
    },
    {
        "content": "<p>each arrow is a monad stack on top of the lower one, using <code>StateT</code> and <code>ReaderT</code> to add some read-write and read-only state respectively (conventionally called <code>State</code> and <code>Context</code> in the relevant namespace)</p>",
        "id": 275880040,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651715
    },
    {
        "content": "<p>Inverting an arrow is saying that for example you can run a <code>MetaM</code> from an <code>IO</code> context; however you have to provide the <code>Meta.Context</code> and <code>Meta.State</code> types to kick it off</p>",
        "id": 275880116,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651779
    },
    {
        "content": "<p>most of the arrows that cross the figure like <code>liftTermElabM</code> do this by conjuring up some dummy state to operate on</p>",
        "id": 275880141,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651811
    },
    {
        "content": "<p>for example if you are in a <code>CommandElabM</code> and want to run a <code>TacticM</code> you need to invent some trivial goal to work on, because the tactic wants a tactic state</p>",
        "id": 275880195,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651851
    },
    {
        "content": "<p><code>MetaM</code> wants to know what declaration it is in</p>",
        "id": 275880204,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647651860
    },
    {
        "content": "<p>The reverse arrows that I could find are:</p>\n<ul>\n<li><code>Lean.Elab.Tactic.run : TacticM -&gt; TermElabM</code></li>\n<li><code>runTermElabM, liftTermElabM : TermElabM -&gt; CommandElabM</code></li>\n<li><code>liftCoreM : CoreM -&gt; CommandElabM</code></li>\n<li><code>MetaM.run : MetaM -&gt; CoreM</code></li>\n<li><code>MetaM.toIO : MetaM -&gt; IO</code></li>\n<li><code>CoreM.toIO : CoreM -&gt; IO</code></li>\n<li><code>CoreM.run : CoreM -&gt; EIO</code></li>\n<li><code>runCommandElabM : CommandElabM -&gt; FrontendM</code></li>\n</ul>",
        "id": 275880681,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647652480
    },
    {
        "content": "<p>Thank you!!</p>",
        "id": 275881221,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1647653176
    }
]