[
    {
        "content": "<p>Is it possible to set an option once so that its effect applies in an entire project? Particularly, I want to disable autobound variables in all files in my project. Is there a way other than putting <code>set_option autoBoundImplicitLocal false</code> at the top of each file?</p>",
        "id": 271549456,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1644571586
    },
    {
        "content": "<p>Something like <code>moreLeanArgs := #[\"-DautoBoundImplicitLocal=false\"]</code> in your lakefile.lean should do it</p>",
        "id": 271549710,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644571718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/set_option.20per.20project/near/271549710\">said</a>:</p>\n<blockquote>\n<p>Something like <code>moreLeanArgs := #[\"-DautoBoundImplicitLocal=false\"]</code> in your lakefile.lean should do it</p>\n</blockquote>\n<p>Thanks! This work in the sense that <code>lake build</code> throws an error, but the VSCode extension still doesn't seem to care, it behaves as if the option were set to true</p>",
        "id": 271551769,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1644572748
    },
    {
        "content": "<p>There is a separate <code>moreServerArgs</code> option (which may want to inherit <code>moreLeanArgs</code>? <span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> ), but it will not do anything in VS Code until <a href=\"https://github.com/leanprover/vscode-lean4/pull/118\">https://github.com/leanprover/vscode-lean4/pull/118</a> is merged and released.</p>",
        "id": 271552159,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644572954
    },
    {
        "content": "<p>But you should probably not add <code>-Dsomething=...</code> to <code>moreServerArgs</code> because that will apply <em>all</em> files opened with that server, and we might want to open dependencies in the same server as the root project.</p>",
        "id": 271552352,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1644573048
    },
    {
        "content": "<p>Oh yes, semantic options should definitely not go in there. <code>print-paths</code> would be more appropriate, except that processing of arbitrary cmdline options at least has already happened at that point.</p>",
        "id": 271552729,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644573250
    },
    {
        "content": "<p>Which is why I went with a more specific field for load-dynlibs</p>",
        "id": 271552819,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644573317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/set_option.20per.20project/near/271552159\">said</a>:</p>\n<blockquote>\n<p>There is a separate <code>moreServerArgs</code> option (which may want to inherit <code>moreLeanArgs</code>? <span class=\"user-mention silent\" data-user-id=\"315577\">Mac</span> ), but it will not do anything in VS Code until <a href=\"https://github.com/leanprover/vscode-lean4/pull/118\">https://github.com/leanprover/vscode-lean4/pull/118</a> is merged and released.</p>\n</blockquote>\n<p>It also worth noting that adding <code>-Dsomething=...</code> to <code>moreServerArgs</code> won't actually do what one may expect as <code>-D</code> options are not forwarded to the workers (see <a href=\"https://github.com/leanprover/lean4/blob/c460a2e4040e4d3504d1382820d53fa96adb7a9d/src/util/shell.cpp#L542-L549\">here</a>).</p>",
        "id": 271558450,
        "sender_full_name": "Mac",
        "timestamp": 1644576343
    },
    {
        "content": "<p>We also have this open issue <a href=\"https://github.com/leanprover/lean4/issues/14\">https://github.com/leanprover/lean4/issues/14</a> for persistent <code>set_option</code>s. It is not high priority, but we want to implement it for use cases like the one in this thread.</p>",
        "id": 271583516,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1644589426
    }
]