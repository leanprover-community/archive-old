[
    {
        "content": "<p>Is there a reason the standard library doesn't have coercion instances such as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"n\">CoeArr</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">α'</span> <span class=\"n\">β'</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Coe</span> <span class=\"n\">α'</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Coe</span> <span class=\"n\">β</span> <span class=\"n\">β'</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Coe</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α'</span> <span class=\"bp\">→</span> <span class=\"n\">β'</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">coe</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">coe</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">coe</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>?</p>",
        "id": 230086085,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615578108
    },
    {
        "content": "<p>I personally think it's better to be explicit about such things; it's also more work to unravel the coercions in <code>simp</code> or what have you</p>",
        "id": 230092471,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615580837
    },
    {
        "content": "<p>Plus instances like this are an easy way to accidentally sneak transitivity into a typeclass that isn't supposed to be transitive</p>",
        "id": 230092617,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615580887
    },
    {
        "content": "<p>(this is an issue that has bit us before in mathlib)</p>",
        "id": 230092725,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615580939
    },
    {
        "content": "<p>I'd be fine with replacing <code>Coe</code> with <code>CoeTC</code> in all the places, and then the transitivity issue isn't a problem...</p>",
        "id": 230092810,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615580976
    }
]