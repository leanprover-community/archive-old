[
    {
        "content": "<p>Just posting here for visibility: Lean 4 just got \"co-\" projection/dot notation (<a href=\"https://github.com/leanprover/lean4/pull/944\">lean4#944</a>). You can use the syntax <code>.foo</code> (this is distinct from regular projection because it has a required space or non-expression before it, like <code>f .foo</code> or <code>(.foo x)</code>) to call a function <code>foo</code> in a namespace inferred from the <em>result</em> type. This is in particular useful for inductive types:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">âˆ¨</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>I will certainly be using this a lot in the future. Way to go Lean 4 team!</p>",
        "id": 274919356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646960876
    }
]