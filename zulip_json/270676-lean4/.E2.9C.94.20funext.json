[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span> <span class=\"bp\">â†’</span> <span class=\"n\">â„•</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">âˆ€</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">funext</span>\n</code></pre></div>\n<p>This example gives the following error message:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Tactic state\n    Goals accomplished ðŸŽ‰\nMessages (1)\n    MWE.lean:2:8\n        unexpected end of input\n</code></pre></div>\n<p>Can somebody please explain to me what's going on?</p>",
        "id": 310303595,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1668550756
    },
    {
        "content": "<p>It's a syntax issue:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Î±</span> <span class=\"bp\">â†’</span> <span class=\"n\">Î±</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">âˆ€</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">funext</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 310303913,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1668550909
    },
    {
        "content": "<p>The error message generated by the tactic <code>funext</code> could be more useful</p>",
        "id": 310304106,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668550985
    },
    {
        "content": "<p>E.g. this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span> <span class=\"bp\">â†’</span> <span class=\"n\">â„•</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">âˆ€</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">funext</span> <span class=\"n\">i</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 310304177,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668551021
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/270676-lean4/topic/funext/near/310304177\">said</a>:</p>\n<blockquote>\n<p>E.g. this works:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span> <span class=\"bp\">â†’</span> <span class=\"n\">â„•</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">âˆ€</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">funext</span> <span class=\"n\">i</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Ah it's the <code>i</code> I was missing. I just got confused by the \"goal accomplished\". thx</p>",
        "id": 310304345,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1668551095
    },
    {
        "content": "<p>Yeah it's confusing.</p>",
        "id": 310304365,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668551106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> has marked this topic as resolved.</p>",
        "id": 310304418,
        "sender_full_name": "Notification Bot",
        "timestamp": 1668551136
    },
    {
        "content": "<p>Note that this deviates from Lean3, where <code>funext</code> works without specifying a name</p>",
        "id": 310304540,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1668551175
    }
]