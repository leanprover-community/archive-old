[
    {
        "content": "<p>I'm wondering if the behavior of <code>generalize</code> is described precisely anywhere. I was a little surprised that it seemed to be doing a bit more than I thought it would. Forgive the somewhat contrived example (I know <code>dsimp [Nat.beq]</code>, among other things, would make more sense than <code>generalize</code>) :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">nat_beq_succ_inj</span><span class=\"o\">:</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">Nat.beq</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"n\">y</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Nat.beq</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"bp\">;</span>  <span class=\"n\">generalize</span> <span class=\"n\">Nat.beq</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">z</span>\n</code></pre></div>\n<p>Results in the goal being <code>z = true -&gt; z = true</code>. I would have thought it would just be <code>z = true -&gt; Nat.beq x y = true</code>. </p>\n<p>Is generalize doing definitional reductions in order to find more places it can rewrite (as clearly <code>Nat.beq (Nat.succ x) (Nat.succ y)</code> reduces to <code>Nat.beq x y</code>)?</p>",
        "id": 311735005,
        "sender_full_name": "Daniel Patterson",
        "timestamp": 1669163338
    }
]