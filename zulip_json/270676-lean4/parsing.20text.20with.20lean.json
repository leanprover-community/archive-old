[
    {
        "content": "<p>I’d like to write a parser combinator library in lean to evaluate how it fits this task relative to other languages. Is there any documentation of OS practicalities (effectful operations) like: how does reading a file work? making directories? network calls, etc? executing processes?</p>",
        "id": 267953914,
        "sender_full_name": "Petar Maymounkov",
        "timestamp": 1642121492
    },
    {
        "content": "<p>There is <a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Data/Parsec.lean\">https://github.com/leanprover/lean4/blob/master/src/Lean/Data/Parsec.lean</a> in the standard library</p>",
        "id": 267954184,
        "sender_full_name": "Reid Barton",
        "timestamp": 1642121727
    },
    {
        "content": "<p>Documentation is not perfect yet, you can try digging through the <code>Init</code> Module here <a href=\"https://leanprover-community.github.io/mathlib4_docs/\">https://leanprover-community.github.io/mathlib4_docs/</a> which contains the majority of <code>IO</code> related stuff, especially <code>Init.System</code> (<a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/System/IO.html\">https://leanprover-community.github.io/mathlib4_docs/Init/System/IO.html</a>) , that one should cover file and process related things.</p>\n<p>Networking is not in the repo this documentation was generated for but there does exist a package over here <a href=\"https://github.com/xubaiw/lean4-socket\">https://github.com/xubaiw/lean4-socket</a> by <span class=\"user-mention\" data-user-id=\"414345\">@Xubai Wang</span> although it might not compile anymore since it's been quite a bit since the last update so maybe compiler changes have broken stuff.</p>\n<p>Apart from that there are a few other libraries related to OS stuff you can find by looking around on Github or in the chat log mostly, as Reid pointed out there is this basic parser combinator library already as well, docs for that would be here <a href=\"https://leanprover-community.github.io/mathlib4_docs/Lean/Data/Parsec.html\">https://leanprover-community.github.io/mathlib4_docs/Lean/Data/Parsec.html</a></p>\n<p><span class=\"user-mention\" data-user-id=\"295150\">@Petar Maymounkov</span></p>",
        "id": 267955090,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1642122366
    },
    {
        "content": "<p>If there is OS related stuff you are missing you can also add that yourself in a library if you want...I wouldn't say that it's \"easy\" but definitely not too complicated either once you understood how the FFI mechanism works (feel free to ask for help if you need some of course^^).</p>",
        "id": 267955282,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1642122554
    },
    {
        "content": "<p>It might be possible to reuse part of the lean parser code to build a parsing library. <a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Parser/Basic.lean\">https://github.com/leanprover/lean4/blob/master/src/Lean/Parser/Basic.lean</a> seems to be useful. I didn't manage to create an example but I would be interested if someone can.</p>",
        "id": 268001203,
        "sender_full_name": "Gabriel DORIATH DÖHLER",
        "timestamp": 1642159504
    },
    {
        "content": "<p>I have partially extended the Parsec library here <a href=\"https://github.com/Anderssorby/Nix.lean\">https://github.com/Anderssorby/Nix.lean</a> with better error messages and with a more compositional approach. If it helps.</p>",
        "id": 268005851,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1642162564
    }
]