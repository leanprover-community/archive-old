[
    {
        "content": "<p>I've been trying to figure out the difference between <code>[inline]</code> and <code>[always_inline]</code> but didn't find anything super useful. I'm especially puzzled by the fact that they are often used together!?</p>",
        "id": 320055666,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1673171607
    },
    {
        "content": "<p>this is a workaround for the fact that there are two lean compilers</p>",
        "id": 320056313,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673172120
    },
    {
        "content": "<p>I cannot speak for the old code generator, in the new code generator there is afaik no difference between the two right now but there is a TODO to limit the inlining of <code>inline</code> tagged declarations to a certain quota in the future. <code>always_inline</code> on the other hand does as you would expect force the new code generator to always perform inlining.</p>",
        "id": 320056367,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1673172132
    },
    {
        "content": "<p>The old code generator does not seem to react to <code>always_inline</code> so that is the reason you are seeing declarations with both <code>inline</code> and <code>always_inline</code>.</p>",
        "id": 320056423,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1673172198
    },
    {
        "content": "<p>the old code generator does not recognize the <code>[always_inline]</code> attribute, while the new one needs it</p>",
        "id": 320056426,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673172200
    },
    {
        "content": "<p>That is enlightening! To summarize: <code>[inline]</code> is fine unless you realize you also need to <code>[always_inline]</code> when using the new code generator?</p>",
        "id": 320057954,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1673173278
    },
    {
        "content": "<p>Aside: does <code>abbrev</code> always inline?</p>",
        "id": 320058133,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1673173397
    },
    {
        "content": "<p>I believe so</p>",
        "id": 320058149,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673173415
    },
    {
        "content": "<p>it's marked as <code>@[inline]</code> (not <code>@[always_inline]</code>) automatically</p>",
        "id": 320058163,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673173430
    },
    {
        "content": "<p>So <code>@[always_inline] abbrev ...</code> could make sense?</p>",
        "id": 320058256,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1673173505
    },
    {
        "content": "<p>I think so</p>",
        "id": 320058268,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673173514
    },
    {
        "content": "<p><code>@[always_inline]</code> is normally only used on instances</p>",
        "id": 320058283,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1673173532
    },
    {
        "content": "<p>Thanks! This was very helpful!</p>",
        "id": 320058303,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1673173557
    }
]