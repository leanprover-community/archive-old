[
    {
        "content": "<p>Hello!</p>\n<p>I'm trying to build a dependency (LSpec) with <a href=\"https://github.com/yatima-inc/Ipld.lean/blob/1c4377c9ed4ce40204e1490da284be11ae1a83f1/.github/workflows/lspec.yml#L20\"><code>lake build LSpec</code></a> and almost everything seems to work nicely.</p>\n<p>The problem I'm facing is that the <code>lspec</code> binary is not being generated and the next step is failing, as you can see <a href=\"https://github.com/yatima-inc/Ipld.lean/runs/7291843846?check_suite_focus=true\">here</a>.</p>\n<p>Both repos use today's toolchain (2022-07-11)</p>\n<p>Is there something else I need to do on the <a href=\"https://github.com/yatima-inc/Ipld.lean/runs/7291843846?check_suite_focus=true\">LSpec repo</a> for this to work? Thanks in advance!!</p>",
        "id": 289258581,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1657579115
    },
    {
        "content": "<p>According to the <a href=\"https://github.com/yatima-inc/LSpec/blob/main/lakefile.lean\">yatima-inc/LSpec repository</a> , the executable is name <code>lspec</code> while the library is named <code>LSpec</code> so it is building the library rather than the executable.</p>",
        "id": 289274957,
        "sender_full_name": "Mac",
        "timestamp": 1657596301
    },
    {
        "content": "<p>Or were you trying to build the package <code>LSpec</code>? If so, then you need and <code>@</code> to disambiguate it (i.e., <code>lake build @LSpec</code>). Lake resolves targets in the order of custom target, executable, external library, lean library, package, and them module (see <a href=\"https://github.com/leanprover/lake/blob/0d39b1eb67fb21b19399d3c1a696166c27eaa94f/Lake/CLI/Build.lean#L117-L141\">here</a>). Package and modules are last because they can be disambiguated with <code>@</code> and <code>+</code>, respectively (as mentioned in <code>lake help build</code>).</p>",
        "id": 289275161,
        "sender_full_name": "Mac",
        "timestamp": 1657596560
    },
    {
        "content": "<p>Actually, now that I think about it a bit more, <code>pkg/</code> would be alternative, potentially more intuitive way to disambiguate package names.</p>",
        "id": 289275276,
        "sender_full_name": "Mac",
        "timestamp": 1657596709
    },
    {
        "content": "<p>That way I could use <code>@</code> for modules and remove <code>+</code> which I personally have never liked (it was only non-special character left in shell that I could think of at the time).</p>",
        "id": 289275348,
        "sender_full_name": "Mac",
        "timestamp": 1657596782
    },
    {
        "content": "<p>So I need to do <code>lake build lspec</code> instead?</p>",
        "id": 289275617,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1657597177
    },
    {
        "content": "<p>A honest piece of feedback: I don't understand the difference between \"package\" and \"library\" according to Lake. I've seen a message saying that <code>Package</code> is deprecated, but then I tried removing it and the code no longer compiled.</p>\n<p>I don't think Lake's readme is didactic enough</p>",
        "id": 289275733,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1657597304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20build.20not.20building.20dependency.20binary/near/289275733\">said</a>:</p>\n<blockquote>\n<p>A honest piece of feedback: I don't understand the difference between \"package\" and \"library\" according to Lake. I've seen a message saying that <code>Package</code> is deprecated, but then I tried removing it and the code no longer compiled</p>\n</blockquote>\n<p>Ah, this  <a href=\"#narrow/stream/270676-lean4/topic/Lake's.20package.20vs.20lean_lib.20vs.20lean_exe\">Lake's package vs lean_lib vs lean_exe</a> thread by Yuri de Wit may help. I explained that deprecation message <a href=\"#narrow/stream/270676-lean4/topic/Lake's.20package.20vs.20lean_lib.20vs.20lean_exe/near/286855829\">here</a> and discussed the package and workspace terminology of Lake <a href=\"#narrow/stream/270676-lean4/topic/Lake's.20package.20vs.20lean_lib.20vs.20lean_exe/near/286933597\">here</a> and connected the concept of Lake library to its parallel in Racket <a href=\"#narrow/stream/270676-lean4/topic/Lake's.20package.20vs.20lean_lib.20vs.20lean_exe/near/287117055\">here</a>. I really do need to add a glossary to Lake's README.</p>",
        "id": 289276125,
        "sender_full_name": "Mac",
        "timestamp": 1657597809
    },
    {
        "content": "<p>Thank you!<br>\nI will read that thread tomorrow. If I find the opportunity, I might also PR some pieces of information I find important (it you don't cover them first)</p>",
        "id": 289276866,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1657598753
    },
    {
        "content": "<p>Added a <a href=\"https://github.com/leanprover/lake#glossary-of-terms\">Glossary of Terms</a> to Lake's README. Feel free to suggest improvements!</p>",
        "id": 289281481,
        "sender_full_name": "Mac",
        "timestamp": 1657604678
    }
]