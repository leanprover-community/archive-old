[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Qq.Match</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab.Tactic</span>\n<span class=\"kn\">open</span> <span class=\"n\">Qq</span>\n\n<span class=\"c1\">-- this works</span>\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">(</span><span class=\"kt\">Prop</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">TacticM</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"n\">p</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"bp\">~</span><span class=\"n\">q</span><span class=\"o\">((</span><span class=\"bp\">$</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">pure</span> <span class=\"o\">()</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">pure</span> <span class=\"o\">()</span>\n\n<span class=\"c1\">-- this doesn't work</span>\n<span class=\"kd\">def</span> <span class=\"n\">bar</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">(</span><span class=\"kt\">Prop</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">TacticM</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"n\">p</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"bp\">~</span><span class=\"n\">q</span><span class=\"o\">((</span><span class=\"bp\">$</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span> <span class=\"n\">pure</span> <span class=\"o\">()</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">pure</span> <span class=\"o\">()</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">application type mismatch</span>\n<span class=\"cm\">  sorryAx (TacticM Unit)</span>\n<span class=\"cm\">argument has type</span>\n<span class=\"cm\">  Type</span>\n<span class=\"cm\">but function has type</span>\n<span class=\"cm\">  (α : Sort u_1) → optParam Bool false → α</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>What's going on here? Why can't I match on <code>(_ -&gt; _)</code> ?</p>",
        "id": 315895711,
        "sender_full_name": "David Renshaw",
        "timestamp": 1671044791
    }
]