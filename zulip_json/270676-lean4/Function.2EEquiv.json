[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover/lean4/blob/5a8f4fd946c38441910b780003dce3f7d577bb20/src/Init/Core.lean#:~:text=def%20Equiv%20(f%E2%82%81%20f%E2%82%82%20%3A%20%E2%88%80%20(x%20%3A%20%CE%B1)%2C%20%CE%B2%20x)%20%3A%20Prop%20%3A%3D%20%E2%88%80%20x%2C%20f%E2%82%81%20x%20%3D%20f%E2%82%82%20x\"><code>Init/Core.lean</code></a>, there is a declaration of <code>Function.Equiv</code> for the proof of <code>funext</code>. The definition is not protected, which is an annoying source of conflict since <code>Equiv</code> is a rather common name and the <code>Function</code> namespace has multiple other uses.</p>\n<p>Would protecting <code>Function.Equiv</code> be a welcome PR? This is a very local change, just a few lines in <code>Init/Core.lean</code>, since the relation has almost no use case after the proof of <code>funext</code>.</p>",
        "id": 244561884,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1625144698
    },
    {
        "content": "<p>Alternatively, it could be renamed <code>EquivExt</code> or something else which is not prone to name collision.</p>",
        "id": 244562065,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1625144768
    },
    {
        "content": "<p>+1 from me. That definition is entirely contained to the proof of <code>funext</code>, and AFAIK it is not referred to at all in mathlib, so it could even be private. Protected also works, since no one is going to use <code>Function.Equiv</code> by that name by accident.</p>",
        "id": 244595400,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1625158029
    },
    {
        "content": "<p>I'm going ahead with a PR since it's only four lines of code in one file...</p>",
        "id": 244686240,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1625223086
    },
    {
        "content": "<p>Leo merged the PR. Thanks!</p>",
        "id": 244735710,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1625247871
    }
]