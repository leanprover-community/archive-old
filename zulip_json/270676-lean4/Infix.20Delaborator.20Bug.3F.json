[
    {
        "content": "<p>I was trying out a new way to specify mixfix notation and I encounter the following oddity:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">notation</span> <span class=\"s2\">\"(+)\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">HAdd.hAdd</span>\n<span class=\"kd\">infixl</span><span class=\"o\">:</span><span class=\"mi\">65</span> <span class=\"o\">(</span><span class=\"n\">priority</span> <span class=\"o\">:=</span> <span class=\"n\">default</span> <span class=\"bp\">+</span> <span class=\"n\">default</span><span class=\"o\">)</span> <span class=\"s2\">\" + \"</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"bp\">+</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">  (+) : Nat</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>That is, <code>2 + 2</code> doesn't delab properly (the operands get completely wiped out). Is this a bug? Or is it an expected pitfall of my approach? If it is, in fact, a bug, I'll go create an issue for it on GitHub.</p>",
        "id": 238913133,
        "sender_full_name": "Mac",
        "timestamp": 1621099773
    },
    {
        "content": "<p>Yes, this does look like a bug</p>",
        "id": 238913459,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1621100045
    },
    {
        "content": "<p>k, I will go make a proper issue</p>",
        "id": 238913616,
        "sender_full_name": "Mac",
        "timestamp": 1621100222
    }
]