[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> has marked this topic as resolved.</p>",
        "id": 255738379,
        "sender_full_name": "Notification Bot",
        "timestamp": 1633092816
    },
    {
        "content": "<p>I tend to structure my tactics like this:</p>\n<ul>\n<li>A <code>MetaM</code> tactic <code>m : Args -&gt; MVarId -&gt; List MVarId</code> which does the heavy lifting, using the building blocks from <code>Meta.Tactic.*</code>.</li>\n<li>A <code>Tactic</code> tactic <code>t : Tactic</code> which wraps <code>m</code> and performs any necessary elaboration.</li>\n</ul>\n<p>The Lean 4 stdlib also does this most of the time, though with random bits of logic sprinkled throughout the <code>Tactic</code>s.</p>\n<p>Btw in your second snippet, I believe the <code>elabTerm</code>s may not be called in the context of the goal because the <code>withMVarContext</code> is too late. Also the <code>liftM</code>s should be unnecessary; there is a coercion from <code>TermElabM</code> to <code>TacticM</code>.</p>",
        "id": 256025343,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1633337316
    }
]