[
    {
        "content": "<p>For example, from Init/Data/Int/Basic.lean:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">neg</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">@&amp;</span> <span class=\"n\">Int</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Int</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">ofNat</span> <span class=\"n\">n</span>   <span class=\"bp\">=&gt;</span> <span class=\"n\">negOfNat</span> <span class=\"n\">n</span>\n  <span class=\"bp\">|</span> <span class=\"n\">negSucc</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">succ</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>I see that it is a notation for marking an expression as 'borrowed', but when and how it is used?</p>",
        "id": 273146507,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1645735038
    },
    {
        "content": "<p>The notion of borrowed is from the \"counting immutable beans\" paper and influences how garbage collection works on this particular function. However this notion is actually inserted automatically via a heuristic most of the time and I mean to remember that <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> mentioned in the past the compiler even ignores these annotations in favour of its heuristic? But I'm not 100% sure on that.</p>",
        "id": 273146755,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1645735179
    },
    {
        "content": "<p>Either way it does not matter for the behaviour of the function apart from how garbage collection is performed, you can read/write the function the exact same way with and without the annotation</p>",
        "id": 273146941,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1645735282
    }
]