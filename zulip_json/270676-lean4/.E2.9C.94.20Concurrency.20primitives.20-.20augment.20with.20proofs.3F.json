[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  Thanks, I think I'll start with a simple requirement without concurrency (enforcing a specific order on acquiring mutex locks) and see how that goes. Then I can think about representing concurrent code.<br>\n<span class=\"user-mention\" data-user-id=\"395550\">@Henrik BÃ¶ving</span> The choreographic structure looks like an interesting approach. I feel like you could just use a monad transformer to dispatch code to one (or some) wrapped monads? I guess exceptions would still be tricky in that case.</p>",
        "id": 274581802,
        "sender_full_name": "Gary Haussmann",
        "timestamp": 1646763329
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477512\">Gary Haussmann</span> has marked this topic as resolved.</p>",
        "id": 274581821,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646763335
    }
]