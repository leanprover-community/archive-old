[
    {
        "content": "<p>This is unfortunate:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"n\">OfNat_1</span> <span class=\"o\">:</span> <span class=\"n\">OfNat</span> <span class=\"kt\">Type</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">ofNat</span> <span class=\"o\">:=</span> <span class=\"n\">Unit</span> <span class=\"o\">}</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">2:9: failed to synthesize instance</span>\n<span class=\"cm\">  OfNat Type 1</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 229921849,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615495140
    },
    {
        "content": "<p>(I do see what's going on here, but it took me a couple minutes and <code>set_option pp.all true</code> to puzzle it out)</p>",
        "id": 229921906,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615495163
    },
    {
        "content": "<p>We have some documentation here <a href=\"https://leanprover.github.io/lean4/doc/typeclass.html\">https://leanprover.github.io/lean4/doc/typeclass.html</a> (Numerals section)<br>\nYou are not the first person confused by this issue, we should probably just let people write these instances without the <code>natLit!</code>.</p>",
        "id": 229922441,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1615495381
    }
]