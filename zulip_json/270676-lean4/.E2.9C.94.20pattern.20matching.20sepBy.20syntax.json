[
    {
        "content": "<p>Hi! I'm struggling to define macros for syntax defined using <code>sepBy</code>.  When there's a special syntax for it, like <code>syntaxcat,*</code>, it works, but  I don't know how to pattern match the LHS if I have an explicit <code>sepBy</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">declare_syntax_cat</span> <span class=\"n\">foo</span>\n<span class=\"n\">syntax</span> <span class=\"n\">ident</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n<span class=\"n\">syntax</span> <span class=\"n\">sepBy</span><span class=\"o\">(</span><span class=\"n\">ident</span><span class=\"o\">,</span><span class=\"s2\">\";\"</span><span class=\"o\">,</span><span class=\"s2\">\";\"</span><span class=\"o\">,</span><span class=\"n\">allowTrailingSep</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n<span class=\"c1\">-- macro:arg x:stx:max \";*;?\" : stx =&gt; `(stx| sepBy($x, \";\", \"; \", allowTrailingSep))</span>\n<span class=\"c1\">-- syntax ident;*;? : foo</span>\n <span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">],</span><span class=\"bp\">*</span><span class=\"o\">)</span>  <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">Lean.quote</span> <span class=\"n\">ids.toList</span><span class=\"o\">))</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">sepBy</span><span class=\"o\">([</span><span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">],</span><span class=\"s2\">\";\"</span><span class=\"o\">,</span><span class=\"s2\">\";\"</span><span class=\"o\">,</span><span class=\"n\">allowTrailingSep</span><span class=\"o\">))</span>  <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">Lean.quote</span> <span class=\"n\">ids.toList</span><span class=\"o\">))</span>\n  <span class=\"c1\">--  | `(foo| $[$ids];*;?)  =&gt; `($(Lean.quote ids.toList))</span>\n</code></pre></div>\n<p>I thought I might be able to work around it with defining a macro like the ones defined for e.g. <code>,*,?</code>, but that also doesn't seem to work, I'm not entirely sure why though. Can someone help me with a pointer on what I'm misunderstanding?</p>",
        "id": 289968937,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1658152809
    },
    {
        "content": "<p>It's just <code>$[$ids];*</code></p>",
        "id": 289969363,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1658153010
    },
    {
        "content": "<p>thanks!</p>",
        "id": 289969652,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1658153128
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315434\">Andrés Goens</span> has marked this topic as resolved.</p>",
        "id": 289969662,
        "sender_full_name": "Notification Bot",
        "timestamp": 1658153134
    }
]