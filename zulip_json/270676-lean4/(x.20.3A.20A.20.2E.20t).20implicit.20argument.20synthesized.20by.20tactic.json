[
    {
        "content": "<p>In Lean 3 we could use <code>x . t</code> notation to get a tactic to fill in a hole. Is this available in Lean 4? I would like Lean to try closing a goal with <code>rfl</code> if I don't supply a proof for a propositional structure field.</p>",
        "id": 238656553,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620928657
    },
    {
        "content": "<p>There is <code>autoParam</code>, but no uses so far, and I couldn't get a working example in 5m of reading/tracing/twiddling.</p>",
        "id": 238660678,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1620930587
    },
    {
        "content": "<p>I'll try again later today if no one posts one first.</p>",
        "id": 238660833,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1620930636
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Foo.mk</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>It looks like support in <code>structure</code> is still missing; please file an issue</p>",
        "id": 238662208,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1620931286
    }
]