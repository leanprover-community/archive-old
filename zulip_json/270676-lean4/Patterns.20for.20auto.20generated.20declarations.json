[
    {
        "content": "<p>While doing some experimentation for doc-gen4 i noticed that if you list the names of all the axioms and functions that are in e.g. the current mathlib4 quite a lot (I didnt check if it might even be the majority) of them seem to be autogenerated (at least from the way their name looks) and thus not exactly interesting to doc-gen4.</p>\n<p>Now I'm guessing I could start digging through the compiler to find all spots that auto generate some names and write a function that is able to detect these auto generated declarations but I figured someone here will probably already know how auto generated names look (hopefully)?</p>",
        "id": 262838077,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1637964665
    },
    {
        "content": "<p>Here is an extract from the lean4 source which I used to avoid auto-generated names by lean (which may be the same things that you want to avoid).</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"kd\">def</span> <span class=\"n\">isBlackListed</span> <span class=\"o\">(</span><span class=\"n\">declName</span> <span class=\"o\">:</span> <span class=\"n\">Name</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">MetaM</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">env</span> <span class=\"bp\">←</span> <span class=\"n\">getEnv</span>\n  <span class=\"o\">(</span><span class=\"n\">declName.isInternal</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"bp\">!</span><span class=\"n\">isPrivateName</span> <span class=\"n\">declName</span><span class=\"o\">)</span>\n  <span class=\"bp\">&lt;||&gt;</span> <span class=\"n\">isAuxRecursor</span> <span class=\"n\">env</span> <span class=\"n\">declName</span>\n  <span class=\"bp\">&lt;||&gt;</span> <span class=\"n\">isNoConfusion</span> <span class=\"n\">env</span> <span class=\"n\">declName</span>\n  <span class=\"bp\">&lt;||&gt;</span> <span class=\"n\">isRec</span> <span class=\"n\">declName</span>\n  <span class=\"bp\">&lt;||&gt;</span> <span class=\"n\">completionBlackListExt.isTagged</span> <span class=\"n\">env</span> <span class=\"n\">declName</span>\n  <span class=\"bp\">&lt;||&gt;</span> <span class=\"n\">isMatcher</span> <span class=\"n\">declName</span>\n</code></pre></div>",
        "id": 262845918,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1637975026
    },
    {
        "content": "<p>Thanks! I'll add that to my code and see whether stuff starts disappearing.</p>",
        "id": 262868322,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1638012161
    }
]