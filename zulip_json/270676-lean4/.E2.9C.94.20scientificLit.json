[
    {
        "content": "<p>What do I need to replace <code>???</code> with in order to be able to match with <code>scientificLit</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">declare_syntax_cat</span> <span class=\"n\">foo</span>\n\n<span class=\"n\">syntax</span> <span class=\"bp\">???</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"bp\">|$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">scientificLit</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 274577527,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1646761676
    },
    {
        "content": "<p>I tried <code>scientific</code> but it didn't work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"n\">scientific</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"c1\">-- unknown parser declaration/category/alias 'scientific'</span>\n</code></pre></div>",
        "id": 274578268,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1646761961
    },
    {
        "content": "<p>scientificLit is elaborated by a <code>builtinTermElab</code> in <code>Lean/Elab/BuiltinTerm</code> according to my grep foo so my best guess will be <code>term</code> for <code>???</code></p>",
        "id": 274578422,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646762028
    },
    {
        "content": "<p>You can reference it by it's full name:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"n\">Lean.Parser.scientificLit</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n</code></pre></div>",
        "id": 274578444,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1646762037
    },
    {
        "content": "<p>Oh <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 274578500,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646762049
    },
    {
        "content": "<p>Well that's something my grep foo couldnt tell me I guess :P</p>",
        "id": 274578510,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646762058
    },
    {
        "content": "<p><code>open</code> also works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Lean.Parser</span>\n<span class=\"n\">syntax</span> <span class=\"n\">scientificLit</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n</code></pre></div>",
        "id": 274578556,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1646762086
    },
    {
        "content": "<p>Thanks!!</p>",
        "id": 274578604,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1646762105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as resolved.</p>",
        "id": 274578617,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646762109
    },
    {
        "content": "<p>so a syntax category is really just a <code>Parser</code>that can be extended further and whenever a syntax category is required I might as well throw in any parser?</p>",
        "id": 274578680,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646762138
    },
    {
        "content": "<p>In <code>syntax</code> you can refer to any parser function/descr or syntax category, yes.</p>",
        "id": 274578899,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1646762221
    },
    {
        "content": "<p>Added. <a href=\"https://github.com/leanprover/lean4/commit/e9b8e54dcc55c467a7ca42e57e0422695b88fc82\">https://github.com/leanprover/lean4/commit/e9b8e54dcc55c467a7ca42e57e0422695b88fc82</a></p>",
        "id": 274579110,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1646762296
    },
    {
        "content": "<p>This parser stuff is getting less magical with every day \\o/</p>",
        "id": 274579146,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646762308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as unresolved.</p>",
        "id": 274598310,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646769757
    },
    {
        "content": "<p>I'm still having some trouble here <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <br>\n<a href=\"https://github.com/arthurpaulino/LeanMySQL/blob/69bdd5f7686d26d92b98737d071f0119c7bb43ee/lib/SQLSyntax.lean#L105\">This is where</a> I'm trying to parse the <code>scientificLit</code> as a <code>Float</code>. But for some reason <a href=\"https://github.com/arthurpaulino/LeanMySQL/blob/69bdd5f7686d26d92b98737d071f0119c7bb43ee/lib/SQLSyntax.lean#L146\">this line</a> doesn't print correctly:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">SQLQuery</span> <span class=\"o\">:=</span> <span class=\"n\">SELECT</span> <span class=\"n\">DISTINCT</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"n\">b</span> <span class=\"n\">AS</span> <span class=\"n\">c</span>\n  <span class=\"n\">FROM</span> <span class=\"o\">(</span><span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"n\">AS</span> <span class=\"n\">ll</span> <span class=\"n\">LEFT</span> <span class=\"n\">JOIN</span> <span class=\"n\">r</span> <span class=\"n\">ON</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"n\">x</span>\n  <span class=\"n\">WHERE</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">4</span>\n<span class=\"k\">#eval</span> <span class=\"n\">s.toString</span> <span class=\"c1\">-- SELECT DISTINCT a, b AS c FROM (l) AS ll LEFT JOIN r ON TRUE WHERE w = 1.0</span>\n</code></pre></div>\n<p>It's printing <code>1.0</code> instead of <code>1.4</code>. Any hint what might be going wrong?</p>",
        "id": 274598812,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1646769941
    },
    {
        "content": "<p>Wait, nevermind. It's a bug in a function of mine!</p>",
        "id": 274599012,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1646770020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as resolved.</p>",
        "id": 274599018,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646770024
    }
]