[
    {
        "content": "<p>It seems that the interpreter does not evaluate a function containing a case with <code>sorry</code> even though the case being evaluated is implemented.</p>\n<p><a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Term</span>\n<span class=\"bp\">|</span> <span class=\"n\">val</span> <span class=\"o\">:</span> <span class=\"n\">Int</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n<span class=\"bp\">|</span> <span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n<span class=\"bp\">|</span> <span class=\"n\">sub</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n<span class=\"bp\">|</span> <span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n<span class=\"bp\">|</span> <span class=\"n\">div</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n<span class=\"bp\">|</span> <span class=\"k\">if</span>  <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n\n<span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">reduce</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n<span class=\"bp\">|</span> <span class=\"n\">v</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">_</span><span class=\"o\">)</span>  <span class=\"bp\">=&gt;</span> <span class=\"n\">v</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">add</span> <span class=\"n\">l</span> <span class=\"n\">r</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">goAdd</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"n\">l</span> <span class=\"n\">r</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">goMul</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">sub</span> <span class=\"n\">l</span> <span class=\"n\">r</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">goSub</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">div</span> <span class=\"n\">l</span> <span class=\"n\">r</span>    <span class=\"bp\">=&gt;</span> <span class=\"n\">goDiv</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"k\">if</span> <span class=\"n\">c</span> <span class=\"n\">t</span> <span class=\"n\">e</span>   <span class=\"bp\">=&gt;</span> <span class=\"n\">goIf</span>  <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"n\">t</span> <span class=\"n\">e</span>\n<span class=\"n\">where</span>\n  <span class=\"n\">goAdd</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">r</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"bp\">+</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"n\">goSub</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">r</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"bp\">-</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"n\">goMul</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">r</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"bp\">*</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"n\">goDiv</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">r</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"bp\">/</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"n\">goIf</span> <span class=\"o\">:</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Term</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">e</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"o\">(</span><span class=\"n\">reduce</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">reduce</span> <span class=\"o\">(</span><span class=\"n\">Term.val</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"c1\">-- cannot evaluate code because 'reduce.goAdd' uses 'sorry' and/or contains errors</span>\n</code></pre></div>\n<p>Is this as designed or a TODO?</p>",
        "id": 291719436,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1659451570
    },
    {
        "content": "<p>If you compile it it will run though</p>",
        "id": 291723012,
        "sender_full_name": "Andr√©s Goens",
        "timestamp": 1659453213
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span>\n  <span class=\"n\">IO.println</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"{repr $ reduce (Term.val 2 )}\"</span>\n</code></pre></div>\n<p>will happily print \"Term.val 2\"</p>",
        "id": 291723081,
        "sender_full_name": "Andr√©s Goens",
        "timestamp": 1659453242
    }
]