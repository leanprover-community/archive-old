[
    {
        "content": "<p>Attn lean 4 package maintainers: <span class=\"user-mention\" data-user-id=\"414345\">@Xubai Wang</span> , <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> , <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> , <span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> , <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> : The 10-20 nightly broke every lake package (mainly because the <code>@[defaultTarget]</code> attribute used in every lakefile is now spelled <code>@[default_target]</code>, mea culpa), so I'm working on getting the updates deployed as quickly as possible to minimize disruption. I sent PRs to all the dependencies of mathlib, although doc-gen4 and LeanInk repos seem to have a more complicated setup and I may not have sent the PR to the right branch.</p>",
        "id": 305121678,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666262050
    },
    {
        "content": "<p>TPiL4 broke as well <a href=\"https://github.com/leanprover/theorem_proving_in_lean4/actions/runs/3288702869\">https://github.com/leanprover/theorem_proving_in_lean4/actions/runs/3288702869</a></p>",
        "id": 305122068,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1666262144
    },
    {
        "content": "<p>Some more subtle breakage: any uses of <code>isAuxDecl</code> likely have to be replaced with <code>isImplementationDetail</code>. (Don't know how recent this change is.)</p>",
        "id": 305134178,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1666267067
    },
    {
        "content": "<p>Why this change?</p>",
        "id": 305134989,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1666267373
    },
    {
        "content": "<p>It's not just a name change, <code>auxDecl</code> was a binder info and <code>isImplementationDetail</code> is a function on <code>Name</code></p>",
        "id": 305136914,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666268170
    },
    {
        "content": "<p>CC <span class=\"user-mention\" data-user-id=\"516499\">@Daniel Rogozin</span> <span class=\"user-mention\" data-user-id=\"514707\">@Ilona Prikule</span>  <span class=\"user-mention\" data-user-id=\"507516\">@cognivore</span> <span class=\"user-mention\" data-user-id=\"455674\">@Matej Penciak</span> for when we're bumping toolchains</p>",
        "id": 305142143,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1666269954
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/10-20.20update/near/305136914\">said</a>:</p>\n<blockquote>\n<p>It's not just a name change, <code>auxDecl</code> was a binder info and <code>isImplementationDetail</code> is a function on <code>Name</code></p>\n</blockquote>\n<p>More specifically:</p>\n<ul>\n<li><code>auxDecl</code> is not a <code>BinderInfo</code> any more.</li>\n<li><code>LocalDecl</code> has a new field <code>LocalDeclKind</code>, which can be one of <code>default</code>, <code>implDetail</code> and <code>auxDecl</code>.</li>\n<li>Hypotheses of <code>auxDecl</code> or <code>implDetail</code> kind are supposed to be ignored by tactics which iterate over the local context. So a typical <code>for</code> loop which filters hypotheses via <code>isAuxDecl</code> is now broken and needs to filter via <code>isImplementationDetail</code> instead (where <code>isImplementationDetail</code> is <code>true</code> for both <code>auxDecl</code> and <code>implDetail</code> hyps).</li>\n</ul>",
        "id": 305148719,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1666272133
    },
    {
        "content": "<p>What Jannis said.  Also, <code>Name.isImplementationDetail</code> is only used by elaborators to decide whether variables should be marked as <code>LocalDeclKind.implDetail</code>.  Tactics should <em>not</em> use <code>Name.isImplementationDetail</code>.</p>",
        "id": 305183564,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1666281922
    },
    {
        "content": "<p>I'll looking into fixing doc-gen again for today's mathlib version then yes?</p>",
        "id": 305188623,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1666283396
    },
    {
        "content": "<p>What happened to <code>Name.components'</code>?</p>",
        "id": 305204647,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1666288059
    },
    {
        "content": "<p>it's <code>componentsRev</code> now</p>",
        "id": 305204863,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666288131
    },
    {
        "content": "<p>you got my PR <a href=\"https://github.com/leanprover/doc-gen4/pull/86\">leanprover/doc-gen4#86</a>, right?</p>",
        "id": 305205026,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666288185
    },
    {
        "content": "<p>I think I fixed all those issues in it</p>",
        "id": 305205054,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666288194
    },
    {
        "content": "<p>Oh I was going through the changes myself as you sent this it seems haha. I already updated all the dependencies as well so this should hopefully work...</p>",
        "id": 305205309,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1666288272
    },
    {
        "content": "<p>Yup, it compiles <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 305205665,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1666288370
    },
    {
        "content": "<p>I didn't update my <code>manifest.json</code> or <code>lean-toolchain</code> and yet I'm getting error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">./</span><span class=\"n\">lean_packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">9</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">default_target</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>How come <code>std</code> got upgraded?</p>",
        "id": 305322359,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1666348460
    }
]