[
    {
        "content": "<p>Hey, just putting these here to document my linker debugging saga :)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">jgallicc</span><span class=\"bp\">@</span><span class=\"n\">bridges2</span><span class=\"bp\">-</span><span class=\"n\">login014</span> <span class=\"n\">lean</span><span class=\"o\">]</span><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">found</span> <span class=\"n\">libstdc</span><span class=\"bp\">++.</span><span class=\"n\">so</span><span class=\"o\">:</span> <span class=\"n\">at</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">libstdc</span><span class=\"bp\">++.</span><span class=\"n\">so.6</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Classes.BEq</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Tactic.OpenPrivate</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Classes.Collections.Fold</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Lean.Tactic</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Lean.Meta</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Tactic.ByCases</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Classes.Dvd</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Lean.NameMapAttribute</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Tactic.GuardExpr</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Util.TermUnsafe</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Data.List.Init.Lemmas</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Lean.Parser</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Data.Option.Init.Lemmas</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Data.Fin.Lemmas</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Data.DList</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Lean.Command</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Util.LibraryNote</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Tactic.TryThis</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Tactic.HaveI</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Tactic.CoeExt</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Util.ExtendedBinder</span>\n<span class=\"n\">Linking</span> <span class=\"n\">Std.Tactic.RCases</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/bin/leanc -shared -o ./lean_packages/std/build/lib/libStd-Tactic-TryThis.so ./lean_packages/std/build/ir/Std/Tactic/TryThis.o -L./lean_packages/std/build/lib</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/bin/leanc -shared -o ./lean_packages/std/build/lib/libStd-Data-Option-Init-Lemmas.so ./lean_packages/std/build/ir/Std/Data/Option/Init/Lemmas.o -L./lean_packages/std/build/lib</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/bin/leanc -shared -o ./lean_packages/std/build/lib/libStd-Util-LibraryNote.so ./lean_packages/std/build/ir/Std/Util/LibraryNote.o -L./lean_packages/std/build/lib</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/bin/leanc -shared -o ./lean_packages/std/build/lib/libStd-Classes-BEq.so ./lean_packages/std/build/ir/Std/Classes/BEq.o -L./lean_packages/std/build/lib</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/bin/leanc -shared -o ./lean_packages/std/build/lib/libStd-Tactic-HaveI.so ./lean_packages/std/build/ir/Std/Tactic/HaveI.o -L./lean_packages/std/build/lib</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">libc</span><span class=\"bp\">++</span><span class=\"n\">abi</span><span class=\"o\">:</span> <span class=\"n\">terminating</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">uncaught</span> <span class=\"n\">exception</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">system_error</span><span class=\"o\">:</span> <span class=\"n\">thread</span> <span class=\"n\">constructor</span> <span class=\"n\">failed</span><span class=\"o\">:</span> <span class=\"n\">Resource</span> <span class=\"n\">temporarily</span> <span class=\"n\">unavailable</span>\n<span class=\"n\">PLEASE</span> <span class=\"n\">submit</span> <span class=\"n\">a</span> <span class=\"n\">bug</span> <span class=\"n\">report</span> <span class=\"n\">to</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">llvm</span><span class=\"bp\">/</span><span class=\"n\">llvm</span><span class=\"bp\">-</span><span class=\"n\">project</span><span class=\"bp\">/</span><span class=\"n\">issues</span><span class=\"bp\">/</span> <span class=\"n\">and</span> <span class=\"kn\">include</span> <span class=\"n\">the</span> <span class=\"n\">crash</span> <span class=\"n\">backtrace.</span>\n <span class=\"bp\">#</span><span class=\"mi\">0</span> <span class=\"mi\">0x00007efe44e05953</span> <span class=\"n\">llvm</span><span class=\"o\">::</span><span class=\"n\">sys</span><span class=\"o\">::</span><span class=\"n\">PrintStackTrace</span><span class=\"o\">(</span><span class=\"n\">llvm</span><span class=\"o\">::</span><span class=\"n\">raw_ostream</span><span class=\"bp\">&amp;</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libLLVM-15.so+0x16e4953)</span>\n <span class=\"bp\">#</span><span class=\"mi\">1</span> <span class=\"mi\">0x00007efe44e0392e</span> <span class=\"n\">llvm</span><span class=\"o\">::</span><span class=\"n\">sys</span><span class=\"o\">::</span><span class=\"n\">RunSignalHandlers</span><span class=\"o\">()</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libLLVM-15.so+0x16e292e)</span>\n <span class=\"bp\">#</span><span class=\"mi\">2</span> <span class=\"mi\">0x00007efe44e05dff</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libLLVM-15.so+0x16e4dff)</span>\n <span class=\"bp\">#</span><span class=\"mi\">3</span> <span class=\"mi\">0x00007efe47244dd0</span> <span class=\"n\">__restore_rt</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">libpthread.so.0</span><span class=\"bp\">+</span><span class=\"mi\">0x12dd0</span><span class=\"o\">)</span>\n <span class=\"bp\">#</span><span class=\"mi\">4</span> <span class=\"mi\">0x00007efe42dfc70f</span> <span class=\"n\">raise</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">libc.so.6</span><span class=\"bp\">+</span><span class=\"mi\">0x3770f</span><span class=\"o\">)</span>\n <span class=\"bp\">#</span><span class=\"mi\">5</span> <span class=\"mi\">0x00007efe42de6b25</span> <span class=\"n\">abort</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">libc.so.6</span><span class=\"bp\">+</span><span class=\"mi\">0x21b25</span><span class=\"o\">)</span>\n <span class=\"bp\">#</span><span class=\"mi\">6</span> <span class=\"mi\">0x00007efe47534b16</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libc++abi.so.1+0x38b16)</span>\n <span class=\"bp\">#</span><span class=\"mi\">7</span> <span class=\"mi\">0x00007efe4751823b</span> <span class=\"n\">demangling_terminate_handler</span><span class=\"o\">()</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libc++abi.so.1+0x1c23b)</span>\n <span class=\"bp\">#</span><span class=\"mi\">8</span> <span class=\"mi\">0x00007efe47533dd3</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__terminate</span><span class=\"o\">(</span><span class=\"n\">void</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">)())</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libc++abi.so.1+0x37dd3)</span>\n <span class=\"bp\">#</span><span class=\"mi\">9</span> <span class=\"mi\">0x00007efe47536a46</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libc++abi.so.1+0x3aa46)</span>\n<span class=\"bp\">#</span><span class=\"mi\">10</span> <span class=\"mi\">0x00007efe475369df</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libc++abi.so.1+0x3a9df)</span>\n<span class=\"bp\">#</span><span class=\"mi\">11</span> <span class=\"mi\">0x00007efe475d743b</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"n\">__throw_system_error</span><span class=\"o\">(</span><span class=\"n\">int</span><span class=\"o\">,</span> <span class=\"n\">char</span> <span class=\"n\">const</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libc++.so.1+0x9843b)</span>\n<span class=\"bp\">#</span><span class=\"mi\">12</span> <span class=\"mi\">0x00007efe44d7da33</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">jet</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jgallicc</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-10-27/lib/libLLVM-15.so+0x165ca33)</span>\n<span class=\"bp\">#</span><span class=\"mi\">13</span> <span class=\"mi\">0x00007efe4723a2de</span> <span class=\"n\">start_thread</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">libpthread.so.0</span><span class=\"bp\">+</span><span class=\"mi\">0x82de</span><span class=\"o\">)</span>\n<span class=\"bp\">#</span><span class=\"mi\">14</span> <span class=\"mi\">0x00007efe42ec0e83</span> <span class=\"n\">clone</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">libc.so.6</span><span class=\"bp\">+</span><span class=\"mi\">0xfbe83</span><span class=\"o\">)</span>\n<span class=\"n\">clang</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unable</span> <span class=\"n\">to</span> <span class=\"n\">execute</span> <span class=\"n\">command</span><span class=\"o\">:</span> <span class=\"n\">Aborted</span> <span class=\"o\">(</span><span class=\"n\">core</span> <span class=\"n\">dumped</span><span class=\"o\">)</span>\n<span class=\"n\">clang</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">linker</span> <span class=\"n\">command</span> <span class=\"n\">failed</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">signal</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"n\">to</span> <span class=\"n\">see</span> <span class=\"n\">invocation</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"bp\">...</span> <span class=\"o\">(</span><span class=\"n\">hundred</span> <span class=\"n\">lines</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">error</span> <span class=\"n\">repeated</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 315500802,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1670898596
    },
    {
        "content": "<p>It seems like this might actually be a bug in clang (?)</p>",
        "id": 315505737,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1670903254
    },
    {
        "content": "<p>Oh, hm, it didnt occur once i turned off precompileModule</p>",
        "id": 315506725,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1670904149
    },
    {
        "content": "<p>My impression is that you're running this on a very restricted user account on some shared university machine.  There's probably a limit on the number of processes you can create, and the linker runs into that limit.</p>",
        "id": 315509004,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1670905720
    }
]