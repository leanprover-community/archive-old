[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>, apparently <code>lake</code> no longer supports <code>linkArgs</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">./</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">12</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">linkArgs'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.PackageConfig'</span>\n</code></pre></div>\n<p>Do you know what I should do to adapt? The current <code>lakefile.lean</code> (for mathport) says:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span> <span class=\"n\">System</span>\n\n<span class=\"n\">package</span> <span class=\"n\">mathport</span> <span class=\"o\">{</span>\n  <span class=\"n\">dependencies</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[{</span>\n    <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"s2\">\"mathlib\"</span><span class=\"o\">,</span>\n    <span class=\"n\">src</span> <span class=\"o\">:=</span> <span class=\"n\">Source.git</span> <span class=\"s2\">\"https://github.com/semorrison/mathlib4.git\"</span> <span class=\"s2\">\"lake\"</span> <span class=\"n\">none</span><span class=\"o\">,</span>\n    <span class=\"n\">dir</span> <span class=\"o\">:=</span> <span class=\"n\">FilePath.mk</span> <span class=\"s2\">\".\"</span>\n  <span class=\"o\">}],</span>\n  <span class=\"n\">binRoot</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">MathportApp</span>\n  <span class=\"n\">linkArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-rdynamic\"</span><span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 257295889,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634087901
    },
    {
        "content": "<p>Ah, renamed to <code>moreLinkArgs</code>. <a href=\"https://github.com/leanprover/lake/commit/211e1dc56c453675047f5ac8d1030eb8c8e3fa3e#diff-b335630551682c19a781afebcf4d07bf978fb1f8ac04c6bf87428ed5106870f5R110\">https://github.com/leanprover/lake/commit/211e1dc56c453675047f5ac8d1030eb8c8e3fa3e#diff-b335630551682c19a781afebcf4d07bf978fb1f8ac04c6bf87428ed5106870f5R110</a></p>",
        "id": 257296052,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634088033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> ah, yeah, sorry about that, but I wanted to make the name more semantically correct (and consistent with things like <code>moreLibTargets</code>)</p>",
        "id": 257296500,
        "sender_full_name": "Mac",
        "timestamp": 1634088427
    },
    {
        "content": "<p>All good. Everything is moving fast at the moment. :-)</p>",
        "id": 257296517,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634088445
    },
    {
        "content": "<p>very true XD</p>",
        "id": 257296534,
        "sender_full_name": "Mac",
        "timestamp": 1634088460
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>  since we are on the topic of <code>mathport</code>'s link args setting iit really should be:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">moreLinkArgs</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">Platform.isWindows</span> <span class=\"k\">then</span>\n    <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-Wl,--export-all\"</span><span class=\"o\">]</span>\n  <span class=\"k\">else</span>\n    <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-rdynamic\"</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>so that it also works on Windows (like Lake's own <a href=\"https://github.com/leanprover/lake/blob/df1f56453cdf7ee2301c35d3f0722650d0e84273/examples/bootstrap/lakefile.lean\"><code>lakefile.lean</code></a>)</p>",
        "id": 257296647,
        "sender_full_name": "Mac",
        "timestamp": 1634088552
    },
    {
        "content": "<p>Could maybe be a convenience function like <code>|&gt;.enableInterpreter</code>?</p>",
        "id": 257322131,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634109898
    },
    {
        "content": "<p>The Nix setup for example has <code>withSharedStdlib</code> (which specifically might or might not be interesting for users as well) <a href=\"https://github.com/leanprover/lean4/blob/66fcfcce3716774dacbd35e1ea0f5c75356df311/nix/bootstrap.nix#L114\">https://github.com/leanprover/lean4/blob/66fcfcce3716774dacbd35e1ea0f5c75356df311/nix/bootstrap.nix#L114</a></p>",
        "id": 257322580,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634110202
    },
    {
        "content": "<p>(It's really <code>enableInterpreterToCallFunctionsCompiledIntoThisExecutable</code>)</p>",
        "id": 257322688,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634110249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I think I will definitely need a shorter name than that if I am to implement this. <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 257333587,
        "sender_full_name": "Mac",
        "timestamp": 1634116003
    },
    {
        "content": "<p>sadly, it is very true that what is does is not really easy to capture in a concise manner (a least I haven't thought of such a way yet)</p>",
        "id": 257333713,
        "sender_full_name": "Mac",
        "timestamp": 1634116069
    },
    {
        "content": "<p>PSA: <code>--export-all</code> is not needed anymore since <a href=\"https://github.com/leanprover/lean4/issues/670\">leanprover/lean4#670</a>. Worse, it seems to be an undocumented, GNU ld-specific alias of <code>--export-all-symbols</code>, so packages specifying it will not work with <a href=\"https://github.com/leanprover/lean4/issues/736\">leanprover/lean4#736</a>. Please remove it from your packages!</p>",
        "id": 258823237,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634995592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> <code>-rdynamic</code> is still needed though on non-Windows systems, correct?</p>",
        "id": 258838321,
        "sender_full_name": "Mac",
        "timestamp": 1635016669
    },
    {
        "content": "<p>Correct, populating the dynamic symbol table is independent from symbol visibility with ELF/MachO</p>",
        "id": 258840288,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1635019535
    },
    {
        "content": "<p>I've removed <code>--export-all</code> from mathport at <a href=\"https://github.com/leanprover/mathport/pull/37\">https://github.com/leanprover/mathport/pull/37</a>.</p>",
        "id": 259032131,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635202988
    }
]