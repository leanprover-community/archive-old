[
    {
        "content": "<p>It has been a few months since I updated my lean version, but something has changed so that my lakefile.lean doesn't work anymore. I get the following error: <code>'dependencies' is not a field of structure 'Lake.PackageConfig'</code>. How should I add dependencies now? My lakefile.lean is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"n\">MyPackage</span> <span class=\"o\">{</span>\n  <span class=\"n\">dependencies</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[{</span>\n    <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">name</span>\n    <span class=\"n\">src</span> <span class=\"o\">:=</span> <span class=\"n\">Source.git</span> <span class=\"s2\">\"&lt;url&gt;\"</span> <span class=\"s2\">\"&lt;commit&gt;\"</span>\n  <span class=\"o\">}]</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 289735072,
        "sender_full_name": "Jesse Vogel",
        "timestamp": 1657895663
    },
    {
        "content": "<p>The DSL syntax changed. The Lake readme has <a href=\"https://github.com/leanprover/lake#creating-and-building-a-package\">an example</a>, basically change it to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"n\">MyPackage</span>\n\n<span class=\"n\">require</span> <span class=\"n\">name</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"&lt;url&gt;\"</span>\n</code></pre></div>",
        "id": 289735391,
        "sender_full_name": "Julian Berman",
        "timestamp": 1657895796
    },
    {
        "content": "<p>You usually want to drop <code>@\"&lt;commit&gt;\"</code>, it is persisted in the manifest.json</p>",
        "id": 289735527,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1657895855
    },
    {
        "content": "<p>Ah interesting, good to know.</p>",
        "id": 289735578,
        "sender_full_name": "Julian Berman",
        "timestamp": 1657895879
    },
    {
        "content": "<p>(Obviously what Sebastian said, though if you have <code>lean_packages/</code> in your gitignore remember to un-ignore <code>lean_packages/manifest.json</code> then)</p>",
        "id": 289735696,
        "sender_full_name": "Julian Berman",
        "timestamp": 1657895926
    },
    {
        "content": "<p>Another thing I have encountered recently. My build fails if I'm offline as dependencies can't be updated. How can I ignore this?</p>",
        "id": 289738015,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1657896987
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"346070\">@Tomas Skrivan</span> Lake should not be trying to update dependencies if you are running a regular <code>lake build</code> instead of a <code>lake update</code> (and you have already download an initial set of dependencies). Can you elaborate more on the problem you are experiencing?</p>",
        "id": 289755302,
        "sender_full_name": "Mac",
        "timestamp": 1657904862
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>  When I disconnect from the internet and run <code>lake build</code> I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">fatal</span><span class=\"o\">:</span> <span class=\"n\">unable</span> <span class=\"n\">to</span> <span class=\"n\">access</span> <span class=\"bp\">'</span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span><span class=\"bp\">/'</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">resolve</span> <span class=\"n\">host</span><span class=\"o\">:</span> <span class=\"n\">github.com</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">git</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"mi\">128</span>\n</code></pre></div>\n<p>My lakefile is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span> <span class=\"n\">System</span>\n\n<span class=\"n\">package</span> <span class=\"n\">scilean</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span><span class=\"bp\">@</span><span class=\"s2\">\"8f609e0ed826dde127c8bc322cb6f91c5369d37a\"</span>\n\n<span class=\"kd\">@[defaultTarget]</span>\n<span class=\"n\">lean_lib</span> <span class=\"n\">SciLean</span> <span class=\"o\">{</span>\n  <span class=\"n\">roots</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">SciLean</span><span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>Lean version is: <code>leanprover/lean4:nightly-2022-07-11</code></p>",
        "id": 289756688,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1657905552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"346070\">@Tomas Skrivan</span> do you think you could make that an issue on the Lake repo? Or, if you'd rather I can do it myself.</p>",
        "id": 289759569,
        "sender_full_name": "Mac",
        "timestamp": 1657906938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>  Sure, I make an issue and try to reproduce it on a clean repo.</p>",
        "id": 289759827,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1657907079
    },
    {
        "content": "<p>Thanks! I do believe I already have a fix. The issue is mostly for posterity sake (and it give a number to the test <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>)</p>",
        "id": 289759934,
        "sender_full_name": "Mac",
        "timestamp": 1657907138
    },
    {
        "content": "<p>Github <a href=\"https://github.com/leanprover/lake/issues/104\">issue #104</a></p>",
        "id": 289760662,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1657907555
    },
    {
        "content": "<p>In trying to do this it's telling me it's expecting a command at the line where I call the <code>require</code>. I suspect its because my syntax for the package is different, but I'm not sure. Does anyone know how to do this? Here is my Lakefile</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">System</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">cDir</span> <span class=\"o\">:</span> <span class=\"n\">FilePath</span> <span class=\"o\">:=</span> <span class=\"s2\">\"c\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">ffiSrc</span> <span class=\"o\">:=</span> <span class=\"n\">cDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.c\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">buildDir</span> <span class=\"o\">:=</span> <span class=\"n\">defaultBuildDir</span>\n<span class=\"kd\">def</span> <span class=\"n\">packagesDir</span> <span class=\"o\">:=</span> <span class=\"s2\">\"third_party\"</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ffiOTarget</span> <span class=\"o\">(</span><span class=\"n\">pkgDir</span> <span class=\"o\">:</span> <span class=\"n\">FilePath</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">FileTarget</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">oFile</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">buildDir</span> <span class=\"bp\">/</span> <span class=\"n\">cDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.o\"</span>\n  <span class=\"k\">let</span> <span class=\"n\">srcTarget</span> <span class=\"o\">:=</span> <span class=\"n\">inputFileTarget</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">ffiSrc</span>\n  <span class=\"n\">fileTargetWithDep</span> <span class=\"n\">oFile</span> <span class=\"n\">srcTarget</span> <span class=\"k\">fun</span> <span class=\"n\">srcFile</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"n\">compileO</span> <span class=\"n\">oFile</span> <span class=\"n\">srcFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">‚Üê</span> <span class=\"n\">getLeanIncludeDir</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toString</span><span class=\"o\">,</span>\n                             <span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"s2\">\"third_party/OpenBLASLib/include\"</span><span class=\"o\">]</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">cLibTarget</span> <span class=\"o\">(</span><span class=\"n\">pkgDir</span> <span class=\"o\">:</span> <span class=\"n\">FilePath</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">FileTarget</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">libFile</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">buildDir</span> <span class=\"bp\">/</span> <span class=\"n\">cDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"libffi.a\"</span>\n  <span class=\"n\">staticLibTarget</span> <span class=\"n\">libFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">ffiOTarget</span> <span class=\"n\">pkgDir</span><span class=\"o\">]</span>\n\n\n<span class=\"n\">package</span> <span class=\"n\">LeanAlg</span> <span class=\"o\">(</span><span class=\"n\">pkgDir</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\n  <span class=\"c1\">-- customize layout</span>\n  <span class=\"c1\">--srcDir := \"LeanAlg\"</span>\n  <span class=\"c1\">--libRoots := #[`mathVec, `mathMatrix]</span>\n  <span class=\"c1\">-- specify the lib as an additional target</span>\n  <span class=\"n\">moreLibTargets</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">cLibTarget</span> <span class=\"n\">pkgDir</span><span class=\"o\">]</span>\n  <span class=\"n\">moreLinkArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-L\"</span><span class=\"o\">,</span> <span class=\"s2\">\"./third_party/OpenBLASLib/lib\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-lopenblas\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-Wl,-R./third_party/OpenBLASLib/lib\"</span><span class=\"o\">]</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n</code></pre></div>",
        "id": 291228000,
        "sender_full_name": "z battleman",
        "timestamp": 1659030397
    },
    {
        "content": "<p>What version of Lean is this?</p>",
        "id": 291233812,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1659033336
    },
    {
        "content": "<p>it's the nightly version of lean4 (<code>version 4.0.0-nightly-2022-04-28</code>)</p>",
        "id": 291240497,
        "sender_full_name": "z battleman",
        "timestamp": 1659036662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"483794\">@z battleman</span> that version is older than the addition of the <code>require</code> command. You may wish to update to the latest nightly mathlib4 supports (i.e., 07-24)</p>",
        "id": 291240819,
        "sender_full_name": "Mac",
        "timestamp": 1659036805
    },
    {
        "content": "<p>ah that makes sense. I just updated. But now its upset at the syntax of  the <code>package LeanAlg</code> line so I'll try to fix that. Thank you :)</p>",
        "id": 291240953,
        "sender_full_name": "z battleman",
        "timestamp": 1659036869
    },
    {
        "content": "<p>oh that broke a lot of things... in all my files I'm getting  <code>error loading library: libleanffi.a.so</code> and when I try to build I'm just getting <code>exit with status 139</code> does anyone recognize these?</p>",
        "id": 291244062,
        "sender_full_name": "z battleman",
        "timestamp": 1659038341
    },
    {
        "content": "<p>here's my attempt to port my lakefile</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">System</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"n\">LeanAlg</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">cDir</span> <span class=\"o\">:</span> <span class=\"n\">FilePath</span> <span class=\"o\">:=</span> <span class=\"s2\">\"c\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">ffiSrc</span> <span class=\"o\">:=</span> <span class=\"n\">cDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.c\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">buildDir</span> <span class=\"o\">:=</span> <span class=\"n\">defaultBuildDir</span>\n<span class=\"kd\">def</span> <span class=\"n\">packagesDir</span> <span class=\"o\">:=</span> <span class=\"s2\">\"third_party\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">pkgDir</span> <span class=\"o\">:=</span> <span class=\"n\">__dir__</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ffiOTarget</span> <span class=\"o\">:</span> <span class=\"n\">FileTarget</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">oFile</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">buildDir</span> <span class=\"bp\">/</span> <span class=\"n\">cDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.o\"</span>\n  <span class=\"k\">let</span> <span class=\"n\">srcTarget</span> <span class=\"o\">:=</span> <span class=\"n\">inputFileTarget</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">ffiSrc</span>\n  <span class=\"n\">fileTargetWithDep</span> <span class=\"n\">oFile</span> <span class=\"n\">srcTarget</span> <span class=\"k\">fun</span> <span class=\"n\">srcFile</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"n\">compileO</span> <span class=\"n\">oFile</span> <span class=\"n\">srcFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">‚Üê</span> <span class=\"n\">getLeanIncludeDir</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toString</span><span class=\"o\">,</span> <span class=\"s2\">\"-fPIC\"</span><span class=\"o\">,</span>\n                             <span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"s2\">\"third_party/OpenBLASLib/include\"</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">cLibTarget</span> <span class=\"o\">(</span><span class=\"n\">pkgDir</span> <span class=\"o\">:</span> <span class=\"n\">FilePath</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">FileTarget</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">libFile</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">buildDir</span> <span class=\"bp\">/</span> <span class=\"n\">cDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"libffi.a\"</span>\n  <span class=\"n\">staticLibTarget</span> <span class=\"n\">libFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">ffiOTarget</span><span class=\"o\">]</span>\n\n<span class=\"n\">extern_lib</span> <span class=\"n\">cLib</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">libFile</span> <span class=\"o\">:=</span> <span class=\"n\">buildDir</span> <span class=\"bp\">/</span> <span class=\"n\">nameToStaticLib</span> <span class=\"s2\">\"libffi\"</span>\n  <span class=\"n\">staticLibTarget</span> <span class=\"n\">libFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">ffiOTarget</span><span class=\"o\">]</span>\n\n\n<span class=\"n\">package</span> <span class=\"n\">LeanAlg</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- customize layout</span>\n  <span class=\"c1\">--srcDir := \"LeanAlg\"</span>\n  <span class=\"c1\">--libRoots := #[`mathVec, `mathMatrix]</span>\n  <span class=\"c1\">-- specify the lib as an additional target</span>\n  <span class=\"n\">moreLibTargets</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">cLibTarget</span> <span class=\"n\">__dir__</span><span class=\"o\">]</span>\n  <span class=\"n\">moreLinkArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-L\"</span><span class=\"o\">,</span> <span class=\"s2\">\"./third_party/OpenBLASLib/lib\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-lopenblas\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-Wl,-R./third_party/OpenBLASLib/lib\"</span><span class=\"o\">]</span>\n  <span class=\"n\">precompileModules</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">--require mathlib from git</span>\n<span class=\"c1\">--  \"https://github.com/leanprover-community/mathlib4.git\"</span>\n</code></pre></div>",
        "id": 291245655,
        "sender_full_name": "z battleman",
        "timestamp": 1659039122
    },
    {
        "content": "<p>ah well I got it to build at least by removing <code>precompileModules</code> and changing around some other things. Now its segfaulting of course, but that's progress :)</p>",
        "id": 291246768,
        "sender_full_name": "z battleman",
        "timestamp": 1659039658
    },
    {
        "content": "<p>Is there anything obvious that would cause it to segault like ordering of arguments or whatnot?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">System</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"n\">LeanAlg</span>\n\n<span class=\"n\">package</span> <span class=\"n\">LeanAlg</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- customize layout</span>\n  <span class=\"c1\">--srcDir := \"LeanAlg\"</span>\n  <span class=\"c1\">--libRoots := #[`mathVec, `mathMatrix]</span>\n  <span class=\"c1\">-- specify the lib as an additional target</span>\n  <span class=\"c1\">--moreLibTargets := #[cLibTarget __dir__]</span>\n  <span class=\"n\">srcDir</span> <span class=\"o\">:=</span> <span class=\"s2\">\"LeanAlg\"</span>\n  <span class=\"n\">moreLinkArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-L\"</span><span class=\"o\">,</span> <span class=\"s2\">\"./third_party/OpenBLASLib/lib\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-lopenblas\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-Wl,-R./third_party/OpenBLASLib/lib\"</span><span class=\"o\">]</span>\n  <span class=\"c1\">--precompileModules := true</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">@[defaultTarget]</span> <span class=\"n\">lean_exe</span> <span class=\"n\">test</span> <span class=\"o\">{</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n<span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">packagesDir</span> <span class=\"o\">:=</span> <span class=\"s2\">\"third_party\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">pkgDir</span> <span class=\"o\">:=</span> <span class=\"n\">__dir__</span>\n<span class=\"kd\">def</span> <span class=\"n\">cSrcDir</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"c\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">cBuildDir</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">_package.buildDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"c\"</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ffiOTarget</span> <span class=\"o\">:</span> <span class=\"n\">FileTarget</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">oFile</span> <span class=\"o\">:=</span> <span class=\"n\">cBuildDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.o\"</span>\n  <span class=\"k\">let</span> <span class=\"n\">srcTarget</span> <span class=\"o\">:=</span> <span class=\"n\">inputFileTarget</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">cSrcDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.c\"</span>\n  <span class=\"n\">fileTargetWithDep</span> <span class=\"n\">oFile</span> <span class=\"n\">srcTarget</span> <span class=\"k\">fun</span> <span class=\"n\">srcFile</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"n\">compileO</span> <span class=\"n\">oFile</span> <span class=\"n\">srcFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">‚Üê</span> <span class=\"n\">getLeanIncludeDir</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toString</span><span class=\"o\">,</span>\n                             <span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"s2\">\"third_party/OpenBLASLib/include\"</span><span class=\"o\">]</span>\n\n<span class=\"c1\">--def cLibTarget (pkgDir : FilePath) : FileTarget :=</span>\n<span class=\"c1\">--  let libFile := pkgDir / buildDir / cDir / \"libffi.a\"</span>\n<span class=\"c1\">--  staticLibTarget libFile #[ffiOTarget]</span>\n\n<span class=\"n\">extern_lib</span> <span class=\"n\">cLib</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">libFile</span> <span class=\"o\">:=</span> <span class=\"n\">cBuildDir</span> <span class=\"bp\">/</span> <span class=\"n\">nameToStaticLib</span> <span class=\"s2\">\"libffi\"</span>\n  <span class=\"n\">staticLibTarget</span> <span class=\"n\">libFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">ffiOTarget</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>The only thing that changed on the Lean end is that this is no longer accepted</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[extern \"mathMatrix_initialize\"]</span>\n<span class=\"kn\">private</span> <span class=\"kd\">constant</span> <span class=\"n\">mathMatrix_initializer</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span>\n\n<span class=\"n\">builtin_initialize</span> <span class=\"n\">mathMatrix_initializer</span>\n</code></pre></div>\n<p>so I rmeoved them, but I'm not sure if they need to be replaced</p>",
        "id": 291250098,
        "sender_full_name": "z battleman",
        "timestamp": 1659041313
    },
    {
        "content": "<p>oh... those being gone would definitely cause a segfault, but I'm not sure how to replace them with the current Lean4 syntax</p>",
        "id": 291250978,
        "sender_full_name": "z battleman",
        "timestamp": 1659041767
    },
    {
        "content": "<p>ah, this did it</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[extern \"mathMatrix_initialize\"]</span>\n<span class=\"n\">opaque</span> <span class=\"n\">mathMatrix_initializer</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span>\n\n<span class=\"n\">builtin_initialize</span> <span class=\"n\">mathMatrix_initializer</span>\n</code></pre></div>\n<p>Thanks for the help!!</p>",
        "id": 291252048,
        "sender_full_name": "z battleman",
        "timestamp": 1659042362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"483794\">z battleman</span> <a href=\"#narrow/stream/270676-lean4/topic/lakefile.20dependencies/near/291246768\">said</a>:</p>\n<blockquote>\n<p>ah well I got it to build at least by removing <code>precompileModules</code> and changing around some other things. Now its segfaulting of course, but that's progress :)</p>\n</blockquote>\n<p>You should be able to add this back (I believe the problem was the existence of the <code>moreLibTargets</code> setting).</p>",
        "id": 291280599,
        "sender_full_name": "Mac",
        "timestamp": 1659066240
    },
    {
        "content": "<p>I've been trying to add it back to some luck. It is compiling, but Lean is unable to find the <code>.so</code> file associated with it. It's in the <code>build/c/</code> directory though so I'm not sure why its failing to find it</p>",
        "id": 291280982,
        "sender_full_name": "z battleman",
        "timestamp": 1659066789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"483794\">@z battleman</span> what OS are you on?</p>",
        "id": 291281057,
        "sender_full_name": "Mac",
        "timestamp": 1659066875
    },
    {
        "content": "<p>I'm on Arch Kernel version  <code>5.18.9-arch1-1</code></p>",
        "id": 291281086,
        "sender_full_name": "z battleman",
        "timestamp": 1659066942
    },
    {
        "content": "<p>And what is the specific error you are getting from Lean?</p>",
        "id": 291281101,
        "sender_full_name": "Mac",
        "timestamp": 1659066959
    },
    {
        "content": "<p><code>error loading library, libleanffi.so: cannot open shared object file. No such file or directory</code></p>",
        "id": 291281164,
        "sender_full_name": "z battleman",
        "timestamp": 1659067004
    },
    {
        "content": "<p>the file definitely is in <code>./build/c/</code></p>",
        "id": 291281173,
        "sender_full_name": "z battleman",
        "timestamp": 1659067027
    },
    {
        "content": "<p>Oh wait, one problem (hopefully that one) is that you have name the library you passed to <code>nameToStaticLib</code> \"libffi\", it should just be \"ffi\", the definition will add the <code>lib</code> prefix (on non-Windows).</p>",
        "id": 291281188,
        "sender_full_name": "Mac",
        "timestamp": 1659067058
    },
    {
        "content": "<p>ah sorry that's an old version with that typo, its currently  <code>\"leanffi\"</code>. Here is the most recent version</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">System</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n\n<span class=\"n\">package</span> <span class=\"n\">LeanAlg</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- customize layout</span>\n  <span class=\"c1\">--srcDir := \"LeanAlg\"</span>\n  <span class=\"c1\">--libRoots := #[`mathVec, `mathMatrix]</span>\n  <span class=\"c1\">-- specify the lib as an additional target</span>\n  <span class=\"c1\">--moreLibTargets := #[cLibTarget __dir__]</span>\n  <span class=\"n\">moreLinkArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-L\"</span><span class=\"o\">,</span> <span class=\"s2\">\"./third_party/OpenBLASLib/lib\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-lopenblas\"</span><span class=\"o\">,</span>\n                    <span class=\"s2\">\"-Wl,-R./third_party/OpenBLASLib/lib\"</span><span class=\"o\">]</span>\n\n  <span class=\"n\">precompileModules</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n  <span class=\"n\">packagesDir</span> <span class=\"o\">:=</span> <span class=\"s2\">\"third_party\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">@[defaultTarget]</span> <span class=\"n\">lean_exe</span> <span class=\"n\">test</span> <span class=\"o\">{</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">pkgDir</span> <span class=\"o\">:=</span> <span class=\"n\">__dir__</span>\n<span class=\"kd\">def</span> <span class=\"n\">cSrcDir</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"c\"</span>\n<span class=\"kd\">def</span> <span class=\"n\">cBuildDir</span> <span class=\"o\">:=</span> <span class=\"n\">pkgDir</span> <span class=\"bp\">/</span> <span class=\"n\">_package.buildDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"c\"</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ffiOTarget</span> <span class=\"o\">:</span> <span class=\"n\">FileTarget</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">oFile</span> <span class=\"o\">:=</span> <span class=\"n\">cBuildDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.o\"</span>\n  <span class=\"k\">let</span> <span class=\"n\">srcTarget</span> <span class=\"o\">:=</span> <span class=\"n\">inputFileTarget</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">cSrcDir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"bindings.c\"</span>\n  <span class=\"n\">fileTargetWithDep</span> <span class=\"n\">oFile</span> <span class=\"n\">srcTarget</span> <span class=\"k\">fun</span> <span class=\"n\">srcFile</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"n\">compileO</span> <span class=\"n\">oFile</span> <span class=\"n\">srcFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">‚Üê</span> <span class=\"n\">getLeanIncludeDir</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toString</span><span class=\"o\">,</span>\n                             <span class=\"s2\">\"-I\"</span><span class=\"o\">,</span> <span class=\"s2\">\"third_party/OpenBLASLib/include\"</span><span class=\"o\">]</span>\n\n<span class=\"c1\">--def cLibTarget (pkgDir : FilePath) : FileTarget :=</span>\n<span class=\"c1\">--  let libFile := pkgDir / buildDir / cDir / \"libffi.a\"</span>\n<span class=\"c1\">--  staticLibTarget libFile #[ffiOTarget]</span>\n\n<span class=\"n\">extern_lib</span> <span class=\"n\">cLib</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">libFile</span> <span class=\"o\">:=</span> <span class=\"n\">cBuildDir</span> <span class=\"bp\">/</span> <span class=\"n\">nameToStaticLib</span> <span class=\"s2\">\"leanffi\"</span>\n  <span class=\"n\">staticLibTarget</span> <span class=\"n\">libFile</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">ffiOTarget</span><span class=\"o\">]</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n</code></pre></div>\n<p>Although I plan to change it from an executable to a library tomorrow</p>",
        "id": 291281242,
        "sender_full_name": "z battleman",
        "timestamp": 1659067126
    },
    {
        "content": "<p>Do you have the command line invocation that is erroring (i.e., the part starting with <code>&gt; .../lean...</code>)?</p>",
        "id": 291281423,
        "sender_full_name": "Mac",
        "timestamp": 1659067331
    },
    {
        "content": "<p>its occuring in the info window. The executables run correctly. Admittedly I don't know enough about running lean from the command line to reproduce it... sorry</p>",
        "id": 291281467,
        "sender_full_name": "z battleman",
        "timestamp": 1659067391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"483794\">@z battleman</span>  No worries, the info part helps. I didn't mean run lean directly from the command line. When you run <code>lake build</code> it should spit out a lot of logging which includes a the invocations of <code>lean</code> used to builds files (in the form <code>&gt; [env-vars] [cmd] [args]</code>)</p>",
        "id": 291281753,
        "sender_full_name": "Mac",
        "timestamp": 1659067821
    },
    {
        "content": "<p>I'm not entirely sure what you're looking for in particular so here's the output</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">&gt;</span> <span class=\"n\">cc</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">c</span><span class=\"bp\">/</span><span class=\"n\">bindings.o</span> <span class=\"bp\">./</span><span class=\"n\">c</span><span class=\"bp\">/</span><span class=\"n\">bindings.c</span> <span class=\"bp\">-</span><span class=\"n\">I</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/include -I third_party/OpenBLASLib/include</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/llvm-ar rcs ./build/c/libleanffi.a ./build/c/bindings.o</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -shared -o ./build/c/libleanffi.so -Wl,--whole-archive ./build/c/libleanffi.a -Wl,--no-whole-archive</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">third_party</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/lib:./build/lib:./build/c /home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/bin/lean ./././LeanAlg/genVec.lean -R ././. -o ./build/lib/LeanAlg/genVec.olean -i ./build/lib/LeanAlg/genVec.ilean -c ./build/ir/LeanAlg/genVec.c --load-dynlib=libleanffi.so</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">third_party</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/lib:./build/lib:./build/c /home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/bin/lean ./././LeanAlg/utils/FloatUtils.lean -R ././. -o ./build/lib/LeanAlg/utils/FloatUtils.olean -i ./build/lib/LeanAlg/utils/FloatUtils.ilean -c ./build/ir/LeanAlg/utils/FloatUtils.c --load-dynlib=libleanffi.so</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -c -o ./build/ir/LeanAlg/utils/FloatUtils.o ./build/ir/LeanAlg/utils/FloatUtils.c -O3 -DNDEBUG</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">third_party</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/lib:./build/lib:./build/c /home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/bin/lean ./././LeanAlg/mathVec.lean -R ././. -o ./build/lib/LeanAlg/mathVec.olean -i ./build/lib/LeanAlg/mathVec.ilean -c ./build/ir/LeanAlg/mathVec.c --load-dynlib=libleanffi.so</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -c -o ./build/ir/LeanAlg/genVec.o ./build/ir/LeanAlg/genVec.c -O3 -DNDEBUG</span>\n\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -c -o ./build/ir/LeanAlg/mathVec.o ./build/ir/LeanAlg/mathVec.c -O3 -DNDEBUG</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">third_party</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/lib:./build/lib:./build/c /home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/bin/lean ./././LeanAlg/mathMatrix.lean -R ././. -o ./build/lib/LeanAlg/mathMatrix.olean -i ./build/lib/LeanAlg/mathMatrix.ilean -c ./build/ir/LeanAlg/mathMatrix.c --load-dynlib=libleanffi.so</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">third_party</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/lib:./build/lib:./build/c /home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/bin/lean ./././LeanAlg/tests/mathVecTest.lean -R ././. -o ./build/lib/LeanAlg/tests/mathVecTest.olean -i ./build/lib/LeanAlg/tests/mathVecTest.ilean -c ./build/ir/LeanAlg/tests/mathVecTest.c --load-dynlib=libleanffi.so</span>\n\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -c -o ./build/ir/LeanAlg/mathMatrix.o ./build/ir/LeanAlg/mathMatrix.c -O3 -DNDEBUG</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">third_party</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/lib:./build/lib:./build/c /home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/bin/lean ./././LeanAlg/tests/mathMatrixTest.lean -R ././. -o ./build/lib/LeanAlg/tests/mathMatrixTest.olean -i ./build/lib/LeanAlg/tests/mathMatrixTest.ilean -c ./build/ir/LeanAlg/tests/mathMatrixTest.c --load-dynlib=libleanffi.so</span>\n\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -c -o ./build/ir/LeanAlg/tests/mathVecTest.o ./build/ir/LeanAlg/tests/mathVecTest.c -O3 -DNDEBUG</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./</span><span class=\"n\">third_party</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/lib:./build/lib:./build/c /home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/bin/lean ./././Main.lean -R ././. -o ./build/lib/Main.olean -i ./build/lib/Main.ilean -c ./build/ir/Main.c --load-dynlib=libleanffi.so</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -c -o ./build/ir/LeanAlg/tests/mathMatrixTest.o ./build/ir/LeanAlg/tests/mathMatrixTest.c -O3 -DNDEBUG</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -c -o ./build/ir/Main.o ./build/ir/Main.c -O3 -DNDEBUG</span>\n<span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">zaxioms</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2022-07-24/bin/leanc -o ./build/bin/test ./build/ir/Main.o ./build/ir/LeanAlg/genVec.o ./build/ir/LeanAlg/mathVec.o ./build/ir/LeanAlg/utils/FloatUtils.o ./build/ir/LeanAlg/mathMatrix.o ./build/ir/LeanAlg/tests/mathMatrixTest.o ./build/ir/LeanAlg/tests/mathVecTest.o ./build/c/libleanffi.a -L ./third_party/OpenBLASLib/lib -lopenblas -Wl,-R./third_party/OpenBLASLib/lib</span>\n</code></pre></div>\n<p>(if you can point out whats relevant I can delete the rest to avoid clogging the thread)</p>",
        "id": 291281863,
        "sender_full_name": "z battleman",
        "timestamp": 1659068003
    },
    {
        "content": "<p>Looks good to me. You mentioned that error only appears in the  infoview, right?</p>",
        "id": 291284654,
        "sender_full_name": "Mac",
        "timestamp": 1659072027
    },
    {
        "content": "<p>My two suggestions: </p>\n<ul>\n<li>You have a <code>lean-toolchain</code> file in your project, correct? What nightly are using?</li>\n<li>If you are using VSCode, you can run try running <code>Developer: Reload Window</code> from the command palette and seeing if that helps.</li>\n</ul>",
        "id": 291284727,
        "sender_full_name": "Mac",
        "timestamp": 1659072147
    },
    {
        "content": "<p>My lean-toolchain is nightly version 07-24-22. I use neovim with lean.nvim, but I could try vscode and see if that works. Also, to be a bit more specific, the error isnt occuring the infowindow itself, but rather my language server is detecting it and nothing is loading in the infowindow (which I think is just trying to load it into the info window, but I'm not sure if that distinction is important)</p>",
        "id": 291314467,
        "sender_full_name": "z battleman",
        "timestamp": 1659097652
    },
    {
        "content": "<p>I just checked, it's the same issue in VScode :( </p>\n<p>(and this time officially <em>in</em> the info window haha)</p>",
        "id": 291318155,
        "sender_full_name": "z battleman",
        "timestamp": 1659100028
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"483794\">@z battleman</span>  try running the following in your lean server environment:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span> <span class=\"k\">show</span> <span class=\"n\">IO</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">path</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">‚Üê</span> <span class=\"n\">IO.getEnv</span> <span class=\"s2\">\"LD_LIBRARY_PATH\"</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">getD</span> <span class=\"s2\">\"\"</span>\n  <span class=\"n\">return</span> <span class=\"n\">System.SearchPath.parse</span> <span class=\"n\">path</span>\n</code></pre></div>\n<p>If things are working correctly, you should see <code>build/c</code> in the list of paths the <code>#eval</code> prints.</p>",
        "id": 291347189,
        "sender_full_name": "Mac",
        "timestamp": 1659111402
    },
    {
        "content": "<p>Its not there, I'm just getting </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">FilePath.mk</span> <span class=\"s2\">\"/home/zaxioms/.elan/toolchains/leanprover--lean4---nightly-2022-07-24/lib\"</span><span class=\"o\">,</span>\n <span class=\"n\">FilePath.mk</span> <span class=\"s2\">\"./third_party/mathlib/build/lib\"</span><span class=\"o\">,</span>\n <span class=\"n\">FilePath.mk</span> <span class=\"s2\">\"./build/lib\"</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>in the <code>./build/lib</code> directory are a bunch of <code>.so</code> files associated with the individual files, but I assume the one that its looking for \"ties them all together\" so to speak</p>",
        "id": 291357152,
        "sender_full_name": "z battleman",
        "timestamp": 1659116474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"483794\">@z battleman</span> yep, that is a bug. A short term solution would be to output <code>libleanffi</code> to <code>build/lib</code> rather than <code>build/c</code></p>",
        "id": 291358687,
        "sender_full_name": "Mac",
        "timestamp": 1659117131
    },
    {
        "content": "<p>hopefully that'll work for now. Thanks!</p>",
        "id": 291358864,
        "sender_full_name": "z battleman",
        "timestamp": 1659117212
    },
    {
        "content": "<p>well it found the file, but now it says that </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">libc</span><span class=\"bp\">++</span><span class=\"n\">abi</span><span class=\"o\">:</span> <span class=\"n\">terminating</span> <span class=\"k\">with</span> <span class=\"n\">uncaught</span> <span class=\"n\">exception</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"n\">lean</span><span class=\"o\">::</span><span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">native</span> <span class=\"n\">implementation</span> <span class=\"n\">of</span> <span class=\"n\">external</span> <span class=\"n\">declaration</span> <span class=\"bp\">'</span><span class=\"n\">mathMatrix.id'</span> <span class=\"o\">(</span><span class=\"n\">symbols</span> <span class=\"bp\">'</span><span class=\"n\">l_mathMatrix_id___boxed'</span> <span class=\"n\">or</span> <span class=\"bp\">'</span><span class=\"n\">l_mathMatrix_id'</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>considering the files run at all, these defintely exist in my <code>c</code> code but it seems like they might not being detected by the compiler when it is compiling the <code>so</code>?  Is this something that can happen?</p>\n<p>Here it is in the <code>ir</code> directory generated</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">LEAN_EXPORT</span> <span class=\"n\">lean_object</span><span class=\"bp\">*</span> <span class=\"n\">l_mathMatrix_id___boxed</span><span class=\"o\">(</span><span class=\"n\">lean_object</span><span class=\"bp\">*</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n<span class=\"n\">_start</span><span class=\"o\">:</span>\n<span class=\"o\">{</span>\n<span class=\"n\">lean_object</span><span class=\"bp\">*</span> <span class=\"n\">x_2</span><span class=\"bp\">;</span>\n<span class=\"n\">x_2</span> <span class=\"bp\">=</span> <span class=\"n\">mathMatrix_new_id</span><span class=\"o\">(</span><span class=\"n\">x_1</span><span class=\"o\">)</span><span class=\"bp\">;</span>\n<span class=\"n\">return</span> <span class=\"n\">x_2</span><span class=\"bp\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 291361177,
        "sender_full_name": "z battleman",
        "timestamp": 1659118227
    },
    {
        "content": "<p>How are you calling your C code from Lean?</p>",
        "id": 291362089,
        "sender_full_name": "Mac",
        "timestamp": 1659118675
    },
    {
        "content": "<p>just with <code>#eval</code></p>",
        "id": 291362307,
        "sender_full_name": "z battleman",
        "timestamp": 1659118761
    },
    {
        "content": "<p>The <code>#eval</code> needs to be in a different file from the <code>extern</code></p>",
        "id": 291363444,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1659119293
    },
    {
        "content": "<p>oh that works!! thank you so much!</p>",
        "id": 291364391,
        "sender_full_name": "z battleman",
        "timestamp": 1659119740
    },
    {
        "content": "<p>I've hit the offline issue again, preventing offline porting, because the lakefile for mathlib4 won't parse. <a href=\"https://github.com/leanprover/lake/issues/104#issuecomment-1286953208\">https://github.com/leanprover/lake/issues/104#issuecomment-1286953208</a></p>",
        "id": 305353004,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1666358472
    },
    {
        "content": "<p>I'm having a slightly different issue from what <span class=\"user-mention\" data-user-id=\"483794\">@zbatt</span> had; for some reason, an executable generated by <code>lake build</code> doesn't have <code>libunwind.so</code> linked correctly:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">ldd</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">eternity2</span>\n        <span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">vdso.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007fffa8bd2000</span><span class=\"o\">)</span>\n        <span class=\"n\">libc</span><span class=\"bp\">++.</span><span class=\"n\">so.1</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">libc</span><span class=\"bp\">++.</span><span class=\"n\">so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4854a6b000</span><span class=\"o\">)</span>\n        <span class=\"n\">libc</span><span class=\"bp\">++</span><span class=\"n\">abi.so.1</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">libc</span><span class=\"bp\">++</span><span class=\"n\">abi.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4854a33000</span><span class=\"o\">)</span>\n        <span class=\"n\">libunwind.so.1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">not</span> <span class=\"n\">found</span>\n        <span class=\"n\">libm.so.6</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">libm.so.6</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f48548e4000</span><span class=\"o\">)</span>\n        <span class=\"n\">libdl.so.2</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">libdl.so.2</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f48548de000</span><span class=\"o\">)</span>\n        <span class=\"n\">libpthread.so.0</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">libpthread.so.0</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f48548bb000</span><span class=\"o\">)</span>\n        <span class=\"n\">libc.so.6</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">libc.so.6</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f48546c7000</span><span class=\"o\">)</span>\n        <span class=\"n\">librt.so.1</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">librt.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f48546bd000</span><span class=\"o\">)</span>\n        <span class=\"n\">libgcc_s.so.1</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"bp\">/</span><span class=\"n\">libgcc_s.so.1</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f48546a2000</span><span class=\"o\">)</span>\n        <span class=\"bp\">/</span><span class=\"n\">lib64</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">x86</span><span class=\"bp\">-</span><span class=\"mi\">64</span><span class=\"bp\">.</span><span class=\"n\">so.2</span> <span class=\"o\">(</span><span class=\"mi\">0x00007f4857c13000</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>but if I add the lean toolchain <code>lib/</code> folder to the LD_LIBRARY_PATH environment variable it runs fine. i think this is also why i hadn't noticed it until now, cuz <code>lake exe eternity2</code> has LD_LIBRARY_PATH set properly</p>",
        "id": 308184896,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1667680682
    },
    {
        "content": "<p>obviously low priority since I can work around it right now but I'm not sure if I'm doing something weird or if this is a bug in lake</p>",
        "id": 308184931,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1667680715
    },
    {
        "content": "<p><a href=\"https://github.com/JamesGallicchio/eternity2/tree/8e7b7927d350467e281a674616ddb29c1578b89d\">https://github.com/JamesGallicchio/eternity2/tree/8e7b7927d350467e281a674616ddb29c1578b89d</a> leaving this commit here in case we want to debug at some point</p>",
        "id": 308185128,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1667680913
    },
    {
        "content": "<p>libunwind is supposed to be linked statically: <a href=\"https://github.com/leanprover/lean4/blob/8b9fe9b6c2714b51dc8b25c3f90304e488ec29a6/script/prepare-llvm-linux.sh#L60\">https://github.com/leanprover/lean4/blob/8b9fe9b6c2714b51dc8b25c3f90304e488ec29a6/script/prepare-llvm-linux.sh#L60</a>. But your additional linker flags may have affected that in some way</p>",
        "id": 308193769,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1667688037
    },
    {
        "content": "<p>hrm, interesting</p>",
        "id": 308197646,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1667691566
    },
    {
        "content": "<p>oh, wait, I had a lingering <code>-lstdlib++</code> in my linker args, seems to work now</p>",
        "id": 308197776,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1667691672
    },
    {
        "content": "<p>sorry for the noise!</p>",
        "id": 308197791,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1667691697
    }
]