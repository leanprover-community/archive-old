[
    {
        "content": "<p>So... it's embarrising.<br>\nI tried to tweak some configuration in VS Code and now the <code>lean</code> extension try to run even if i'm in a <code>lean4</code> folder, and i can't run <code>lean4.restartServer</code></p>",
        "id": 270620205,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1643923601
    },
    {
        "content": "<p>You can disable extensions for a given workspace by right clicking them in the extensions bar</p>",
        "id": 270620442,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1643923693
    },
    {
        "content": "<p>Well it work... kinda. <br>\nBefore i didn't had to disactivate extensions. And for some reason,i don't have infoview in Lean sources anymore</p>",
        "id": 270620941,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1643923916
    },
    {
        "content": "<p>I managed to make it work by allowing the Lean 4 extension to pop in every Lean project, except for mathlib (the only Lean 3 project I tweak). And the Lean 3 extension is restricted to mathlib</p>",
        "id": 270621933,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643924351
    },
    {
        "content": "<p>Hmm, Lean 4 is enabled globaly tho<br>\nLike, why nothing show up in the infoview<br>\n<a href=\"/user_uploads/3121/3Z0CYSBwrFOVBKDbB0OJTCbY/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/3Z0CYSBwrFOVBKDbB0OJTCbY/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/3Z0CYSBwrFOVBKDbB0OJTCbY/image.png\"></a></div>",
        "id": 270622876,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1643924786
    },
    {
        "content": "<p>Are you running Windows by any chance?</p>",
        "id": 270623133,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1643924905
    },
    {
        "content": "<p>Nop, brrr, this is good ol' arch</p>",
        "id": 270623332,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1643925006
    },
    {
        "content": "<p>Which version of the Lean 4 extension are you using?</p>",
        "id": 270623447,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643925072
    },
    {
        "content": "<p>last one, 0.63</p>",
        "id": 270623534,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1643925112
    },
    {
        "content": "<p>My first thought: is that the Lean 3 extension infoview or the Lean 4 extension infoview?</p>",
        "id": 270624784,
        "sender_full_name": "Mac",
        "timestamp": 1643925698
    },
    {
        "content": "<p>maybe they should have a different title bar so you can tell the difference</p>",
        "id": 270625725,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643926103
    },
    {
        "content": "<p>I think they are currently indistinguishable</p>",
        "id": 270625869,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643926170
    },
    {
        "content": "<p>You can distinguish them by adding some different CSS to both<br>\nBut it's not a great solution</p>",
        "id": 270626016,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1643926226
    },
    {
        "content": "<p>FWIW on the latest nightly and Lean 4 VSCode extension version, my editor doesn't seem to be responsive either (No diagnostics, no infoview contents, etc.). I tried both Windows and WSL and older nightlies where I think it used to work as well.</p>",
        "id": 270626501,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1643926450
    },
    {
        "content": "<p>So what actually happend was , while I was tweaking configuration, the extension updated and change behavior... i guess ?</p>",
        "id": 270626857,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1643926635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/making.20lean.20and.20lean4.20coexist/near/270626501\">said</a>:</p>\n<blockquote>\n<p>FWIW on the latest nightly and Lean 4 VSCode extension version, my editor doesn't seem to be responsive either (No diagnostics, no infoview contents, etc.). I tried both Windows and WSL and older nightlies where I think it used to work as well.</p>\n</blockquote>\n<p>Ah, this may be related to me opening single files, not entire Lean projects?</p>",
        "id": 270627131,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1643926785
    },
    {
        "content": "<blockquote>\n<p>Ah, this may be related to me opening single files, not entire Lean projects?</p>\n</blockquote>\n<p>I didn't even know that vscode had such a mode.  It's certainly completely untested.</p>",
        "id": 270705010,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643976252
    },
    {
        "content": "<blockquote>\n<p>is that the Lean 3 extension infoview or the Lean 4 extension infoview? [...] maybe they should have a different title bar so you can tell the difference</p>\n</blockquote>\n<p>Yeah, it would be good to show some status info.  Lean version in the status bar.  And \"server not running\" or smth in the infoview instead of \"no info found\" and \"no messages\".</p>",
        "id": 270705232,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643976385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/270676-lean4/topic/making.20lean.20and.20lean4.20coexist/near/270705010\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Ah, this may be related to me opening single files, not entire Lean projects?</p>\n</blockquote>\n<p>I didn't even know that vscode had such a mode.  It's certainly completely untested.</p>\n</blockquote>\n<p>Opening single Lean 4 files worked fine until a few updates ago (as long as you have some global Lean installation). The server has (had?) support for it as well, since I thought that creating a single file and running a bit of isolated Lean code is neat for testing things, similar to how you'd just launch up a REPL.</p>",
        "id": 270708580,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1643978498
    },
    {
        "content": "<p>Did some limited testing right now.  Create a file <code>x/y.lean</code> without lakefile.  Then <code>code x</code> and opening <code>y.lean</code> works.  But <code>code x/y.lean</code> doesn't.  That's what I meant by special single-file mode.</p>",
        "id": 270708767,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643978598
    },
    {
        "content": "<p>Also the UI is very different.  E.g. you don't get the usual modal trust dialog, but a notification that the extensions are disabled.</p>",
        "id": 270708859,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643978654
    },
    {
        "content": "<p>That's what I meant as well.</p>",
        "id": 270710877,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1643979661
    },
    {
        "content": "<p>Hm, my extensions aren't disabled when I open a single new .lean file, but I don't seem to get the trust dialog either, which is strange</p>",
        "id": 270738495,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1643992109
    },
    {
        "content": "<p>I have a fix in progress here with some questions about how you want this to behave: <a href=\"https://github.com/leanprover/vscode-lean4/pull/117\">https://github.com/leanprover/vscode-lean4/pull/117</a></p>",
        "id": 271076777,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1644290852
    },
    {
        "content": "<p><code>lean.nvim</code> does the stdlib path walking you mention  (actually just it looks for <code>/lib/lean</code> in the path) and I think it works pretty well.</p>",
        "id": 271078314,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644292768
    },
    {
        "content": "<p>Right my question is if you open <code>leanprover--lean4---nightly\\lib\\lean\\src\\Init\\System\\IO.lean</code> do you expect it to find and use <code>leanprover--lean4---nightly\\lib\\lean\\src\\leanpkg.toml</code> or an inherited <code>lean-toolchain</code> in the case of something like mathlib.  Specifically it would start a <code>lean --server</code> in that folder so that  any other files opened in that directory tree would also use the same <code>lean --server</code>.  I think this is probably the right behavior, but I just wanted to check if this matches your expectation.</p>",
        "id": 271083802,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1644298996
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"434989\">Chris Lovett</span> <a href=\"#narrow/stream/270676-lean4/topic/making.20lean.20and.20lean4.20coexist/near/271083802\">said</a>:</p>\n<blockquote>\n<p><code>leanprover--lean4---nightly\\lib\\lean\\src\\leanpkg.toml</code></p>\n</blockquote>\n<p>We have no such file, do we?</p>",
        "id": 271093741,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644308362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/making.20lean.20and.20lean4.20coexist/near/271078314\">said</a>:</p>\n<blockquote>\n<p><code>lean.nvim</code> does the stdlib path walking you mention  (actually just it looks for <code>/lib/lean</code> in the path) and I think it works pretty well.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> Btw, note <a href=\"https://github.com/leanprover/lean4/pull/989\">https://github.com/leanprover/lean4/pull/989</a></p>",
        "id": 271093879,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644308439
    },
    {
        "content": "<blockquote>\n<p>We have no such file, do we?</p>\n</blockquote>\n<p>Woops you are right, I must have mistaken <code>Leanpkg.lean</code> for <code>leanpkg.toml</code>.  But anyway, the same applies to mathlib4, if someone uses \"file/open...\" and opens <code>mathlib4\\Mathlib\\Data\\List\\Basic.lean</code> I assume the vscode extension should find the <code>mathlib4\\lean-toolchain</code> file and start the <code>lean --server</code> in that folder, right?</p>",
        "id": 271097698,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1644310777
    },
    {
        "content": "<blockquote>\n<p>I assume the vscode extension should find the mathlib4\\lean-toolchain file and start the lean --server in that folder, right?</p>\n</blockquote>\n<p>Right.  For reference, the lean.nvim plugin looks for <code>lean-toolchain</code>, <code>leanpkg.toml</code>, and <code>lakefile.lean</code> files as well as the <code>lib/lean</code> directory (which will soon become <code>src/lean</code>).</p>",
        "id": 271107805,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1644316248
    }
]