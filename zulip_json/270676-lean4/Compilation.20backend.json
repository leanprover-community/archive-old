[
    {
        "content": "<p>Hi. I was wondering how to add a backend to the compiler, so I can compile to another architecture. Maybe it's possible to output some intermediate representation?</p>",
        "id": 224002002,
        "sender_full_name": "Shahar Papini",
        "timestamp": 1611642809
    },
    {
        "content": "<p>At the moment, you can use lean to compile to C, which is then compiled with a standard C compiler. You can use a C compiler targeting a different architecture if you want, or you can set options in the compiler to output IR if you want. I don't know what options are available for looking at lean's own IRs.</p>",
        "id": 224002346,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611643230
    },
    {
        "content": "<p>C is too late, I need it in some functional-like IR. Can you point me to an area in the code where I can look for it?</p>",
        "id": 224003392,
        "sender_full_name": "Shahar Papini",
        "timestamp": 1611644718
    },
    {
        "content": "<p>I know about as much about the lean 4 code as you, but <a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Compiler/IR.lean\">https://github.com/leanprover/lean4/blob/master/src/Lean/Compiler/IR.lean</a> looks like the main entry point to the compiler, and you can probably call those functions yourself if you want to do something else with the IR. <span class=\"user-mention\" data-user-id=\"112857\">@Leonardo de Moura</span> will know if there is a more official way to emit IR as a compiler output</p>",
        "id": 224003568,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611644995
    },
    {
        "content": "<p>There are no extension hooks for adding backends, so I would implement one as a separate Lean executable consuming .olean files via <code>Lean.Environment.importModules</code>. The entry point of the C backend is <a href=\"https://github.com/leanprover/lean4/blob/bb3a1a9699bda05e6ec44999b08438dd7a51c497/src/Lean/Compiler/IR/EmitC.lean#L726\">https://github.com/leanprover/lean4/blob/bb3a1a9699bda05e6ec44999b08438dd7a51c497/src/Lean/Compiler/IR/EmitC.lean#L726</a>.</p>",
        "id": 224018522,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1611655795
    }
]