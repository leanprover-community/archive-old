[
    {
        "content": "<p>If I do something like this --</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Something</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">n1</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n  <span class=\"n\">n2</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">i</span>\n\n<span class=\"kd\">constant</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Something</span> <span class=\"mi\">10</span> <span class=\"o\">:=</span> <span class=\"o\">{}</span>\n</code></pre></div>\n<p>...I see an error on s -- \"(kernel) kernel type checker does not support meta variables\". Is there a way to get this to work?</p>",
        "id": 279746190,
        "sender_full_name": "Mark Wilhelm",
        "timestamp": 1650579051
    },
    {
        "content": "<p>The elaborator does seem to at least partially understand what to do here since it ends up with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">Elab.definition.body</span><span class=\"o\">]</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">Something</span> <span class=\"mi\">10</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">n1</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">n2</span> <span class=\"o\">:=</span> <span class=\"bp\">?</span><span class=\"n\">m.938</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>so maybe that's something that Elab.struct just isn't doing yet? In this special case it at least seems feasible to me to infer the value for this meta variable</p>",
        "id": 279747080,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1650579577
    },
    {
        "content": "<p>Pushed a fix for this issue <a href=\"https://github.com/leanprover/lean4/commit/66c82dadc96e021965d953f1b7a1edc372561005\">https://github.com/leanprover/lean4/commit/66c82dadc96e021965d953f1b7a1edc372561005</a></p>",
        "id": 279758852,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1650588100
    },
    {
        "content": "<p>Thank you for the fix</p>",
        "id": 279991036,
        "sender_full_name": "Mark Wilhelm",
        "timestamp": 1650822108
    }
]