[
    {
        "content": "<p>Quite some time ago I implemented a simple client-side filter in Emacs for inaccessible hypotheses<br>\n<a href=\"/user_uploads/3121/iyDq6Rl4dftbMprl2GEpkJAl/image.png\">image.png</a> <br>\nAFAIR, <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> implemented it in vscode-lean4 at the same time, but because of some bug it was never actually triggered? In any case, now that the implementation has changed completely anyway through widgets, I wanted to gauge interest for finally bringing this feature to VS Code/the infoview widget</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/iyDq6Rl4dftbMprl2GEpkJAl/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/iyDq6Rl4dftbMprl2GEpkJAl/image.png\"></a></div>",
        "id": 295701220,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661688310
    },
    {
        "content": "<p>If eliding the cross symbol is too controversial, I think highlighting without elision would still be valuable. At least in HTML we would be able to add the symbol when copying text without displaying it, I assume.</p>",
        "id": 295701372,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661688399
    },
    {
        "content": "<p>Apparently I'd already complained previously: <a href=\"https://github.com/leanprover/vscode-lean4/issues/18\">https://github.com/leanprover/vscode-lean4/issues/18</a>. But the problem wasn't really the cross elision (which I think is fixable as mentioned) but the lackluster/unclear highlighting compared to Emacs (where nobody has complained about the elision so far, afair). And then the code was lost completely in <a href=\"https://github.com/leanprover/vscode-lean4/pull/37\">https://github.com/leanprover/vscode-lean4/pull/37</a>.</p>",
        "id": 295703539,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661689612
    },
    {
        "content": "<p>When you say filter you mean the dimming right? Not that the hypotheses are totally removed from the shown state?</p>",
        "id": 295704081,
        "sender_full_name": "Julian Berman",
        "timestamp": 1661689870
    },
    {
        "content": "<p>Just trying to make sure I understand the screenshot.</p>",
        "id": 295704132,
        "sender_full_name": "Julian Berman",
        "timestamp": 1661689898
    },
    {
        "content": "<p>Yes, more of an Instagram filter than a list filter</p>",
        "id": 295704348,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661689991
    },
    {
        "content": "<p>For completeness, Leo has also since implemented a server-side filter that completely hides the names (but not types) of inaccessible variables of proposition type</p>",
        "id": 295704606,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661690095
    },
    {
        "content": "<p>Perhaps, regardless of how they're indicated / differentiated, it'd be helpful to have a hover message that explains what they are? E.g. hovering shows something like <code>\"n‚úù is an inaccessible hypothesis because its name was automatically generated by ...\"</code>? Otherwise it'd seem hard to guess why the highlighting is different, and hard even to ask about if the color was different between users.</p>",
        "id": 295705784,
        "sender_full_name": "Julian Berman",
        "timestamp": 1661690714
    },
    {
        "content": "<p>Heh, that would require some novel metadata. But at least a static message would be very reasonable, yes. Which really is true for crossed names even without highlighting.</p>",
        "id": 295706049,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661690867
    },
    {
        "content": "<p>Yeah I suppose didn't mean to mix 2 ideas in one, even just a static message I think makes it easier to muck with how they display.</p>",
        "id": 295706136,
        "sender_full_name": "Julian Berman",
        "timestamp": 1661690906
    },
    {
        "content": "<p>I strongly disagree with hiding the crosses, so it is intentional that I never implemented it.</p>",
        "id": 295706873,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1661691359
    },
    {
        "content": "<p>The crosses are an essential part of how name resolution works in Lean 4.  Users will see them in error messages and on Zulip, so they'll need to know what they signify anyhow.  Having two different ways to communicate the same information is just unnecessarily confusing.</p>",
        "id": 295707391,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1661691669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> What about the highlighting (or rather low-lighting) then? The specific displayed name doesn't matter all that much anymore anyway if it is deemphasized to such a degree as in Emacs</p>",
        "id": 295707531,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661691780
    },
    {
        "content": "<p>Personally I don't see the point of graying them out, but it is a compromise I could live with.</p>",
        "id": 295707720,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1661691873
    },
    {
        "content": "<p>I guess the good thing with HTML is that we also have plenty of other options <span aria-label=\"silence\" class=\"emoji emoji-1f910\" role=\"img\" title=\"silence\">:silence:</span> <a href=\"/user_uploads/3121/m88UOlMHoSWxoRpt3MC5sXcg/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/m88UOlMHoSWxoRpt3MC5sXcg/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/m88UOlMHoSWxoRpt3MC5sXcg/image.png\"></a></div>",
        "id": 295709365,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661692788
    },
    {
        "content": "<p>One thing to consider re: \"the names aren't important\" is that these names will appear in the types of hypotheses, so it's important to know which is which</p>",
        "id": 295709822,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661693011
    },
    {
        "content": "<p>Right, I should mention that the Emacs filter also applies to references of these names (as did the original VS Code implementation, I think). But I'm completely on board with not touching the names and willing to change that in Emacs as well.</p>",
        "id": 295710002,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661693102
    },
    {
        "content": "<p>so I agree with gabriel that we shouldn't be doing anything other than putting the dagger on and maybe styling them differently (in a way that indicates that they are different but does not make them harder to see)</p>",
        "id": 295710004,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661693103
    },
    {
        "content": "<p>PR'ed <a href=\"https://github.com/leanprover/vscode-lean4/pull/249\">https://github.com/leanprover/vscode-lean4/pull/249</a></p>",
        "id": 296083079,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661859618
    }
]