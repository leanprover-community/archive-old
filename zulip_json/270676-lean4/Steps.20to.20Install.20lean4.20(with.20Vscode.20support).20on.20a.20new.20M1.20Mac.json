[
    {
        "content": "<p>I wrote a simple instruction list to get lean4 running on a new macOS installation with VSCode: <a href=\"http://wiki.alcidesfonseca.com/blog/lean4-on-m1/\">http://wiki.alcidesfonseca.com/blog/lean4-on-m1/</a></p>\n<p>This gathers information from elsewhere (Mostly <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain</a>) and also deals with permission issues.</p>\n<p>From what I understand the issue is that GitHub actions don't support M1 for the nightly build. Is there any chance where we this M1 build crowdsourced and placing it in a central server (I wouldn't mind doing an almost-daily build and uploading it)? I wouldn't mind doing this, even if it's for my own use.</p>",
        "id": 270705385,
        "sender_full_name": "Alcides Fonseca",
        "timestamp": 1643976483
    },
    {
        "content": "<p>It is far easier to install elan without homebrew: <a href=\"#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/261663503\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain/near/261663503</a></p>",
        "id": 270713287,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643980875
    },
    {
        "content": "<p>But that will install the emulated elan, right?</p>",
        "id": 270713566,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643981013
    },
    {
        "content": "<p>Yes, but does that matter if Lean is emulated anyway?</p>",
        "id": 270713690,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643981065
    },
    {
        "content": "<p>Alcides' question is about actual M1 builds.</p>",
        "id": 270713742,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643981095
    },
    {
        "content": "<p><code>leanprover/lean4:nightly</code> should be an x86 release</p>",
        "id": 270714021,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643981225
    },
    {
        "content": "<p>I think we're talking about different things.  It's well documented that you can install the emulated lean build with the emulated elan.  But we should be setting up proper M1 builds at some point.</p>",
        "id": 270714283,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643981336
    },
    {
        "content": "<p>Ok, sure. I was only talking about the simplest way to install Lean right now.</p>",
        "id": 270714374,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643981385
    },
    {
        "content": "<p>I'd like to come back to cross compilation before the first release, I just haven't found the time yet</p>",
        "id": 270714578,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643981486
    },
    {
        "content": "<p>For linux/aarch64 it's straightforward to buy VMs and set up a custom runner if we don't want to bother with cross-compilation.  Unfortunately macos/aarch64 doesn't have any reasonable cloud hosting and even if we had an M1 build machine, the github actions runner doesn't work out of the box (apparently both M1 and the latest macos release are unsupported).  Last time I looked, cross-compilation from x86_64 to aarch64 was also uncharted territory.</p>",
        "id": 270715053,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643981726
    },
    {
        "content": "<p>It <em>seems</em> to work fine for Zig, but it wouldn't be the first time that their approach didn't quite work out for us</p>",
        "id": 270715315,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643981875
    },
    {
        "content": "<p>But I dearly hope that pure compilation &amp; linking is completely independent of the host platform for a native cross compiler like LLVM. That leaves external dependencies, which we should already have covered.</p>",
        "id": 270715622,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643982030
    },
    {
        "content": "<p>I was mostly wondering about system libraries.  I thought the x86_64 version of macos didn't ship with the arm builds.</p>",
        "id": 270715837,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643982136
    },
    {
        "content": "<p><code>libSystem.tbd</code> is all we need. I don't know if it is platform-dependent, but if so, we can copy it from an M1 machine once.</p>",
        "id": 270716055,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643982248
    },
    {
        "content": "<p>In the meantime, I added a few words to the elan readme: <a href=\"https://github.com/leanprover/elan/pull/61\">https://github.com/leanprover/elan/pull/61</a></p>",
        "id": 270716324,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643982362
    },
    {
        "content": "<p>By the way, I'm still gradually chipping away at getting a working lean4 setup on M1 with Nix, and it's looking very promising - as far as I can tell, it all Just Works except that I still have some hoops to jump through to teach the Lean VSCode plugin where to look, but I have successfully built mathlib4 locally using aarch64-darwin</p>",
        "id": 270781756,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1644013734
    },
    {
        "content": "<p>(yeah, native Nix on Darwin M1 does Just Work modulo sometimes having to reboot the machine because some part of Nix gets stuck in some way I haven't debugged - <a href=\"https://github.com/leanprover-community/mathlib4/compare/master...Smaug123:flake?expand=1\">https://github.com/leanprover-community/mathlib4/compare/master...Smaug123:flake?expand=1</a> and <code>nix run .#vscode-dev</code>, given an ambient nix-darwin setup with the appropriate link to Lean <a href=\"https://github.com/Smaug123/nix-dotfiles/blob/main/home.nix#L74\">https://github.com/Smaug123/nix-dotfiles/blob/main/home.nix#L74</a> and a <code>nix build</code> of <a href=\"https://github.com/leanprover/lean4\">https://github.com/leanprover/lean4</a> having been <code>elan toolchain link</code>ed into the right place)</p>",
        "id": 270818799,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1644056678
    },
    {
        "content": "<p>Fair note: I haven't updated the vscode-lean4 version used by <code>vscode-dev</code> in ages because I wasn't aware of any users of it. Feel free to update.</p>",
        "id": 270838847,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644082094
    },
    {
        "content": "<p>Cheers - I don't really have the free time to do anything with this stuff at the moment, but I bumped the extension for <code>vscode-dev</code> in <a href=\"https://github.com/leanprover/lean4/pull/1003/files\">https://github.com/leanprover/lean4/pull/1003/files</a> just in case</p>",
        "id": 270843610,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1644087997
    },
    {
        "content": "<p>Now that I think about it, the main reason I didn't expect users regardless of the popularity of the Nix setup in general is that in contrast to emacs-dev, it does not allow you to install any additional extensions.</p>",
        "id": 270843809,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644088231
    },
    {
        "content": "<p>Yeah, I was literally just thinking how to shoehorn vsvim in there</p>",
        "id": 270843825,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1644088278
    },
    {
        "content": "<p>The main issue is that VS Code has no concept of multi-layered configuration - <a href=\"https://github.com/microsoft/vscode/issues/27972\">https://github.com/microsoft/vscode/issues/27972</a></p>",
        "id": 270843917,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644088414
    }
]