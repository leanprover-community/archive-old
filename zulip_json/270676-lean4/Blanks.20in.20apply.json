[
    {
        "content": "<p>The following two examples work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">),</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">Q</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Exists.intro</span> <span class=\"mi\">0</span>\n  <span class=\"n\">apply</span> <span class=\"n\">And.intro</span> <span class=\"n\">_</span> <span class=\"n\">h2</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">),</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">Q</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"n\">Exists.intro</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">And.intro</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"n\">h2</span><span class=\"o\">)</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n</code></pre></div>\n<p>But this one doesn't:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">),</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">Q</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Exists.intro</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">And.intro</span> <span class=\"n\">_</span> <span class=\"n\">h2</span><span class=\"o\">)</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n</code></pre></div>\n<p>Should it?  The first example shows that <code>apply</code> can deal with a blank in the middle of an expression.  Why can't it deal with the blank in the last example, even though <code>refine</code> can?</p>",
        "id": 309359043,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1668269055
    },
    {
        "content": "<p>The tactics <code>refine &lt;term&gt;</code> and <code>exact &lt;term&gt;</code> elaborate <code>&lt;term&gt;</code> using the expected type <code>∃ (x : Nat), P x ∧ Q x</code>. <code>apply &lt;term&gt;</code> does not.</p>",
        "id": 309359571,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1668269372
    }
]