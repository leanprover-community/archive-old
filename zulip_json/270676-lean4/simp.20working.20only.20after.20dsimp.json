[
    {
        "content": "<p>In a file I'm porting from mathlib (<a href=\"https://github.com/leanprover-community/mathlib/pull/1088\">mathlib#1088</a>), a mathlib proof of the form<code>ext; simp</code> worked in lean 3, but needed to be changed to <code>ext; dsimp; simp</code> to work now.</p>\n<p>A notable thing here is that the goal after <code>ext; dsimp</code> looks exactly the same as it does with just <code>ext; simp</code>; you have to <code>set_option pp.all true</code> to see the difference (not just <code>pp.explicit</code>).</p>\n<p>Is this weird enough to warrant making an mwe for?</p>",
        "id": 316402226,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1671252560
    },
    {
        "content": "<p>In my opinion every simp call which stops working after being ported should at least be flagged with a porting note, and ideally should be investigated. <code>dsimp, simp</code> is strictly speaking not good style because of the nonterminal dsimp. Does <code>dsimp only; simp</code> work?</p>",
        "id": 316419399,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671267106
    },
    {
        "content": "<p>Kevin, once again this is all fine.</p>",
        "id": 316419818,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671267370
    },
    {
        "content": "<p>Fancy tactics can be followed by fancy tactics, and arguably <code>dsimp</code> isn't even fancy at all.</p>",
        "id": 316419846,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1671267402
    },
    {
        "content": "<p>You've said this before and then others have said \"no it's not fine\", right? I'm still unclear about this.</p>",
        "id": 316420563,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671267827
    },
    {
        "content": "<p>I recall being part of that earlier conversation, and my line is that <code>dsimp</code> is a fancy tactic, but fancy tactics followed by other fancy tactics is okay. (Although <code>dsimp, simp</code> doing something different from <code>simp</code> is probably a bug in any case.)</p>",
        "id": 316440656,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671276925
    },
    {
        "content": "<p>I was talking to Oliver about this recently. Isn't the only reason we do <code>dsimp, simp</code> that <code>dsimp</code> unfolds structure projections but <code>simp</code> doesn't? Oliver suggested making the structure projection unfolding a simp lemma (Amelia was having problems with dsimps taking a long time)</p>",
        "id": 316502718,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671305831
    }
]