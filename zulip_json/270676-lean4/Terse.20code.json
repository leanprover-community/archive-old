[
    {
        "content": "<p>How would I combine these three lines, executing in the <code>IO</code> monad, into one?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">input</span> <span class=\"bp\">&lt;-</span> <span class=\"n\">stdin.getLine</span>\n<span class=\"k\">let</span> <span class=\"n\">guessAsStr</span> <span class=\"o\">:=</span> <span class=\"n\">input.dropRightWhile</span> <span class=\"n\">Char.isWhitespace</span>\n<span class=\"k\">let</span> <span class=\"n\">guess</span><span class=\"bp\">?</span> <span class=\"o\">:=</span> <span class=\"n\">String.toNat</span><span class=\"bp\">?</span> <span class=\"n\">guessAsStr</span>\n</code></pre></div>",
        "id": 313413679,
        "sender_full_name": "Cole Shepherd",
        "timestamp": 1669946112
    },
    {
        "content": "<p>Lean has <code>do</code> notation that should work here</p>",
        "id": 313414601,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1669946710
    },
    {
        "content": "<p>These lines are actually already in a ‘do’ block. I’m trying to figure out how to eliminate the two intermediate variables</p>",
        "id": 313416176,
        "sender_full_name": "Cole Shepherd",
        "timestamp": 1669948013
    },
    {
        "content": "<p>can you provide a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ?</p>",
        "id": 313416381,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1669948182
    },
    {
        "content": "<p>Does</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">guess</span><span class=\"bp\">?</span> <span class=\"o\">:=</span> <span class=\"n\">String.toNat</span><span class=\"bp\">?</span> <span class=\"bp\">&lt;|</span> <span class=\"o\">(</span><span class=\"bp\">&lt;-</span> <span class=\"n\">stdin.getLine</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dropRightWhile</span> <span class=\"n\">Char.isWhitespace</span>\n</code></pre></div>\n<p>work?</p>",
        "id": 313417390,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669948957
    },
    {
        "content": "<p>Yeah I assume a mwe is something like this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">stdin</span> <span class=\"bp\">←</span> <span class=\"n\">getStdin</span>\n  <span class=\"k\">let</span> <span class=\"n\">guessAsStr</span> <span class=\"o\">:=</span> <span class=\"n\">String.toNat</span><span class=\"bp\">?</span> <span class=\"bp\">&lt;|</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">stdin.getLine</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dropRightWhile</span> <span class=\"n\">Char.isWhitespace</span>\n</code></pre></div>",
        "id": 313417406,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1669948991
    },
    {
        "content": "<p>I think this should have the same behavior (with a bit more ascii art)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">guessAsStr</span> <span class=\"bp\">←</span> <span class=\"n\">String.toNat</span><span class=\"bp\">?</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"o\">(</span><span class=\"n\">String.dropRightWhile</span> <span class=\"bp\">·</span> <span class=\"n\">Char.isWhitespace</span><span class=\"o\">)</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">stdin.getLine</span>\n</code></pre></div>",
        "id": 313417776,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1669949294
    },
    {
        "content": "<p>I find the <code>(← f)</code> syntax in Lean 4 so much easier to read/write/understand than \"ascii art\" (<code>&lt;$&gt;</code> and friends).</p>",
        "id": 313418939,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669950255
    }
]