[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461231\">@Jad Ghalayini</span></p>",
        "id": 293704153,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660652312
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/Y8Ip71VftdUr1RyUcySQLESR/1.jpg\">1.jpg</a> <a href=\"/user_uploads/3121/rtwRbKY9Dre73aJb5UCaCOYG/2.jpg\">2.jpg</a> <a href=\"/user_uploads/3121/WLkWrzqBw1Q1bfyd4L6SMehL/3.jpg\">3.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Y8Ip71VftdUr1RyUcySQLESR/1.jpg\" title=\"1.jpg\"><img src=\"/user_uploads/3121/Y8Ip71VftdUr1RyUcySQLESR/1.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/rtwRbKY9Dre73aJb5UCaCOYG/2.jpg\" title=\"2.jpg\"><img src=\"/user_uploads/3121/rtwRbKY9Dre73aJb5UCaCOYG/2.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/WLkWrzqBw1Q1bfyd4L6SMehL/3.jpg\" title=\"3.jpg\"><img src=\"/user_uploads/3121/WLkWrzqBw1Q1bfyd4L6SMehL/3.jpg\"></a></div>",
        "id": 293704776,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660652569
    },
    {
        "content": "<p>This is inspired by Koka. When effects are lifted, the language no longer subject to linearity of lambda calculus.</p>",
        "id": 293705079,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660652695
    },
    {
        "content": "<p><code>a -&gt; b -&gt; c</code> is the same as <code>b -&gt; a -&gt; c</code></p>",
        "id": 293705114,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660652712
    },
    {
        "content": "<p>And different effects do not need to be sequenced one after another. The trivial implementation of <code>map</code> in my language allows the compiler to parallelize it.</p>",
        "id": 293705350,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660652823
    },
    {
        "content": "<p>In fact, the language is so free about effects that I have to invent causality constraint (similar to atomic order, but as hint for compiler <strong>not to parallelize</strong>). See <em>Picture 3</em>.</p>",
        "id": 293705721,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660652978
    },
    {
        "content": "<p>When I replicate simple UNIX programs in this language, I found myself sometimes forget to add causality constraints (downside).</p>",
        "id": 293706195,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660653148
    },
    {
        "content": "<p>The upside is, the compiler knows about causality relationship of your code.</p>",
        "id": 293706372,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660653222
    },
    {
        "content": "<p>See lower half of <em>Picture 1</em>. A function that emits two entangled effects (represented as coiled together) cannot be cut in two, while a function with two not-entangled effects can.</p>",
        "id": 293706770,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660653366
    },
    {
        "content": "<p>This language is very friendly to refactoring. You can cut any algorithm in any way, and the resulting parts are still valid in this language.</p>",
        "id": 293706998,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660653467
    },
    {
        "content": "<p>Is there a particular reason you are sharing this here?</p>",
        "id": 293707202,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1660653544
    },
    {
        "content": "<p>Because I saw the work <span class=\"user-mention\" data-user-id=\"461231\">@Jad Ghalayini</span> is doing.</p>",
        "id": 293707412,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660653641
    },
    {
        "content": "<p>This thread not really belong to <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a>. How do I move it somewhere else?</p>",
        "id": 293707528,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660653701
    },
    {
        "content": "<p>I'm not sure whether this really belongs anywhere, but my closest guesses would be, in order of relevance:</p>\n<ul>\n<li>In a private message to <span class=\"user-mention silent\" data-user-id=\"461231\">Jad Ghalayini</span></li>\n<li>In <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a></li>\n<li>In <a class=\"stream\" data-stream-id=\"236449\" href=\"/#narrow/stream/236449-Program-verification\">#Program verification</a></li>\n<li>In <a class=\"stream\" data-stream-id=\"236446\" href=\"/#narrow/stream/236446-Type-theory\">#Type theory</a>, <em>maybe</em></li>\n</ul>",
        "id": 293719373,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660656879
    },
    {
        "content": "<p><del>This is how you can move your own message:</del></p>\n<p><a href=\"/user_uploads/3121/gxA-BvGYGCFDd6bZkbXU6QDy/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/gxA-BvGYGCFDd6bZkbXU6QDy/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/gxA-BvGYGCFDd6bZkbXU6QDy/image.png\"></a></div>",
        "id": 293719488,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660656926
    },
    {
        "content": "<p>Moving messages is actually a privilege reserved to people with moderator powers or higher <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> at least that button is not here for me.</p>",
        "id": 293721498,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1660657663
    },
    {
        "content": "<p>Ah you're right, non-moderators can only move their messages within a stream (by editing the title)</p>",
        "id": 293721698,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660657727
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515610\">@Locria Cyber</span> fascinating; I'd be happy to discuss this further, seens related to my work! Would you mind sending me an e-mail?</p>",
        "id": 293803700,
        "sender_full_name": "Jad Ghalayini",
        "timestamp": 1660685269
    },
    {
        "content": "<p>Probably not the best place haha</p>",
        "id": 293803717,
        "sender_full_name": "Jad Ghalayini",
        "timestamp": 1660685278
    }
]