[
    {
        "content": "<p>I am trying to get a version of <code>ToStream</code> with the stream type as a member instead of being a parameter on the class</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">Streamable</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">))</span> <span class=\"n\">where</span>\n  <span class=\"n\">toToStream</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"n\">ToStream</span> <span class=\"n\">C</span> <span class=\"n\">ρ</span> <span class=\"bp\">×</span> <span class=\"n\">Stream</span> <span class=\"n\">ρ</span> <span class=\"n\">τ</span>\n</code></pre></div>\n<p>Is this at all a reasonable approach? Or is there a more canonical way to do this?</p>\n<p>Not sure what the tradeoffs are between type members vs outParam type parameters other than universe levels. I read through Baanen's paper but didn't find a relevant design pattern, maybe I missed something.</p>",
        "id": 274745631,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1646856753
    },
    {
        "content": "<p>Also worth noting that the <code>ToStream</code> interface doesn't require that the stream type have a <code>Stream</code>, so I could just drop the dependent product, but my question I guess mostly concerns the tradeoff of outParams</p>",
        "id": 274746291,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1646857103
    }
]