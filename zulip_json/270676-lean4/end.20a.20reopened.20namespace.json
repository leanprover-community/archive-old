[
    {
        "content": "<p>Is there a way to end a reopened namespace to hide the abbreviated names? The current set of docs ends after mentioning the ability to reopen the namespace.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">MyNamespace</span>\n  <span class=\"kd\">def</span> <span class=\"n\">Num</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"kd\">end</span> <span class=\"n\">MyNamespace</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MyNamespace</span>\n<span class=\"c1\">-- do stuff with shortened names</span>\n<span class=\"kd\">end</span> <span class=\"n\">MyNamespace</span>\n<span class=\"c1\">--  ^^ invalid 'end', insufficient scopes</span>\n</code></pre></div>",
        "id": 225350749,
        "sender_full_name": "Chris B",
        "timestamp": 1612556147
    },
    {
        "content": "<p>You can do <code>section open MyNamespace ... end</code></p>",
        "id": 225350893,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612556209
    },
    {
        "content": "<p>That'll work. Much obliged.</p>",
        "id": 225351250,
        "sender_full_name": "Chris B",
        "timestamp": 1612556424
    },
    {
        "content": "<p>If it's just for a single definition or similar, you can use <code>open ... in ...</code> and it will just apply to the subsequent term I believe</p>",
        "id": 225352234,
        "sender_full_name": "Andrew Kent",
        "timestamp": 1612556966
    },
    {
        "content": "<p>from Lean's <code>src/Lean/Compiler/Util.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">atMostOnce</span> <span class=\"o\">(</span><span class=\"n\">visit</span><span class=\"o\">)</span> <span class=\"k\">in</span>\n<span class=\"sd\">/-- Return true iff the free variable with id `x` occurs at most once in `e` -/</span>\n<span class=\"kd\">@[export lean_at_most_once]</span>\n<span class=\"kd\">def</span> <span class=\"n\">atMostOnce</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Name</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"o\">{</span><span class=\"n\">result</span> <span class=\"o\">:=</span> <span class=\"n\">result</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"n\">visit</span> <span class=\"n\">x</span> <span class=\"n\">e</span> <span class=\"o\">{</span><span class=\"n\">found</span> <span class=\"o\">:=</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">result</span> <span class=\"o\">:=</span> <span class=\"n\">true</span><span class=\"o\">}</span>\n  <span class=\"n\">result</span>\n</code></pre></div>",
        "id": 225352445,
        "sender_full_name": "Andrew Kent",
        "timestamp": 1612557068
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278501\">@Andrew Kent</span> </p>\n<p>Good eye, that seems to work even for commands:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">MyNamespace</span>\n  <span class=\"kd\">def</span> <span class=\"n\">Num</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"kd\">end</span> <span class=\"n\">MyNamespace</span>\n\n<span class=\"c1\">-- works</span>\n<span class=\"kn\">open</span> <span class=\"n\">MyNamespace</span> <span class=\"k\">in</span> <span class=\"k\">#print</span> <span class=\"n\">Num</span>\n\n<span class=\"c1\">-- doesn't work; closed again</span>\n<span class=\"k\">#print</span> <span class=\"n\">Num</span>\n</code></pre></div>",
        "id": 225353614,
        "sender_full_name": "Chris B",
        "timestamp": 1612557702
    }
]