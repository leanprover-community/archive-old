[
    {
        "content": "<p>I noticed that <code>(Int × Int) × (Int × Int)</code> evaluates to the same time as <code>(Int × Int) × Int × Int</code>. Can see some good mathematical reasons for doing that, but this leads to the following rather intuitive behavior:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">l3</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Prod</span> <span class=\"o\">(</span><span class=\"n\">Prod</span> <span class=\"n\">Int</span> <span class=\"n\">Int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Prod</span> <span class=\"n\">Int</span> <span class=\"n\">Int</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"o\">[((</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">))]</span>\n<span class=\"c1\">-- Expected</span>\n<span class=\"n\">l3.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">((</span><span class=\"n\">x1</span><span class=\"o\">,</span> <span class=\"n\">x2</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">x3</span><span class=\"o\">,</span> <span class=\"n\">x4</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"c1\">-- Not expected</span>\n<span class=\"n\">l3.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">((</span><span class=\"n\">x1</span><span class=\"o\">,</span> <span class=\"n\">x2</span><span class=\"o\">),</span> <span class=\"n\">x3</span><span class=\"o\">,</span> <span class=\"n\">x4</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 265202310,
        "sender_full_name": "Tim Hunter",
        "timestamp": 1639681020
    }
]