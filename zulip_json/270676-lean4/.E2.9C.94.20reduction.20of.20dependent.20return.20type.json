[
    {
        "content": "<p>Thank you very much, this is all very informative. I managed to get it to work, fortunately the real type doesn't have any other instance of nesting. (It did come with a needlessly mutual group and 20 motives initially, which scared me quite a bit.) I'm glad you anticipated the <code>Prod</code> version of <code>T.tuple</code> as well.</p>\n<p>I would still like to get rid of the integer cast is possible, which is not trivial since apparently typeclass resolution reduces less eagerly (?):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n  <span class=\"n\">OfNat</span> <span class=\"o\">(</span><span class=\"n\">T.eval</span> <span class=\"o\">(</span><span class=\"n\">T.int</span> <span class=\"mi\">32</span><span class=\"o\">))</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>I could hack my way around it by defining such an instance, but I wonder if there's a cleaner way to do it?</p>",
        "id": 276059420,
        "sender_full_name": "Sébastien Michelland",
        "timestamp": 1647873413
    },
    {
        "content": "<p>Typeclass resolution will only unfold definitions marked as <code>@[reducible]</code>. The motivation is performance. <br>\nSo, when trying to synthesize a value for the instance <code>OfNat (T.eval (T.int 32)) 0</code>, it will not reduce it <code>OfNat Int 0</code>.<br>\nI updated the example above with the <code>@[reducible]</code> annotations and removed the <code>( ... : Int)</code> annotations.</p>",
        "id": 276060395,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1647873806
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/blob/master/tests/lean/run/nestedInductiveRecType.lean#L27-L37\">https://github.com/leanprover/lean4/blob/master/tests/lean/run/nestedInductiveRecType.lean#L27-L37</a></p>",
        "id": 276060448,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1647873828
    },
    {
        "content": "<p>Aha so that's what <code>@[reducible]</code> does. Excellent. Everything's working as expected now, thanks again for your time.</p>",
        "id": 276062253,
        "sender_full_name": "Sébastien Michelland",
        "timestamp": 1647874446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"484617\">Sébastien Michelland</span> has marked this topic as resolved.</p>",
        "id": 276062275,
        "sender_full_name": "Notification Bot",
        "timestamp": 1647874454
    }
]