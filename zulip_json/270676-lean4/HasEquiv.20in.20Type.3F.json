[
    {
        "content": "<p>Is there a reason that <code>HasEquiv</code> in the standard library uses <code>Prop</code> rather than <code>Sort _</code>?  I'd like to be able to use <code>≈</code> with relations that live in <code>Type</code>...</p>",
        "id": 229925086,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615496519
    },
    {
        "content": "<p>Do we have universe out-params? That seems like a prerequisite for this to work</p>",
        "id": 229964754,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615516066
    },
    {
        "content": "<p>I think it already works.  That is to say, I've had no trouble with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">HasArr</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"n\">u1</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">Arr</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Sort</span> <span class=\"n\">u2</span>\n\n<span class=\"kd\">infix</span><span class=\"o\">:</span><span class=\"mi\">70</span> <span class=\"s2\">\" ~&gt; \"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">HasArr.Arr</span>\n</code></pre></div>",
        "id": 230036505,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615559038
    },
    {
        "content": "<p>Pushed this change: <a href=\"https://github.com/leanprover/lean4/commit/c54a7c8ccc75e0a664560b53d26987b0a7bb861b\">https://github.com/leanprover/lean4/commit/c54a7c8ccc75e0a664560b53d26987b0a7bb861b</a></p>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> We have modified the typeclass resolution procedure a few weeks ago. All universes are out-param by default now like in Lean 3.</p>",
        "id": 230168147,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1615648002
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 230390020,
        "sender_full_name": "Jason Gross",
        "timestamp": 1615830509
    }
]