[
    {
        "content": "<p>I have a case where the coercion <code>X</code> to <code>Option X</code> stops working after adding another <code>Coe</code> instance.<br>\nThis works just as expected:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">A</span>\n  <span class=\"bp\">|</span> <span class=\"n\">yes</span>\n  <span class=\"bp\">|</span> <span class=\"n\">no</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">A.yes</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">Unit</span>\n  <span class=\"bp\">|</span> <span class=\"n\">yes</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Unit.unit</span> <span class=\"c1\">-- Coerces to `Option Unit`</span>\n  <span class=\"bp\">|</span> <span class=\"n\">no</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>But adding this <code>Numbered</code> type with a coercion from <code>Numbered X</code> to <code>X</code> messes up the <code>Option</code>-coercion in <code>A.yes?</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Numbered</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">obj</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Coe</span> <span class=\"o\">(</span><span class=\"n\">Numbered</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">Numbered.obj</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">A</span>\n  <span class=\"bp\">|</span> <span class=\"n\">yes</span>\n  <span class=\"bp\">|</span> <span class=\"n\">no</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">A.yes</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"n\">Unit</span>\n  <span class=\"bp\">|</span> <span class=\"n\">yes</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Unit.unit</span> <span class=\"c1\">-- Error message below</span>\n  <span class=\"bp\">|</span> <span class=\"n\">no</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">type mismatch</span>\n<span class=\"cm\">  ()</span>\n<span class=\"cm\">has type</span>\n<span class=\"cm\">  Unit : Type</span>\n<span class=\"cm\">but is expected to have type</span>\n<span class=\"cm\">  Option Unit : Type</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Is there a way to fix this?</p>",
        "id": 279679860,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1650547642
    }
]