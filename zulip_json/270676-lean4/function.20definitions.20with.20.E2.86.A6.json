[
    {
        "content": "<p>I notice that recently <code>↦</code> was added to allow use in anonymous functions instead of <code>=&gt;</code>. However, it is not possible to use it when functions are defined with matches. The following are accepted:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">x</span>\n<span class=\"kd\">def</span> <span class=\"n\">f'</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span>\n<span class=\"kd\">def</span> <span class=\"n\">g'</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>but the following is flagged as invalid</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>Is this a deliberate decision, or are there plans to extend the use of <code>↦</code>?</p>",
        "id": 320365101,
        "sender_full_name": "Paul  Chisholm",
        "timestamp": 1673315477
    },
    {
        "content": "<p>I guess it's deliberate. Relevant discussion regarding the introduction of <code>↦</code>: <a href=\"#narrow/stream/287929-mathlib4/topic/.3D.3E.20notation\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.3D.3E.20notation</a></p>",
        "id": 320393305,
        "sender_full_name": "Horațiu Cheval",
        "timestamp": 1673337264
    }
]