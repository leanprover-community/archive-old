[
    {
        "content": "<p>Consider the following inductive, which works fine:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Value</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">data</span><span class=\"o\">:</span> <span class=\"n\">Float</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">prev</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">Value</span> <span class=\"bp\">×</span> <span class=\"n\">Value</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">op</span><span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">Op</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">none</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">label</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"s2\">\"\"</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">grad</span> <span class=\"o\">:</span> <span class=\"n\">Float</span><span class=\"o\">)</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n</code></pre></div>\n<p>When I add a default value to <code>prev</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Value</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">data</span><span class=\"o\">:</span> <span class=\"n\">Float</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">prev</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">Value</span> <span class=\"bp\">×</span> <span class=\"n\">Value</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">none</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">op</span><span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">Op</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">none</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">label</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"s2\">\"\"</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">grad</span> <span class=\"o\">:</span> <span class=\"n\">Float</span><span class=\"o\">)</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n</code></pre></div>\n<p>I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">optParam</span> <span class=\"n\">_nested.Option_1</span> <span class=\"n\">none</span>\n<span class=\"n\">argument</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">Option</span> <span class=\"n\">_nested.Prod_2</span>\n<span class=\"n\">but</span> <span class=\"n\">function</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">_nested.Option_1</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n</code></pre></div>\n<p>I can't make much sense out of it. Any ideas?</p>",
        "id": 293955794,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1660762227
    }
]