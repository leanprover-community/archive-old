[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n  <span class=\"n\">bar</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n  <span class=\"n\">bar</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n  <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">h</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"c1\">-- bar a b h := h -- error `'a' is not a field of structure 'Foo'`</span>\n  <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">h</span> <span class=\"c1\">-- works (but is longer)</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>Is this the sort of thing that people are interested in hearing? The asymmetry just struck me as odd.</p>",
        "id": 238815465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1621019624
    },
    {
        "content": "<p>This could be considered as an extension of structure field syntax. I think it would be nice to support this kind of thing almost everywhere, for example in binders:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span>\n<span class=\"c1\">-- is equivalent to</span>\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span>\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">A</span>\n</code></pre></div>",
        "id": 238816142,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621019924
    },
    {
        "content": "<p>By the way, sometimes I am forced to use the <code>{ }</code> syntax because I am using <code>_inst_ with</code>.</p>",
        "id": 238820183,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1621021810
    },
    {
        "content": "<p>I suppose <code>..s</code> notation could work with <code>where</code></p>",
        "id": 238820588,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621022017
    }
]