[
    {
        "content": "<p>When trying to derive Ord for a structure with a type parameter like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Fixed</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"o\">(</span><span class=\"n\">val</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">)</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">Ord</span>\n</code></pre></div>\n<p>I get the rather confusing error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"sc\">'a'</span>\n</code></pre></div>\n<p>at Ord...now I don't know whether deriving this instance is supposed to work or not but either way it would be nicer if we could have a better error message here.</p>",
        "id": 257988490,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1634542597
    },
    {
        "content": "<p>my guess would be, that this generated expression is not correct because you have a type parameter:<br>\n<a href=\"https://github.com/leanprover/lean4/blob/e843fb7ca5b596945820b76eaaa51754e8acfe47/src/Lean/Elab/Deriving/Ord.lean#L59\">https://github.com/leanprover/lean4/blob/e843fb7ca5b596945820b76eaaa51754e8acfe47/src/Lean/Elab/Deriving/Ord.lean#L59</a></p>\n<p>It's been a while since I wrote the code. I'm happy to look into it, but it may be a few days until I get around to it.</p>",
        "id": 257989647,
        "sender_full_name": "Daniel Fabian",
        "timestamp": 1634543311
    },
    {
        "content": "<p>please do open a lean github bug and tag me on it.</p>",
        "id": 257989740,
        "sender_full_name": "Daniel Fabian",
        "timestamp": 1634543392
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"235513\">@Daniel Fabian</span> I think it's just the <code>reverse</code> in <a href=\"https://github.com/leanprover/lean4/blob/e843fb7ca5b596945820b76eaaa51754e8acfe47/src/Lean/Elab/Deriving/Ord.lean#L54-L55\">https://github.com/leanprover/lean4/blob/e843fb7ca5b596945820b76eaaa51754e8acfe47/src/Lean/Elab/Deriving/Ord.lean#L54-L55</a>, which do seem out of place given you're using an array and not a list. If you don't see a reason for them either, I will remove them.</p>",
        "id": 257990111,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634543617
    },
    {
        "content": "<p>so are you proposing, this never worked for inductives with more than argument?</p>",
        "id": 257991188,
        "sender_full_name": "Daniel Fabian",
        "timestamp": 1634544215
    },
    {
        "content": "<p>Yes :)</p>",
        "id": 257991217,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634544241
    },
    {
        "content": "<p>ok... looks weird to me, because we even did things like skip over proof irrelevant arguments and all. But by all means, give it a go. FWIW it sure does look out of place. What's confusing to me is simply that we didn't see it in our tests.</p>",
        "id": 257991437,
        "sender_full_name": "Daniel Fabian",
        "timestamp": 1634544362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"235513\">Daniel Fabian</span> <a href=\"#narrow/stream/270676-lean4/topic/Weird.20deriving.20error.20message/near/257989740\">said</a>:</p>\n<blockquote>\n<p>please do open a lean github bug and tag me on it.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover/lean4/issues/732\">https://github.com/leanprover/lean4/issues/732</a> there you go</p>",
        "id": 257991553,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1634544429
    },
    {
        "content": "<p>pushed</p>",
        "id": 257991705,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634544511
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> has marked this topic as resolved.</p>",
        "id": 257991970,
        "sender_full_name": "Notification Bot",
        "timestamp": 1634544678
    }
]