[
    {
        "content": "<p>Stupid question, what does \"congr\" in congrArg stand for? I've been calling it \"congrats Arg!\" but I don't think that's right <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span></p>",
        "id": 255840598,
        "sender_full_name": "Steven Ulin",
        "timestamp": 1633149434
    },
    {
        "content": "<p>\"congruence\"</p>",
        "id": 255840679,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633149517
    },
    {
        "content": "<p>thanks!</p>",
        "id": 255840689,
        "sender_full_name": "Steven Ulin",
        "timestamp": 1633149528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"429425\">Steven Ulin</span> has marked this topic as resolved.</p>",
        "id": 255840693,
        "sender_full_name": "Notification Bot",
        "timestamp": 1633149532
    },
    {
        "content": "<p>How do people remember whether <code>congrArg</code> is the one where the arguments are the same or whether the functions are the same? Confession: I just try a random one and if it doesn't work i try the other one (<code>congrFun</code>)</p>",
        "id": 255863138,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633173197
    },
    {
        "content": "<p>I \"just remember it\" but, suppose instead of two things (function and argument) we had n &gt; 2 of them. You wouldn't have a function which changes n-1 of them at once, right?</p>",
        "id": 255863480,
        "sender_full_name": "Reid Barton",
        "timestamp": 1633173575
    },
    {
        "content": "<p>Oh nice</p>",
        "id": 255865757,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633175819
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/congr_arg\">docs#congr_arg</a></p>",
        "id": 255865798,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633175855
    },
    {
        "content": "<p>It works!</p>",
        "id": 255865853,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633175884
    }
]