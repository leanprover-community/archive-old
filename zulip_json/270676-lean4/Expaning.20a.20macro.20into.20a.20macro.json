[
    {
        "content": "<p>I'm trying to figure out how to define a macro that expands into a macro. Consider, for example, </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span> <span class=\"s2\">\"foo\"</span> <span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">str</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">macro</span> <span class=\"bp\">$</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>I would like the command <code>foo \"test\"</code> to give a macro <code>test</code> that expands to <code>0 : Nat</code>. I can't seem to figure out how to accomplish this. What am I missing here?</p>",
        "id": 290829036,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1658789390
    },
    {
        "content": "<p>You are doing it right. You just need to tell Lean that <code>t</code> is a string literal.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span> <span class=\"s2\">\"foo\"</span> <span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">str</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">macro</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">str</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">))</span>\n<span class=\"n\">foo</span> <span class=\"s2\">\"test\"</span>\n<span class=\"k\">#eval</span> <span class=\"n\">test</span> <span class=\"c1\">-- 0</span>\n</code></pre></div>",
        "id": 290837458,
        "sender_full_name": "Mac",
        "timestamp": 1658796328
    },
    {
        "content": "<p>Ah! Thank you!</p>",
        "id": 290837980,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1658796927
    }
]