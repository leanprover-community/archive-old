[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">Foo.mk</span>\n<span class=\"c1\">-- Foo.mk {n : Nat} : Foo n</span>\n</code></pre></div>\n<p>The <code>n</code> parameter of <code>Foo</code> is an implicit argument in the <code>mk</code> constructor. Is there a way to say that I want it to be explicit? Other than making <code>n</code> an index of <code>Foo</code> and binding it explicitly in <code>mk</code>. In Lean 3 there was the <code>[]</code> syntax </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">[]</span> <span class=\"o\">:</span> <span class=\"n\">foo</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">foo.mk</span>\n<span class=\"c1\">-- foo.mk : Π (n : ℕ), foo n</span>\n</code></pre></div>",
        "id": 318972769,
        "sender_full_name": "Horațiu Cheval",
        "timestamp": 1672657979
    },
    {
        "content": "<blockquote>\n<p>Other than making n an index of Foo and binding it explicitly in mk.</p>\n</blockquote>\n<p>There is nothing wrong with that, indices are automatically promoted to parameters where possible</p>",
        "id": 318994432,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1672666812
    },
    {
        "content": "<p>Right, though I still prefer to write parameters before the colon, because I like how it's clear from the signature that they won't change throughout the definition, and you don't need to look at the constructors to learn that. Maybe I'm still more accustomed to Lean 3 though.</p>",
        "id": 319015238,
        "sender_full_name": "Horațiu Cheval",
        "timestamp": 1672674002
    }
]