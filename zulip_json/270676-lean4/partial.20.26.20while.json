[
    {
        "content": "<p>The following code passes typecheck.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">while</span> <span class=\"n\">true</span> <span class=\"k\">do</span>\n    <span class=\"n\">IO.println</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">IO.println</span> <span class=\"s2\">\"\"</span>\n  <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 316380125,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1671233826
    },
    {
        "content": "<p>why isn't <code>a</code> marked <code>partial</code>?</p>",
        "id": 316380152,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1671233854
    },
    {
        "content": "<p>The <code>while</code> loop uses <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Loop.forIn#doc\">docs4#Lean.Loop.forIn</a> under the hood, which is also marked with <code>partial</code>.</p>",
        "id": 316381522,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1671234696
    }
]