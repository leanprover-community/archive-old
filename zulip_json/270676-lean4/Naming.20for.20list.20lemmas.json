[
    {
        "content": "<p>Hey, just lookin for some thoughts about what to call various lemmas :)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kd\">theorem</span> <span class=\"n\">foldl_cons</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acc</span><span class=\"o\">)</span>\n    <span class=\"o\">:</span> <span class=\"n\">L.foldl</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">acc</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span> <span class=\"o\">::</span> <span class=\"n\">acc</span><span class=\"o\">)</span> <span class=\"n\">acc</span> <span class=\"bp\">=</span> <span class=\"n\">L.reverseAux</span> <span class=\"n\">acc</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"kd\">theorem</span> <span class=\"n\">foldl_append</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acc</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n    <span class=\"o\">:</span> <span class=\"n\">L.foldl</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">acc</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">acc</span> <span class=\"bp\">++</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"bp\">=</span> <span class=\"n\">L</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"kd\">theorem</span> <span class=\"n\">map_eq_foldl</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acc</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n    <span class=\"o\">:</span> <span class=\"n\">L.map</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">L.foldl</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">acc</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">acc</span> <span class=\"bp\">++</span> <span class=\"o\">[</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"kd\">theorem</span> <span class=\"n\">foldl_of_append</span> <span class=\"o\">(</span><span class=\"n\">L₁</span> <span class=\"n\">L₂</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acc</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n    <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">L₁</span> <span class=\"bp\">++</span> <span class=\"n\">L₂</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">foldl</span> <span class=\"n\">f</span> <span class=\"n\">acc</span> <span class=\"bp\">=</span> <span class=\"n\">L₂.foldl</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">L₁.foldl</span> <span class=\"n\">f</span> <span class=\"n\">acc</span><span class=\"o\">)</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>There's a bunch of these types of lemmas I'm writing, not really sure how to organize them</p>",
        "id": 295102232,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1661365422
    }
]