[
    {
        "content": "<p>Has anyone setup their Lean4 with Doom Emacs?<br>\nI would highly appreciate a guide to setting it up.</p>",
        "id": 224676882,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612142632
    },
    {
        "content": "<p>I haven't had time to play with lean4 in a few weeks, so things may (and probably have) changed. In any case, this worked for me </p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">dash</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">flycheck</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">dash-functional</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">f</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">s</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">lsp-mode</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">lean4-mode</span> <span class=\"nb\">:recipe</span>\n  <span class=\"p\">(</span><span class=\"nb\">:host</span> <span class=\"nv\">github</span>\n   <span class=\"nb\">:repo</span> <span class=\"s\">\"leanprover/lean4\"</span>\n   <span class=\"nb\">:files</span> <span class=\"p\">(</span><span class=\"s\">\"lean4-mode/*.el\"</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>located in <code>packages.el</code></p>",
        "id": 224678160,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612144446
    },
    {
        "content": "<p>Thanks a lot for the tip <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> - though I can't seem to get the \"proof goals\" window to pop up.</p>",
        "id": 234168724,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618237803
    },
    {
        "content": "<p>Concretely, when placing my cursor on the <code>intro h</code> line here</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ex1</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inl</span> <span class=\"n\">h1</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Or.inr</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n  <span class=\"bp\">|</span> <span class=\"n\">inr</span> <span class=\"n\">h2</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span>\n    <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>I get the following error to show up in my breadcrumb bar:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span> <span class=\"k\">in</span> <span class=\"n\">post</span><span class=\"bp\">-</span><span class=\"n\">command</span><span class=\"bp\">-</span><span class=\"n\">hook</span> <span class=\"o\">(</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">info</span><span class=\"bp\">-</span><span class=\"n\">buffer</span><span class=\"bp\">-</span><span class=\"n\">redisplay</span><span class=\"o\">):</span>\n<span class=\"o\">(</span><span class=\"n\">wrong</span><span class=\"bp\">-</span><span class=\"n\">type</span><span class=\"bp\">-</span><span class=\"n\">argument</span> <span class=\"n\">listp</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">4</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span>\n<span class=\"o\">(</span><span class=\"s2\">\"source\"</span> <span class=\"s2\">\"Lean 4 server\"</span> <span class=\"s2\">\"severity\"</span> <span class=\"mi\">3</span> <span class=\"s2\">\"range\"</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">2</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span>\n<span class=\"o\">(</span><span class=\"s2\">\"start\"</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">2</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span> <span class=\"o\">(</span><span class=\"s2\">\"line\"</span> <span class=\"mi\">0</span> <span class=\"s2\">\"character\"</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n <span class=\"s2\">\"end\"</span> <span class=\"bp\">#</span><span class=\"n\">s</span><span class=\"o\">(</span><span class=\"n\">hash</span><span class=\"bp\">-</span><span class=\"n\">table</span> <span class=\"n\">size</span> <span class=\"mi\">2</span> <span class=\"n\">test</span> <span class=\"n\">equal</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">size</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">5</span> <span class=\"n\">rehash</span><span class=\"bp\">-</span><span class=\"n\">threshold</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">8125</span> <span class=\"n\">data</span> <span class=\"o\">(</span><span class=\"s2\">\"line\"</span> <span class=\"mi\">0</span> <span class=\"s2\">\"character\"</span> <span class=\"mi\">6</span><span class=\"o\">))))</span>\n <span class=\"s2\">\"message\"</span> <span class=\"s2\">\"id : ?m.2 → ?m.2\"</span><span class=\"o\">)))</span>\n</code></pre></div>",
        "id": 234173306,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618239360
    },
    {
        "content": "<p>Sorry, it has now been even longer since I played with lean4, so I can't help with this. BTW as <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> mentioned, the last line of the above code might be sufficient.</p>",
        "id": 234173365,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618239369
    },
    {
        "content": "<p>Oh, I just saw you were redirecting me here <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> , thanks a lot <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> .<br>\nI think If I can get the goals to show, I will be a very happy camper and most of my needs will be met for now.</p>",
        "id": 234177548,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618240568
    },
    {
        "content": "<p>Last time I tried, the \"next error\" buffer was working with C-c C-n, as usual. Does lean4+emacs have a goal window now?</p>",
        "id": 234177862,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240672
    },
    {
        "content": "<p>My goal window opens up, but doesn't show anything and I get the error I posted above.</p>",
        "id": 234178159,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618240721
    },
    {
        "content": "<p>Do you have both lean3-mode and lean4-mode installed? If so I think you need to manually activate lean4-mode</p>",
        "id": 234178444,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240821
    },
    {
        "content": "<p>Assuming lean3 is the default</p>",
        "id": 234178491,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240836
    },
    {
        "content": "<p>(And again, I'm probably completely wrong since I've been out of the lean4 loop for a while)</p>",
        "id": 234178642,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618240903
    },
    {
        "content": "<p>yes, I think I deactivated lean3 - lemme double check.</p>",
        "id": 234179211,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618241104
    },
    {
        "content": "<p>This might be a version issue with lsp-mode, they changed data structures at some point. I can take a closer look later.</p>",
        "id": 234180363,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618241565
    },
    {
        "content": "<p>Thanks a bunch <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> , I appreciate it.</p>",
        "id": 234181919,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618242092
    },
    {
        "content": "<p>I've upgraded to the latest Doom Emacs</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">New</span> <span class=\"n\">revision</span><span class=\"o\">:</span> <span class=\"n\">ce65645fb8</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"n\">weeks</span> <span class=\"n\">ago</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span>\n    <span class=\"bp\">✓</span> <span class=\"o\">(</span><span class=\"mi\">91</span><span class=\"bp\">/</span><span class=\"mi\">172</span><span class=\"o\">)</span> <span class=\"n\">lsp</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"n\">updated</span> <span class=\"o\">(</span><span class=\"n\">db385a4</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">eda51c2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>and it seems to still work</p>",
        "id": 234232233,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618261890
    },
    {
        "content": "<p>K, will try.</p>",
        "id": 234233897,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618262750
    },
    {
        "content": "<p>Thanks for the follow up!</p>",
        "id": 234233957,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618262766
    },
    {
        "content": "<p>How should lean4 be install for Doom Emacs to pick it up?</p>",
        "id": 234236616,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264330
    },
    {
        "content": "<p>Oh, right, at the end of <a href=\"https://leanprover.github.io/lean4/doc/make/index.html\">https://leanprover.github.io/lean4/doc/make/index.html</a></p>",
        "id": 234236886,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264503
    },
    {
        "content": "<p>will try</p>",
        "id": 234236891,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264505
    },
    {
        "content": "<p>It also works with <code>emacs-dev</code>, which is how I use it. It will just ignore the lean4-mode coming with that, so you need the <code>package!</code> decl instead.</p>",
        "id": 234237051,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618264594
    },
    {
        "content": "<p>Not gonna lie, but I struggle a lot with the nix setup.</p>",
        "id": 234237204,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264689
    },
    {
        "content": "<p>(I'm assuming you are referencing the <code>emacs-dev</code> as an extension of the <code>nix-shell</code>. For some reason it doesn't play nice with my <code>fish</code> shell and that complicates it a bit.</p>",
        "id": 234237253,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264741
    },
    {
        "content": "<p>OK I just saw your tweet about the course with Nix + CI combo and that does sound neat.</p>",
        "id": 234237500,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618264897
    },
    {
        "content": "<p>Note that we don't actually advertise using Nix for the course :) <a href=\"https://github.com/IPDSnelting/tba-2021#tba-2021\">https://github.com/IPDSnelting/tba-2021#tba-2021</a></p>",
        "id": 234238756,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1618265652
    },
    {
        "content": "<p>Oh neat.</p>",
        "id": 234239630,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618266222
    },
    {
        "content": "<p>So does this mean that I have to download a new <code>nix build</code> for every project that I want to use Lean4 in ?</p>",
        "id": 234239647,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618266239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Emacs works with the nix build now! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 234242674,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618268313
    },
    {
        "content": "<p>Thanks a lot.</p>",
        "id": 234242678,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618268316
    },
    {
        "content": "<p>I setup Lean3 with the mathlib stuff and Lean4 with emacs so I guess this works for me well enough.</p>",
        "id": 234242990,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1618268509
    },
    {
        "content": "<p>It seems that the (very brief) doom emacs instructions from the lean4-mode readme no longer works. I made a pull request with a fix: <a href=\"https://github.com/leanprover/lean4-mode/pull/26\">https://github.com/leanprover/lean4-mode/pull/26</a></p>",
        "id": 319876175,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1673045172
    }
]