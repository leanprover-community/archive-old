[
    {
        "content": "<p>Hi, I would like to define a monad like <code>MetaM</code>, but with the LocalContext in the (modifiable) state instead of in the (read-only) context.<br>\nIn essence, I would like to be able to write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">fvar</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">withLocalDecl</span> <span class=\"n\">id</span> <span class=\"n\">b</span> <span class=\"n\">type</span>\n<span class=\"bp\">...</span> <span class=\"n\">fvar</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>instead</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">withLocalDecl</span> <span class=\"n\">id</span> <span class=\"n\">b</span> <span class=\"n\">type</span> <span class=\"k\">fun</span> <span class=\"n\">fvar</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"bp\">...</span> <span class=\"n\">fvar</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>Is there a way to do this so that I can still use the functions defined on <code>MetaM</code> in the new monad?</p>",
        "id": 268865605,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1642782008
    },
    {
        "content": "<p>The usual way to make functions of type <code>M a</code> available in <code>N a</code> is to define a <code>MonadLift M N</code> instance. Since your monad has <em>more</em> capabilities than <code>MetaM</code> (can read/write the localctx), it should be possible to define <code>MonadLift MetaM ..</code>. Then <code>do</code> notation can usually auto-lift calls in <code>MetaM</code> to the target.</p>",
        "id": 268913981,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1642805357
    },
    {
        "content": "<p>Ah, thanks, I will try that.</p>",
        "id": 268952485,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1642850204
    }
]