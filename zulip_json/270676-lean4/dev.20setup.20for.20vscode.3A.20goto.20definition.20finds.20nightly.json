[
    {
        "content": "<p>I've been trying to follow the instructions at <a href=\"https://leanprover.github.io/lean4/doc/dev/index.html#dev-setup-using-elan\">https://leanprover.github.io/lean4/doc/dev/index.html#dev-setup-using-elan</a> for setting up goto definition to lead back into the <code>src</code> directory of lean4, without luck. After following the instructions, <code>lean --version</code> or <code>lean +lean4 --version</code> shows the master branch as expected, but the vscode seems to be running the nightly version instead of stage1 and go to definition takes me into the nightly sources in elan instead of <code>src</code>. I got it to work by setting the \"Lean4: Toolchain Path\" to <code>/home/mario/Documents/lean/lean4/build/release/stage1</code> (the full path seems to be required), but I can't help but think there's something wrong with the setup.</p>",
        "id": 291263357,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1659049016
    },
    {
        "content": "<p>Actually I don't think that's right either. Using <code>stage1</code> causes the definition links to not get updated when I edit the file, and <code>stage0</code> has updated link locations but strangely the definitions themselves will not update. (For example, if I add a field to a structure then in a downstream file <code>#print Foo.oldField</code> will have the new span of the field but <code>#print Foo.newField</code> will still be an error.)</p>",
        "id": 291264056,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1659049392
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/dev.20setup.20for.20vscode.3A.20goto.20definition.20finds.20nightly/near/291264056\">said</a>:</p>\n<blockquote>\n<p><code>stage0</code> has updated link locations but strangely the definitions themselves will not update. </p>\n</blockquote>\n<p>Yep, this is the expected behavior afaik. You have to rebuild Lean after making modifications for them to be recognized by  the Lean 4 server / VSCode. At least that is my experience.</p>",
        "id": 291280941,
        "sender_full_name": "Mac",
        "timestamp": 1659066722
    },
    {
        "content": "<p>If <code>lean</code> uses the correct version but VS Code in the same directory does not, that sounds like a bug in vscode-lean4</p>",
        "id": 291293871,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1659082285
    }
]