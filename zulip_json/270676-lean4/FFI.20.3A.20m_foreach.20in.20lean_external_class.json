[
    {
        "content": "<p>What's  m_foreach in <a href=\"https://github.com/leanprover/lean4/blob/master/tests/compiler/foreign/myfuns.cpp\">sample code</a> supposed to be? Only two clues is at <a href=\"https://github.com/leanprover/lean4/blob/eb170d1f43e8d30d0149aef0ede2d7c31d5f2a08/src/runtime/object.cpp#L502\">here</a> and <a href=\"https://github.com/leanprover/lean4/blob/eb170d1f43e8d30d0149aef0ede2d7c31d5f2a08/src/runtime/object.cpp#L574\">here</a>.</p>",
        "id": 285535657,
        "sender_full_name": "He-chien Tsai",
        "timestamp": 1654782032
    },
    {
        "content": "<p>I don't see a use of <code>m_foreach</code> in the sample code you linked. However, if you are just generally curious, <code>m_foreach</code> is a field of <code>lean_external_class</code> that is used to iterate over the nested lean objects in an Lean external object. For example, if the struct you are wrapping has fields that are Lean objects (i.e., of type <code>lean_object</code>) you would provide a <code>foreach</code> method that  invokes the passed  function (i.e., the <code>b_lean_obj_arg</code>  on the each of those fields).</p>",
        "id": 285558961,
        "sender_full_name": "Mac",
        "timestamp": 1654791370
    },
    {
        "content": "<p>I mess up variables in original post, edited. In sample code, lean_register_external_class assigns S_finalize and S_foreach to m_finalize and m_foreach at <a href=\"https://github.com/leanprover/lean4/blob/eb170d1f43e8d30d0149aef0ede2d7c31d5f2a08/src/runtime/object.cpp#L2178\">here</a>, but the only two lines which call m_foreach doesn't explicitly show what's m_foreach supposed to do, sample code literally do nothing. What's S_foreach in sample code supposed to do if it has nested objects?</p>",
        "id": 285622650,
        "sender_full_name": "He-chien Tsai",
        "timestamp": 1654827958
    }
]