[
    {
        "content": "<p>Hello! I'm trying to spawn a <code>python</code> child process and let the user use Python's REPL via my binary.</p>\n<p>I'm doing this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">List.pop</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">l</span> <span class=\"bp\">≠</span> <span class=\"o\">[]</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">Array</span> <span class=\"n\">α</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n\">as</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">as</span><span class=\"o\">⟩)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">spawn</span> <span class=\"o\">(</span><span class=\"n\">cmd</span> <span class=\"o\">:</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"n\">cmd.splitOn</span> <span class=\"s2\">\" \"</span>\n  <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">cmd</span> <span class=\"bp\">≠</span> <span class=\"o\">[]</span> <span class=\"k\">then</span>\n    <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">cmd</span><span class=\"o\">,</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">cmd.pop</span> <span class=\"n\">h</span>\n    <span class=\"k\">let</span> <span class=\"n\">_</span> <span class=\"bp\">←</span> <span class=\"n\">IO.Process.spawn</span> <span class=\"o\">{</span>\n      <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"n\">cmd</span>\n      <span class=\"n\">args</span> <span class=\"o\">:=</span> <span class=\"n\">args</span>\n    <span class=\"o\">}</span>\n</code></pre></div>\n<p>And then calling <code>spawn \"python\"</code>. It almost works, except that the input/output gets buggy (I don't understand what happens).</p>\n<p>How can I make this happen smoothly? The full code is <a href=\"https://github.com/arthurpaulino/viper/blob/fd565e90ce8ee989afaf4df51fedf1985d04ef3a/Viper/Utils.lean#L21\">here</a>.</p>\n<p>Thanks in advance!!!</p>",
        "id": 287511764,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1656274400
    },
    {
        "content": "<p>Ah, I had to use <code>wait</code> :D</p>",
        "id": 287522209,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1656290106
    }
]