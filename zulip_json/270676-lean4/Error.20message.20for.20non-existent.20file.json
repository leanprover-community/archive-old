[
    {
        "content": "<p>Very minor, but right now the error message for importing a nonexisting file within a correctly existing package returns a bit of a verbose error that mentions <code>lake</code> (with what I assume is considered an implementation detail of the import system?), e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"bp\">`/</span><span class=\"n\">opt</span><span class=\"bp\">/</span><span class=\"n\">homebrew</span><span class=\"bp\">/</span><span class=\"n\">Cellar</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">@</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"n\">HEAD</span><span class=\"bp\">-</span><span class=\"n\">d5e05f3</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"n\">print</span><span class=\"bp\">-</span><span class=\"n\">paths</span> <span class=\"n\">Init</span> <span class=\"n\">Mathlib.Not.Exist</span><span class=\"bp\">`</span> <span class=\"n\">failed</span><span class=\"o\">:</span>\n\n   <span class=\"n\">stderr</span><span class=\"o\">:</span>\n   <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n     <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Not</span><span class=\"bp\">/</span><span class=\"n\">Exist.lean</span>\n   <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">build</span> <span class=\"n\">failed</span>\n</code></pre></div>\n<p>Is it reasonable to ask whether that can be shortened to just something like <code>./Mathlib/Not/Exist.lean does not exist</code>perhaps?</p>",
        "id": 260701585,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636397444
    },
    {
        "content": "<p>In order to provide a more concise error message here, the server would need to some how parse the result of the <code>lake print-paths</code> process to discover what the error was. Conceivably this could be done by augmented the JSON output with more information.  I will talk to Sebastian and the other Lean devs to see if this whole interop could be improved.</p>",
        "id": 260710138,
        "sender_full_name": "Mac",
        "timestamp": 1636401493
    },
    {
        "content": "<p>Another one to mention, which is more me being really dense :( so not sure if it can be improved -- I just wasted ~15 minutes trying to figure out why the heck I kept seeing \"unknown package Test\" in my editor, then repeatedly seeing <code>lake build</code> works just fine and scrambling to figure out the mistake</p>",
        "id": 260846910,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636485441
    },
    {
        "content": "<p>The reason it turned out was because I had the wrong root dir when starting up the LSP. Of course this is me being bad because I knew and forgot that I needed to update that logic for Lake (which now of course I'm about to do)</p>",
        "id": 260846998,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636485477
    },
    {
        "content": "<p>I don't know how to better detect that -- I guess <code>LEAN_PATH</code> was probably totally wrong and there was no package at all in the directory that was being used, but even a hint of that would have made my denseness go away sooner I suspect</p>",
        "id": 260847229,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636485563
    },
    {
        "content": "<p>The corresponding mistake with Lean 3 (either opening a single file, or opening a folder other than the one containing <code>leanpkg.toml</code>) is a perennial mistake, and we have to walk people through solving it on zulip frequently.</p>",
        "id": 260884973,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636505022
    },
    {
        "content": "<p>Having the VSCode Lean 4 extension volubly and helpfully identify this problem would be very helpful. Perhaps something for <span class=\"user-mention\" data-user-id=\"434989\">@Chris Lovett</span> to look at?</p>",
        "id": 260885042,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636505060
    },
    {
        "content": "<p>I think the VSCode extension should probably copy the logic we do in lean.nvim and then it becomes a lot easier for users -- unless of course that logic is wrong (which now I've fixed for neovim after the above) -- but I think the same root dir discovery should be possible in the VSCode extension too</p>",
        "id": 260940823,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636514583
    },
    {
        "content": "<p>We actually have some logic for hinting at the correct directory to open in the server: <a href=\"https://github.com/leanprover/lean4/blob/3546104959f6048adfcbde5e72a1ca98abf03e6f/src/Lean/Util/Path.lean#L84-L92\">https://github.com/leanprover/lean4/blob/3546104959f6048adfcbde5e72a1ca98abf03e6f/src/Lean/Util/Path.lean#L84-L92</a><br>\nBut it's not triggered when using a package manager.</p>",
        "id": 260958068,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1636532720
    },
    {
        "content": "<p>I've been meaning to write this for a while actually: one of the big surprises when I tried the Lean extension for vim was the total disappearance of this \"open correct folder\" issue. We had this issue <em>so</em> many times with beginners that I sort of assume it was unavoidable. Fixing this in the VSCode extension would be wonderful.</p>",
        "id": 260958206,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1636532811
    }
]