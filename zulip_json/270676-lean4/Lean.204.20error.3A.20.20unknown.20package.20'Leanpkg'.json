[
    {
        "content": "<p>Hi! I'm new to Lean, I've installed it and can't run a simple script (both with nightly and stable toolchains).  I've made a file called test.lean in which I wrote 2 lines</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Leanpkg</span>\n<span class=\"k\">#eval</span> <span class=\"n\">Leanpkg.leanVersionString</span>\n</code></pre></div>\n<p>When I run lean test.lean I get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">test.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Leanpkg'</span>\n<span class=\"n\">test.lean</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">Leanpkg.leanVersionString'</span>\n<span class=\"n\">test.lean</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kd\">constant</span> <span class=\"bp\">'</span><span class=\"n\">sorryAx'</span>\n</code></pre></div>\n<p>On a side note, I'm using Ubuntu 22.04</p>",
        "id": 306993340,
        "sender_full_name": "Florin Dinu",
        "timestamp": 1667154500
    },
    {
        "content": "<p>Is your file part of a Lean project or did you just create a one-off file for testing?</p>",
        "id": 306993464,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667154551
    },
    {
        "content": "<p>I've just created it for testing</p>",
        "id": 306993524,
        "sender_full_name": "Florin Dinu",
        "timestamp": 1667154598
    },
    {
        "content": "<p>Then that's your problem. One-off files don't have a clue which version of Lean they're supposed to be using, or which packages they're supposed to be able to see.</p>",
        "id": 306993665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667154635
    },
    {
        "content": "<p>One easy solution to this is to clone a project which is already set up correctly, for example <code>Mathlib4</code> (my favourite lean 4 project, although I'm biased, I'm a mathematician).</p>",
        "id": 306993752,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667154682
    },
    {
        "content": "<p>If you clone this repo <a href=\"https://github.com/leanprover-community/mathlib4\">https://github.com/leanprover-community/mathlib4</a> with <code>git clone git@github.com:leanprover-community/mathlib4.git</code> and then make your test files in the resulting directory, things should work fine.</p>",
        "id": 306993891,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667154741
    },
    {
        "content": "<p>The idea is that this repository has a configuration file telling Lean which version of Lean to use and where to look for imports.</p>",
        "id": 306993927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667154774
    },
    {
        "content": "<p>If you don't want to start downloading random repositories off the internet then you can make your own by going into a new directory and then typing <code>lake init my_test_project</code> to make all the configuration files. Then your imports should work</p>",
        "id": 306994132,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667154901
    },
    {
        "content": "<p>Actually I just tested both these methods and <code>import Leanpkg</code> doesn't work for either of them. Where are you seeing instructions to import this?</p>",
        "id": 306994478,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667155049
    },
    {
        "content": "<p>Thanks, it worked, I could run a file I got from a colleague. I was under the impression that I don't need to make a project, I can just use a file for testing.</p>\n<p>As for the <code>import Leanpkg</code>,  I've found it yesterday on a github issue and thought it might be the standard way to test a lean installation.</p>\n<p>Anyway, it's time to do the tutorials so I won't ask any more questions like this. Thanks again.</p>",
        "id": 306996536,
        "sender_full_name": "Florin Dinu",
        "timestamp": 1667156117
    },
    {
        "content": "<p>Please feel free to ask many questions here; this is a very active Zulip and we're keen to onboard beginners.</p>",
        "id": 306996577,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667156153
    },
    {
        "content": "<p>You can ask them either here or in <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a></p>",
        "id": 306996635,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667156167
    },
    {
        "content": "<p><code>leanpkg</code> is a tool for managing lean 3 projects, which does not exist for lean 4. The analogous lean 4 project is <code>lake</code> and you don't need to <code>import Lake</code> in the main part of the project at all</p>",
        "id": 306999624,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1667158077
    },
    {
        "content": "<p>Have a look at the <a href=\"https://leanprover.github.io/functional_programming_in_lean/hello-world/starting-a-project.html\">FPIL documentation</a> and the <a href=\"https://github.com/leanprover/lake\">Lake docu</a></p>",
        "id": 307004001,
        "sender_full_name": "Arien Malec",
        "timestamp": 1667161074
    },
    {
        "content": "<p>One thing that doesn't seem to be documented either place is that the root Lean directory needs to contain a single <code>.lean</code> file whose name is the same as your library, and any submodules are going to be placed in a directory named the same thing. So <code>lean_lib Foo</code> is going to have, in the same directory as the Lakefile, a single file <code>Foo.lean</code>, if submodules are required, a directory <code>Foo</code>, so that module <code>Foo.Basic</code> is going to be found in <code>./Foo/Basic.lean</code></p>",
        "id": 307004432,
        "sender_full_name": "Arien Malec",
        "timestamp": 1667161392
    }
]