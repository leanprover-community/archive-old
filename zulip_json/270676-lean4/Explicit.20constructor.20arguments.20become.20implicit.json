[
    {
        "content": "<p>I was wondering whether it was expected that constructor arguments could be forced to become implicit:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">thing</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"n\">nil</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">thing</span> <span class=\"n\">α</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">thing.nil</span>\n<span class=\"c1\">-- constructor thing.nil.{u_1} : {α : Type u_1} → thing α</span>\n</code></pre></div>\n<p>This happens when it's in this form too:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">thing</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"n\">nil</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">thing</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 280232662,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1650989428
    },
    {
        "content": "<p>Are you using the latest version? I get </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">thing.nil.</span><span class=\"o\">{</span><span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">thing</span> <span class=\"n\">α</span>\n</code></pre></div>\n<p>in both cases.</p>",
        "id": 280234115,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1650990103
    },
    {
        "content": "<p>Oh, sorry for the noise, I forgot my lean4:nightly was almost two weeks old -- it works fine on the latest version. Thanks.</p>",
        "id": 280269981,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1651006078
    }
]