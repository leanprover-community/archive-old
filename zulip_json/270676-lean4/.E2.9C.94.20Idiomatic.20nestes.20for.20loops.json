[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284775\">Alcides Fonseca</span> has marked this topic as resolved.</p>",
        "id": 263775080,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638720165
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20Idiomatic.20nestes.20for.20loops/near/263765400\">said</a>:</p>\n<blockquote>\n<p>You should be able to use <code>do</code>, <code>for</code>and <code>let mut</code> even in pure functions. E.g.</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>There is a reasonable chance that  support for <code>do</code> blocks in pure functions may disappear in the near future. A less magic way is to just use the pure <code>Id</code> monad explicitly. That is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">Id.run</span> <span class=\"k\">do</span>\n</code></pre></div>",
        "id": 263811567,
        "sender_full_name": "Mac",
        "timestamp": 1638770368
    },
    {
        "content": "<p>Good to know about the future path. In the meanwhile, I've been using it in all days of the Advent of Code  since I've learned it. Very useful as an alternative to recursion (and not having to worry about tail recursion).</p>",
        "id": 263982709,
        "sender_full_name": "Alcides Fonseca",
        "timestamp": 1638873377
    }
]