[
    {
        "content": "<p>How do I compile Lean code to a neat little executable? I know how to compile the Lean code into C but I have no idea how to compile the C code into an executable, it seems that the C code depends on some runtime library (<code>&lt;lean/lean.h&gt;</code>).</p>",
        "id": 223892345,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1611579352
    },
    {
        "content": "<p>If you have a project set up properly, then <code>leanmake bin</code> should do it</p>",
        "id": 223892535,
        "sender_full_name": "Reid Barton",
        "timestamp": 1611579455
    },
    {
        "content": "<p>Awesome! Where can I learn more about Lean 4 aside from <a href=\"https://leanprover.github.io/lean4/doc\">the official docs</a>? Some talks could be helpful.</p>",
        "id": 223894212,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1611580317
    },
    {
        "content": "<p>This stream :-) It was only released three weeks ago! Leo has given a bunch of talks about it. You know about the LT2021 talks I guess but Leo has certainly given other talks</p>",
        "id": 223894713,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611580542
    },
    {
        "content": "<p>See also <a href=\"https://leanprover.github.io/publications/\">https://leanprover.github.io/publications/</a> for papers and talks.</p>",
        "id": 223898116,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611582208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"270523\">@Huỳnh Trần Khanh</span> it occurs to me that you might also like to look at Reid Barton's solutions to advent of code 2020: <a href=\"https://github.com/rwbarton/advent-of-lean-4\">https://github.com/rwbarton/advent-of-lean-4</a> . It might be interesting to port them to the release version of Lean 4, for example.</p>",
        "id": 223900180,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611583213
    },
    {
        "content": "<p>It seems that the AoC solutions only use Lean as a functional programming language, not as a theorem prover. So this is not quite what I'm looking for.</p>",
        "id": 223921104,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1611591680
    },
    {
        "content": "<p>Anyways, thanks!</p>",
        "id": 223921323,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1611591755
    }
]