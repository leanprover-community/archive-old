[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> How do you recommend I change from lean 4 to lean 3?</p>",
        "id": 302720443,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665082662
    },
    {
        "content": "<p>Anyone else, feel free to advise.</p>",
        "id": 302720611,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665082712
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/get_started.html\">https://leanprover-community.github.io/get_started.html</a> this will get you Lean 3 installed</p>",
        "id": 302720705,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665082745
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> . Does it matter that I already have lean 4?</p>",
        "id": 302720794,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665082780
    },
    {
        "content": "<p>No, I'm fairly sure not. They can definitely coexist.</p>",
        "id": 302720914,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665082816
    },
    {
        "content": "<p>Okay <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>. Mahalo!</p>",
        "id": 302720991,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665082845
    },
    {
        "content": "<p>I just followed the <a href=\"https://leanprover-community.github.io/install/debian.html\">Debian/Ubuntu instructions</a> (since I have Ubuntu), but still <code>lean -v</code> returns <code>Lean (version 4.0.0, commit 7dbfaf9b7519, Release)</code>, <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>.</p>",
        "id": 302721497,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665083004
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"245476\">@Quinn Culver</span> Where did you run <code>lean -v</code>? In a directory that has a Lean 4 project? Or in a Lean 3 project? Or in a directory that isn't a Lean project at all?</p>",
        "id": 302721767,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665083089
    },
    {
        "content": "<p><code>elan</code> is the Lean version manager. You can use <code>elan show</code> to see which toolchains are installed. But if you are in VS Code with the Lean 3 and Lean 4 plugins installed, I think it will take care of jumping between them for you.</p>",
        "id": 302721926,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665083151
    },
    {
        "content": "<p>In my home directory, <code>~/</code>, which has no Lean project, <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> .</p>",
        "id": 302721950,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665083159
    },
    {
        "content": "<p>So then it will run your default Lean toolchain</p>",
        "id": 302722020,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665083173
    },
    {
        "content": "<p>I'm using emacs <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> .</p>",
        "id": 302722030,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665083181
    },
    {
        "content": "<p>I think emacs also figures this out though, but I could be wrong. <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> would know.</p>",
        "id": 302722122,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665083218
    },
    {
        "content": "<p>(Note: it's generally not necessary to <code>@</code> mention on every reply.)</p>",
        "id": 302722257,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665083275
    },
    {
        "content": "<p>I don't understand what the Lean toolchain is or does <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>.  <a href=\"https://leanprover-community.github.io/toolchain.html\">This page</a>'s title seems to be a place to learn that, but doesn't actually seem to explain what is meant by 'toolchain'.</p>",
        "id": 302722567,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665083398
    },
    {
        "content": "<p><code>elan</code> uses a little bit of magic to figure what is the appropriate version of Lean to run in any given directory.</p>",
        "id": 302722682,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665083436
    },
    {
        "content": "<p>Okay, sorry for over-@-ing. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 302722685,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665083437
    },
    {
        "content": "<p>In a Lean 3 project, the root folder will contain a <code>leanpkg.toml</code> file that contains the info that <code>elan</code> needs. Lean 4 projects have something similar.</p>",
        "id": 302722768,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665083470
    },
    {
        "content": "<p>So you should clone a Lean 3 project (for example with <code>leanproject get tutorials</code>) and then run Lean inside there.</p>",
        "id": 302722846,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665083497
    },
    {
        "content": "<p>Then you should notice that you get a Lean 3 version number.</p>",
        "id": 302722898,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665083515
    },
    {
        "content": "<p>testing that now...</p>",
        "id": 302723092,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665083585
    },
    {
        "content": "<p>No problem about the <code>@</code>-ing.</p>",
        "id": 302723329,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665083685
    },
    {
        "content": "<p>Compilation of <code>00_first_proofs.lean</code> seemed to have been successful, but I didn't notice the version #.</p>",
        "id": 302724083,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665083992
    },
    {
        "content": "<p>What happens if you</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> tutorials/\nlean --version\n</code></pre></div>",
        "id": 302724212,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665084028
    },
    {
        "content": "<p>yeah now i see lean version 3.46</p>",
        "id": 302724345,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665084071
    },
    {
        "content": "<p>and I tried adding #eval lean.version to the file and got a <code>(3,(46,0))</code></p>",
        "id": 302724437,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665084116
    },
    {
        "content": "<p>Magic, isn't it?</p>",
        "id": 302724477,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665084123
    },
    {
        "content": "<p>so I guess I'm good to go now.</p>",
        "id": 302724503,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665084125
    },
    {
        "content": "<p>yes, some kind of magic.</p>",
        "id": 302724519,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665084132
    },
    {
        "content": "<p>which might be unsettling,</p>",
        "id": 302724543,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665084145
    },
    {
        "content": "<p>but I'll just try to accept for now.</p>",
        "id": 302724565,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665084159
    },
    {
        "content": "<p>Thanks again, lean-ers.</p>",
        "id": 302724655,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1665084194
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245476\">Quinn Culver</span> has marked this topic as unresolved.</p>",
        "id": 305208257,
        "sender_full_name": "Notification Bot",
        "timestamp": 1666289141
    },
    {
        "content": "<p>How do I tell elan to go for the lean 3 install instead of lean 4?</p>\n<p>When I run <code>leanproject new foo</code>, I get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">toolchain</span> <span class=\"bp\">'</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable'</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">the</span> <span class=\"n\">binary</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">quinn</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/leanpkg`</span>\n<span class=\"n\">Command</span> <span class=\"sc\">'['</span><span class=\"n\">leanpkg'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">new'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">foo'</span><span class=\"o\">]</span><span class=\"bp\">'</span> <span class=\"n\">returned</span> <span class=\"n\">non</span><span class=\"bp\">-</span><span class=\"n\">zero</span> <span class=\"n\">exit</span> <span class=\"n\">status</span> <span class=\"mi\">1</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p>Note that <code>elan show</code> returns</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">installed</span> <span class=\"n\">toolchains</span>\n<span class=\"c1\">--------------------</span>\n\n<span class=\"n\">stable</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">46</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">48</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span>\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">default</span><span class=\"o\">)</span>\n<span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n\n<span class=\"n\">active</span> <span class=\"n\">toolchain</span>\n<span class=\"c1\">----------------</span>\n\n<span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">stable</span> <span class=\"o\">(</span><span class=\"n\">directory</span> <span class=\"n\">override</span> <span class=\"n\">for</span> <span class=\"bp\">'/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">quinn'</span><span class=\"o\">)</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"mi\">7</span><span class=\"n\">dbfaf9b7519</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Side question: I'm thinking maybe I should just uninstall lean 4, since I have no intention of using it. How is that done?</p>",
        "id": 305208269,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1666289146
    },
    {
        "content": "<p>Update elan (<code>elan self update</code>).</p>",
        "id": 305213047,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1666290720
    },
    {
        "content": "<p>Actually, just remove the override in <code>/home/quinn</code> using <code>elan override unset</code>.</p>",
        "id": 305213521,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1666290867
    },
    {
        "content": "<p>Removing the override is a good suggestion, but if your default toolchain is Lean 4 you'll still be unable to run leanproject. For commands such as <code>leanproject new</code> and <code>leanproject get</code>, which are used sporadically and can't operate on an existing project, the easiest way to force Lean 3 is to use <code>elan run &lt;toolchain&gt; &lt;command&gt;</code>, as in <code>elan run leanprover-community/lean:stable leanproject new foo</code>. Once you have a project, running <code>lean</code> inside the project directory will automagically work because <code>elan</code> will look at <code>leanpkg.toml</code> to determine the version you want.</p>",
        "id": 305213852,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1666290974
    }
]