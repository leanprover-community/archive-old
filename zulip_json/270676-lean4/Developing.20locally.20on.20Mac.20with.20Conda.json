[
    {
        "content": "<p>Hey all! I am excited to have my local Lean4 setup working from source. I had a few issues getting it to compile, so wanted to share what I learned in case it would be helpful for others. Also let me know if this isn't the right place to post this sort of thing.</p>\n<p>I am running macOS Catalina 10.15.7, and as I was trying to build, I would get two different errors: <code>      'stdlib.h' file not found\n#include &lt;stdlib.h&gt;</code> and <code>ld: library not found for -lgmp</code>.</p>\n<p>I finally managed to successfully build, after creating a conda environment and setting some environmental variables. With an <code>environment.yml</code> set to:</p>\n<div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">lean4</span>\n<span class=\"nt\">channels</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">conda-forge</span>\n<span class=\"nt\">dependencies</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">clang</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">clangxx</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cmake</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">gmp</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">ccache</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">make</span>\n</code></pre></div>\n<p>I then ran:</p>\n<div class=\"codehilite\" data-code-language=\"Fish\"><pre><span></span><code>conda env create -f environment.yaml\nconda activate lean4\nmkdir -p build/release\n<span class=\"k\">cd</span> build/release\n\nenv <span class=\"nv\">CXX</span><span class=\"o\">=</span>clang++ <span class=\"nv\">CC</span><span class=\"o\">=</span>clang  <span class=\"nv\">C_INCLUDE_PATH</span><span class=\"o\">=</span><span class=\"nv\">$CONDA_PREFIX</span>/include <span class=\"nv\">LIBRARY_PATH</span><span class=\"o\">=</span><span class=\"nv\">$CONDA_PREFIX</span>/lib  <span class=\"nv\">SDKROOT</span><span class=\"o\">=(</span>xcrun --sdk macosx --show-sdk-path<span class=\"o\">)</span>  cmake ../..\nenv <span class=\"nv\">CXX</span><span class=\"o\">=</span>clang++ <span class=\"nv\">CC</span><span class=\"o\">=</span>clang  <span class=\"nv\">C_INCLUDE_PATH</span><span class=\"o\">=</span><span class=\"nv\">$CONDA_PREFIX</span>/include <span class=\"nv\">LIBRARY_PATH</span><span class=\"o\">=</span><span class=\"nv\">$CONDA_PREFIX</span>/lib  <span class=\"nv\">SDKROOT</span><span class=\"o\">=(</span>xcrun --sdk macosx --show-sdk-path<span class=\"o\">)</span>  make\n</code></pre></div>\n<p>I always get confused by the compiler toolchain, so I am not recommending my method to others, but just wanted to share what worked for me!</p>\n<p>Now that it's working, I am loving the dev experience in VS code, especially the ability to see the type for whatever is under the cursor. <span aria-label=\"party ball\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"party ball\">:party_ball:</span></p>",
        "id": 251565219,
        "sender_full_name": "Saul Shanabrook",
        "timestamp": 1630505529
    },
    {
        "content": "<p>I (a regular ol' user) was personally aware of the gmp issue and needing to set <code>SDKROOT</code> manually. The rest I <em>think</em> might be conda-specific, which I assume you're using for some non-Python deps (but which obviously is good info to share with others)</p>",
        "id": 251617483,
        "sender_full_name": "Julian Berman",
        "timestamp": 1630525369
    },
    {
        "content": "<p>I sent a (bad) PR for fixing the need to manually tell it where gmp was but it was the wrong approach so I think <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> mentioned a better way to do it which may make this more seamless but I'm not sure PRs are welcome to implement it quite yet. But right now when I compile, I do something similar to what you showed and run <code>rm -rf build/release &amp;&amp; mkdir -p build/release &amp;&amp; cd build/release &amp;&amp; cmake -DCMAKE_INSTALL_PREFIX=/opt/lean4/nightly/ ../.. &amp;&amp; make -j4 SDKROOT=$(xcrun --sdk macosx --show-sdk-path)</code>, with my libgmp coming from homebrew rather than conda</p>",
        "id": 251618046,
        "sender_full_name": "Julian Berman",
        "timestamp": 1630525581
    },
    {
        "content": "<p>How did you solve the gmp issues? I installed gmp via homebrew, but it fails to link to it. I've looked through the CMakeLists.txt but found no obvious fix.</p>",
        "id": 251683637,
        "sender_full_name": "Christian Pehle",
        "timestamp": 1630572183
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130511\">@Christian Pehle</span> something similar to the above should work where you set <code>LIBRARY_PATH</code>, e.g. <code>cmake -DCMAKE_PREFIX_PATH=$(brew --prefix) -DCMAKE_INSTALL_PREFIX=/where/you/want/to/install -DCMAKE_LIBRARY_PATH=$(brew --prefix)/lib ../..</code></p>\n<p>I forget off-hand what I tweaked to make it not even necessary to do so myself (it's not permanently setting LD_LIBRARY_PATH and friends in the environment, perhaps it's just that I have all the homebrew compilers first in <code>PATH</code> and they know to look in the Homebrew cellar for libraries) -- but if the above doesn't work and you're still seeing an issue, sharing the error we can probably help figure out what to set.</p>",
        "id": 251933818,
        "sender_full_name": "Julian Berman",
        "timestamp": 1630698941
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 252096926,
        "sender_full_name": "Christian Pehle",
        "timestamp": 1630870542
    }
]