[
    {
        "content": "<p>I am working on an <code>smt</code> tactic for Lean 4 and I am getting an error when I call <code>inferType</code> on variables introduced by the <code>intro</code> tactic. Here is an isolated example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Meta</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Elab</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Elab.Tactic</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">test</span><span class=\"o\">)</span> <span class=\"s2\">\"test\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">@[tactic test]</span> <span class=\"kd\">def</span> <span class=\"n\">evalTest</span> <span class=\"o\">:</span> <span class=\"n\">Tactic</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"bp\">←</span> <span class=\"n\">Tactic.getMainTarget</span>\n  <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">g.appFn</span><span class=\"bp\">!.</span><span class=\"n\">appArg</span><span class=\"bp\">!.</span><span class=\"n\">appArg</span><span class=\"bp\">!</span>\n  <span class=\"n\">logInfo</span> <span class=\"n\">m</span><span class=\"bp\">!</span><span class=\"s2\">\"goal := {g}, x := {x}\"</span>\n  <span class=\"k\">let</span> <span class=\"n\">xt</span> <span class=\"bp\">←</span> <span class=\"n\">inferType</span> <span class=\"n\">x</span>\n  <span class=\"n\">logInfo</span> <span class=\"n\">m</span><span class=\"bp\">!</span><span class=\"s2\">\"xt := {xt}\"</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">zero_sub</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span>\n  <span class=\"n\">test</span>\n  <span class=\"n\">induction</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp_all</span> <span class=\"o\">[</span><span class=\"n\">Nat.sub_succ</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>For this example, I get the error: <code>unknown free variable '_uniq.577'</code>. Does anyone know how to resolve this error?</p>",
        "id": 262898412,
        "sender_full_name": "Abdalrhman M Mohamed",
        "timestamp": 1638055453
    },
    {
        "content": "<p>Take a look at the function defined right below <code>getMainTarget</code> :) . <code>withMainContext</code> is normally used via <code>liftMetaTactic</code>, which splits the tactic implementation into a <code>TacticM</code> and a <code>MetaM</code> part. See the stdlib tactics for many examples.</p>",
        "id": 262919650,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1638092661
    }
]