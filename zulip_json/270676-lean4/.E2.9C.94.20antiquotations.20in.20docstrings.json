[
    {
        "content": "<p>Not really, but you can do this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab</span> <span class=\"n\">Command</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">mkDocComment</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span> <span class=\"o\">:=</span>\n<span class=\"n\">mkNode</span> <span class=\"bp\">``</span><span class=\"n\">Parser.Command.docComment</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">mkAtom</span> <span class=\"s2\">\"/--\"</span><span class=\"o\">,</span> <span class=\"n\">mkAtom</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">++</span> <span class=\"s2\">\"-/\"</span><span class=\"o\">)]</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"make_foo\"</span> <span class=\"n\">decl</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">elabCommand</span> <span class=\"bp\">&lt;|‚Üê</span> <span class=\"bp\">`</span><span class=\"o\">(</span>\n      <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">mkDocComment</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\" Docstring for {decl.getId} docstring {\"</span><span class=\"n\">hello</span><span class=\"s2\">\"}\"</span><span class=\"o\">):</span><span class=\"n\">docComment</span>\n      <span class=\"kd\">def</span> <span class=\"bp\">$</span><span class=\"n\">decl</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span>\n  <span class=\"o\">)</span>\n\n<span class=\"n\">make_foo</span> <span class=\"n\">foo</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">foo</span>\n</code></pre></div>",
        "id": 285268087,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1654615623
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121918\">Edward Ayers</span> has marked this topic as resolved.</p>",
        "id": 285268150,
        "sender_full_name": "Notification Bot",
        "timestamp": 1654615644
    },
    {
        "content": "<p>I think that's the best solution, yes. We should not parse inside comments.</p>",
        "id": 285268239,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1654615670
    },
    {
        "content": "<p>Sorry how can I debug <code>elaboration function for 'Lean.Parser.Command.docComment' has not been implemented</code>?</p>",
        "id": 285270594,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1654616516
    },
    {
        "content": "<p>Ah I forgot the <code>:docComment</code> category</p>",
        "id": 285271068,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1654616669
    }
]