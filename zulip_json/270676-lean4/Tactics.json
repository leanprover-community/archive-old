[
    {
        "content": "<p>I'm pretty new to tactics, so please excuse my ignorance.<br>\nWhat's the difference between <code>rw</code> and <code>erw</code>? Also does <code>simp</code> not work on lean4? I'm getting a <code>sorry</code> when I try to use it.</p>",
        "id": 224408242,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1611875753
    },
    {
        "content": "<p><code>simp</code> doesn't exist in lean 4 yet</p>",
        "id": 224408453,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611875899
    },
    {
        "content": "<p>the docstring for <code>erw</code> says</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">A variant of `rewrite` that uses the unifier more aggressively, unfolding semireducible definitions.</span>\n<span class=\"sd\">-/</span>\n</code></pre></div>",
        "id": 224408503,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611875943
    },
    {
        "content": "<p>Ok, so is there no way to, say, try a tactic in several places until it succeeds then?<br>\ne.g. if I wanted to apply <code>rw [Nat.mulComm]</code> but on the second or third term where it would be valid?</p>",
        "id": 224408719,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1611876070
    },
    {
        "content": "<p>this is not really a lean 4 question, but you can use <code>rw [Nat.mulComm a]</code> or  <code>rw [Nat.mulComm a b]</code> to limit the matches to the one you want</p>",
        "id": 224408830,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611876142
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Tactics/near/224408453\">said</a>:</p>\n<blockquote>\n<p><code>simp</code> doesn't exist in lean 4 yet</p>\n</blockquote>\n<p>FYI it is still missing some features but much of the functionality is already there, e.g. <a href=\"https://github.com/leanprover/lean4/blob/master/tests/lean/run/simp4.lean\">https://github.com/leanprover/lean4/blob/master/tests/lean/run/simp4.lean</a></p>",
        "id": 224408888,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1611876191
    },
    {
        "content": "<p>Ok, I'll try to post in <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a> about tactic proofs. I wasn't sure if I would run into lean4 specific behavior that would send me back here <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 224409158,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1611876380
    },
    {
        "content": "<p>A new Lean 4 thing you can do is <code>rw [Nat.mulComm (m := a)]</code> rather than <code>rw [Nat.mulComm _ a]</code>, supposing you knew <code>m</code> was the name of the second argument.  This is more useful for lemmas with multiple arguments, especially implicit ones.</p>",
        "id": 224409551,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1611876659
    }
]