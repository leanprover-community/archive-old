[
    {
        "content": "<p>When writing an unexpander like e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">myid</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n\n<span class=\"kd\">@[appUnexpander myid]</span>\n<span class=\"kd\">def</span> <span class=\"n\">unexpMyId</span> <span class=\"o\">:</span> <span class=\"n\">Unexpander</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">myid</span> <span class=\"bp\">$</span><span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"bp\">$</span><span class=\"n\">arg</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">myid</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throw</span> <span class=\"o\">()</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">myid</span> <span class=\"mi\">12</span>\n<span class=\"k\">#check</span> <span class=\"n\">myid</span>\n</code></pre></div>\n<p>Is there a quick syntax to disable hygiene for the <code>id</code> identifier in the syntax quotation, my first thought was to <code>let fn = mkIdent </code>id in ...` but maybe we have something even quicker?</p>",
        "id": 281540630,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1651930060
    },
    {
        "content": "<p><code>Unhygienic.run</code> I think?</p>",
        "id": 281541034,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1651930709
    },
    {
        "content": "<p>or <code>set_option hygiene false in ...</code> at expression level</p>",
        "id": 281541050,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1651930755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> has marked this topic as resolved.</p>",
        "id": 281541245,
        "sender_full_name": "Notification Bot",
        "timestamp": 1651930956
    }
]