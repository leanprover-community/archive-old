[
    {
        "content": "<p>The current build system is Makefile + CMake. It's too complicated for me to understand.</p>",
        "id": 303135393,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1665323157
    },
    {
        "content": "<p>Is there a plan for a simpler build system?</p>",
        "id": 303135449,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1665323169
    },
    {
        "content": "<p><code>libleanrt.a</code> is built with LLVM, but it has dependency on GLIBC. I want to change that, but don't know where to start.</p>",
        "id": 303135532,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1665323216
    },
    {
        "content": "<p>Every Lean project apart from the compiler itself will use the Lean build system Lake. Changing the build system of the compiler is not on the list right now since it affects basically nobody apart from the compiler development team.</p>",
        "id": 303135664,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1665323298
    },
    {
        "content": "<p>I do want to use musl libc with lean. Is there anything I can do to make it compile with musl libc?</p>",
        "id": 303142383,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1665327628
    },
    {
        "content": "<p>Do you use a compiler wrapper for that? Then it should be sufficient to set <code>CMAKE_C_COMPILER</code> and <code>CMAKE_CXX_COMPILER</code> to it.</p>",
        "id": 303147657,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1665331048
    },
    {
        "content": "<p>We have some bugs with musl IIRC, since the IO functions return different error codes than glibc.</p>",
        "id": 303150211,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1665332617
    },
    {
        "content": "<p>I too would love to see a pure cmake build system for lean that doesn't include bash shell scripts so that you can use the full power of cmake to build lean with many different C++ toolchains (including MSVC).  I suspect if we did that and built a pure native win32 binary for lean it would be much faster than the current MSYS2 windows lean binaries which are 47% slower than the Linux versions on the same machine. For example <code>lake build</code> of mathlib4 takes 23 seconds in WSL and 34 seconds in windows on the same box.</p>",
        "id": 303317737,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665431461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"434989\">@Chris Lovett</span> This sounds like a pretty dubious assumption to me without presenting any evidence from profiling. I find it far more likely that the difference in file systems is the culprit compared to the specific API calls used to interface with them, where MinGW doesn't really have a different choice from \"pure\" Windows programs anyway. And even if we can identify a problematic API bridge, we can simply replace that specific one with native Windows calls.</p>",
        "id": 303381259,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1665476892
    }
]