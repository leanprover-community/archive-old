[
    {
        "content": "<p>The NNG uses the split tactic heavily in <code>Advanced Proposition World</code> and in lean3 it could split <code>P ∧ Q</code> and <code>P ↔ Q</code>, but in Lean4 it cannot.  Is this use of <code>split</code> replaced by <code>constructor</code> in lean4 ?  For example, level 1 in lean3 is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∧</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>And I can port this as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∧</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">constructor</span>\n  <span class=\"n\">exact</span> <span class=\"n\">p</span>\n  <span class=\"n\">exact</span> <span class=\"n\">q</span>\n</code></pre></div>\n<p>But I can also port it to the much simpler version:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∧</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"o\">⟩</span>\n</code></pre></div>\n<p>what which is preferable here?  Perhaps the <code>constructor</code> version since it leads up to level 8 where <code>constructor</code> must be used to solve it.</p>",
        "id": 303344780,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665449495
    },
    {
        "content": "<p>yes, <a href=\"https://github.com/leanprover-community/mathport/blob/292e035c65b8a514d08c27cce0600a47ce6abb8d/Mathport/Syntax/Translate/Tactic/Lean3.lean#L284\"><code>split</code> is now <code>constructor</code></a></p>",
        "id": 303345250,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665449901
    },
    {
        "content": "<p>The NNG deliberately doesn't use most features of the term language so as to show every subterm in tactic mode</p>",
        "id": 303345397,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665450028
    },
    {
        "content": "<p>most NNG proofs can be (very) significantly golfed, that's not the point</p>",
        "id": 303345407,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665450048
    },
    {
        "content": "<p>Thanks for the confirmation, feedback welcome on my <a href=\"http://lovettsoftware.com/NaturalNumbers/AdvancedPropositionWorld.lean.html\">Lean 4 version of Advanced Proposition World</a>, I've ported most of the levels but I had some trouble eliminating \"term language\" with level 4 and 5 involving Iff, and I'm stuck on level 8.  I finally solved level 10 without <code>cc</code> since <code>cc</code> is not yet available.</p>",
        "id": 303347648,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665452142
    }
]