[
    {
        "content": "<p>I wrote a patch for Lean 4 which uses <code>UInt64</code> instead of <code>Name</code> for <code>FVarId</code>, <code>MVarId</code> and <code>LMVarId</code>. My hypothesis is that this will improve performance since these types are used as hash map keys throughout the system.</p>\n<p>The compiler part of the patch turned out to be quite straightforward. There are a few places where subroutines need distinct ID 'namespaces'; to accommodate this, I currently reserve 8 bits of the ID for an 'ID class'.</p>\n<p>However, the patch breaks the kernel since it also uses <code>Name</code>s in its <code>Expr</code> representation. If there's interest in this patch, I would need help with this part.</p>",
        "id": 322621100,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1674250796
    },
    {
        "content": "<p>Without taking a position on the RFC, I'm constantly surprised to never really see anything of hashing and hash maps when profiling (except for the interpreter)</p>",
        "id": 322623471,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674251777
    },
    {
        "content": "<p>Also this should probably move to <a class=\"stream\" data-stream-id=\"341532\" href=\"/#narrow/stream/341532-lean4-dev\">#lean4 dev</a></p>",
        "id": 322623770,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1674251918
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/RFC.3A.20Use.20unsigned.20ints.20for.20.60FVarId.60.20etc.2E/near/322623471\">said</a>:</p>\n<blockquote>\n<p>Without taking a position on the RFC, I'm constantly surprised to never really see anything of hashing and hash maps when profiling (except for the interpreter)</p>\n</blockquote>\n<p>Ha, then maybe it doesn't matter that much. The patch also reduces the size of expressions a little bit and should speed up all equality and ordering comparisons involving IDs. Whether this amounts to anything substantial I don't dare to predict.</p>",
        "id": 322626377,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1674252998
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/RFC.3A.20Use.20unsigned.20ints.20for.20.60FVarId.60.20etc.2E/near/322623770\">said</a>:</p>\n<blockquote>\n<p>Also this should probably move to <a class=\"stream\" data-stream-id=\"341532\" href=\"/#narrow/stream/341532-lean4-dev\">#lean4 dev</a></p>\n</blockquote>\n<p>Feel free to move it; I don't have the necessary rights.</p>",
        "id": 322626417,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1674253015
    },
    {
        "content": "<p>Patch for the Lean parts is here: <a href=\"https://github.com/JLimperg/lean4/tree/efficient-ids\">https://github.com/JLimperg/lean4/tree/efficient-ids</a></p>",
        "id": 322630215,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1674254434
    }
]