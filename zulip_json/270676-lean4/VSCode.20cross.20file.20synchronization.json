[
    {
        "content": "<p>When I move a definition from one Lean file to another that imports it in VSCode, I find I have to restart the server for it to find the definition.</p>\n<p>Is this expected behavior?</p>",
        "id": 230194296,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1615674520
    },
    {
        "content": "<p>For definitions in the same file, you should never need to restart. For changes in an imported module <code>A</code> (including the locations of symbols one may jump to) to be observable in a module <code>B</code> that imports <code>A</code>, you  need to execute the \"Lean 4: Refresh File Dependencies\" command in <code>B</code>. Does this help?</p>",
        "id": 230199411,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1615680732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> Thanks, I somehow overlooked your reply.  I'll try the refresh file dependencies command. <br>\nAt least on the Mac, I've gotten into the habit of frequently restarting  Lean and reloading the Window (Does Lean restart when I reload the window?).  Otherwise, I can run into massive slowdowns that necessitate a reboot  It seems to be more of a problem in a devcontainer.  At one point it seemed like VSCode kept spawning Lean processes.<br>\nI may be out of date with respect to the Lean VSCode extension, but if this is completely unexpected I can try to find a way to reproduce issues.</p>",
        "id": 231234091,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1616352886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span>  Yeah, I think the whole server should restart when VSCode is reloaded. But there is also a <code>Lean 4: Restart Server</code> command.</p>\n<blockquote>\n<p>At one point it seemed like VSCode kept spawning Lean processes. Imay be out of date with respect to the Lean VSCode extension, but if this is completely unexpected I can try to find a way to reproduce issues.</p>\n</blockquote>\n<p>The server is meant to spawn a worker process for each open file, but these processes should close when you close the file tab so the total running process count should be the number of open tabs + 1 (for the main process). If it's not that, then it's an issue. Also a worker process sleeps until there is something to be done, though it will initially compile the file on open. This could cause a significant slowdown if a lot of files are suddenly opened, but it shouldn't persist.</p>",
        "id": 231235108,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1616353896
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> In the case I'm thinking of I had a little over 3000 lean instances running before I killed docker (and less than 10 Lean files open).   I'll try to generate a useful error report if I encounter the issue again.</p>",
        "id": 231235402,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1616354177
    },
    {
        "content": "<p>That's definitely a bug! And yeah, if it happens again a report (maybe noting the particular container image in case its specifics break something) would be useful.</p>",
        "id": 231235567,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1616354399
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110994\">Joe Hendrix</span> <a href=\"#narrow/stream/270676-lean4/topic/VSCode.20cross.20file.20synchronization/near/231234091\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> Thanks, I somehow overlooked your reply.  I'll try the refresh file dependencies command. <br>\nAt least on the Mac, I've gotten into the habit of frequently restarting  Lean and reloading the Window (Does Lean restart when I reload the window?).  Otherwise, I can run into massive slowdowns that necessitate a reboot  It seems to be more of a problem in a devcontainer.  At one point it seemed like VSCode kept spawning Lean processes.</p>\n</blockquote>\n<p>I wonder if this is the same problem that I regularly run into. For me, it is <code>leanpkg</code> running amok on Ubuntu, and respawning new processes faster than they finish. Sometimes this happens suddenly after an hour, sometimes in intervals of a minute or so. Unfortunately, I haven't been able to reproduce it, though I've noticed that Copy&amp;Paste seems to be involved nearly every time it happens. Here's a screenshot: <a href=\"https://i.imgur.com/XJjUyhE.png\">https://i.imgur.com/XJjUyhE.png</a>. If I manage to reproduce it reliably in some way, I'll file a bug report.</p>\n<div class=\"message_inline_image\"><a href=\"https://i.imgur.com/XJjUyhE.png\"><img src=\"https://i.imgur.com/XJjUyhE.png\"></a></div>",
        "id": 231383650,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1616446703
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198266\">@Sebastian Reichelt</span> It may be.  It happened to me this morning, and I noticed a mix of <code>leanpkg</code> and <code>lean</code> in the OSX Activity Monitor.   So far it's pretty irregular, and I haven't reproduced it.</p>",
        "id": 231390138,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1616449765
    },
    {
        "content": "<p>I've found out that it's triggered by Ctrl+hover (without clicking). That's why I thought it was copy&amp;paste - pressing Ctrl is sufficient if the mouse is in a bad spot. Actually, now I can reproduce it in a very minimal file, so I wonder if there are any necessary conditions.</p>",
        "id": 231394462,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1616452189
    },
    {
        "content": "<p>Filed a bug report: <a href=\"https://github.com/leanprover/lean4/issues/367\">https://github.com/leanprover/lean4/issues/367</a></p>",
        "id": 231398356,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1616454413
    }
]