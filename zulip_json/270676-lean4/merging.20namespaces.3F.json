[
    {
        "content": "<p>Is there a way to merge namespaces?  (Really the feature that I want is for <code>open foo</code> to be attached to a namespace, so that as soon as I open the namespace, <code>foo</code> is also opened)</p>",
        "id": 231035528,
        "sender_full_name": "Jason Gross",
        "timestamp": 1616165723
    },
    {
        "content": "<p><code>export foo</code> does exactly that :)</p>",
        "id": 231035835,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1616165834
    },
    {
        "content": "<p>It gives me an error: <code>expected '('</code></p>",
        "id": 231036263,
        "sender_full_name": "Jason Gross",
        "timestamp": 1616165997
    },
    {
        "content": "<p>Ah. It only works with an explicit list of identifiers to be exported in Lean 4.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">export</span> <span class=\"n\">MonadEnv</span> <span class=\"o\">(</span><span class=\"n\">getEnv</span> <span class=\"n\">modifyEnv</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 231036706,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1616166124
    },
    {
        "content": "<p>What if the things I want to export are just the scoped attributes and syntax rules / notations / unification hints?</p>",
        "id": 231036926,
        "sender_full_name": "Jason Gross",
        "timestamp": 1616166192
    },
    {
        "content": "<p>Hm, <code>export Foo (some_instance)</code> does not seem to export the fact that <code>some_instance</code> is an instance</p>",
        "id": 231037229,
        "sender_full_name": "Jason Gross",
        "timestamp": 1616166291
    },
    {
        "content": "<p>Oh, not sure that interaction has been considered before</p>",
        "id": 231038207,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1616166624
    }
]