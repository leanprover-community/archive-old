[
    {
        "content": "<p>Suppose we have two packages A and B, where B depends on  A.</p>\n<p>Package A has two files <code>A/One.lean</code> and <code>A/Two.lean</code> but the root <code>A.lean</code> imports <code>A.One</code> but not <code>A.Two</code>. Running <code>leanpkg build</code> for package A builds oleans for <code>A.lean</code> and <code>A/One.lean</code> but not <code>A/Two.lean</code>. So far this is good and economical.</p>\n<p>However, package B has one file which imports <code>A.Two</code>. I would expect this to work since <code>A/Two.lean</code> is in package B's deps. But <code>leanpkg build</code> fails since it doesn't generate an olean file for <code>A/Two.lean</code> when building the dependency.</p>\n<p>I can see how this behavior can make sense but I did not expect that. Is this a bug or is it the intended behavior?</p>",
        "id": 241721191,
        "sender_full_name": "Fran√ßois G. Dorais",
        "timestamp": 1623031010
    },
    {
        "content": "<p>Oh, this is actually a regression due to the basic <code>leanpkg build</code> no longer using <code>leanmake</code> and instead building files based on the imports of <code>A.lean</code>. If you run <code>leanpkg build lib</code> or <code>leanpkg build bin</code>, it <em>will</em> build every lean file in <code>A</code>.</p>",
        "id": 241721318,
        "sender_full_name": "Mac",
        "timestamp": 1623031225
    },
    {
        "content": "<p>See this comment in <code>leanmake</code> -- <a href=\"https://github.com/leanprover/lean4/blob/e8a958d8f363a8c56c1937a4e2c18ff9084b2060/src/lean.mk.in#L5\">https://github.com/leanprover/lean4/blob/e8a958d8f363a8c56c1937a4e2c18ff9084b2060/src/lean.mk.in#L5</a>  -- which states that every lean file within the package's directory (e.g., <code>A</code> in your case) is compiled.</p>",
        "id": 241721413,
        "sender_full_name": "Mac",
        "timestamp": 1623031407
    },
    {
        "content": "<p>To the question of whether this is a bug or feature,  one of core developers (ex. <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> ) would need to comment as to whether, in the future, the plan is  to only build imports (as the basic <code>leanpkg build</code> currently does)  or to build every <code>.lean</code> in the package directory (as <code>leanmake</code> does).</p>",
        "id": 241721547,
        "sender_full_name": "Mac",
        "timestamp": 1623031580
    }
]