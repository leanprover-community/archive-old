[
    {
        "content": "<p>Is there code in stdlib for some kind of <code>Option.flatten</code> that compresses an Option stack? For example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">flatten</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Option</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">v</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">v</span>\n<span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>This comes up a lot in nested optionals within macros.</p>",
        "id": 239143254,
        "sender_full_name": "Mac",
        "timestamp": 1621278323
    },
    {
        "content": "<p>Does Lean 4 know that <code>Option</code> is a monad? Because this is the join.</p>",
        "id": 239143797,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1621278526
    },
    {
        "content": "<p>No, in fact, <code>Option</code> is specifically <strong>not</strong> a <code>Monad</code> (<code>OptionM</code> is the monad version).</p>",
        "id": 239144266,
        "sender_full_name": "Mac",
        "timestamp": 1621278734
    }
]