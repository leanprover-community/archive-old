[
    {
        "content": "<p>I'm trying to compile a function similar to the the one below as part of a larger program:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">repro</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">repeat</span> <span class=\"k\">do</span>\n    <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">some</span> <span class=\"mi\">3</span>\n\n    <span class=\"k\">match</span> <span class=\"n\">x</span> <span class=\"k\">with</span>\n      <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">y</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">return</span> <span class=\"n\">y</span>\n      <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">IO.println</span> <span class=\"s2\">\"\"</span>\n</code></pre></div>\n<p>but I'm getting the compile error on line 2:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">for</span><span class=\"bp\">`</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">PUnit</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"bp\">?</span><span class=\"n\">u.505</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">Nat</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n</code></pre></div>\n<p>How can I fix this? Thanks.</p>",
        "id": 313433470,
        "sender_full_name": "Cole Shepherd",
        "timestamp": 1669962029
    },
    {
        "content": "<p>I'm not at a computer, but I think that lean would like an <code>IO Nat</code> also from the <code>none</code> branch of the match.  <code>IO.println \"\"</code> may not qualify!</p>",
        "id": 313438983,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1669965397
    },
    {
        "content": "<p>No, it's the <code>repeat</code> that doesn't return <code>Nat</code>. There is no special support for \"repeat without <code>break</code>\" yet.</p>",
        "id": 313450572,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1669970778
    },
    {
        "content": "<p>and now this has got me interested in implementing it... but I'm not sure there is anyone remaining to review a PR to <code>Do.lean</code> at this point</p>",
        "id": 313451950,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669971301
    },
    {
        "content": "<p>here's the workaround:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">repro</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">some</span> <span class=\"mi\">3</span>\n\n  <span class=\"k\">match</span> <span class=\"n\">x</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">y</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">return</span> <span class=\"n\">y</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">IO.println</span> <span class=\"s2\">\"\"</span><span class=\"bp\">;</span> <span class=\"n\">repro</span>\n</code></pre></div>",
        "id": 313452216,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669971382
    }
]