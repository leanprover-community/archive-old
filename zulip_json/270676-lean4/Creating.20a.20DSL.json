[
    {
        "content": "<p>Hi, are there any tips on creating a DSL? other than creating a new syntax kind? Is <code>do</code> notation defined anywhere that I can take a look at?</p>",
        "id": 231124256,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1616218416
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Parser/Do.lean\">Parser here</a> and <a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Elab/Do.lean\">elaborator here</a> it'd seem, if you haven't found those already.</p>",
        "id": 231146707,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616247120
    },
    {
        "content": "<p>Hello! I'm working on creating a DSL using macros.<br>\nI haven't programmed in lean for awhile though, so I have a bit of a silly question to start out with: how do you create a new syntax category?</p>",
        "id": 237542122,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1620238734
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">declare_syntax_cat</span> <span class=\"n\">mycat</span>\n\n<span class=\"n\">syntax</span> <span class=\"n\">ident</span>  <span class=\"o\">:</span> <span class=\"n\">mycat</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"(\"</span> <span class=\"n\">mycat</span> <span class=\"s2\">\")\"</span> <span class=\"o\">:</span> <span class=\"n\">mycat</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"to_term\"</span>  <span class=\"n\">mycat</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">to_term</span> <span class=\"bp\">$</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">)</span>  <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">to_term</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">a</span><span class=\"o\">))</span>      <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">to_term</span> <span class=\"bp\">$</span><span class=\"n\">a</span><span class=\"o\">)</span>\n\n<span class=\"n\">syntax</span> <span class=\"s2\">\"`[mycat|\"</span> <span class=\"n\">mycat</span> <span class=\"s2\">\"]\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">mycat</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">m</span><span class=\"o\">])</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">to_term</span> <span class=\"bp\">$</span><span class=\"n\">m</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">mycat</span><span class=\"bp\">|</span> <span class=\"o\">((</span><span class=\"n\">Nat.add</span><span class=\"o\">))]</span>\n</code></pre></div>",
        "id": 237543452,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1620239267
    },
    {
        "content": "<p>Is there any way I can make my DSL translate into the do DSL?<br>\ni.e. instead of <code>term</code> i would translate into the do category?</p>",
        "id": 237544480,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1620239643
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230999\">@Daniel Selsam</span>  fyi,<code>toTerm!</code> should probably be <code>to_term</code> to fit with the new Lean 4 naming conventions, correct? <code>!</code> is now only supposed to be used for functions that panic (see <a href=\"https://github.com/leanprover/lean4/issues/406\">https://github.com/leanprover/lean4/issues/406</a>); macro keywords  use snake case now (like <code>nat_lit</code>) .</p>",
        "id": 237545246,
        "sender_full_name": "Mac",
        "timestamp": 1620239932
    },
    {
        "content": "<p>Is there any way to generate some identifier I can use that won't interfere with anything else?</p>",
        "id": 237553900,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1620243661
    },
    {
        "content": "<p>This is the default behavior if you use a variable name in a macro. This is called \"macro hygiene\" and is a major part of the lean 4 macro framework</p>",
        "id": 237562385,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620247536
    }
]