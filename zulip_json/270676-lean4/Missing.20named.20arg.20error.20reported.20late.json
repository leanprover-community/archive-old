[
    {
        "content": "<p>For code like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">String</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">i</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">test</span> <span class=\"o\">(</span><span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"s2\">\"hi\"</span>\n</code></pre></div>\n<p>I would expect this to error at <code>foo := 5</code> saying that <code>test</code> doesn't have a parameter <code>foo</code>. But instead it gives a type error at <code>\"hi\"</code> because it doesn't match the type of the first arg.</p>\n<p>This is kind of confusing -- I just had an example where I thought an argument of some function was named (it wasn't) and I had a confusing type error on a different parameter; the \"fix\" was to pass the named parameter unnamed</p>",
        "id": 280105332,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1650909105
    },
    {
        "content": "<p>Pushed the following improvement <a href=\"https://github.com/leanprover/lean4/commit/40c8db7494adccfbc9fb35920b91b65dc1b6df3f\">https://github.com/leanprover/lean4/commit/40c8db7494adccfbc9fb35920b91b65dc1b6df3f</a><br>\nThe commit also improves the error position for argument type mismatches. Here is the new test.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">boo</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span>\n<span class=\"kd\">def</span> <span class=\"n\">bla</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">boo</span> <span class=\"n\">x</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">bla</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"mi\">5</span>     <span class=\"c1\">-- Ok</span>\n<span class=\"k\">#check</span> <span class=\"n\">bla</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"s2\">\"hi\"</span>  <span class=\"c1\">-- 1 error at \"hi\"</span>\n<span class=\"k\">#check</span> <span class=\"n\">bla</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"s2\">\"hi\"</span>  <span class=\"c1\">-- 2 errors at `(z := 5)` and \"hi\"</span>\n<span class=\"k\">#check</span> <span class=\"n\">bla</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"mi\">2</span>     <span class=\"c1\">-- 1 errors at `(z := 5)`</span>\n</code></pre></div>",
        "id": 280143503,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1650929605
    }
]