[
    {
        "content": "<p>I'm learning lean4 and I'm annoyed that when I type \"section Foo ... end Foo\" my syntax highlighter highlights \"end\" in red. The highlighter thinks that \"end\" is missing a matching \"begin\". See the language config for bracket. [1] </p>\n<p>Should [\"namespace\", \"end\"] and [\"section\", \"end\"] also be considered brackets for consistency?</p>\n<p>What do y'all think?</p>\n<p>[1]: <a href=\"https://github.com/leanprover/vscode-lean4/commit/5b60161091add847def2c347c1f3d9d29708c029\">https://github.com/leanprover/vscode-lean4/commit/5b60161091add847def2c347c1f3d9d29708c029</a></p>",
        "id": 255513696,
        "sender_full_name": "Steven Ulin",
        "timestamp": 1632974365
    },
    {
        "content": "<p>Yes, that should probably be fixed. If that doesn't work, we could also consider removing [\"begin\", \"end\"].</p>",
        "id": 255513997,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1632974580
    },
    {
        "content": "<p>I can throw together a quick pull request if you want. I'm not sure the what the etiquette is about small pull requests tho</p>",
        "id": 255514310,
        "sender_full_name": "Steven Ulin",
        "timestamp": 1632974838
    },
    {
        "content": "<p>I would have thought this was a remnant of Lean 3's tactic syntax, but now I'm curious why \"consistency with the vs-code verilog package\" would be a desired feature in Lean's vscode extension.</p>",
        "id": 255515233,
        "sender_full_name": "Chris B",
        "timestamp": 1632975622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Can you elaborate on the tie-in with verilog/whether this would be safe to remove now that begin/end isn't used for tactics?</p>",
        "id": 255515297,
        "sender_full_name": "Chris B",
        "timestamp": 1632975707
    },
    {
        "content": "<p><code>end</code> cannot be meaningfully construed as a bracket in lean 4:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">A</span>\n<span class=\"kn\">section</span> <span class=\"n\">C</span>\n<span class=\"kn\">namespace</span> <span class=\"n\">B</span>\n<span class=\"kd\">end</span> <span class=\"n\">A.C.B</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">A.B</span>\n<span class=\"kd\">end</span> <span class=\"n\">B</span>\n<span class=\"kd\">end</span> <span class=\"n\">A</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Unclosed</span>\n</code></pre></div>",
        "id": 255515618,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632975988
    },
    {
        "content": "<p>The one person who uses the macro begin/end will be very upset you said that.</p>",
        "id": 255516310,
        "sender_full_name": "Chris B",
        "timestamp": 1632976636
    },
    {
        "content": "<p>I had problems with the begin/end macro in the manual, I can't remember the details, but I decided to switch to the lean 4 version because of them (basically because I didn't know enough about macro writing to diagnose and fix)</p>",
        "id": 255529563,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632986829
    },
    {
        "content": "<p>Note that that commit was made for the lean3 highlighter in the lean 3 repo</p>",
        "id": 255532393,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632988630
    },
    {
        "content": "<p>The verilog argument was simply \"this other language uses begin/end in an analogous way, and their syntax highlighter decided to call it a bracket, so let's do it too\"</p>",
        "id": 255532486,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632988683
    },
    {
        "content": "<p>Mario, is that valid in lean3 too?</p>",
        "id": 255532587,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632988739
    },
    {
        "content": "<p>No</p>",
        "id": 255532595,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632988744
    },
    {
        "content": "<p>namespace/end and section/end act like strict brackets in lean 3</p>",
        "id": 255532622,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632988762
    },
    {
        "content": "<p>oh but you can use <code>#exit</code> while there are still unclosed namespaces/sections</p>",
        "id": 255532821,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632988838
    },
    {
        "content": "<p>Well here's a pull request so this discussion isn't forgotten <a href=\"https://github.com/leanprover/vscode-lean4/pull/41\">https://github.com/leanprover/vscode-lean4/pull/41</a></p>\n<p>I'm not a \"GitHub collaborator\" so I cannot add the \"awaiting-review\" label. </p>\n<p>Thanks for taking the time to look at this yall! XD</p>",
        "id": 255573486,
        "sender_full_name": "Steven Ulin",
        "timestamp": 1633008496
    }
]