[
    {
        "content": "<p>I'm getting stuck on trying to show this example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Subtype</span> <span class=\"n\">P</span> <span class=\"bp\">=</span> <span class=\"n\">Subtype</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;-&gt;</span> <span class=\"n\">Q</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>the other direction was fairly straightforward, but for this example I can't figure out how to use <code>h</code>. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">intro</span> <span class=\"n\">x</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Iff.intro</span>\n  <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">mp</span> <span class=\"c1\">-- P x</span>\n    <span class=\"k\">let</span> <span class=\"n\">xq</span> <span class=\"o\">:</span> <span class=\"n\">Subtype</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"bp\">▸</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">mp</span><span class=\"o\">⟩</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">xq.val</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>If I try this, <code>rfl</code> fails. I run into a similar problem with rewriting:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">mp</span>\n    <span class=\"k\">let</span> <span class=\"n\">xp</span> <span class=\"o\">:</span> <span class=\"n\">Subtype</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">mp</span><span class=\"o\">⟩</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">xp</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">xp.val</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>Again <code>rfl</code> fails, but will succeed if the rewrite is commented out.</p>\n<p>The actual problem I'm trying to solve <em>could</em> be done with subsets instead of subtypes, but I'm interested in seeing how far I can go without making that change.</p>",
        "id": 303522305,
        "sender_full_name": "Evante Garza",
        "timestamp": 1665523334
    },
    {
        "content": "<p>Equality of types is \"evil\" in Lean -- for example <code>Nat = Int</code> is undecidable and your example might be too. In the cardinality model of Lean's type theory the subtypes might be equal simply because they have the same size.</p>",
        "id": 303528855,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665526242
    }
]