[
    {
        "content": "<p>I've got this example here, namely bob:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">Bob</span> <span class=\"o\">:=</span>\n<span class=\"n\">Sigma</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"k\">forall</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">,</span> <span class=\"n\">Unit</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"n\">Sigma</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"k\">forall</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">,</span> <span class=\"n\">Unit</span><span class=\"o\">)</span><span class=\"bp\">=&gt;</span>\n<span class=\"n\">Sigma</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"k\">forall</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">,</span><span class=\"n\">Unit</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n<span class=\"n\">Unit</span>\n</code></pre></div>\n<p>Now I want to define something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">justone</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Bob</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">C</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">C</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">C.2.1</span>\n</code></pre></div>\n<p>Now is there some alternative where instead of C.2.1 I could have done C.2?</p>\n<p>I also was interested in the general situation with C.3, C.4, and so on. It's not a big deal I guess.</p>",
        "id": 318349834,
        "sender_full_name": "Dean Young",
        "timestamp": 1672280030
    },
    {
        "content": "<p>This is what structures are for</p>",
        "id": 318365262,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1672295789
    }
]