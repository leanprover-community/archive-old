[
    {
        "content": "<p>I set up a fork of Lean 4 where I <code>builtin_initialize</code> an env extension and an attribute in a new file in the standard library. Lean then builds fine, but when I run the resulting <code>lean</code> binary, it reports</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>unknown declaration 'initFn._@.Init.Data.Random._hyg.631'\n</code></pre></div>\n<p>This happens with both the Nix build and the CMake build. I got this error a couple of times already and managed to 'solve' it by executing random commands until it went away, but I'd prefer to know what's actually going on.</p>",
        "id": 244031918,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624737927
    },
    {
        "content": "<p>(If you need the code, I'll be happy to upload it of course, but I suspect this might be expected behaviour in some sense.)</p>",
        "id": 244032110,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624738086
    },
    {
        "content": "<p>Did you update stage 0 (see Building Lean docs) after the change? Your binary with the attribute likely isn't compatible with the stdlib built without it, which might explain any weird behavior.</p>",
        "id": 244032815,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624739218
    },
    {
        "content": "<p>Okay, that's probably the culprit then. Thanks! (Live support from the devs on a Saturday evening -- I am spoilt.)</p>",
        "id": 244032913,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624739385
    },
    {
        "content": "<p>When I'm advertising lean to mathematicians I tend to mention the \"24/7 helpline\" as I now call the Lean Zulip</p>",
        "id": 244035042,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1624742470
    },
    {
        "content": "<p>I'll need some more help from that helpline I'm afraid. After I update <code>stage0</code> (<code>make update-stage0</code> and commit), <code>stage0</code> builds but <code>stage1</code> does not. It fails to build <code>Init/Data.lean</code> with the same error:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Init/Data.lean:6:0: error: unknown declaration 'initFn._@.Init.Data.Random._hyg.631'\n</code></pre></div>\n<p>I also get the exact same error when I build <code>stage2</code> without updating <code>stage0</code> first. Same with the equivalent Nix commands as well.</p>",
        "id": 244126047,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624876458
    },
    {
        "content": "<p>Ok, then it must be something specific to your code. I feel like I have seen that error once before when changing the stages, but not in a long while.</p>",
        "id": 244126278,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624876640
    },
    {
        "content": "<p>Okay, let me minimise. So I should be able to build <code>stage2</code> without updating <code>stage0</code>, right?</p>",
        "id": 244129195,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624878640
    },
    {
        "content": "<p>Yes. Building stage2 or update-stage0+stage1 should be equivalent</p>",
        "id": 244131549,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624880205
    },
    {
        "content": "<p><a href=\"https://github.com/JLimperg/lean4-aesop/blob/1eb5db489d99f555446c36bd338385592892162d/src/Lean/Aesop.lean\">Minimised</a>.</p>\n<p>The issue is somehow sensitive to imports. Building this tree with <code>nix build .#stage2</code> fails, but after removing the <code>import Lean.Meta</code> line, the same command succeeds.</p>",
        "id": 244182155,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624903003
    },
    {
        "content": "<p><a href=\"https://github.com/JLimperg/lean4-aesop/blob/f2ab02585801203940d33c44d0bd8e5971bcf686/src/Lean/Aesop.lean\">Minimised some more</a>. Seems like it doesn't actually matter what I <code>builtin_initialize</code>.</p>",
        "id": 244184878,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624904168
    },
    {
        "content": "<p><a href=\"https://github.com/JLimperg/lean4-aesop/blob/48aa4d15ae0d883422be8700eedf0dd51a0ed27d/src/Lean/Bug.lean\">Turns out</a> the error has nothing to do with <code>builtin_initialize</code> after all. It appears to be triggered by importing <code>Lean.Meta.CollectFVars</code>, a completely innocuous 30-line module. Importing it transitively also triggers the error; importing every other module doesn't. Should I open an issue at this point?</p>",
        "id": 244264433,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624965160
    },
    {
        "content": "<p>It seems to work if you move your import to the end (presumably after the original imports). I'm not yet sure why.</p>",
        "id": 244265768,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624966167
    },
    {
        "content": "<p>The import of <code>Lean.Bug</code>, that is</p>",
        "id": 244265785,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1624966182
    },
    {
        "content": "<p>Yes, that works, also for my non-minimised code.</p>",
        "id": 244267399,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1624967252
    }
]