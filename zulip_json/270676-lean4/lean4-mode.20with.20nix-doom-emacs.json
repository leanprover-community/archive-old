[
    {
        "content": "<p>I'm using NixOS with flakes, a NixOS home-manager module, and nix-doom-emacs via the home-manager module.<br>\nI have the following  in my home-manager setup:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">programs.doom</span><span class=\"bp\">-</span><span class=\"n\">emacs</span> <span class=\"bp\">=</span> <span class=\"o\">{</span>\n  <span class=\"n\">enable</span> <span class=\"bp\">=</span> <span class=\"n\">true</span><span class=\"bp\">;</span>\n  <span class=\"n\">doomPrivateDir</span> <span class=\"bp\">=</span> <span class=\"bp\">../</span><span class=\"n\">doom</span><span class=\"bp\">;</span>\n  <span class=\"n\">emacsPackage</span> <span class=\"bp\">=</span> <span class=\"n\">pkgs.emacs</span><span class=\"bp\">;</span>\n  <span class=\"n\">emacsPackagesOverlay</span> <span class=\"bp\">=</span> <span class=\"n\">eself</span><span class=\"o\">:</span> <span class=\"n\">esuper</span><span class=\"o\">:</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"bp\">=</span> <span class=\"n\">eself.trivialBuild</span> <span class=\"n\">rec</span> <span class=\"o\">{</span>\n        <span class=\"n\">pname</span> <span class=\"bp\">=</span> <span class=\"s2\">\"lean4-mode\"</span><span class=\"bp\">;</span>\n        <span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"v4.0.0-m2\"</span><span class=\"bp\">;</span>\n        <span class=\"n\">src</span> <span class=\"bp\">=</span> <span class=\"n\">pkgs.fetchFromGitHub</span> <span class=\"o\">{</span>\n          <span class=\"n\">owner</span> <span class=\"bp\">=</span> <span class=\"s2\">\"leanprover\"</span><span class=\"bp\">;</span>\n          <span class=\"n\">repo</span> <span class=\"bp\">=</span> <span class=\"s2\">\"lean4\"</span><span class=\"bp\">;</span>\n          <span class=\"n\">rev</span> <span class=\"bp\">=</span> <span class=\"n\">version</span><span class=\"bp\">;</span>\n        <span class=\"o\">}</span><span class=\"bp\">;</span>\n        <span class=\"n\">sourceRoot</span> <span class=\"bp\">=</span> <span class=\"s2\">\"source/lean4-mode\"</span><span class=\"bp\">;</span>\n      <span class=\"o\">}</span><span class=\"bp\">;</span>\n    <span class=\"o\">}</span><span class=\"bp\">;</span>\n<span class=\"o\">}</span><span class=\"bp\">;</span>\n</code></pre></div>\n<p>and in my .doom.d/packages.el</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">package</span><span class=\"bp\">!</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>and <code>(require 'lean4-mode)</code> fails</p>\n<p>My NixOS build succeeds, but doesn't create a lean4-mode package that I can find in the store. The NixOS build fails if I don't include the overlay.</p>",
        "id": 246636108,
        "sender_full_name": "ohhaimark",
        "timestamp": 1626808650
    },
    {
        "content": "<p>What can I do?</p>",
        "id": 246636312,
        "sender_full_name": "ohhaimark",
        "timestamp": 1626808735
    },
    {
        "content": "<p>I use doom-emacs with lean4-mode, but the boring way unfortunately</p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">lean4-mode</span> <span class=\"nb\">:recipe</span>\n  <span class=\"p\">(</span><span class=\"nb\">:local-repo</span> <span class=\"s\">\"~/lean/lean\"</span>\n   <span class=\"nb\">:files</span> <span class=\"p\">(</span><span class=\"s\">\"lean4-mode/*.el\"</span><span class=\"p\">)</span>\n   <span class=\"nb\">:build</span> <span class=\"p\">(</span><span class=\"nb\">:not</span> <span class=\"nv\">compile</span><span class=\"p\">)))</span>\n</code></pre></div>",
        "id": 246643579,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1626812199
    },
    {
        "content": "<p>Did something happen with <code>lean4-mode</code> recently? I used to use </p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span> <span class=\"nv\">lean4-mode</span> <span class=\"nb\">:recipe</span>\n  <span class=\"p\">(</span><span class=\"nb\">:host</span> <span class=\"nv\">github</span>\n   <span class=\"nb\">:repo</span> <span class=\"s\">\"leanprover/lean4\"</span>\n   <span class=\"nb\">:files</span> <span class=\"p\">(</span><span class=\"s\">\"lean4-mode/*.el\"</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>and it worked just fine for a while, but now <code>lean4-mode</code> is not found at all (after running <code>doom upgrade</code>)</p>",
        "id": 270326675,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643771054
    },
    {
        "content": "<p>Ah I see, <code>lean4-mode</code> has been moved to its own repo in <code>github.com/leanprover/lean4-mode</code>. The following seems to work for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">package</span><span class=\"bp\">!</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"o\">:</span><span class=\"n\">recipe</span>\n  <span class=\"o\">(:</span><span class=\"n\">host</span> <span class=\"n\">github</span>\n   <span class=\"o\">:</span><span class=\"n\">repo</span> <span class=\"s2\">\"leanprover/lean4-mode\"</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>Is this reasonable, or does anyone have any other recommended configuration options?</p>",
        "id": 270329750,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643773862
    },
    {
        "content": "<p>Looks pretty much equivalent to the <code>use-package</code> call in the readme. Feel free to add as Doom instructions.</p>",
        "id": 270350730,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643791527
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4-mode/pull/2\">https://github.com/leanprover/lean4-mode/pull/2</a></p>",
        "id": 270412283,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643819023
    },
    {
        "content": "<p>Should the instructions (for <code>nix-doom-emacs</code>) that are currently in the <code>README</code> still work?</p>",
        "id": 286148834,
        "sender_full_name": "Eric Meinhardt",
        "timestamp": 1655251475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/270676-lean4/topic/lean4-mode.20with.20nix-doom-emacs/near/270412283\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover/lean4-mode/pull/2\">https://github.com/leanprover/lean4-mode/pull/2</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span>, would you mind elaborating about how you've packaged <code>lean4-mode</code> and made it legible to <code>doom-emacs</code>? The instructions you added leave a lot to the imagination.</p>",
        "id": 291765118,
        "sender_full_name": "Eric Meinhardt",
        "timestamp": 1659472451
    },
    {
        "content": "<p>I think if you add </p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span><span class=\"w\"> </span><span class=\"nv\">lean4-mode</span><span class=\"w\"> </span><span class=\"nb\">:recipe</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nb\">:host</span><span class=\"w\"> </span><span class=\"nv\">github</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nb\">:repo</span><span class=\"w\"> </span><span class=\"s\">\"leanprover/lean4-mode\"</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>to your <code>packages.el</code> (and call <code>doom sync</code>, etc. as usual), it should work.</p>",
        "id": 291765280,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1659472543
    },
    {
        "content": "<p>There's nothing packaged, this gets the code for the package directly from github. Is <code>lean4-mode</code> on melpa yet?</p>",
        "id": 291765433,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1659472606
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/270676-lean4/topic/lean4-mode.20with.20nix-doom-emacs/near/291765280\">said</a>:</p>\n<blockquote>\n<p>I think if you add </p>\n<div class=\"codehilite\" data-code-language=\"EmacsLisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">package!</span><span class=\"w\"> </span><span class=\"nv\">lean4-mode</span><span class=\"w\"> </span><span class=\"nb\">:recipe</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nb\">:host</span><span class=\"w\"> </span><span class=\"nv\">github</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nb\">:repo</span><span class=\"w\"> </span><span class=\"s\">\"leanprover/lean4-mode\"</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>to your <code>packages.el</code> (and call <code>doom sync</code>, etc. as usual), it should work.</p>\n</blockquote>\n<p>Here's what I get when rebuilding my nixos config (including <code>doom-emacs</code> managed via <code>home-manager</code>/<code>nix-doom-emacs</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">&gt;</span> <span class=\"n\">sudo</span> <span class=\"bp\">-</span><span class=\"n\">i</span> <span class=\"n\">nixos</span><span class=\"bp\">-</span><span class=\"n\">rebuild</span> <span class=\"n\">build</span>\n<span class=\"n\">building</span> <span class=\"n\">Nix...</span>\n<span class=\"n\">building</span> <span class=\"n\">the</span> <span class=\"n\">system</span> <span class=\"n\">configuration...</span>\n<span class=\"n\">building</span> <span class=\"bp\">'/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">vnll0mqgll34qp901qih5df5ixczcd8l</span><span class=\"bp\">-</span><span class=\"n\">emacs</span><span class=\"bp\">-</span><span class=\"n\">straight</span><span class=\"bp\">-</span><span class=\"n\">packages.json.drv'...</span>\n<span class=\"n\">installing</span>\n<span class=\"o\">[</span><span class=\"n\">nix</span><span class=\"bp\">-</span><span class=\"n\">doom</span><span class=\"bp\">-</span><span class=\"n\">emacs</span><span class=\"o\">]</span> <span class=\"n\">Advising</span> <span class=\"n\">doom</span> <span class=\"n\">to</span> <span class=\"n\">keep</span> <span class=\"n\">it</span> <span class=\"n\">alive...</span>\n<span class=\"n\">Loading</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">myqh2sqs9v4nxp9pv462azx4y2vmabik</span><span class=\"bp\">-</span><span class=\"n\">doom</span><span class=\"bp\">-</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">doom...</span>\n<span class=\"n\">Installing</span> <span class=\"n\">Doom</span> <span class=\"n\">Emacs</span><span class=\"bp\">!</span>\n\n<span class=\"bp\">-</span> <span class=\"n\">Skipping</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"n\">ghy9rm08wk51vwky698xzdgi6vlyvhyj</span><span class=\"bp\">-</span><span class=\"n\">doom.d</span><span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">already</span> <span class=\"n\">exists</span><span class=\"o\">)</span>\n  <span class=\"bp\">-</span> <span class=\"n\">Skipping</span> <span class=\"n\">init.el</span> <span class=\"o\">(</span><span class=\"n\">already</span> <span class=\"n\">exists</span><span class=\"o\">)</span>\n  <span class=\"bp\">-</span> <span class=\"n\">Skipping</span> <span class=\"n\">config.el</span> <span class=\"o\">(</span><span class=\"n\">already</span> <span class=\"n\">exists</span><span class=\"o\">)</span>\n  <span class=\"bp\">-</span> <span class=\"n\">Skipping</span> <span class=\"n\">packages.el</span> <span class=\"o\">(</span><span class=\"n\">already</span> <span class=\"n\">exists</span><span class=\"o\">)</span>\n<span class=\"n\">Installing</span> <span class=\"n\">plugins</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">Installing</span> <span class=\"n\">packages...</span>\n  <span class=\"bp\">-</span> <span class=\"n\">No</span> <span class=\"n\">packages</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">installed</span>\n<span class=\"n\">Regenerating</span> <span class=\"n\">autoloads</span> <span class=\"n\">files</span>\n<span class=\"n\">Deploying</span> <span class=\"n\">commit</span><span class=\"bp\">-</span><span class=\"n\">msg</span> <span class=\"n\">and</span> <span class=\"n\">pre</span><span class=\"bp\">-</span><span class=\"n\">push</span> <span class=\"n\">git</span> <span class=\"n\">hooks</span>\n  <span class=\"bp\">-</span> <span class=\"n\">Loaded</span> <span class=\"s2\">\"/nix/store/myqh2sqs9v4nxp9pv462azx4y2vmabik-doom-src/ci.el\"</span>\n  <span class=\"bp\">!</span> <span class=\"n\">Cannot</span> <span class=\"n\">locate</span> <span class=\"n\">a</span> <span class=\"n\">git</span> <span class=\"n\">repo</span> <span class=\"k\">in</span> <span class=\"bp\">./</span>\n<span class=\"bp\">✓</span>  <span class=\"n\">Finished</span><span class=\"bp\">!</span> <span class=\"n\">Doom</span> <span class=\"n\">is</span> <span class=\"n\">ready</span> <span class=\"n\">to</span> <span class=\"n\">go</span><span class=\"bp\">!</span>\n\n<span class=\"n\">But</span> <span class=\"n\">before</span> <span class=\"n\">you</span> <span class=\"n\">doom</span> <span class=\"n\">yourself</span><span class=\"o\">,</span> <span class=\"n\">here</span> <span class=\"n\">are</span> <span class=\"n\">some</span> <span class=\"n\">things</span> <span class=\"n\">you</span> <span class=\"n\">should</span> <span class=\"n\">know</span><span class=\"o\">:</span>\n\n<span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"n\">Don't</span> <span class=\"n\">forget</span> <span class=\"n\">to</span> <span class=\"n\">run</span> <span class=\"bp\">'</span><span class=\"n\">doom</span> <span class=\"n\">sync'</span><span class=\"o\">,</span> <span class=\"k\">then</span> <span class=\"n\">restart</span> <span class=\"n\">Emacs</span><span class=\"o\">,</span> <span class=\"n\">after</span> <span class=\"n\">modifying</span>\n   <span class=\"bp\">~/.</span><span class=\"n\">doom.d</span><span class=\"bp\">/</span><span class=\"n\">init.el</span> <span class=\"n\">or</span> <span class=\"bp\">~/.</span><span class=\"n\">doom.d</span><span class=\"bp\">/</span><span class=\"n\">packages.el.</span>\n\n   <span class=\"n\">This</span> <span class=\"n\">command</span> <span class=\"n\">ensures</span> <span class=\"n\">needed</span> <span class=\"n\">packages</span> <span class=\"n\">are</span> <span class=\"n\">installed</span><span class=\"o\">,</span> <span class=\"n\">orphaned</span> <span class=\"n\">packages</span> <span class=\"n\">are</span>\n   <span class=\"n\">removed</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">your</span> <span class=\"n\">autoloads</span><span class=\"bp\">/</span><span class=\"n\">cache</span> <span class=\"n\">files</span> <span class=\"n\">are</span> <span class=\"n\">up</span> <span class=\"n\">to</span> <span class=\"n\">date.</span> <span class=\"n\">When</span> <span class=\"k\">in</span> <span class=\"n\">doubt</span><span class=\"o\">,</span> <span class=\"n\">run</span>\n   <span class=\"bp\">'</span><span class=\"n\">doom</span> <span class=\"n\">sync'</span><span class=\"bp\">!</span>\n\n<span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"n\">If</span> <span class=\"n\">something</span> <span class=\"n\">goes</span> <span class=\"n\">wrong</span><span class=\"o\">,</span> <span class=\"n\">run</span> <span class=\"bp\">`</span><span class=\"n\">doom</span> <span class=\"n\">doctor</span><span class=\"bp\">`.</span> <span class=\"n\">It</span> <span class=\"n\">diagnoses</span> <span class=\"n\">common</span> <span class=\"n\">issues</span> <span class=\"k\">with</span>\n   <span class=\"n\">your</span> <span class=\"n\">environment</span> <span class=\"n\">and</span> <span class=\"n\">setup</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">may</span> <span class=\"n\">offer</span> <span class=\"n\">clues</span> <span class=\"n\">about</span> <span class=\"n\">what</span> <span class=\"n\">is</span> <span class=\"n\">wrong.</span>\n\n<span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"n\">Use</span> <span class=\"bp\">'</span><span class=\"n\">doom</span> <span class=\"n\">upgrade'</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">Doom.</span> <span class=\"n\">Doing</span> <span class=\"n\">it</span> <span class=\"n\">any</span> <span class=\"n\">other</span> <span class=\"n\">way</span> <span class=\"n\">will</span> <span class=\"n\">require</span>\n   <span class=\"n\">additional</span> <span class=\"n\">steps.</span> <span class=\"n\">Run</span> <span class=\"bp\">'</span><span class=\"n\">doom</span> <span class=\"n\">help</span> <span class=\"n\">upgrade'</span> <span class=\"n\">to</span> <span class=\"n\">understand</span> <span class=\"n\">those</span> <span class=\"n\">extra</span> <span class=\"n\">steps.</span>\n\n<span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"n\">Access</span> <span class=\"n\">Doom's</span> <span class=\"n\">documentation</span> <span class=\"k\">from</span> <span class=\"n\">within</span> <span class=\"n\">Emacs</span> <span class=\"n\">via</span> <span class=\"bp\">'</span><span class=\"n\">SPC</span> <span class=\"n\">h</span> <span class=\"n\">d</span> <span class=\"n\">h'</span> <span class=\"n\">or</span> <span class=\"bp\">'</span><span class=\"n\">C</span><span class=\"bp\">-</span><span class=\"n\">h</span> <span class=\"n\">d</span> <span class=\"n\">h'</span>\n   <span class=\"o\">(</span><span class=\"n\">or</span> <span class=\"bp\">'</span><span class=\"n\">M</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"n\">doom</span><span class=\"bp\">/</span><span class=\"n\">help'</span><span class=\"o\">)</span>\n\n<span class=\"n\">Have</span> <span class=\"k\">fun</span><span class=\"bp\">!</span>\n\n<span class=\"n\">Error</span> <span class=\"k\">in</span> <span class=\"n\">kill</span><span class=\"bp\">-</span><span class=\"n\">emacs</span><span class=\"bp\">-</span><span class=\"n\">hook</span> <span class=\"o\">(</span><span class=\"n\">straight</span><span class=\"c1\">--transaction-finalize): (file-missing \"Opening output file\" \"No such file or directory\" \"/build/tmp.En4Aaxq3n9/local/straight/build-28.1-cache.el\")</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">evaluation</span> <span class=\"n\">aborted</span> <span class=\"k\">with</span> <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"n\">error</span> <span class=\"n\">message</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">Package</span> <span class=\"n\">not</span> <span class=\"n\">available</span><span class=\"o\">:</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode'</span>\n<span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"c1\">--show-trace' to show detailed location information)</span>\n</code></pre></div>\n<p><code>lean4-mode</code> is not on melpa yet.</p>",
        "id": 291766343,
        "sender_full_name": "Eric Meinhardt",
        "timestamp": 1659473079
    },
    {
        "content": "<p>I'm very far from being a <code>nix</code> expert. Hopefully someone else can help.</p>",
        "id": 291766550,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1659473175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/270676-lean4/topic/lean4-mode.20with.20nix-doom-emacs/near/291766550\">said</a>:</p>\n<blockquote>\n<p>I'm very far from being a <code>nix</code> expert. Hopefully someone else can help.</p>\n</blockquote>\n<p>If  you have a currently working nix-doom-emacs config you can share, that would definitely help.</p>",
        "id": 291766714,
        "sender_full_name": "Eric Meinhardt",
        "timestamp": 1659473261
    },
    {
        "content": "<p>I personally don't use <code>nix</code>.</p>",
        "id": 291766798,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1659473291
    },
    {
        "content": "<p>I use Nix, but not nix-doom-emacs. Is there somewhere you can put this in your Nix config? I use emacs-overlay and put it in extraEmacsPackages. I see nix-doom-emacs has an <code>extraPackagesOverlay</code> attribute, so perhaps you can do something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">emacsPackagesOverlay</span> <span class=\"bp\">=</span> <span class=\"n\">self</span><span class=\"o\">:</span> <span class=\"n\">super</span><span class=\"o\">:</span> <span class=\"o\">{</span>\n  <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"bp\">=</span> <span class=\"n\">self.melpaBuild</span> <span class=\"n\">rec</span> <span class=\"o\">{</span>\n    <span class=\"n\">pname</span> <span class=\"bp\">=</span> <span class=\"s2\">\"lean4-mode\"</span><span class=\"bp\">;</span>\n    <span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"1\"</span><span class=\"bp\">;</span>\n    <span class=\"n\">commit</span> <span class=\"bp\">=</span> <span class=\"s2\">\"37d5c99b7b29c80ab78321edd6773200deb0bca6\"</span><span class=\"bp\">;</span>\n    <span class=\"n\">src</span> <span class=\"bp\">=</span> <span class=\"n\">self.fetchFromGitHub</span> <span class=\"o\">{</span>\n      <span class=\"n\">owner</span> <span class=\"bp\">=</span> <span class=\"s2\">\"leanprover\"</span><span class=\"bp\">;</span>\n      <span class=\"n\">repo</span> <span class=\"bp\">=</span> <span class=\"s2\">\"lean4-mode\"</span><span class=\"bp\">;</span>\n      <span class=\"n\">rev</span> <span class=\"bp\">=</span> <span class=\"n\">commit</span><span class=\"bp\">;</span>\n      <span class=\"n\">sha256</span> <span class=\"bp\">=</span> <span class=\"s2\">\"sha256-+dRaXB7uvN/weSZiKcfSKWhcdJVNg9Vg8k0pJkDNjpc=\"</span><span class=\"bp\">;</span>\n    <span class=\"o\">}</span><span class=\"bp\">;</span>\n    <span class=\"n\">packageRequires</span> <span class=\"bp\">=</span> <span class=\"k\">with</span> <span class=\"n\">self.melpaPackages</span><span class=\"bp\">;</span>\n      <span class=\"o\">[</span> <span class=\"n\">dash</span> <span class=\"n\">f</span> <span class=\"n\">flycheck</span> <span class=\"n\">magit</span><span class=\"bp\">-</span><span class=\"kn\">section</span> <span class=\"n\">lsp</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"n\">s</span> <span class=\"o\">]</span><span class=\"bp\">;</span>\n    <span class=\"n\">recipe</span> <span class=\"bp\">=</span> <span class=\"n\">self.writeText</span> <span class=\"s2\">\"recipe\"</span> <span class=\"bp\">''</span>\n               <span class=\"o\">(</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"o\">:</span><span class=\"n\">repo</span> <span class=\"s2\">\"leanprover/lean4-mode\"</span> <span class=\"o\">:</span><span class=\"n\">fetcher</span> <span class=\"n\">github</span><span class=\"o\">)</span>\n             <span class=\"bp\">'';</span>\n  <span class=\"o\">})</span><span class=\"bp\">;</span>\n<span class=\"o\">}</span><span class=\"bp\">;</span>\n</code></pre></div>",
        "id": 291790287,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1659490536
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 291790360,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1659490656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/270676-lean4/topic/lean4-mode.20with.20nix-doom-emacs/near/291790287\">said</a>:</p>\n<blockquote>\n<p>I use Nix, but not nix-doom-emacs. Is there somewhere you can put this in your Nix config? I use emacs-overlay and put it in extraEmacsPackages. I see nix-doom-emacs has an <code>extraPackagesOverlay</code> attribute, so perhaps you can do something like</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">emacsPackagesOverlay</span> <span class=\"bp\">=</span> <span class=\"n\">self</span><span class=\"o\">:</span> <span class=\"n\">super</span><span class=\"o\">:</span> <span class=\"o\">{</span>\n  <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"bp\">=</span> <span class=\"n\">self.melpaBuild</span> <span class=\"n\">rec</span> <span class=\"o\">{</span>\n    <span class=\"n\">pname</span> <span class=\"bp\">=</span> <span class=\"s2\">\"lean4-mode\"</span><span class=\"bp\">;</span>\n    <span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"1\"</span><span class=\"bp\">;</span>\n    <span class=\"n\">commit</span> <span class=\"bp\">=</span> <span class=\"s2\">\"37d5c99b7b29c80ab78321edd6773200deb0bca6\"</span><span class=\"bp\">;</span>\n    <span class=\"n\">src</span> <span class=\"bp\">=</span> <span class=\"n\">self.fetchFromGitHub</span> <span class=\"o\">{</span>\n      <span class=\"n\">owner</span> <span class=\"bp\">=</span> <span class=\"s2\">\"leanprover\"</span><span class=\"bp\">;</span>\n      <span class=\"n\">repo</span> <span class=\"bp\">=</span> <span class=\"s2\">\"lean4-mode\"</span><span class=\"bp\">;</span>\n      <span class=\"n\">rev</span> <span class=\"bp\">=</span> <span class=\"n\">commit</span><span class=\"bp\">;</span>\n      <span class=\"n\">sha256</span> <span class=\"bp\">=</span> <span class=\"s2\">\"sha256-+dRaXB7uvN/weSZiKcfSKWhcdJVNg9Vg8k0pJkDNjpc=\"</span><span class=\"bp\">;</span>\n    <span class=\"o\">}</span><span class=\"bp\">;</span>\n    <span class=\"n\">packageRequires</span> <span class=\"bp\">=</span> <span class=\"k\">with</span> <span class=\"n\">self.melpaPackages</span><span class=\"bp\">;</span>\n      <span class=\"o\">[</span> <span class=\"n\">dash</span> <span class=\"n\">f</span> <span class=\"n\">flycheck</span> <span class=\"n\">magit</span><span class=\"bp\">-</span><span class=\"kn\">section</span> <span class=\"n\">lsp</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"n\">s</span> <span class=\"o\">]</span><span class=\"bp\">;</span>\n    <span class=\"n\">recipe</span> <span class=\"bp\">=</span> <span class=\"n\">self.writeText</span> <span class=\"s2\">\"recipe\"</span> <span class=\"bp\">''</span>\n               <span class=\"o\">(</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">mode</span> <span class=\"o\">:</span><span class=\"n\">repo</span> <span class=\"s2\">\"leanprover/lean4-mode\"</span> <span class=\"o\">:</span><span class=\"n\">fetcher</span> <span class=\"n\">github</span><span class=\"o\">)</span>\n             <span class=\"bp\">'';</span>\n  <span class=\"o\">})</span><span class=\"bp\">;</span>\n<span class=\"o\">}</span><span class=\"bp\">;</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Yes! With very slight adaptation (<code>self.fetchFromGitHub</code> -&gt; <code>pkgs.fetchFromGitHub</code> and <code>self.writeText</code> -&gt; <code>pkgs.writeText</code>) for my non-flake and home-manager-based config this looks like it works. Working on a PR for <code>lean4-mode</code> now. Thanks!</p>",
        "id": 291924025,
        "sender_full_name": "Eric Meinhardt",
        "timestamp": 1659562803
    }
]