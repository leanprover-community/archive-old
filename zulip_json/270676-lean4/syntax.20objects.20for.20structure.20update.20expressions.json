[
    {
        "content": "<p>I'm trying to construct a syntax object for a structure update. The following gives me an error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">TermElabM</span> <span class=\"n\">Syntax</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">t</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">{</span> <span class=\"n\">a</span> <span class=\"k\">with</span> <span class=\"bp\">$</span><span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span> <span class=\"o\">})</span>\n</code></pre></div>\n<p>error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">expected</span> <span class=\"sc\">'}'</span>\n</code></pre></div>\n<p>located on <code>:=</code>. If I replace <code>$x</code> with <code>x</code>, the error disappears. How can I get around that?</p>",
        "id": 267326372,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1641690228
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">TermElabM</span> <span class=\"n\">Syntax</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">t</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">{</span> <span class=\"n\">a</span> <span class=\"k\">with</span> <span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span> <span class=\"o\">})</span>\n</code></pre></div>",
        "id": 267339055,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641708784
    },
    {
        "content": "<p>Thanks! Why is that necessary?</p>",
        "id": 267376846,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1641761143
    },
    {
        "content": "<p>Because the left hand side of a structure update can be more than just an identifier in lean 4. I'm not sure what is actually supported so far, but I believe it syntactically supports things like <code>{ s with foo.bar[1] := a }</code></p>",
        "id": 267403642,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641800506
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span>\n  <span class=\"n\">bar</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n<span class=\"kd\">structure</span> <span class=\"n\">Bar</span> <span class=\"o\">:=</span>\n  <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span>\n  <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n\n<span class=\"k\">#check</span> <span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">{</span> <span class=\"n\">s</span> <span class=\"k\">with</span> <span class=\"n\">foo.bar</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 267403887,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1641800737
    }
]