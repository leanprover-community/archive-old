[
    {
        "content": "<p>Hello, I'm having trouble trying to get the following example to work</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab</span> <span class=\"n\">Meta</span>\n\n<span class=\"n\">declare_syntax_cat</span> <span class=\"n\">my_cat</span>\n\n<span class=\"n\">syntax</span> <span class=\"n\">op</span> <span class=\"o\">:=</span> <span class=\"s2\">\"+\"</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"s2\">\"-\"</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"s2\">\"*\"</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"s2\">\"/\"</span>\n<span class=\"n\">syntax</span> <span class=\"n\">op</span> <span class=\"o\">:</span> <span class=\"n\">my_cat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">elabMyCat</span> <span class=\"o\">:</span> <span class=\"n\">Syntax</span> <span class=\"bp\">â†’</span> <span class=\"n\">MetaM</span> <span class=\"n\">Expr</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">my_cat</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">o</span><span class=\"o\">:</span><span class=\"n\">op</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">match</span> <span class=\"n\">o</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">op</span><span class=\"bp\">|</span> <span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">return</span> <span class=\"n\">mkStrLit</span> <span class=\"s2\">\"+\"</span>\n    <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">op</span><span class=\"bp\">|</span> <span class=\"bp\">-</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">return</span> <span class=\"n\">mkStrLit</span> <span class=\"s2\">\"-\"</span>\n    <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">op</span><span class=\"bp\">|</span> <span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">return</span> <span class=\"n\">mkStrLit</span> <span class=\"s2\">\"*\"</span>\n    <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">op</span><span class=\"bp\">|</span> <span class=\"bp\">/</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">return</span> <span class=\"n\">mkStrLit</span> <span class=\"s2\">\"/\"</span>\n    <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throwUnsupportedSyntax</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throwUnsupportedSyntax</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"[my_cat| \"</span> <span class=\"n\">e</span><span class=\"o\">:</span><span class=\"n\">my_cat</span> <span class=\"s2\">\"]\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"n\">elabMyCat</span> <span class=\"n\">e</span>\n\n<span class=\"k\">#eval</span> <span class=\"o\">[</span><span class=\"n\">my_cat</span><span class=\"bp\">|</span> <span class=\"bp\">-</span> <span class=\"o\">]</span>\n</code></pre></div>\n<p>At the bottom <code>#eval</code>, no matter what I do, it always returns <code>\"+\"</code> and doesn't seem to be matching with the cases I've defined in <code>elabMyCat</code>. What am I missing? Thanks!</p>",
        "id": 290948566,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1658865821
    },
    {
        "content": "<p>Maybe this is the same as the issue I hit recently? <a href=\"#narrow/stream/270676-lean4/topic/commandElab.20behaving.20weirdly/near/287328051\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/commandElab.20behaving.20weirdly/near/287328051</a></p>",
        "id": 290948790,
        "sender_full_name": "David Renshaw",
        "timestamp": 1658865912
    },
    {
        "content": "<p>maybe <a href=\"#narrow/stream/270676-lean4/topic/commandElab.20behaving.20weirdly/near/287227944\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/commandElab.20behaving.20weirdly/near/287227944</a> is a better link</p>",
        "id": 290948890,
        "sender_full_name": "David Renshaw",
        "timestamp": 1658865960
    },
    {
        "content": "<p>Ah... I see. Well, I only have atoms here so I guess this is a bit awkward. I'll just write out all the cases then</p>",
        "id": 290948985,
        "sender_full_name": "Hanting Zhang",
        "timestamp": 1658865987
    }
]