[
    {
        "content": "<p>Does anybody have a working example of declaring a new (non-builtin) <code>KeyedDeclsAttribute</code>?</p>",
        "id": 240135812,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1621909399
    },
    {
        "content": "<p>I thought that custom attributes were not yet supported? I tried going through the motions a while ago and hit some error about <code>initialize</code> not working after initialization</p>",
        "id": 240135868,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621909451
    },
    {
        "content": "<p>Okay, thanks.</p>",
        "id": 240136055,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1621909694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/KeyedDeclsAttribute/near/240135868\">said</a>:</p>\n<blockquote>\n<p>I thought that custom attributes were not yet supported? I tried going through the motions a while ago and hit some error about <code>initialize</code> not working after initialization</p>\n</blockquote>\n<p>What makes you think that custom attributes are not yet supported? It seems to me one can register attributes the same way core Lean does (with <code>builtin_initialize</code>).</p>",
        "id": 240144919,
        "sender_full_name": "Mac",
        "timestamp": 1621921653
    },
    {
        "content": "<p>that's what I thought as well, but I tried it and it didn't work</p>",
        "id": 240145344,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621922180
    },
    {
        "content": "<p>and I didn't know enough about how <code>initialize</code> is set up to troubleshoot it</p>",
        "id": 240145362,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621922217
    },
    {
        "content": "<p>Here's a MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- A.lean</span>\n<span class=\"n\">initialize</span> <span class=\"n\">fooAttr</span> <span class=\"o\">:</span> <span class=\"n\">TagAttribute</span> <span class=\"bp\">‚Üê</span>\n  <span class=\"n\">registerTagAttribute</span> <span class=\"bp\">`</span><span class=\"n\">foo</span> <span class=\"s2\">\"test\"</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- B.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">A</span> <span class=\"c1\">-- error: failed to register environment, extensions can only be registered during initialization</span>\n</code></pre></div>",
        "id": 240145695,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621922621
    },
    {
        "content": "<p>Yes, you can't use <code>initialize</code>, but you can use <code>builtin_initialize</code></p>",
        "id": 240146313,
        "sender_full_name": "Mac",
        "timestamp": 1621923292
    },
    {
        "content": "<p>I think<code> initialize</code>, despite its name, actually runs after initializing the environment, whereas <code>bulitin_initialize</code> actually runs during initialization.</p>",
        "id": 240146399,
        "sender_full_name": "Mac",
        "timestamp": 1621923376
    },
    {
        "content": "<p>However, I think this may mean you need to feed in the code that initializes the attribute as a <code>--plugin</code> to <code>lean</code>.</p>",
        "id": 240146466,
        "sender_full_name": "Mac",
        "timestamp": 1621923473
    },
    {
        "content": "<p>Unfortunately, I had trouble testing this due to issue <a href=\"https://github.com/leanprover/lean4/issues/486\">#486</a> (which I just posted).</p>",
        "id": 240146537,
        "sender_full_name": "Mac",
        "timestamp": 1621923540
    }
]