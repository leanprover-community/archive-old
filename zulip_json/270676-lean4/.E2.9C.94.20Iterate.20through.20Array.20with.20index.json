[
    {
        "content": "<p>Do we have a short hand for basically turning <code>#[a,b,c]</code> into <code>#[(0, a), (1, b), (2, c)]</code> and iterating over it? So basically a <code>Array.mapWithIdx (f : Nat -&gt; a -&gt; b) : Array a -&gt; Array b</code></p>",
        "id": 305003512,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1666199818
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Array.mapIdx#doc\">docs4#Array.mapIdx</a> perhaps?</p>",
        "id": 305006484,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1666200788
    },
    {
        "content": "<p>Damn it I was lookin for Index or mapWith :D</p>",
        "id": 305007350,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1666201075
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> has marked this topic as resolved.</p>",
        "id": 305007363,
        "sender_full_name": "Notification Bot",
        "timestamp": 1666201080
    },
    {
        "content": "<p>If you just want to iterate with a for loop, there were a few options discussed here: <a href=\"#narrow/stream/270676-lean4/topic/enumerate/near/302501559\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/enumerate/near/302501559</a></p>",
        "id": 305012976,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1666202739
    }
]