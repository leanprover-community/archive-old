[
    {
        "content": "<p>Is there standalone deriving, a la Haskell?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">section</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">Foo</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">lt</span> <span class=\"bp\">|</span> <span class=\"n\">eq</span> <span class=\"bp\">|</span> <span class=\"n\">gt</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Inhabited</span><span class=\"o\">,</span> <span class=\"n\">BEq</span>\n\n<span class=\"kd\">end</span>\n\n<span class=\"n\">deriving</span> <span class=\"n\">Repr</span> <span class=\"n\">for</span> <span class=\"n\">Foo</span> <span class=\"c1\">-- totally illegitimate syntax</span>\n<span class=\"bp\">``</span>\n<span class=\"n\">For</span> <span class=\"kd\">example</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">Ordering</span><span class=\"bp\">`</span> <span class=\"n\">is</span> <span class=\"n\">defined</span> <span class=\"k\">in</span> <span class=\"n\">base</span> <span class=\"n\">Lean</span> <span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"n\">I</span> <span class=\"n\">would</span> <span class=\"n\">like</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">it</span> <span class=\"k\">have</span> <span class=\"n\">a</span> <span class=\"bp\">`</span><span class=\"n\">Repr</span> <span class=\"n\">Ordering</span><span class=\"bp\">`</span> <span class=\"kd\">instance</span><span class=\"bp\">.</span> <span class=\"n\">Is</span> <span class=\"n\">there</span> <span class=\"n\">a</span> <span class=\"n\">way</span> <span class=\"n\">for</span> <span class=\"n\">me</span> <span class=\"n\">to</span> <span class=\"n\">generate</span> <span class=\"n\">it</span> <span class=\"n\">without</span> <span class=\"n\">defining</span> <span class=\"n\">it</span> <span class=\"n\">manually</span><span class=\"bp\">?</span>\n</code></pre></div>",
        "id": 309113222,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668129222
    },
    {
        "content": "<p><code>deriving instance Repr for Foo</code> should work (assuming it can derive the instance)</p>",
        "id": 309113638,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1668129458
    },
    {
        "content": "<p>Awesome, thanks!</p>",
        "id": 309113789,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1668129538
    }
]