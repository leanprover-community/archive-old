[
    {
        "content": "<p>I don't know the current status of widgets in Lean 4 but I have a question: is there a plan to make tactic state filtering permanent? In Lean 3 it seems to be a non-trivial task is the main reason why I still use plain text tactic states from time to time.</p>",
        "id": 255952314,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633268401
    },
    {
        "content": "<p>Widgets work today.  Both the neovim and vscode extensions have PRs for widget support: <a href=\"https://github.com/leanprover/vscode-lean4/pull/37\">https://github.com/leanprover/vscode-lean4/pull/37</a> <a href=\"https://github.com/Julian/lean.nvim/pull/123\">https://github.com/Julian/lean.nvim/pull/123</a><br>\nPlease help with testing if you have time!</p>",
        "id": 255952849,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1633268972
    },
    {
        "content": "<p>Tactic state filtering is I believe still a todo in the vscode extension, but it is even easier to implement now than with the text-based tactic states.</p>",
        "id": 255952865,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1633269001
    },
    {
        "content": "<p>Wojciech did a great job with the RPC API here.  On the editor side we now have a nice data structure for the hypotheses containing the name etc.  Gone are the days of string parsing using regexps!  We could also add additional metadata to the hypotheses (e.g. whether they are typeclass instances or whether they have the <code>[]</code> binder or whether they are types, etc.) to provide even better filtering.</p>",
        "id": 255953683,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1633269813
    },
    {
        "content": "<p>Testing this is very tempting but the whole procedure is daunting.</p>",
        "id": 255953928,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633270067
    },
    {
        "content": "<p>Is there anything we can do to make it easier to try out the PR?</p>",
        "id": 255954055,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1633270179
    },
    {
        "content": "<p>Do we have a nice document explaining how to install everything from scratch (including Lean 4 and mathlib4)?</p>",
        "id": 255954745,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633270858
    },
    {
        "content": "<p>We do not have such a document. I can try to start writing it. Hopefully the essence for now is:</p>\n<ol>\n<li>Install VSCode</li>\n<li>Install the lean4 extension to VSCode</li>\n<li>Install elan</li>\n<li>Clone mathlib4</li>\n<li>Open mathlib4 in VSCode</li>\n</ol>",
        "id": 256003051,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633319900
    },
    {
        "content": "<p>Neither <code>lake</code> nor <code>mathport</code> are quite ready for usage by people who want \"nice documents\" explaining installation. :-) But hopefully very soon.</p>",
        "id": 256003114,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633319988
    },
    {
        "content": "<p>And the whole \"pre-compiled oleans\" infrastructure doesn't yet exist.</p>",
        "id": 256003193,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633320013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, on a bare Ubuntu machine the following works:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"ch\">#! /bin/bash</span>\n\nsudo apt install -y git curl\n\n<span class=\"c1\"># The following test is needed in case VScode was installed by other</span>\n<span class=\"c1\"># means (e.g. using Ubuntu snap)</span>\n<span class=\"k\">if</span> ! which code<span class=\"p\">;</span> <span class=\"k\">then</span>\n  wget -O code.deb https://go.microsoft.com/fwlink/?LinkID<span class=\"o\">=</span><span class=\"m\">760868</span>\n  sudo apt install -y ./code.deb\n  rm code.deb\n<span class=\"k\">fi</span>\n\ncode --install-extension leanprover.lean4\n\nwget https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh\nbash elan-init.sh -y\nrm elan-init.sh\n. ~/.profile\n\ngit clone https://github.com/leanprover-community/mathlib4\n<span class=\"nb\">cd</span> mathlib4\nleanpkg build\ncode .\n</code></pre></div>",
        "id": 256016843,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633332386
    },
    {
        "content": "<p>Thanks Scott, I'll try this in the afternoon (I need to go and teach now).</p>",
        "id": 256017870,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633333064
    }
]