[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230999\">@Daniel Selsam</span>, I am confused about why in the mathport repository, in <code>Lib4/leanbin/lakefile.lean</code>, we have <code>mathport</code> itself as a dependency. Could you explain this to me?</p>",
        "id": 258311301,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634704754
    },
    {
        "content": "<p>That's probably a workaround until we get <code>Mathport.Prelude</code> upstreamed to mathlib4</p>",
        "id": 258311329,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634704789
    },
    {
        "content": "<p>I second this, it confused me as well</p>",
        "id": 258311342,
        "sender_full_name": "Mac",
        "timestamp": 1634704800
    },
    {
        "content": "<p>PS: I haven't compiled mathport in a while, I was waiting for the lake stuff to settle down</p>",
        "id": 258311398,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634704838
    },
    {
        "content": "<p>We need <code>Mathport.Prelude</code> to be available to compile both mathport and the files produced by mathport</p>",
        "id": 258311462,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634704917
    },
    {
        "content": "<p>I don't understand though how <code>Mathport.Prelude</code> even gets pulled in while compiling <code>.lean</code> files in <code>leanbin</code> or <code>mathbin</code>. I can't find it being imported anywhere.</p>",
        "id": 258311538,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634704978
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/why.20does.20leanbin.20have.20mathport.20as.20a.20dependency.3F/near/258311301\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"230999\">Daniel Selsam</span>, I am confused about why in the mathport repository, in <code>Lib4/leanbin/lakefile.lean</code>, we have <code>mathport</code> itself as a dependency. Could you explain this to me?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is right, it is a temporary workaround since <code>Mathport.Prelude</code> is a dependency, and it has not been upstreamed to Mathlib4 yet.</p>",
        "id": 258311545,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1634704986
    },
    {
        "content": "<p>The leanbin generated files depend on <code>Mathport.Prelude</code>, i.e. they reference it in the \"import lines\"</p>",
        "id": 258311642,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705070
    },
    {
        "content": "<p>Ah, you mean the oleans there generated in leanbin.</p>",
        "id": 258311663,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/why.20does.20leanbin.20have.20mathport.20as.20a.20dependency.3F/near/258311538\">said</a>:</p>\n<blockquote>\n<p>I don't understand though how <code>Mathport.Prelude</code> even gets pulled in while compiling <code>.lean</code> files in <code>leanbin</code> or <code>mathbin</code>. I can't find it being imported anywhere.</p>\n</blockquote>\n<p>When generating the environment for binport/synport-ing a file with no imports, we start by importing <code>Mathport</code> and <code>Mathlib4</code>: <a href=\"https://github.com/leanprover/mathport/blob/master/Mathport.lean#L27\">https://github.com/leanprover/mathport/blob/master/Mathport.lean#L27</a> Once/if <code>Mathport.Prelude</code> is moved to <code>Mathlib4</code>, then we would only need to import <code>Mathlib4</code> here.</p>",
        "id": 258311675,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1634705107
    },
    {
        "content": "<p>(Silly me was looking for <code>import Mathport.*</code> in the files generated by synport.)</p>",
        "id": 258311685,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705119
    },
    {
        "content": "<p>by leanbin you mean the olean files generated from the lean 3 core library, right?</p>",
        "id": 258311688,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705123
    },
    {
        "content": "<p>The olean files generated by mathport differ subtly from the lean files, since the oleans are made by binport and the leans by synport</p>",
        "id": 258311802,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705230
    },
    {
        "content": "<p>Yes, I think I get it now.</p>",
        "id": 258311815,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705249
    },
    {
        "content": "<p>in particular, the binport oleans always import <code>Mathport.Prelude</code> but synport files don't</p>",
        "id": 258311836,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705272
    },
    {
        "content": "<p>which explains your confusion in the other thread</p>",
        "id": 258311880,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705290
    },
    {
        "content": "<p>synport files do actually need <code>Mathport.Prelude</code> or something roughly equivalent to it to be transitively imported, but we're relying on the user to work that out</p>",
        "id": 258311949,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705367
    },
    {
        "content": "<p>we would rather have whatever that is be a piece of mathlib4, because mathlib4 isn't supposed to depend directly on mathport</p>",
        "id": 258311971,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705387
    },
    {
        "content": "<p>So --- would it be a useful thing for me to do to start moving <code>Mathport/Prelude/</code> into mathlib4?</p>",
        "id": 258312147,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705526
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230999\">@Daniel Selsam</span> What is the status of building mathport depending on mathlib4?</p>",
        "id": 258312210,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705612
    },
    {
        "content": "<p>I think that is a prerequisite for this move</p>",
        "id": 258312225,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705630
    },
    {
        "content": "<p>although I suppose you can do a copy now</p>",
        "id": 258312234,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705637
    },
    {
        "content": "<p><del>mathport currently builds off a recent-but-not-quite-master commit from mathlib4</del><br>\nAh, I'm still confused. :-)</p>",
        "id": 258312277,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> looking at what is in <a href=\"https://github.com/leanprover/mathport/tree/master/Mathport/Prelude\"><code>Mathport.Prelude</code></a> it seems like the <code>#align</code> command is most used to build the initial state of the <code>renameExt</code> -- shouldn't that just be an internal part of the <code>Environment</code> mathport builds?</p>",
        "id": 258312278,
        "sender_full_name": "Mac",
        "timestamp": 1634705653
    },
    {
        "content": "<p>The <code>#align</code> command is intended to proliferate in mathlib4 for the duration of the port</p>",
        "id": 258312308,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705691
    },
    {
        "content": "<p>oh, that surprises me</p>",
        "id": 258312336,
        "sender_full_name": "Mac",
        "timestamp": 1634705722
    },
    {
        "content": "<p>it is there to improve the quality of binport/synport translations when porting files high up in the dependency tree</p>",
        "id": 258312348,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705735
    },
    {
        "content": "<p>once mathlib is completely ported we won't need <code>#align</code> anymore, but that will be a while</p>",
        "id": 258312415,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705773
    },
    {
        "content": "<p>actually even after the port is done we might want to keep <code>#align</code> around until we completely drop support for lean 3 migration</p>",
        "id": 258312440,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705812
    },
    {
        "content": "<p>Actually, I <em>think</em> I was right above, that mathport is being built with a dependency on mathlib4. The <code>lakefile.lean</code> just says:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span> <span class=\"n\">System</span>\n\n<span class=\"n\">package</span> <span class=\"n\">mathport</span> <span class=\"o\">{</span>\n  <span class=\"n\">dependencies</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[{</span>\n    <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"s2\">\"mathlib\"</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- We point to a particular commit in mathlib4,</span>\n    <span class=\"c1\">-- as changes to tactics in mathlib4 often cause breakages here,</span>\n    <span class=\"c1\">-- particularly in `Mathport/Syntax/Translate/Tactic/Mathlib.lean`.</span>\n    <span class=\"c1\">-- We'll need to keep updating that file, and bumping the commit here.</span>\n    <span class=\"n\">src</span> <span class=\"o\">:=</span> <span class=\"n\">Source.git</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span> <span class=\"s2\">\"b28a3d51e722d8b43367035e0eb5790b4cb6da53\"</span><span class=\"o\">,</span>\n    <span class=\"n\">dir</span> <span class=\"o\">:=</span> <span class=\"n\">FilePath.mk</span> <span class=\"s2\">\".\"</span>\n  <span class=\"o\">}],</span>\n  <span class=\"n\">binRoot</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">MathportApp</span>\n  <span class=\"n\">moreLinkArgs</span> <span class=\"o\">:=</span>\n    <span class=\"k\">if</span> <span class=\"n\">Platform.isWindows</span> <span class=\"k\">then</span>\n      <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-Wl,--export-all\"</span><span class=\"o\">]</span>\n    <span class=\"k\">else</span>\n      <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-rdynamic\"</span><span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 258312448,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705821
    },
    {
        "content": "<p>so we're not quite depending on mathlib4 master, but it's a commit or two behind.</p>",
        "id": 258312463,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705834
    },
    {
        "content": "<p>since third party projects can also benefit from it</p>",
        "id": 258312464,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705834
    },
    {
        "content": "<p>yeah, from what I see mathport is based off mathlib4 so you should just be able to merge <code>Mathport.Prelude</code> into <code>mathlib4</code> proper, right?</p>",
        "id": 258312540,
        "sender_full_name": "Mac",
        "timestamp": 1634705886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Does that lakefile actually work though? I'm still eagerly awaiting your \"how to build mathport\" description</p>",
        "id": 258312547,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634705892
    },
    {
        "content": "<p>yes it does</p>",
        "id": 258312554,
        "sender_full_name": "Mac",
        "timestamp": 1634705901
    },
    {
        "content": "<p>Yes! That lakefile actually works, and has been merged into the master branch of mathport.</p>",
        "id": 258312569,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705914
    },
    {
        "content": "<p>You can build mathport, and run it, from the Makefile.</p>",
        "id": 258312598,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705950
    },
    {
        "content": "<p>It even works inside a Docker container (I wanted to be sure there were no stray dependencies on anything outside the <code>mathport</code> folder!)</p>",
        "id": 258312616,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634705978
    },
    {
        "content": "<p>The \"how to build mathport\" description is in the comments at the top of the Makefile, and is hopefully pretty thorough. The README just refers you to the Makefile for now.</p>",
        "id": 258312749,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634706043
    },
    {
        "content": "<p>In that case, I guess a move should work, provided you change <code>import Mathport.Prelude</code> in the sources to <code>import Mathlib.Init</code> and ensure that <code>Mathlib.Init</code> contains everything we need</p>",
        "id": 258312768,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634706055
    },
    {
        "content": "<p>What I would argue should be done though (at least eventually) is that <code>leanbin</code>, etc. should depend on <code>mathport</code> and its build step should be either poritng Lean 3 or downloading the prebuilt artifacts (if they are available)</p>",
        "id": 258312787,
        "sender_full_name": "Mac",
        "timestamp": 1634706073
    },
    {
        "content": "<p>Actually maybe <code>Mathlib.Init</code> is too low level - <code>Mathport.Prelude</code> (purports to) include all lean 3 and mathlib tactics</p>",
        "id": 258312833,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634706113
    },
    {
        "content": "<p>Maybe <code>Mathlib.MathportPrelude</code> is better for the near term</p>",
        "id": 258312934,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634706197
    },
    {
        "content": "<p>Returning to the original topic of this thread, I am now very confused!</p>\n<p>I just rebuilt <code>mathport</code>, having, as an experiment, deleted the dependency on <code>mathport</code> in <code>Leanbin/lakefile.lean</code>.</p>\n<p>.... contrary to the explanations above it seems everything works just as well....?</p>",
        "id": 258314904,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634708117
    },
    {
        "content": "<p>Local dependencies will be resolved the normal way by lake</p>",
        "id": 258314994,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634708192
    },
    {
        "content": "<p>Did you try using the built program though? <code>mathport</code> needs those files at runtime too</p>",
        "id": 258315047,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634708267
    },
    {
        "content": "<p>I mean, I did a full run of mathport on lean3 and mathlib3, and can open the synported files, etc., and see exactly the same error messages as before.</p>",
        "id": 258315134,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634708339
    },
    {
        "content": "<p>(I've spun off a docker build with that dependency removed, to check in a clean environment. I think the point may just be that we're setting <code>LEAN_PATH</code> when we actually run <code>mathport</code>, and so it is finding those files even without <code>Leanbin/lakefile.lean</code> recording a dependency on <code>mathport</code>.)</p>",
        "id": 258316906,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634709881
    },
    {
        "content": "<p>I finished checking that we can remove the dependency specified in the <code>Lib4/leanbin/lakefile.lean</code> to <code>mathport</code>: <a href=\"https://github.com/leanprover/mathport/pull/35\">https://github.com/leanprover/mathport/pull/35</a>. This does build from scratch successfully, for what it's worth.</p>",
        "id": 258497260,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634799964
    }
]