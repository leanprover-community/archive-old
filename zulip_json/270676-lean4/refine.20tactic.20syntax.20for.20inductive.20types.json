[
    {
        "content": "<p>What's the right incantation to make the following work?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">And</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"c1\">-- errors here, does not produce two goals</span>\n  <span class=\"n\">exact</span> <span class=\"n\">hp</span><span class=\"bp\">;</span> <span class=\"c1\">-- says \"no goals to be solved\" here</span>\n  <span class=\"n\">exact</span> <span class=\"n\">hq</span>\n</code></pre></div>",
        "id": 231586788,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616564673
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">And</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span><span class=\"bp\">;</span>\n  <span class=\"n\">exact</span> <span class=\"n\">hp</span><span class=\"bp\">;</span>\n  <span class=\"n\">exact</span> <span class=\"n\">hq</span>\n</code></pre></div>",
        "id": 231586844,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616564748
    },
    {
        "content": "<p>Thanks Mario. I see that produces two cases <code>refine_1</code> and <code>refine_2</code>. Is there a way to name them?</p>",
        "id": 231586907,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616564804
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">And</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">?</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">b</span><span class=\"o\">⟩</span>\n  <span class=\"n\">case</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">hp</span>\n  <span class=\"n\">case</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">hq</span>\n</code></pre></div>",
        "id": 231586910,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616564820
    },
    {
        "content": "<p>Sweet, thanks</p>",
        "id": 231586945,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616564840
    },
    {
        "content": "<p>By the way, when did we get Go-To-Defn working in VSCode?! It's awesome!</p>",
        "id": 231586957,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616564880
    },
    {
        "content": "<p>And the infoview working...</p>",
        "id": 231587005,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1616564891
    }
]