[
    {
        "content": "<p>Lean currently has methods to to produce an asynchronous task from a synchronous action (e.g., <code>asTask  : BaseIO a -&gt; BaseIO (Task a)</code> and to bind  a asynchronous action after a task <code>bindTask : Task a -&gt; (b -&gt; BaseIO (Task a))  -&gt; BaseIO (Task b)</code>, but there does not appear to be an efficient way to combine the two. That is, convert a synchronous action that returns a spawned a task (e.g., <code>act : BaseIO (Task a)</code>) into an asynchronous action that performs that task afterwards (i.e., also a <code>BaseIO (Task a)</code>). The only way I currently see to do this is to use <code>act.asTask.map (·.map (·.get))</code>  which does not seem particularly efficient.</p>\n<p>Am I missing something? Is there already a better way to do this? If not, would adding an a method to do so efficiently the Lean core be reasonable?</p>",
        "id": 265887096,
        "sender_full_name": "Mac",
        "timestamp": 1640240069
    },
    {
        "content": "<p><code>act.asTask.map (·.bind id)</code>? That doesn't seem particularly inefficient to me.</p>",
        "id": 265893775,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1640248140
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> thanks! good to know!</p>",
        "id": 265905765,
        "sender_full_name": "Mac",
        "timestamp": 1640257101
    }
]