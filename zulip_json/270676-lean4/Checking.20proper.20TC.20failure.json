[
    {
        "content": "<p>Is there a way to check for proper TC failure? There is <code>#check_failure</code> but that succeeds even on a timeout error. I'm working and debugging rather complicated set of classes and I often accidentally write an instance that causes an infinite loop and I no longer have a proper TC failure. I would love to have unit test that checks for proper failures in some basic cases.</p>",
        "id": 265508528,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1639959385
    },
    {
        "content": "<p>After a long time I got back to this. Here is my attempt: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab</span> <span class=\"n\">Command</span> <span class=\"n\">Term</span> <span class=\"n\">Meta</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">check_tc_failure</span><span class=\"o\">)</span> <span class=\"s2\">\"#check_tc_failure\"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">command</span>\n\n<span class=\"kd\">@[commandElab check_tc_failure]</span>\n<span class=\"kd\">def</span> <span class=\"n\">checkTCFailureImpl</span> <span class=\"o\">:</span> <span class=\"n\">CommandElab</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">stx</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">try</span>\n    <span class=\"k\">let</span> <span class=\"n\">_</span> <span class=\"bp\">←</span> <span class=\"n\">liftTermElabM</span> <span class=\"o\">(</span><span class=\"n\">withoutErrToSorry</span> <span class=\"o\">(</span><span class=\"n\">elabTerm</span> <span class=\"n\">stx</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"n\">none</span><span class=\"o\">))</span>\n    <span class=\"n\">logError</span> <span class=\"s2\">\"Unexpected success!\"</span>\n  <span class=\"n\">catch</span> <span class=\"n\">e</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">logInfo</span> <span class=\"s2\">\"FAILURE\"</span>\n    <span class=\"n\">logInfo</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"{← e.toMessageData.toString}\"</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"o\">⟨⟩</span>\n<span class=\"kd\">def</span> <span class=\"n\">funC</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">C</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">n</span>\n\n<span class=\"c1\">-- This behaves as expected</span>\n<span class=\"bp\">#</span><span class=\"n\">check_tc_failure</span> <span class=\"n\">funC</span> <span class=\"mi\">0</span>\n<span class=\"bp\">#</span><span class=\"n\">check_tc_failure</span> <span class=\"n\">funC</span> <span class=\"mi\">1</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"o\">⟨⟩</span>\n<span class=\"kd\">def</span> <span class=\"n\">funD</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">D</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">n</span>\n\n<span class=\"c1\">-- I want this to fail as it reaches max heartbeats</span>\n<span class=\"bp\">#</span><span class=\"n\">check_tc_failure</span> <span class=\"o\">(</span><span class=\"n\">funD</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">E</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n<span class=\"kd\">instance</span> <span class=\"o\">[</span><span class=\"n\">E</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">E</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"o\">⟨⟩</span>\n<span class=\"kd\">def</span> <span class=\"n\">funE</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">E</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"n\">m</span>\n\n<span class=\"c1\">-- This should fail because we are hitting maxSize</span>\n<span class=\"bp\">#</span><span class=\"n\">check_tc_failure</span> <span class=\"n\">funE</span> <span class=\"mi\">7</span> <span class=\"mi\">0</span>\n\n<span class=\"c1\">-- This should succeed as we have searched through everything</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">synthInstance.maxSize</span> <span class=\"mi\">300</span> <span class=\"k\">in</span>\n<span class=\"bp\">#</span><span class=\"n\">check_tc_failure</span> <span class=\"n\">funE</span> <span class=\"mi\">7</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>However, I still do not know how to figure out if there was a proper failure/reaching max heartbeat/reaching max size. I could check the string of the error but I do not like that.</p>",
        "id": 295724490,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1661701440
    }
]