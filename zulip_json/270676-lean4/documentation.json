[
    {
        "content": "<p>does lean 4 have any documentation for its std?</p>",
        "id": 269168178,
        "sender_full_name": "J. O.",
        "timestamp": 1643056169
    },
    {
        "content": "<p>also, is lean 4's std even complete? does it have all the list functions that lean has?</p>",
        "id": 269168221,
        "sender_full_name": "J. O.",
        "timestamp": 1643056194
    },
    {
        "content": "<p>The documentation is mostly the code, there is some WIP web doku here <a href=\"https://leanprover-community.github.io/mathlib4_docs/\">https://leanprover-community.github.io/mathlib4_docs/</a>.</p>\n<p>No the std lib is not complete, it does also at the moment not want to be complete since it is not an std lib in the traditional sence but rather the library that contains everything the compiler needs to bootstrap itself, the dumpster for \"everything stdlib that doesnt belong into the compiler\" is currently mathlib4.</p>",
        "id": 269169660,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643056864
    },
    {
        "content": "<p>Henrik, the first link I randomly tried was <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/Hints.html\">https://leanprover-community.github.io/mathlib4_docs/Init/Hints.html</a> that is a bit disappointing. There isn't much in the Lean file either, but still something.</p>",
        "id": 269169953,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643057022
    },
    {
        "content": "<p>Yes currently everything that is a line file is getting linked, regardless of whether it actually has (renderable) content or not, This is also the first time I have ever seen the <code>unif_hint</code> keyword so I wouldn't know how to get the information to render it right now even <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>. But I'll put it on the list!</p>",
        "id": 269170169,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643057131
    },
    {
        "content": "<p>how about for lean</p>",
        "id": 269170275,
        "sender_full_name": "J. O.",
        "timestamp": 1643057169
    },
    {
        "content": "<p>does lean have a complete std and documentation? I like using methods like fold, sum, max, filter, map, but there are others which I need documentation for.</p>",
        "id": 269170332,
        "sender_full_name": "J. O.",
        "timestamp": 1643057211
    },
    {
        "content": "<p>Are you referring to Lean 3? It's documentation state is basically the same, except that the doc-gen stuff for Lean 3 is of course much better fleshed out. What kind of documentation are you even looking for?</p>",
        "id": 269170545,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643057302
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/documentation/near/269169953\">said</a>:</p>\n<blockquote>\n<p>Henrik, the first link I randomly tried was <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/Hints.html\">https://leanprover-community.github.io/mathlib4_docs/Init/Hints.html</a> that is a bit disappointing. There isn't much in the Lean file either, but still something.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover/doc-gen4/issues/25\">https://github.com/leanprover/doc-gen4/issues/25</a></p>\n<p>I'll be a little inactive on doc-gen until my exams are over in the next Thursday so you'll have to wait a bit :p</p>",
        "id": 269170760,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643057411
    },
    {
        "content": "<p>There is no hurry at all. Thank you very much for your work on this!</p>",
        "id": 269170876,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643057467
    },
    {
        "content": "<p>How am I going to use lean with no documentation?!</p>",
        "id": 269171808,
        "sender_full_name": "J. O.",
        "timestamp": 1643057923
    },
    {
        "content": "<p>How do people learn all the functions provided in the std</p>",
        "id": 269171833,
        "sender_full_name": "J. O.",
        "timestamp": 1643057936
    },
    {
        "content": "<p>They read the source code of the compiler / stdlib</p>",
        "id": 269172040,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643058020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/documentation/near/269172040\">said</a>:</p>\n<blockquote>\n<p>They read the source code of the compiler / stdlib</p>\n</blockquote>\n<p>Oof, so there is no guide</p>",
        "id": 269172130,
        "sender_full_name": "J. O.",
        "timestamp": 1643058049
    },
    {
        "content": "<p>o wow</p>",
        "id": 269172134,
        "sender_full_name": "J. O.",
        "timestamp": 1643058051
    },
    {
        "content": "<p>There is a little guide on how to do proofs and stuff. Regarding regular programming the best example and guide right now is definitely to read what's there already. I'd hope that this does change eventually but right now Mathlib4 is the focus.</p>",
        "id": 269172315,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643058127
    },
    {
        "content": "<p>The std in the lean4 source code is very small</p>",
        "id": 269172431,
        "sender_full_name": "J. O.",
        "timestamp": 1643058186
    },
    {
        "content": "<p>so if im correct, lean 4 has no filter, map, fold, unfold, max, etc</p>",
        "id": 269172459,
        "sender_full_name": "J. O.",
        "timestamp": 1643058202
    },
    {
        "content": "<p>Oh of course, but they are not in std they are defined in other packages and locations, you can find them by e.g. pressing go to definition on <code>List.map</code></p>",
        "id": 269172546,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643058239
    },
    {
        "content": "<p>Lots of the stuff you are asking for will be in the <code>Init</code> package.</p>",
        "id": 269172638,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1643058268
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/documentation/near/269172546\">said</a>:</p>\n<blockquote>\n<p>Oh of course, but they are not in std they are defined in other packages and locations, you can find them by e.g. pressing go to definition on <code>List.map</code></p>\n</blockquote>\n<p>Where can i go to definition?</p>",
        "id": 269172643,
        "sender_full_name": "J. O.",
        "timestamp": 1643058272
    },
    {
        "content": "<p>in vscode?</p>",
        "id": 269172666,
        "sender_full_name": "J. O.",
        "timestamp": 1643058284
    },
    {
        "content": "<p>ctrl+click</p>",
        "id": 269172677,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643058291
    },
    {
        "content": "<p>You can do <code>#check List.map</code> and ctrl+click on that</p>",
        "id": 269172728,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643058316
    },
    {
        "content": "<p>hmm ok</p>",
        "id": 269172967,
        "sender_full_name": "J. O.",
        "timestamp": 1643058434
    },
    {
        "content": "<p>Reading those definitions has done wonders to my understanding</p>",
        "id": 269173155,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643058538
    },
    {
        "content": "<p>this website is very useful: <a href=\"https://leanprover-community.github.io/mathlib4_docs/Init/Data/List/Basic.html\">https://leanprover-community.github.io/mathlib4_docs/Init/Data/List/Basic.html</a></p>",
        "id": 269173212,
        "sender_full_name": "J. O.",
        "timestamp": 1643058589
    }
]