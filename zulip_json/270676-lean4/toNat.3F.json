[
    {
        "content": "<p>Calling <code>String.toNat?</code>on the empty string yields <code>some 0</code>. Is this intended?<br>\n(Also, <code>\"\".isNat</code> evaluates to <code>true</code>).</p>",
        "id": 287443849,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1656174643
    },
    {
        "content": "<p>I'm assuming you mean toNat?</p>",
        "id": 287443914,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1656174743
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/toNat.3F/near/287443914\">said</a>:</p>\n<blockquote>\n<p>I'm assuming you mean toNat?</p>\n</blockquote>\n<p>Yes, sorry - I've updated the title and question.</p>",
        "id": 287443920,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1656174775
    },
    {
        "content": "<p>Looking at the implementation of both it comes down to isNat:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">isNat</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span>\n  <span class=\"n\">s.all</span> <span class=\"k\">fun</span> <span class=\"n\">c</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">c.isDigit</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">toNat</span><span class=\"bp\">?</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">s.isNat</span> <span class=\"k\">then</span>\n    <span class=\"n\">some</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">s.foldl</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"n\">c</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">n</span><span class=\"bp\">*</span><span class=\"mi\">10</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">c.toNat</span> <span class=\"bp\">-</span> <span class=\"sc\">'0'</span><span class=\"bp\">.</span><span class=\"n\">toNat</span><span class=\"o\">))</span> <span class=\"mi\">0</span>\n  <span class=\"k\">else</span>\n    <span class=\"n\">none</span>\n</code></pre></div>\n<p>so one would have to add s.length &gt; 0 to the isNat conditions.</p>",
        "id": 287443987,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1656174858
    },
    {
        "content": "<p>(or <code>!s.isEmpty</code>)</p>",
        "id": 287443997,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1656174892
    },
    {
        "content": "<p>fixed</p>",
        "id": 287444324,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1656175355
    }
]