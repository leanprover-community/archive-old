[
    {
        "content": "<p>For all your pathfinding (and other) needs, <a href=\"https://github.com/Ferinko/LeanAStar\">A*</a>. I don't know the extent to which mathlib4 cares about arbitrary algorithms.</p>",
        "id": 271432819,
        "sender_full_name": "František Silváši",
        "timestamp": 1644500870
    },
    {
        "content": "<p>Yes please, assuming it's suitably generic as to be usable in real world problems</p>",
        "id": 271457926,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644511246
    },
    {
        "content": "<p>It would be even better if you could get rid of the <code>partial</code>, although it's not a requirement and this is often a nontrivial task</p>",
        "id": 271458193,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644511344
    },
    {
        "content": "<p>Well, this will make advent of code 2022 much easier...</p>",
        "id": 271515753,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644539841
    },
    {
        "content": "<p>I think lean 3's mathlib is evidence that mathematicians don't need algorithms, however it's very welcome to see these things happening in Lean 4 and I would imagine that the community will find somewhere to put them.</p>",
        "id": 271542405,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644566910
    },
    {
        "content": "<p>I'm not too sure. <code>tfae</code> uses an algorithm to compute strongly connected components. I can very well imagine that a pathfinder can be a useful component of some high-powered tactic.</p>",
        "id": 271542572,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644567060
    },
    {
        "content": "<p>This doesn't mean that the algorithm must be part of mathlib. It might be in a separate package, on which mathlib depends. These are things that will be worked out in the time to come.</p>",
        "id": 271542692,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644567132
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/A*/near/271542405\">said</a>:</p>\n<blockquote>\n<p>I think lean 3's mathlib is evidence that mathematicians don't need algorithms</p>\n</blockquote>\n<p>I wouldn't say that this is the case at all. There are lots of algorithms involved in mathlib tactics; some are implemented in C++ and some are ad-hoc or implemented in lean. Rather, I think lean 3 was not really up to the task of running complex programs, so we did not attempt anything beyond a certain level in certain directions. That's not the same thing as not having a need. I've been wanting CAS algorithms in lean for a long time but it's just not practical to go and implement risch's algorithm in lean right now, because it will not be usable on the kinds of problems where you actually need to reach for the algorithm instead of just solving it yourself by another method.</p>",
        "id": 271547962,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644570730
    },
    {
        "content": "<p>I think this is definitely a case of \"if you build it, they will come\"</p>",
        "id": 271548164,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1644570861
    },
    {
        "content": "<p>Aha, so it looks like I should have kept my mouth shut. Apologies. Certainly we would like to have a Groebner basis tactic at some point, for example, maybe this involves an algorithm of some sort.</p>",
        "id": 271563927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644579464
    }
]