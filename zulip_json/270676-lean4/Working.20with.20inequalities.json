[
    {
        "content": "<p>How do I, for example, construct a proof that <code>a / 2 &gt; 4</code> given that <code>a &gt; 8</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">8</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 303751163,
        "sender_full_name": "Omnikar",
        "timestamp": 1665629637
    },
    {
        "content": "<p>It's false...</p>",
        "id": 303752573,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665631007
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">8</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span>\n  <span class=\"n\">mt</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"mi\">9</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>(pointlessly golfed)</p>",
        "id": 303752659,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665631084
    },
    {
        "content": "<p>Oh I forgot about that. In that case, what if you change the <code>8</code> to say <code>10</code>? Then a/2 should be greater than 4.</p>",
        "id": 303992944,
        "sender_full_name": "Omnikar",
        "timestamp": 1665739486
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.Nat.Lemmas</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">9</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">Nat.le_div_iff_mul_le</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 303994231,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665739930
    },
    {
        "content": "<p>Other question: I've found that you can prove <code>n &lt; 2</code> given <code>n &lt; 1</code> like this, but is there a shorter way to express this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">Trans.trans</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 304135859,
        "sender_full_name": "Omnikar",
        "timestamp": 1665791834
    },
    {
        "content": "<p>that last line is <code>(by decide)</code> as well</p>",
        "id": 304147700,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665804370
    },
    {
        "content": "<p>How do I show <code>False</code> given <code>n : Nat</code> and <code>h : n &lt; 0</code>?</p>",
        "id": 304223584,
        "sender_full_name": "Omnikar",
        "timestamp": 1665852561
    },
    {
        "content": "<p>I would</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 304223878,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1665852756
    },
    {
        "content": "<p>Thanks</p>",
        "id": 304225623,
        "sender_full_name": "Omnikar",
        "timestamp": 1665853904
    },
    {
        "content": "<p>Oh, I just found out about <code>Nat.not_lt_zero</code> which I think is a way more readable way to do it.</p>",
        "id": 304244620,
        "sender_full_name": "Omnikar",
        "timestamp": 1665868748
    }
]