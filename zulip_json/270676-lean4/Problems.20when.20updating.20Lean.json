[
    {
        "content": "<p>So I was attempting to update Lake to latest Lean version today (I had not done so since the 07-28 nightly) and ran into some challenges:</p>\n<ul>\n<li>Updating to the 08-04 nightly works fine</li>\n<li>Updating to the 08-05 nightly  (the zero-cost oleans feature) or future versions causes the basic hello world package to hang/segfault consistently when building. Surprisingly, it does not, however, cause the bootstrap package (or many of the others) to segfault.</li>\n<li>Updating to the 08-12 nightly adds no new problems</li>\n<li>Updating to the 08-13 nightly or future versions causes Lake to experience major performance degradation due to a very long startup time. To give an idea of the time scale: before this nightly, building Lake with Lake was faster than building with make (lake: ~21s vs make: ~29s); after this nightly, make is faster (make: ~29s vs lake: ~50s).</li>\n</ul>\n<p>I have no idea why the 08-05 nightly causes the hello world package to segfault. I do have a guess for the 08-13 problem, though. It may come from the parser changes in <a href=\"https://github.com/leanprover/lean4/pull/589\">#589</a> which may be slowing down Lake's parsing of the package configuration files. <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>, does that sound  possible and, if so, is there a way for me to fix this?</p>",
        "id": 249599195,
        "sender_full_name": "Mac",
        "timestamp": 1629125737
    },
    {
        "content": "<p>I don't see how at least</p>",
        "id": 249599919,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629126023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Then, do you have any other ideas as to what could be causing the performance problems in the 08-13 nightly? Or, for that matter, the segfault in 08-05 nightly?</p>",
        "id": 249600885,
        "sender_full_name": "Mac",
        "timestamp": 1629126409
    },
    {
        "content": "<p>I am kind of at a loss here as to what broke.</p>",
        "id": 249601556,
        "sender_full_name": "Mac",
        "timestamp": 1629126695
    },
    {
        "content": "<p>Trying to guess such things is hard, that's where debuggers and profilers come in</p>",
        "id": 249602269,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629126978
    },
    {
        "content": "<p>I suppose I should try to build Lake soon anyway... :)</p>",
        "id": 249602294,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629126994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>  True, testing is always better than guessing and the more testing the better. XD</p>\n<p>I did some more testing and it appears that the performance issue is, in fact, with 08-12 nightly, not the 08-13 nightly. I could swear that the first time I tested the 08-12 nightly there were no performance issues, but repeated testing seems to have proven otherwise.</p>",
        "id": 249607867,
        "sender_full_name": "Mac",
        "timestamp": 1629129512
    },
    {
        "content": "<p>Despite the empirical data, this makes much less sense to me as nothing in the 08-12 nightly release notes seems like it should be able to cause the problems I'm observing.</p>",
        "id": 249608170,
        "sender_full_name": "Mac",
        "timestamp": 1629129635
    },
    {
        "content": "<p>Well, I believe I have figured out the cause of the performance problems! I shut off my cloud sync and the problem disappeared.</p>\n<p>I suspect that my cloud sync and Lean/Lake are in some manner competing over access to the oleans and this caused the performance problems. It is still a mystery to me why this only becomes a consistent problem on/after the 08-12 nightly., though.</p>\n<p>I also still have not figured out why building the hello package segfaults on/after the 08-05 nightly.</p>",
        "id": 249614177,
        "sender_full_name": "Mac",
        "timestamp": 1629132525
    },
    {
        "content": "<p>And I thought that only mathematicians would get the idea to use git and Dropbox on the same folder...</p>",
        "id": 249614419,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1629132632
    },
    {
        "content": "<p>I have to leave, but I was at least able to confirm the segfault</p>",
        "id": 249614739,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629132795
    },
    {
        "content": "<p>It's in <code>importModules</code>, perhaps unsurprisingly</p>",
        "id": 249614783,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629132819
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Fair enough. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> My reasoning tends to be two-fold: 1) I often have private files in my repo dir that I want synced but don't want to commit/push, and 2) Having to select exactly which folders to sync is a pain so I tend to just sync my whole workspace.</p>",
        "id": 249615529,
        "sender_full_name": "Mac",
        "timestamp": 1629133193
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Problems.20when.20updating.20Lean/near/249614739\">said</a>:</p>\n<blockquote>\n<p>I have to leave, but I was at least able to confirm the segfault</p>\n</blockquote>\n<p>Thanks for the help!  My expertise in Lean is not yet to the point that I really understand how to properly debug a Lean program executable.</p>",
        "id": 249616273,
        "sender_full_name": "Mac",
        "timestamp": 1629133490
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Problems.20when.20updating.20Lean/near/249614739\">said</a>:</p>\n<blockquote>\n<p>I have to leave, but I was at least able to confirm the segfault</p>\n</blockquote>\n<p>I have to take that back, I can't reproduce it anymore on <a href=\"https://github.com/leanprover/lean4/commit/a0c2142233d92cf85fdbd39238a92d7f558beb43\">https://github.com/leanprover/lean4/commit/a0c2142233d92cf85fdbd39238a92d7f558beb43</a> (the latest compatible commit). I must have accidentally run Lake with a different Lean version in the PATH from what I used to compile Lake, thus a .olean version mismatch.</p>",
        "id": 249695013,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629192162
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I have updated Lake to the 08-16 nightly and pushed it. The hello example still segfaults for me. Could you test (when you have the time) if it segfaults for you?</p>",
        "id": 249727911,
        "sender_full_name": "Mac",
        "timestamp": 1629210947
    },
    {
        "content": "<p>Thanks, I will try again. Did you make sure it's using the correct stdlib?</p>",
        "id": 249728188,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629211065
    },
    {
        "content": "<p>I suppose elan really should ensure that</p>",
        "id": 249728306,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1629211099
    },
    {
        "content": "<p><del>My default toolchain is the 08-16 nightly and the workspace is also using that, so it should be.</del> Oops, I apparently had set an override a long time ago in that dir.</p>",
        "id": 249729059,
        "sender_full_name": "Mac",
        "timestamp": 1629211381
    },
    {
        "content": "<p>Removing that fixed it. Sorry for all the trouble!</p>",
        "id": 249729095,
        "sender_full_name": "Mac",
        "timestamp": 1629211400
    },
    {
        "content": "<p>It seems like I really can't wait for <a href=\"https://github.com/leanprover/lean4/issues/632\">#632</a>. The amount of trouble I have managed to cause myself without that is amazing... XD</p>",
        "id": 249729304,
        "sender_full_name": "Mac",
        "timestamp": 1629211483
    }
]