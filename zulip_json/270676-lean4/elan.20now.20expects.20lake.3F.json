[
    {
        "content": "<p>I'm getting errors from <code>elan</code>, saying:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">toolchain</span> <span class=\"bp\">'</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2021</span><span class=\"bp\">-</span><span class=\"mi\">10</span><span class=\"bp\">-</span><span class=\"mi\">12</span><span class=\"bp\">'</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">the</span> <span class=\"n\">binary</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---nightly-2021-10-12/bin/lake`</span>\n</code></pre></div>\n<p>Presumably this means that <code>elan</code> is now expecting binaries to contain <code>lake</code>, but this hasn't quite happened yet?</p>",
        "id": 257287877,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634081637
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>, do you know the status here?</p>",
        "id": 257289427,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634082815
    },
    {
        "content": "<p>Ah, I see, this is presumably <code>elan</code> getting ahead of the PR that adds <code>lake</code> to lean4 <a href=\"https://github.com/leanprover/lean4/pull/683\">https://github.com/leanprover/lean4/pull/683</a>, and once that has merged then <code>elan</code> will work with all subsequent nightlies.</p>",
        "id": 257290424,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634083434
    },
    {
        "content": "<p>I guess one should not update to elan 1.1.0 until then</p>",
        "id": 257290489,
        "sender_full_name": "Mac",
        "timestamp": 1634083458
    },
    {
        "content": "<p>Sometimes it's hard to avoid updating -- e.g. even if you run an old <code>elan-init.sh</code>, it obtains v1.1.0. :-( It's okay, I can wait on this.</p>",
        "id": 257290616,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634083561
    },
    {
        "content": "<p>It might be a good idea for elan to only produce a warning rather than error if a nightly is missing lake</p>",
        "id": 257290659,
        "sender_full_name": "Mac",
        "timestamp": 1634083565
    },
    {
        "content": "<p>(especially as that may be required to support downloading older nightlies/versions)</p>",
        "id": 257290747,
        "sender_full_name": "Mac",
        "timestamp": 1634083654
    },
    {
        "content": "<p>Exactly. I'm stuck on this with mathport today. (Trying to make a reproducible build of mathport, but it's hard because I can't download a fresh copy of elan. :-)</p>",
        "id": 257290909,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634083762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>  you should be able to just grab the release for your OS of an older elan from the <a href=\"https://github.com/leanprover/elan/releases\">releases page</a> and use that</p>",
        "id": 257291172,
        "sender_full_name": "Mac",
        "timestamp": 1634083933
    },
    {
        "content": "<p>which is probably a better idea than using the master <code>elan-init.sh</code> for a reproducible build (e.g., a docker container) as it fixes the version of elan being used</p>",
        "id": 257291200,
        "sender_full_name": "Mac",
        "timestamp": 1634083976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I assume you have a locally built <code>lake</code> in your PATH. Putting that ahead of <code>elan/bin</code> should fix this error.</p>",
        "id": 257321969,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634109811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> fair enough, but I imagine we still want elan to regain support for downloading older nightlies without a Lake executable, correct? Or does the error not actually prevent the successful download/install of a toolchain lacking Lake?</p>",
        "id": 257332895,
        "sender_full_name": "Mac",
        "timestamp": 1634115627
    },
    {
        "content": "<p>It shouldn't. Lean 3 doesn't have <code>leanc</code> either after all.</p>",
        "id": 257333321,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634115855
    }
]