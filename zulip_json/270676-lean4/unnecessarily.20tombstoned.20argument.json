[
    {
        "content": "<p>In</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">P</span> <span class=\"n\">a</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>at the sorry the goal state is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">x</span><span class=\"bp\">✝</span><span class=\"o\">:</span> <span class=\"n\">R</span>\n<span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"bp\">✝</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">P</span> <span class=\"n\">x</span><span class=\"bp\">✝</span>\n</code></pre></div>\n<p>This is weird, and inconvenient, and requires using <code>change</code> to get to goal back to usable form in some proofs. Am I missing some essential reason this is expected, or should I file an issue for this?</p>",
        "id": 314573315,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670453353
    },
    {
        "content": "<p>(This came up in <a href=\"https://github.com/leanprover-community/mathlib4/pull/871\">mathlib4#871</a>.)</p>",
        "id": 314574795,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670453966
    },
    {
        "content": "<p>Doesn't that mean you pattern matched on a unnamed variable (since it is at the right of the copula) with a trivial pattern? So we naturally have this situation. Lean could have done some simplification though</p>",
        "id": 314589552,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1670463822
    }
]