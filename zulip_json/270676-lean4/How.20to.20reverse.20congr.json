[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Nat.succ_symm</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>  <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 293107808,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660310570
    },
    {
        "content": "<p>How do prove this</p>",
        "id": 293107829,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1660310581
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Nat.succ_symm</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Nat.succ</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">succ.inj</span>\n</code></pre></div>",
        "id": 293108944,
        "sender_full_name": "David Renshaw",
        "timestamp": 1660310960
    },
    {
        "content": "<p>Just for context, since constructors of inductive types are injective there also exists an <code>injection</code> tactic which turns any hypothesis of the form <code>MyType.cons a b ... = MyType.cons a' b' ...</code> into <code>a = a'</code>, <code>b = b'</code>,  ...</p>",
        "id": 293109479,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1660311115
    },
    {
        "content": "<p>\"reverse congr\" is only possible if the function is injective. in this case, it is because it is an inductive constructor</p>",
        "id": 293118546,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1660314051
    }
]