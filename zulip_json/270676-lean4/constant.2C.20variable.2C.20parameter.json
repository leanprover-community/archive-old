[
    {
        "content": "<p>Will the section-wide declarations <code>constant</code> and <code>variable</code> and <code>parameter</code> still work in lean4?</p>",
        "id": 290409241,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658425381
    },
    {
        "content": "<p><code>parameter</code> for one is no longer a thing. See for instance this thread <a href=\"#narrow/stream/270676-lean4/topic/parameter\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/parameter</a></p>",
        "id": 290410993,
        "sender_full_name": "Horațiu Cheval",
        "timestamp": 1658426224
    },
    {
        "content": "<p>Furthermore we renamed <code>constant</code> to <code>opaque</code>. We still have <code>variable</code> but no <code>variables</code> anymore, <code>variable</code> now covers both single and multiple variable declarations.</p>",
        "id": 290411212,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1658426330
    },
    {
        "content": "<p>And <code>opaque</code> doesn't seem to be per section, right? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kn\">section</span>\n    <span class=\"n\">opaque</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"kd\">end</span>\n  <span class=\"k\">#check</span> <span class=\"n\">C</span>\n  <span class=\"c1\">-- C : ℕ</span>\n</code></pre></div>",
        "id": 290411456,
        "sender_full_name": "Horațiu Cheval",
        "timestamp": 1658426430
    },
    {
        "content": "<p>No, it also shouldn't be, I'd be surprised if it was this way in Lean 3. <code>opaque</code>/<code>constant</code> is a real declaration that should be limited to namespaces not sections.</p>",
        "id": 290412021,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1658426722
    },
    {
        "content": "<p>How was <code>parameter</code> broken in lean3?</p>",
        "id": 290412796,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658427067
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/constant.2C.20variable.2C.20parameter/near/290411212\">said</a>:</p>\n<blockquote>\n<p>Furthermore we renamed <code>constant</code> to <code>opaque</code>.</p>\n</blockquote>\n<p>Despite its previous name, <code>opaque</code> has nothing to with Lean 3's <code>constant</code>.</p>",
        "id": 290436402,
        "sender_full_name": "Mac",
        "timestamp": 1658438907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"417654\">@Martin Dvořák</span> when you’re writing out a term, <code>parameter</code> does what you’d expect: it is treated more like a global constant than an argument to your definitions. So far so good. In a tactic however, it’s as if you had declared it as a variable. You can’t omit it anymore in your function applications</p>",
        "id": 290578442,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1658532184
    }
]