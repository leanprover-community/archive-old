[
    {
        "content": "<p>I'm trying to prove:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">lo</span> <span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">lo</span> <span class=\"bp\">≤</span> <span class=\"n\">hi</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"bp\">-</span> <span class=\"n\">lo</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">lo</span> <span class=\"bp\">+</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">hi</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>In my head this proof would make use of the fact what the highest value of <code>z</code> can be and based on this argue that l + z can at most e = hi but I don't really know how to express this thought in Lean at the moment.</p>",
        "id": 273412375,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1645979646
    },
    {
        "content": "<p>That looks like <code>Nat.add_le_of_le_sub</code></p>",
        "id": 273412627,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1645979972
    },
    {
        "content": "<p>We don't have that yet but it seems to have a friend:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">lo</span> <span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">lo</span> <span class=\"bp\">≤</span> <span class=\"n\">hi</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"bp\">-</span> <span class=\"n\">lo</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">succ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">lo</span> <span class=\"bp\">+</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">hi</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Nat.add_le_of_le_sub_left</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Nat.le_of_succ_le_succ</span>\n  <span class=\"n\">exact</span> <span class=\"n\">z.isLt</span>\n</code></pre></div>\n<p>this works \\o/</p>",
        "id": 273413036,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1645980471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> has marked this topic as resolved.</p>",
        "id": 273413046,
        "sender_full_name": "Notification Bot",
        "timestamp": 1645980480
    },
    {
        "content": "<p>It's in <code>Init</code></p>",
        "id": 273413186,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1645980625
    },
    {
        "content": "<p>Hmm doc-gen4 doesnt seem to be able to find add_le_of_le_sub, it just suggests with the _left suffix...</p>",
        "id": 273413307,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1645980818
    },
    {
        "content": "<p>Ah because its toolchain is too outdated to know about it!</p>",
        "id": 273413838,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1645981252
    }
]