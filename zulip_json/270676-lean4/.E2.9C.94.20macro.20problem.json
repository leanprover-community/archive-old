[
    {
        "content": "<p>Ah yes i see</p>",
        "id": 282947923,
        "sender_full_name": "Joseph O",
        "timestamp": 1652974946
    },
    {
        "content": "<p>Well now I have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"let\"</span> <span class=\"n\">ident</span> <span class=\"s2\">\" := \"</span> <span class=\"n\">term</span> <span class=\"s2\">\" in \"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"let\"</span> <span class=\"o\">(</span><span class=\"n\">ident</span> <span class=\"s2\">\" := \"</span> <span class=\"n\">term</span><span class=\"o\">),</span><span class=\"bp\">*</span> <span class=\"n\">ident</span> <span class=\"s2\">\" := \"</span> <span class=\"n\">term</span> <span class=\"s2\">\" in \"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name1</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v1</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">,</span>\n      <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">names</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">vs</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">),</span><span class=\"bp\">*</span>\n      <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">e</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name1</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v1</span><span class=\"bp\">;</span>\n      <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">names</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">vs</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">),</span><span class=\"bp\">*</span>\n      <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">e</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">e</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"bp\">;</span> <span class=\"bp\">$</span><span class=\"n\">e</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Which gives the error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">expected</span> <span class=\"n\">identifier</span>\n</code></pre></div>\n<p>Hopefully this is not a silly mistake this time</p>",
        "id": 282949077,
        "sender_full_name": "Joseph O",
        "timestamp": 1652975408
    },
    {
        "content": "<p>Try this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"n\">binder</span> <span class=\"o\">:=</span> <span class=\"n\">ident</span> <span class=\"s2\">\" := \"</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"let\"</span> <span class=\"n\">binder</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"s2\">\" in \"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"bp\">;</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">,</span> <span class=\"bp\">$</span><span class=\"n\">bs</span><span class=\"o\">:</span><span class=\"n\">binder</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"bp\">;</span> <span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">bs</span><span class=\"o\">:</span><span class=\"n\">binder</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">:=</span> <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span> <span class=\"k\">in</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">test</span> <span class=\"c1\">-- 3</span>\n</code></pre></div>",
        "id": 282952083,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1652976620
    },
    {
        "content": "<p>What is binder?</p>",
        "id": 282952129,
        "sender_full_name": "Joseph O",
        "timestamp": 1652976644
    },
    {
        "content": "<p><code>binder</code> is a syntax being defined right there</p>",
        "id": 282952220,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1652976685
    },
    {
        "content": "<p>This also works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"n\">bla</span> <span class=\"o\">:=</span> <span class=\"n\">ident</span> <span class=\"s2\">\" := \"</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"let\"</span> <span class=\"n\">bla</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"s2\">\" in \"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"bp\">;</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">,</span> <span class=\"bp\">$</span><span class=\"n\">bs</span><span class=\"o\">:</span><span class=\"n\">bla</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">v</span><span class=\"bp\">;</span> <span class=\"k\">let</span> <span class=\"bp\">$</span><span class=\"n\">bs</span><span class=\"o\">:</span><span class=\"n\">bla</span><span class=\"o\">,</span><span class=\"bp\">*</span> <span class=\"k\">in</span> <span class=\"bp\">$</span><span class=\"n\">t</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">:=</span> <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span> <span class=\"k\">in</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">test</span> <span class=\"c1\">-- 3</span>\n</code></pre></div>",
        "id": 282952269,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1652976711
    },
    {
        "content": "<p>oh</p>",
        "id": 282952270,
        "sender_full_name": "Joseph O",
        "timestamp": 1652976712
    },
    {
        "content": "<p>It's similar to creating a syntax category, but it's simpler, more suited for when you don't want to expand it</p>",
        "id": 282952458,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1652976774
    },
    {
        "content": "<p>Yeah it makes sense</p>",
        "id": 282952573,
        "sender_full_name": "Joseph O",
        "timestamp": 1652976819
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 282952580,
        "sender_full_name": "Joseph O",
        "timestamp": 1652976821
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 282952581,
        "sender_full_name": "Notification Bot",
        "timestamp": 1652976823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"467926\">@Joseph O</span> you probably want to do this actually:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"let \"</span> <span class=\"n\">binder</span><span class=\"o\">,</span><span class=\"bp\">+</span> <span class=\"s2\">\" in \"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n</code></pre></div>\n<p>Notice the <code>+</code> instead of <code>*</code><br>\nThat will require at least a binder to match<br>\nSo <code>let in 0</code> will give you a better error message</p>",
        "id": 282953735,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1652977270
    },
    {
        "content": "<p>I see</p>",
        "id": 282953969,
        "sender_full_name": "Joseph O",
        "timestamp": 1652977363
    },
    {
        "content": "<p>Btw, how do I import a macro in lean 4?</p>",
        "id": 282954008,
        "sender_full_name": "Joseph O",
        "timestamp": 1652977375
    },
    {
        "content": "<p>You just import the file where it's defined</p>",
        "id": 282954057,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1652977397
    },
    {
        "content": "<p>ah yes, I forgot to refresh imports</p>",
        "id": 282956604,
        "sender_full_name": "Joseph O",
        "timestamp": 1652978300
    }
]