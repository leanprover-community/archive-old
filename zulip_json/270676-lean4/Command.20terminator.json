[
    {
        "content": "<p>In Lean 3, you could terminate a command with a dot (e.g. if you wanted to use a user command right after you've defined it).  Is there something similar in Lean 4?  Or in other words, is there a nicer way to write the following?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">local</span> <span class=\"n\">macro</span> <span class=\"s2\">\"ofNat_class\"</span> <span class=\"n\">Class</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"n\">n</span><span class=\"o\">:</span><span class=\"n\">num</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"k\">let</span> <span class=\"n\">field</span> <span class=\"o\">:=</span> <span class=\"n\">Lean.mkIdent</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Class.getId.eraseMacroScopes.getString</span><span class=\"bp\">!.</span><span class=\"n\">toLower</span>\n  <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">class</span> <span class=\"bp\">$</span><span class=\"n\">Class</span><span class=\"o\">:</span><span class=\"n\">ident.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n    <span class=\"bp\">$</span><span class=\"n\">field</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n  <span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">Class</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">OfNat</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">nat_lit</span> <span class=\"bp\">$</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n    <span class=\"n\">ofNat</span> <span class=\"o\">:=</span> <span class=\"o\">‹</span><span class=\"bp\">$</span><span class=\"n\">Class</span> <span class=\"n\">α</span><span class=\"o\">›</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n\n  <span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">OfNat</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">nat_lit</span> <span class=\"bp\">$</span><span class=\"n\">n</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">Class</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n    <span class=\"bp\">$</span><span class=\"n\">field</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:=</span> <span class=\"bp\">$</span><span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span> <span class=\"c1\">-- terminate macro command</span>\n\n<span class=\"n\">ofNat_class</span> <span class=\"n\">Zero</span> <span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 257674790,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634292796
    },
    {
        "content": "<p>We'll probably want indentation sensitivity for <code>macro</code> and <code>syntax</code></p>",
        "id": 257675161,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634292990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Yeah,  I think indetation sensitivity is the way to go here.</p>",
        "id": 258040713,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1634568612
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Pushed the fix for this issue.</p>",
        "id": 258122569,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1634602841
    }
]