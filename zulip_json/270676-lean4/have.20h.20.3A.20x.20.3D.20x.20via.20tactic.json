[
    {
        "content": "<p>Hi! I'm learning metaprogramming in Lean 4. I've managed to write something that allows me to add a hypothesis to the local context:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"kd\">def</span> <span class=\"n\">defineV</span> <span class=\"o\">(</span><span class=\"n\">nm</span> <span class=\"o\">:</span> <span class=\"n\">Name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">tp</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">tme</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">TacticM</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">liftMetaTactic1</span> <span class=\"k\">fun</span> <span class=\"n\">mvarId</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"k\">let</span> <span class=\"n\">h2</span> <span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">define</span> <span class=\"n\">mvarId</span> <span class=\"n\">nm</span> <span class=\"n\">tp</span> <span class=\"n\">tme</span><span class=\"o\">)</span>\n    <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"o\">)</span> <span class=\"bp\">←</span> <span class=\"n\">intro1P</span> <span class=\"n\">h2</span>\n    <span class=\"n\">withMVarContext</span> <span class=\"n\">h2</span> <span class=\"k\">do</span>\n      <span class=\"n\">return</span> <span class=\"n\">h2</span>\n</code></pre></div>\n<p>so that in my elaborator, I can have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">defineV</span> <span class=\"n\">nm</span> <span class=\"n\">tp</span> <span class=\"n\">tme</span>\n</code></pre></div>\n<p>add <code>nm : tp := tme</code> to the context.<br>\nHowever now, I want to add something like <code>h : x = x </code> to the context. This might be a silly question, I'm a bit new, but if I have <code>x : Expr</code> as an expression already, is there a way to get an expression of <code>x=x</code>? Or rather in general, how might I add something like this? (Once I get that, I think I can apply <code>applyRefl</code>, right?)</p>",
        "id": 273380002,
        "sender_full_name": "Ian Benway",
        "timestamp": 1645934021
    },
    {
        "content": "<p>To get the expression <code>x = x</code> you can use use <code>mkEq</code></p>",
        "id": 273383025,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1645938121
    }
]