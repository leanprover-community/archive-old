[
    {
        "content": "<p>Does Lean 4 support something like <code>_root_.foo</code>?</p>",
        "id": 224205551,
        "sender_full_name": "Reid Barton",
        "timestamp": 1611764246
    },
    {
        "content": "<p>if this feature gets added, I would also like to see it usable as <code>def _root_.foo := ...</code> to bypass the prefixing induced by the current namespace</p>",
        "id": 224207766,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611765140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/270676-lean4/topic/_root_/near/224205551\">said</a>:</p>\n<blockquote>\n<p>Does Lean 4 support something like <code>_root_.foo</code>?</p>\n</blockquote>\n<p>Does it not work for you?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"k\">#eval</span> <span class=\"n\">_root_.foo</span>\n</code></pre></div>",
        "id": 224208026,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1611765256
    },
    {
        "content": "<p>Oops, it does... I must have been confused by another error I had simultaneously</p>",
        "id": 224208358,
        "sender_full_name": "Reid Barton",
        "timestamp": 1611765403
    }
]