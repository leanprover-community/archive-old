[
    {
        "content": "<p>This an example from <code>Mathlib.Tactic.Basic</code> in the Mathlib4 repo. VsCode seems to highlight all user-defined macros in blue, which is a little too much blue in my taste. Is this customizable?</p>\n<p><a href=\"/user_uploads/3121/2qA4fGXP-Yx3C2OH3UTh-Fb4/syntax.png\">syntax.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2qA4fGXP-Yx3C2OH3UTh-Fb4/syntax.png\" title=\"syntax.png\"><img src=\"/user_uploads/3121/2qA4fGXP-Yx3C2OH3UTh-Fb4/syntax.png\"></a></div>",
        "id": 251343598,
        "sender_full_name": "Justus Springer",
        "timestamp": 1630395082
    },
    {
        "content": "<p>I'm not too worried. This proof is extremely unusual in having only tactic names and no term. It clearly should be only one line: <code>tauto</code> so I would rather work on porting <code>tauto</code> instead of syntax highlighting.</p>",
        "id": 251343857,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630395220
    },
    {
        "content": "<p>You're right of course. Independent from the example, I'm interested if there's a way to customize syntax highlighting. In the paper <a href=\"https://arxiv.org/abs/2001.10490\">Beyond Notations</a>, it's even mentioned that <code>syntax</code> and <code>macro_rules</code> were separated to allow a well-structured syntax tree pre-expansion, as to implement source code tooling such as auto-completion (and I believe syntax highlighting also falls into that category).</p>",
        "id": 251344725,
        "sender_full_name": "Justus Springer",
        "timestamp": 1630395642
    },
    {
        "content": "<p>So I was wondering more generally how to hack VsCode and where that's implemented :)</p>",
        "id": 251344770,
        "sender_full_name": "Justus Springer",
        "timestamp": 1630395675
    },
    {
        "content": "<p>I think they're not yet at this stage of syntax highlighting but it's on the roadmap.</p>",
        "id": 251347018,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630396960
    },
    {
        "content": "<p>This would probably be done with semantic highlighting which is part of the LSP protocol. It would be a change to the Lean language server rather than a per-editor/extension change. Sebastian mentioned semantic highlighting on Twitter once, but I'm not sure how much they've actually done with it yet.</p>",
        "id": 251348835,
        "sender_full_name": "Chris B",
        "timestamp": 1630398103
    },
    {
        "content": "<p>Highlighting user-declared (tactic) keywords already is semantic highlighting. We currently do context-sensitive highlighting only <a href=\"https://github.com/leanprover/lean4/blob/aba0a479ec221ad2e31de09c6e71ce82a705ec38/src/Lean/Server/FileWorker/RequestHandling.lean#L328-L337\">for identifiers</a> where we differentiate between local and global references, but we could do something similar to tag tactic names with a custom token type.</p>",
        "id": 251349764,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1630398609
    },
    {
        "content": "<p>Thanks for the info!</p>",
        "id": 251353178,
        "sender_full_name": "Justus Springer",
        "timestamp": 1630400639
    }
]