[
    {
        "content": "<p>I was trying to figure out tasks, but find myself with a more basic question about <code>IO</code> and <code>main</code>. I have the following program as <code>Main.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">args</span><span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n    <span class=\"n\">IO.println</span> <span class=\"s2\">\"Hello, world!\"</span>\n    <span class=\"n\">IO.println</span> <span class=\"s2\">\"Computing slow-minimum 2000\"</span>\n    <span class=\"k\">let</span> <span class=\"n\">res</span> <span class=\"o\">:=</span> <span class=\"n\">slowMin</span> <span class=\"mi\">2000</span>\n    <span class=\"n\">IO.println</span> <span class=\"o\">(</span><span class=\"n\">res</span><span class=\"o\">)</span>\n    <span class=\"n\">return</span> <span class=\"o\">()</span>\n</code></pre></div>\n<p>With <code>slowMin</code> a silly function just designed to take time. When I compile and run, the program does not output anything before computing the result (takes about 30 seconds) and then outputs everything at once. When I had more code just after the \"Hello World!\" which had output, the result of <code>slowMin</code> was computed before anything else was run.</p>\n<p>Is this expected behaviour? How do I avoid a computation late in a compiled program holding up earlier portions?</p>\n<p>Thanks.</p>",
        "id": 265654930,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1640071524
    },
    {
        "content": "<p>I was having similar difficulties with parallelization using tasks. In a variation of the above:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">args</span><span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n    <span class=\"n\">IO.println</span> <span class=\"s2\">\"Hello, world!\"</span>\n    <span class=\"n\">IO.println</span> <span class=\"s2\">\"Computing slow-minimum 2000\"</span>\n    <span class=\"k\">let</span> <span class=\"n\">t1</span> <span class=\"o\">:=</span> <span class=\"n\">Task.spawn</span> <span class=\"bp\">&lt;|</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">slowMin</span> <span class=\"mi\">2000</span>\n    <span class=\"k\">let</span> <span class=\"n\">t2</span> <span class=\"o\">:=</span> <span class=\"n\">Task.spawn</span> <span class=\"bp\">&lt;|</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">slowMin</span> <span class=\"mi\">2100</span>\n    <span class=\"k\">let</span> <span class=\"n\">t3</span> <span class=\"o\">:=</span> <span class=\"n\">Task.spawn</span> <span class=\"bp\">&lt;|</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">slowMin</span> <span class=\"mi\">2200</span>\n    <span class=\"n\">IO.println</span> <span class=\"o\">(</span><span class=\"n\">t1.get</span> <span class=\"bp\">+</span> <span class=\"n\">t2.get</span> <span class=\"bp\">+</span> <span class=\"n\">t3.get</span><span class=\"o\">)</span>\n    <span class=\"n\">return</span> <span class=\"o\">()</span>\n</code></pre></div>\n<p>I hoped that the tasks would start running as soon as they are spawned (like a <code>Future</code> in scala). However they did not do so, as I could see from both the time taken and using <code>htop</code>.</p>\n<p>Can someone tell me what I misunderstand (and how to correct it)? Within <code>IO</code> am I supposed to do something else?</p>",
        "id": 265657018,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1640073621
    }
]