[
    {
        "content": "<p>I'm not sure if this is the right place to comment on this, but the old congr lemmas for ite/dite with the non-canonical decidability instance are coming back in <a href=\"https://github.com/leanprover/lean4/commit/c0f5ab1fa51bffaa571d47feb26a97d8b04b7d99\">https://github.com/leanprover/lean4/commit/c0f5ab1fa51bffaa571d47feb26a97d8b04b7d99</a><br>\nWhile these congruence lemmas look useful at first glance, they actually make the simplifier less powerful: simp can only prove <code>ite p a b = ite p a b</code> when the decidability instances in the two <code>ite</code>s are definitionally equal (because <code>eqSelf</code> needs them to be).<br>\nA longer discussion is in <a href=\"https://github.com/leanprover-community/lean/issues/159\">lean#159</a>, the PR removing these lemmas from the community edition.<br>\nIn short, simp can't prove the following if <code>iteCongr</code> is added:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">3</span> <span class=\"bp\">∧</span> <span class=\"n\">true</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">3</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"c1\">-- fails in Lean &lt;= 3.7</span>\n</code></pre></div>",
        "id": 226114977,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1613122477
    }
]