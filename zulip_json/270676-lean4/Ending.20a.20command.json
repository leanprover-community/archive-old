[
    {
        "content": "<p>Is there a correct way to end  a command? My use case is following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">Internal</span>\n<span class=\"n\">scoped</span> <span class=\"n\">macro</span> <span class=\"s2\">\"foo\"</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">#print</span> <span class=\"s2\">\"foo\"</span><span class=\"o\">)</span>\n<span class=\"kd\">end</span> <span class=\"n\">Internal</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kn\">open</span> <span class=\"n\">Internal</span> <span class=\"c1\">-- error: unknown namespace 'foo'</span>\n<span class=\"n\">foo</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kn\">open</span> <span class=\"n\">Internal</span>\n<span class=\"kn\">section</span> <span class=\"kd\">end</span>\n<span class=\"n\">foo</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Since <code>foo</code> is not a keyword until the scoped macro is <code>open</code>ed into the current namespace, I need a way to tell the command to end so that I can use <code>foo</code> immediately afterwards. Using <code>section end</code> as a separator works, but is rather esoteric and ugly. Is there a better way?</p>",
        "id": 250360670,
        "sender_full_name": "Mac",
        "timestamp": 1629729474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span> I have a fix for this. We can use the <code>colGt</code> helper parser when defining the <code>open</code> command. We used the same trick in some of the <code>tactic</code> parsers.</p>",
        "id": 250367956,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1629732515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac</span>  Pushed a fix. Both</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Internal</span>\n<span class=\"n\">foo</span>\n</code></pre></div>\n<p>and </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Internal</span> <span class=\"k\">in</span>\n<span class=\"n\">foo</span>\n</code></pre></div>\n<p>work now.</p>",
        "id": 250377978,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1629737101
    },
    {
        "content": "<p>Cool! Thanks!</p>",
        "id": 250386068,
        "sender_full_name": "Mac",
        "timestamp": 1629740652
    }
]