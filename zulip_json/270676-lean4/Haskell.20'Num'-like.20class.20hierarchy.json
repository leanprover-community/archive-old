[
    {
        "content": "<p>Having a small bit of experience with Haskell, I am wondering if there is a general class hierarchy for numbers in Lean4?</p>",
        "id": 270725117,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1643986473
    },
    {
        "content": "<p>Those existed in the core library in Lean 3 but they will be (or are?) part of Mathlib4 instead. </p>\n<p>What is in core is <code>OfNat a n</code> which allows you to use numerals for your number type -- specifically, it allows you to use natural number <code>n</code> as a numeral. For other classes such as <code>Num</code>, <code>Real</code>, etc, the Lean classes will more closely follow mathematical convention and provide <code>Monoid</code>, <code>Group</code>, <code>SemiRing</code>, <code>Ring</code>, <code>Field</code>, etc which are more useful because we can put the right laws into them</p>",
        "id": 270772703,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1644008844
    }
]