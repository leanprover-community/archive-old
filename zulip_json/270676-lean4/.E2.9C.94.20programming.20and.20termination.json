[
    {
        "content": "<p>The in-progress Lean 4 Manual states</p>\n<blockquote>\n<p>The keyword <code>meta</code> has been currently removed from Lean 4. However, we may re-introduce it in the future, but with a much more limited purpose: marking meta code that should not be included in the executables produced by Lean.</p>\n</blockquote>\n<p>In Lean 3 <code>meta</code> can be used to avoid throwing an error when Lean can't ensure termination. This is not possible in Lean 4 at present. However, at times I simply want to use Lean as a programming language, like Haskell, but the requirement on termination makes this awkward. I don't want to complicate programs by re-expressing a function I know terminates in terms of WF recursion to make Lean happy. As I understand it a major goal of Lean 4 is to become a general-purpose functional programming language. Is it planned to have some sort of mode that relaxes the rules necessary for formal verification?</p>",
        "id": 255506956,
        "sender_full_name": "Paul  Chisholm",
        "timestamp": 1632968613
    },
    {
        "content": "<p>Use <code>unsafe</code>.</p>",
        "id": 255507186,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632968768
    },
    {
        "content": "<p>See <a href=\"https://leanprover.github.io/lean4/doc/lean3changes.html#the-meta-keyword\">https://leanprover.github.io/lean4/doc/lean3changes.html#the-meta-keyword</a></p>",
        "id": 255507199,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632968782
    },
    {
        "content": "<p>Thanks, somehow I managed to miss that bit.</p>",
        "id": 255507335,
        "sender_full_name": "Paul  Chisholm",
        "timestamp": 1632968889
    },
    {
        "content": "<p>If you only want general recursion, and not other \"unsafe\" features, read the section about <code>partial</code>.</p>",
        "id": 255507356,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632968907
    },
    {
        "content": "<p>Perfect, thanks very much.</p>",
        "id": 255507453,
        "sender_full_name": "Paul  Chisholm",
        "timestamp": 1632968998
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"383769\">Paul  Chisholm</span> has marked this topic as resolved.</p>",
        "id": 255507522,
        "sender_full_name": "Notification Bot",
        "timestamp": 1632969028
    }
]