[
    {
        "content": "<p>In the <a href=\"#narrow/stream/270676-lean4/topic/Metaprogramming.20tutorial\">meta programming tutorial thread</a>  <span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span> and <span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span>  mentioned that they are rather opposed to macros that are \"too powerful\", in particular ones that \"use <code>Syntax</code> for logic and control\" and that they prefer term elaboration / meta code over such macros.</p>\n<p>I'm wondering where people think the border between \"use a macro\" and \"use an elaborator\" for this actually is. In my mind this has so far been that as soon as types or control flow is involved a macro is probably not reasonable anymore. However based on this I find it rather hard to find examples of things you might want to write as term elaborators that are actually simple (i.e. reasonable as a sort of beginner example for \"use a term elab and not a macro for this\") because this is precisely what macros seem to be for in my mind, the simple stuff.</p>",
        "id": 280951290,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1651536777
    },
    {
        "content": "<p>Don't think there's a hard line (and obviously Sebastian and Leo are not opposed to using macros for significant control flow, so don't take my opinion as gospel on this). For tutorial purposes, I think it's fine to say \"this could be done with a macro but we'll do it as an elab for exercise; see later for more realistic examples.\"</p>",
        "id": 280981495,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1651566791
    }
]