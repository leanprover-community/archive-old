[
    {
        "content": "<p>I was under the impression that strong normalization was about going beyond unification and potentially simplifying the terms themselves (i.e. descend and reduce under lambda abstractions).</p>",
        "id": 296443023,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1661977255
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"463095\">Yuri de Wit</span> has marked this topic as resolved.</p>",
        "id": 296443030,
        "sender_full_name": "Notification Bot",
        "timestamp": 1661977258
    },
    {
        "content": "<p>Ah, actually that's a good point. I'm talking about the algorithm used by <code>rfl</code> or <code>by decide</code>; I'm not sure exactly what <code>#reduce</code> uses</p>",
        "id": 296443238,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661977344
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"463095\">Yuri de Wit</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20Question.3A.20strong.20normalization.20in.20Lean/near/296443023\">said</a>:</p>\n<blockquote>\n<p>I was under the impression that strong normalization was about going beyond unification and potentially simplifying the terms themselves (i.e. descend and reduce under lambda abstractions).</p>\n</blockquote>\n<p>You need all that for unification as well. The elaboration unifier is a strict superset of the kernel defeq checker (...modulo some details, I think).</p>",
        "id": 296447795,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661979227
    },
    {
        "content": "<p>As the reduction is purely symbolic, I would probably prefer to call it normal order evaluation</p>",
        "id": 296447904,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661979272
    },
    {
        "content": "<p>Also note that there is no operation for full normalization in either the kernel or the basic elaborator, as that would be a waste of time on a strict expression data type. <code>whnf</code> is sufficient for type checking. Full normalization exists only for <code>#reduce</code> (and <code>conv</code> <code>reduce</code>).</p>",
        "id": 296448346,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1661979468
    }
]