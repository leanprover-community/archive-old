[
    {
        "content": "<p>This might be a fairly simple question, but I can't find the idiomatic way of doing this. Say I have a non-empty list and I want to use the <code>List.head</code> function that takes a proof it's not empty as an argument. Can I compute that proof in a term by using a tactic, without having to define a theorem that does it? Something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">foo_nonempty</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"bp\">≠</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n<span class=\"k\">#eval</span> <span class=\"n\">foo.head</span> <span class=\"n\">foo_nonempty</span>\n</code></pre></div>\n<p>This doesn't feel quite right tbh, that theorem definition seems unnecessary</p>",
        "id": 288218965,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1656706293
    },
    {
        "content": "<p>sure:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"k\">#eval</span> <span class=\"n\">foo.head</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>or even simpler:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"k\">#eval</span> <span class=\"n\">foo.head</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 288219091,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1656706378
    },
    {
        "content": "<p>cool, thanks!</p>",
        "id": 288219223,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1656706463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315434\">Andrés Goens</span> has marked this topic as resolved.</p>",
        "id": 288219230,
        "sender_full_name": "Notification Bot",
        "timestamp": 1656706467
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20tactics.20in.20terms/near/288219091\">said</a>:</p>\n<blockquote>\n<p>or even simpler:</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>  I like what you did there btw <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 288219328,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1656706535
    },
    {
        "content": "<p>Hm, that pun was not intended /o\\</p>",
        "id": 288219405,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1656706570
    }
]