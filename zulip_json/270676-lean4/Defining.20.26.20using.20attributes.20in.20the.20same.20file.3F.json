[
    {
        "content": "<p>I'm playing around with declaring attribute with <code>initialize registerBuiltinAttribute</code>. It seems that one can only use the attribute in a file that is _different_ from the one where one has called <code>registerBuiltinAttribute</code>? So in the example below, I would like to uncomment the declaration <code>foo</code> in the file <code>Dummy.lean</code>, but I am unable to do so. Having the ability to declare and use attributes in the same file would help in writing tutorials about attributes. I tried futzing around with <code>namespace</code>s, but that didn't seem to help.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Dummy.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">dummy_attr</span><span class=\"o\">)</span> <span class=\"s2\">\"dummy_attr\"</span>  <span class=\"n\">str</span> <span class=\"o\">:</span> <span class=\"n\">attr</span>\n<span class=\"n\">initialize</span> <span class=\"n\">registerTraceClass</span> <span class=\"bp\">`</span><span class=\"n\">dummy_attr</span>\n\n<span class=\"n\">initialize</span> <span class=\"n\">registerBuiltinAttribute</span> <span class=\"o\">{</span>\n    <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">dummy_attr</span>\n    <span class=\"n\">descr</span> <span class=\"o\">:=</span><span class=\"s2\">\"dummy_attr print information\"</span>\n    <span class=\"n\">add</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">src</span> <span class=\"n\">stx</span> <span class=\"n\">kind</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"n\">return</span> <span class=\"o\">()</span>\n  <span class=\"o\">}</span>\n\n<span class=\"c1\">-- Can I uncomment this?</span>\n<span class=\"c1\">-- @[dummy_attr \"foo\"]</span>\n<span class=\"c1\">-- def foo : Int := 42</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Test.lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Test.Dummy</span>\n\n<span class=\"c1\">-- v this works</span>\n<span class=\"kd\">@[dummy_attr \"main\"]</span>\n<span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"n\">return</span> <span class=\"o\">()</span>\n</code></pre></div>",
        "id": 283944833,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1653515351
    },
    {
        "content": "<p>CC <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> , since if we must have two files, it's going to affect how we structure the chapter on attributes in the <a href=\"https://github.com/arthurpaulino/lean4-metaprogramming-book\">Lean4 metaprogramming book</a></p>",
        "id": 283945759,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1653515938
    },
    {
        "content": "<p>If I understand the mechanism correctly this is not so much a limitation of attributes but a limitation of the initialization mechanism although I do not know how the initialization mechanism works internally.</p>",
        "id": 283946589,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1653516444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130575\">Siddharth Bhat</span> <a href=\"#narrow/stream/270676-lean4/topic/Defining.20.26.20using.20attributes.20in.20the.20same.20file.3F/near/283945759\">said</a>:</p>\n<blockquote>\n<p>CC <span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> , since if we must have two files, it's going to affect how we structure the chapter on attributes in the <a href=\"https://github.com/arthurpaulino/lean4-metaprogramming-book\">Lean4 metaprogramming book</a></p>\n</blockquote>\n<p>Yeah I thought about that too. But we can \"take advantage\" of this limitation to show the limitation itself. That is, explaining the limitation and then embracing the fact that we'll need to show the attribute usage on a different (next) file</p>",
        "id": 283950205,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1653519240
    },
    {
        "content": "<p>Yes, this is a general limitation of <code>initialize</code>.</p>",
        "id": 283989760,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1653559802
    }
]