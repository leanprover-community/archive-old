[
    {
        "content": "<p>You can use <code>sepBy()</code> (no optional trailing comma):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"enum\"</span> <span class=\"n\">ident</span> <span class=\"s2\">\"{\"</span> <span class=\"n\">sepBy</span><span class=\"o\">(</span><span class=\"n\">ident</span><span class=\"o\">,</span> <span class=\"s2\">\",\"</span><span class=\"o\">)</span> <span class=\"s2\">\"}\"</span> <span class=\"s2\">\";\"</span><span class=\"o\">:</span> <span class=\"n\">command</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">enum</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">{</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">],</span><span class=\"bp\">*</span> <span class=\"o\">}</span><span class=\"bp\">;</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">inductive</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"n\">where</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">]</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n\n<span class=\"n\">enum</span> <span class=\"n\">E</span> <span class=\"o\">{</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"n\">Z</span> <span class=\"o\">}</span><span class=\"bp\">;</span>\n</code></pre></div>",
        "id": 284241995,
        "sender_full_name": "Sébastien Michelland",
        "timestamp": 1653762295
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"484617\">Sébastien Michelland</span> <a href=\"#narrow/stream/270676-lean4/topic/Enum.20Macro/near/284241995\">said</a>:</p>\n<blockquote>\n<p>You can use <code>sepBy()</code> (no optional trailing comma):</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"s2\">\"enum\"</span> <span class=\"n\">ident</span> <span class=\"s2\">\"{\"</span> <span class=\"n\">sepBy</span><span class=\"o\">(</span><span class=\"n\">ident</span><span class=\"o\">,</span> <span class=\"s2\">\",\"</span><span class=\"o\">)</span> <span class=\"s2\">\"}\"</span> <span class=\"s2\">\";\"</span><span class=\"o\">:</span> <span class=\"n\">command</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">enum</span> <span class=\"bp\">$</span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">{</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">],</span><span class=\"bp\">*</span> <span class=\"o\">}</span><span class=\"bp\">;</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"kd\">inductive</span> <span class=\"bp\">$</span><span class=\"n\">name</span> <span class=\"n\">where</span> <span class=\"bp\">$</span><span class=\"o\">[</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">ids</span><span class=\"o\">:</span><span class=\"n\">ident</span><span class=\"o\">]</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n\n<span class=\"n\">enum</span> <span class=\"n\">E</span> <span class=\"o\">{</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"n\">Z</span> <span class=\"o\">}</span><span class=\"bp\">;</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>ah right</p>",
        "id": 284242076,
        "sender_full_name": "Joseph O",
        "timestamp": 1653762436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"467926\">Joseph O</span> has marked this topic as resolved.</p>",
        "id": 284242132,
        "sender_full_name": "Notification Bot",
        "timestamp": 1653762495
    }
]