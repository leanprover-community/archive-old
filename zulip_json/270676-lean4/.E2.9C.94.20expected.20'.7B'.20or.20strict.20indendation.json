[
    {
        "content": "<p>yes, this is expected: the token <code>go</code> starts a <code>withPosition</code> and everything else has to be after that, so either you need a bunch of indentation or <code>go</code> needs to be on the next line</p>",
        "id": 312423590,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669523187
    },
    {
        "content": "<p>the specific breakage here is due to <code>by</code> now requiring strict indentation, but you would already have hit an issue here if you put e.g.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"n\">go</span>\n<span class=\"n\">where</span> <span class=\"n\">go</span> <span class=\"o\">:</span>\n    <span class=\"n\">true</span> <span class=\"o\">:=</span>\n  <span class=\"n\">id</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 312423691,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669523319
    },
    {
        "content": "<p>if you want to minimize the number of newlines in this notation I would suggest</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"n\">go</span> <span class=\"n\">where</span>\n  <span class=\"n\">go</span> <span class=\"o\">:</span> <span class=\"n\">id</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">trivial</span>\n</code></pre></div>",
        "id": 312423853,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669523453
    },
    {
        "content": "<p>Hm, the issue is that in the actual example the type is too long to fit on one line, so I was going for the \"indent type by 4, proof by 2\" that I'd usually use for theorems. But putting <code>go</code> on a new line solves that, thanks!</p>",
        "id": 312425277,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1669524986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"128280\">Wojciech Nawrocki</span> has marked this topic as resolved.</p>",
        "id": 312425280,
        "sender_full_name": "Notification Bot",
        "timestamp": 1669524988
    },
    {
        "content": "<p>I would do that like so:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"n\">go</span> <span class=\"n\">where</span>\n  <span class=\"n\">go</span> <span class=\"o\">:</span> <span class=\"n\">long</span>\n      <span class=\"n\">type</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">trivial</span>\n</code></pre></div>",
        "id": 312426091,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669525657
    },
    {
        "content": "<p>so the type of <code>go</code> is indented by 6 and the body is indented by 4, and similarly for any other where-functions</p>",
        "id": 312426196,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1669525750
    },
    {
        "content": "<p>Core style would probably be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n  <span class=\"n\">go</span>\n<span class=\"n\">where</span>\n  <span class=\"n\">go</span> <span class=\"o\">:</span>\n      <span class=\"n\">long</span> <span class=\"n\">type</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">trivial</span>\n</code></pre></div>",
        "id": 312445433,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1669542762
    }
]