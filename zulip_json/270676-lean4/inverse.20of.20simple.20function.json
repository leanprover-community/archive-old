[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Tile</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">empty</span>\n<span class=\"bp\">|</span> <span class=\"n\">wall</span>\n<span class=\"bp\">|</span> <span class=\"n\">player</span>\n<span class=\"bp\">|</span> <span class=\"n\">target</span>\n<span class=\"bp\">|</span> <span class=\"n\">box</span>\n<span class=\"n\">deriving</span> <span class=\"n\">Inhabited</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">Tile.toChar</span> <span class=\"o\">:</span> <span class=\"n\">Tile</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Char</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">wall</span> <span class=\"bp\">=&gt;</span> <span class=\"sc\">'#'</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">empty</span> <span class=\"bp\">=&gt;</span> <span class=\"sc\">' '</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">target</span> <span class=\"bp\">=&gt;</span> <span class=\"sc\">'.'</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">player</span> <span class=\"bp\">=&gt;</span> <span class=\"sc\">'@'</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">box</span> <span class=\"bp\">=&gt;</span> <span class=\"sc\">'o'</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Tile.parseP</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">:</span> <span class=\"n\">Char</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Option</span> <span class=\"o\">{</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">Tile</span> <span class=\"bp\">//</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">t.toChar</span><span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"sc\">'#'</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">⟨</span><span class=\"bp\">.</span><span class=\"n\">wall</span><span class=\"o\">,</span>   <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)⟩</span>\n<span class=\"bp\">|</span> <span class=\"sc\">' '</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">⟨</span><span class=\"bp\">.</span><span class=\"n\">empty</span><span class=\"o\">,</span>  <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)⟩</span>\n<span class=\"bp\">|</span> <span class=\"sc\">'.'</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">⟨</span><span class=\"bp\">.</span><span class=\"n\">target</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)⟩</span>\n<span class=\"bp\">|</span> <span class=\"sc\">'@'</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">⟨</span><span class=\"bp\">.</span><span class=\"n\">player</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)⟩</span>\n<span class=\"bp\">|</span> <span class=\"sc\">'o'</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">⟨</span><span class=\"bp\">.</span><span class=\"n\">box</span><span class=\"o\">,</span>    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)⟩</span>\n<span class=\"bp\">|</span> <span class=\"n\">other</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">.</span><span class=\"n\">none</span>\n</code></pre></div>",
        "id": 318588241,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1672407533
    },
    {
        "content": "<p>Is there a shorter way to write <code>Tile.parseP?</code>? Like using reflection</p>",
        "id": 318588418,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1672407600
    },
    {
        "content": "<p>When you've finished sokoban can you do nethack?</p>",
        "id": 318608476,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672414230
    },
    {
        "content": "<p>I guess you could do (untested):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">Tile.all</span> <span class=\"o\">:=</span> <span class=\"o\">[</span><span class=\"n\">empty</span><span class=\"o\">,</span> <span class=\"n\">wall</span><span class=\"o\">,</span> <span class=\"n\">player</span><span class=\"o\">,</span> <span class=\"n\">target</span><span class=\"o\">,</span> <span class=\"n\">box</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Tile.parseP</span><span class=\"bp\">?</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Char</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"o\">{</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">Tile</span> <span class=\"bp\">//</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">t.toChar</span> <span class=\"o\">}</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Tile.all.findSome</span><span class=\"bp\">?</span> <span class=\"k\">fun</span> <span class=\"n\">t</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">t.toChar</span>\n    <span class=\"k\">then</span> <span class=\"n\">some</span> <span class=\"o\">{</span> <span class=\"n\">val</span> <span class=\"o\">:=</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">property</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>But that's gonna be slower than your version.</p>",
        "id": 318629633,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1672421909
    }
]