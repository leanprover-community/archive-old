[
    {
        "content": "<p>before it grows too much, that stuff will split off into a std++ programming library</p>",
        "id": 268482617,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642557155
    },
    {
        "content": "<p>but I don't think we know yet everything that needs to go in it</p>",
        "id": 268482632,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642557181
    },
    {
        "content": "<p>Oh, right. I had forgotten the split <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 268482708,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642557262
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as resolved.</p>",
        "id": 268482715,
        "sender_full_name": "Notification Bot",
        "timestamp": 1642557275
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.enum\">docs#list.enum</a></p>",
        "id": 268489304,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1642564105
    },
    {
        "content": "<p>Lean 4 already has it, too:<br>\n<a href=\"https://github.com/leanprover/lean4/blob/873a2ba8a696b8763acfd1e2b2b98971b5c8e04c/src/Init/Data/List/Basic.lean#L317\">https://github.com/leanprover/lean4/blob/873a2ba8a696b8763acfd1e2b2b98971b5c8e04c/src/Init/Data/List/Basic.lean#L317</a></p>",
        "id": 268504373,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1642580427
    },
    {
        "content": "<p>Thank you Marcus! I completely overlooked it!</p>",
        "id": 268527901,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642593254
    },
    {
        "content": "<p>Is there a real possibility or intent to share core definitions between Lean4 and mathlib4 considering that there is a certain duplication (I am thinking about std definitions e.g. Monoid, Monad, Applicative, Fin, etc)?</p>",
        "id": 268544097,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1642601327
    },
    {
        "content": "<p>We did talk about this a while ago, my takeways from that were:</p>\n<ul>\n<li><code>Std</code> is meant as location for \"what the compiler needs to bootstrap\"</li>\n<li>we can use <code>Mathlib4</code> as a dumpster for stdlib like stuff for now</li>\n<li>at some point we probably want to extract the stdlib stub from <code>Mathlib4</code> into a separate library.</li>\n</ul>",
        "id": 268544712,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1642601595
    },
    {
        "content": "<p>I wonder what would be the driver for when \"at some point\" will be.</p>",
        "id": 268555387,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1642606029
    },
    {
        "content": "<p>I'd say soon after or soon before the actual matlhib gets merged into mathlib4 because at that point you'd always have to either compile mathlib or pull its cache in in order to use the stdlib part.</p>",
        "id": 268555485,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1642606078
    },
    {
        "content": "<p>Frustration with compile times is a great driver for this kind of thing. Once mathlib4 stops feeling lightweight I'm sure it will follow soon after</p>",
        "id": 268556912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642606584
    },
    {
        "content": "<p>I guess another driver could be programs not related to mathlib that woud want to leverage some of these definitions. I understand this is not the top of the priority here, but a driver nonetheless.</p>",
        "id": 268557278,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1642606740
    },
    {
        "content": "<p>I think many of us with CS background are excited about Lean 4's Std lib <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 268557860,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642606944
    },
    {
        "content": "<p>Yes, very much!</p>",
        "id": 268557975,
        "sender_full_name": "Yuri de Wit",
        "timestamp": 1642606992
    }
]