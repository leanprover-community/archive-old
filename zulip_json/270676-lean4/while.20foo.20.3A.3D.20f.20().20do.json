[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">stdin</span> <span class=\"bp\">&lt;-</span> <span class=\"n\">IO.getStdin</span>\n\n  <span class=\"n\">while</span> <span class=\"k\">let</span> <span class=\"n\">line</span> <span class=\"o\">:=</span> <span class=\"bp\">&lt;-</span> <span class=\"n\">stdin.getLine</span><span class=\"bp\">;</span> <span class=\"n\">not</span> <span class=\"n\">line.isEmpty</span> <span class=\"k\">do</span>\n    <span class=\"n\">IO.println</span> <span class=\"n\">line</span>\n    <span class=\"c1\">-- IO.println line</span>\n    <span class=\"n\">pure</span> <span class=\"o\">()</span>\n</code></pre></div>\n<p>Shouldn't this work?</p>",
        "id": 316367295,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1671227635
    },
    {
        "content": "<p>This is due to how it gets desugared i guess:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">stdin</span> <span class=\"bp\">&lt;-</span> <span class=\"n\">IO.getStdin</span>\n  <span class=\"n\">while</span> <span class=\"k\">let</span> <span class=\"n\">line</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">stdin.getLine</span><span class=\"o\">)</span><span class=\"bp\">;</span> <span class=\"n\">not</span> <span class=\"n\">line.isEmpty</span> <span class=\"k\">do</span>\n    <span class=\"n\">IO.println</span> <span class=\"s2\">\"hello\"</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">main</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span>\n<span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">stdin</span> <span class=\"bp\">←</span> <span class=\"n\">liftM</span> <span class=\"n\">IO.getStdin</span>\n  <span class=\"k\">let</span> <span class=\"n\">col</span> <span class=\"o\">:=</span> <span class=\"n\">Lean.Loop.mk</span><span class=\"bp\">;</span>\n    <span class=\"n\">forIn</span> <span class=\"n\">col</span> <span class=\"n\">PUnit.unit</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">r</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n      <span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"bp\">←</span> <span class=\"n\">stdin.getLine</span>\n      <span class=\"k\">if</span>\n            <span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"n\">line</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">;</span>\n              <span class=\"bp\">!</span><span class=\"n\">String.isEmpty</span> <span class=\"n\">line</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n              <span class=\"n\">true</span> <span class=\"k\">then</span>\n          <span class=\"k\">do</span>\n          <span class=\"n\">IO.println</span> <span class=\"s2\">\"hello\"</span>\n          <span class=\"n\">pure</span> <span class=\"o\">(</span><span class=\"n\">ForInStep.yield</span> <span class=\"n\">PUnit.unit</span><span class=\"o\">)</span>\n        <span class=\"k\">else</span> <span class=\"n\">pure</span> <span class=\"o\">(</span><span class=\"n\">ForInStep.done</span> <span class=\"n\">PUnit.unit</span><span class=\"o\">)</span>\n  <span class=\"n\">pure</span> <span class=\"n\">PUnit.unit</span>\n</code></pre></div>\n<p>Whihc is because lean does not support the type of syntax you are going for (that is an if/while let + a condition) right now, however if i remember correctly <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> recently opened an issue about this and does want to add it.</p>",
        "id": 316373603,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1671230485
    },
    {
        "content": "<p>I see<br>\nhow do I see the desugared expression myself in Lean? special #command?</p>",
        "id": 316374478,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1671230885
    },
    {
        "content": "<p>I just showed you above</p>",
        "id": 316375238,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1671231265
    }
]