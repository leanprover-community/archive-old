[
    {
        "content": "<p>I have two questions about the implicit arguments in the definition of <code>Equivalence</code> in Lean.Init.Core.</p>\n<ol>\n<li><code>symm</code> and <code>trans</code> use <code>{...}</code>.  Should they be <code>{{...}}</code>?  That's what was used in the definitions of <code>symmetric</code> and <code>transitive</code> in Lean 3.</li>\n<li>Suppose I have <code>e : Equivalence r</code>.  Then the type of <code>e.symm</code> is <code>∀ {x y}, r x y → r y x</code>.  Suppose I want to specify the arguments explicitly.  It seems like I should be able to use <code>@e.symm</code>, or perhaps <code>@(e.symm)</code>, but that doesn't seem to work.  What's the correct syntax to get something that acts like <code>∀ (x y), r x y → r y x</code>?</li>\n</ol>",
        "id": 313589628,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1670015351
    },
    {
        "content": "<ol>\n<li>It's possible <code>Equivalence</code> was around before semi-implicit arguments existed in Lean 4, I'm not sure though. (Hmmm.... Interesting to note that <code>Symmetric</code> uses semi-implicits)</li>\n<li><code>fun _x _y =&gt; e.symm</code> works.</li>\n</ol>",
        "id": 313599856,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670019965
    }
]