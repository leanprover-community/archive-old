[
    {
        "content": "<p>I saw that it is possible to do a visualization of the Rubik's Cube in Lean:<br>\n<a href=\"https://github.com/leanprover/lean4-samples/tree/main/RubiksCube\">https://github.com/leanprover/lean4-samples/tree/main/RubiksCube</a></p>\n<p>However, I have seen that they made a good way of doing visualization in Racket:<br>\n<a href=\"https://youtu.be/EQCsw0HTO3A\">https://youtu.be/EQCsw0HTO3A</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"EQCsw0HTO3A\" href=\"https://youtu.be/EQCsw0HTO3A\"><img src=\"https://uploads.zulipusercontent.net/4f6ac91e390e438eb11df2b25c457ac7506d94ad/68747470733a2f2f692e7974696d672e636f6d2f76692f45514373773048544f33412f64656661756c742e6a7067\"></a></div><p>Is it possible to do the same thing in Lean?</p>\n<p>The idea is that each GUI visualization has a state that can be changed in the GUI. This state can also be changed in the editor.<br>\nI think that a difficult part of implementation is if, for example, I define the state as <code>List Natural</code> and I changed it in Gui to [1,2,3]. If Lean 4 is smart enough to transform [1,2,3] to \"[1,2,3]\" as a string in the code editor automated.</p>",
        "id": 322161742,
        "sender_full_name": "Guilherme Silva",
        "timestamp": 1674079178
    },
    {
        "content": "<p>Most of the moving parts for that already exist. The main thing that is missing is a way to write the changed state back into the lean file</p>",
        "id": 322168931,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674082266
    },
    {
        "content": "<p>transforming <code>[1,2,3]</code> into <code>\"[1, 2, 3]\"</code> already exists, that's the <code>ToString</code> function</p>",
        "id": 322168992,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674082307
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Visualization.20Lean.20in.20VS.20Code/near/322168992\">said</a>:</p>\n<blockquote>\n<p>transforming <code>[1,2,3]</code> into <code>\"[1, 2, 3]\"</code> already exists, that's the <code>ToString</code> function</p>\n</blockquote>\n<p>Do you know if <code>toString</code> work with all the types? If not, maybe it is necessary to make some restrictions to the type like <code>(A : Type) [printable A]</code>.</p>",
        "id": 322171008,
        "sender_full_name": "Guilherme Silva",
        "timestamp": 1674083189
    },
    {
        "content": "<p>It's managed by a <code>ToString</code> typeclass :)</p>",
        "id": 322172861,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674084081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143232\">@Guilherme Silva</span> Is this roughly what you want <a href=\"#narrow/stream/270676-lean4/topic/by.20interactive\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/by.20interactive</a>!</p>",
        "id": 322198491,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674102911
    },
    {
        "content": "<p>Also there is <a href=\"#narrow/stream/270676-lean4/topic/Interactive.20Svg\">InteractiveSvg</a> where the State can be anything having <code>ToJson</code> instance.</p>",
        "id": 322209965,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1674111375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/270676-lean4/topic/Visualization.20Lean.20in.20VS.20Code/near/322198491\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"143232\">Guilherme Silva</span> Is this roughly what you want <a href=\"#narrow/stream/270676-lean4/topic/by.20interactive\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/by.20interactive</a>!</p>\n</blockquote>\n<p>I saw it. One thing that is missing is just changing the text editor from GUI.</p>",
        "id": 322373363,
        "sender_full_name": "Guilherme Silva",
        "timestamp": 1674160410
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Visualization.20Lean.20in.20VS.20Code/near/322168992\">said</a>:</p>\n<blockquote>\n<p>transforming <code>[1,2,3]</code> into <code>\"[1, 2, 3]\"</code> already exists, that's the <code>ToString</code> function</p>\n</blockquote>\n<p>I thought more about this. Maybe this <code>toString</code> is not necessary.<br>\nIf Lean has some macro <code>toExpr</code> that works for all types and after, <code>Expr -&gt; String</code>, it can be possible to extract the state and put it in the text editor.</p>",
        "id": 322374219,
        "sender_full_name": "Guilherme Silva",
        "timestamp": 1674160692
    }
]