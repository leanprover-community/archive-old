[
    {
        "content": "<p>Dear All,</p>\n<p>I do not know if what is below is a bug or not and whether it has already been reported.  It seems that Lean interprets up to  6 consecutive <code>and</code>s or <code>or</code>s of booleans as booleans, but stops doing so when there are 7.  It is not a big deal, since the second example below is an easy workaround, but I was surprised by this!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- works, 6 `and`s</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span>\n\n<span class=\"c1\">-- works, 6 `and`s plus an `(_ ∧ _)`</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- fails, 7 `and`s expects a `Bool`, finds a `Prop`</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 317343793,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709164
    },
    {
        "content": "<p>What does this actually generate if you give these examples a name and <code>#print</code> them?</p>",
        "id": 317344812,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709490
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">seven</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">type mismatch</span>\n<span class=\"cm\">  a = true ∧ b = true ∧ c = true ∧ d = true ∧ e = true ∧ f = true ∧ g = true ∧ h = true</span>\n<span class=\"cm\">has type</span>\n<span class=\"cm\">  Prop : Type</span>\n<span class=\"cm\">but is expected to have type</span>\n<span class=\"cm\">  Bool : Type</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">seven</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">theorem seven : Bool → Bool → Bool → Bool → Bool → Bool → Bool → Bool → Bool :=</span>\n<span class=\"cm\">sorryAx (Bool → Bool → Bool → Bool → Bool → Bool → Bool → Bool → Bool) true</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 317345311,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709598
    },
    {
        "content": "<p>Is this what you asked?</p>",
        "id": 317345348,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709611
    },
    {
        "content": "<p>I mean for the ones that succeeded</p>",
        "id": 317345401,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709623
    },
    {
        "content": "<p><code>and</code> expects to eat Props not Bools so the question is why the coercion is not kicking in</p>",
        "id": 317345495,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671709652
    },
    {
        "content": "<p>... which is why I wanted to see the elaborated output so we can tell where it did kick in in the versions that were ok</p>",
        "id": 317345594,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709675
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">six</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">six'</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">six</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">theorem six : Bool → Bool → Bool → Bool → Bool → Bool → Bool → Bool :=</span>\n<span class=\"cm\">fun a b c d e f g =&gt; decide (a = true ∧ b = true ∧ c = true ∧ d = true ∧ e = true ∧ f = true ∧ g = true)</span>\n<span class=\"cm\">-/</span>\n<span class=\"k\">#print</span> <span class=\"n\">six'</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">theorem six : Bool → Bool → Bool → Bool → Bool → Bool → Bool → Bool :=</span>\n<span class=\"cm\">fun a b c d e f g =&gt; decide (a = true ∧ b = true ∧ c = true ∧ d = true ∧ e = true ∧ f = true ∧ g = true)</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 317345668,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709687
    },
    {
        "content": "<p>Does adding a direct call to <code>decide</code> on <code>seven</code> solve the issue?</p>",
        "id": 317345746,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709714
    },
    {
        "content": "<p>Wait, the question is why the decidable Prop isn't being coerced back to a <code>Bool</code></p>",
        "id": 317345894,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671709757
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">seven</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">decide</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>works.  Is this what you were suggesting?</p>",
        "id": 317345909,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709760
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>, that's exactly the one I was thinking of. Does it fail for 14 or some larger number?</p>",
        "id": 317345982,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709783
    },
    {
        "content": "<p>Ok, I am slightly less puzzled now, but I am still surprised by the behaviour!</p>",
        "id": 317346034,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709799
    },
    {
        "content": "<p>Damiano if you actually want to do this you should be using Boolean and, not proppy and</p>",
        "id": 317346111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671709807
    },
    {
        "content": "<p>Which I assume is spelt <code>&amp;&amp;</code> (edit: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=and#doc\">docs4#and</a>)</p>",
        "id": 317346171,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709824
    },
    {
        "content": "<p>It's Bool.And I think? Possibly with no notation</p>",
        "id": 317346265,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671709860
    },
    {
        "content": "<p>This is the first that fails:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">seven</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">decide</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span>\n <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 317346276,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709862
    },
    {
        "content": "<p>What's the failure message?</p>",
        "id": 317346304,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709873
    },
    {
        "content": "<p>Failure:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">ands7.lean:19:0</span>\n<span class=\"cm\">Messages (1)</span>\n<span class=\"cm\">ands7.lean:19:49</span>\n<span class=\"cm\">failed to synthesize instance</span>\n<span class=\"cm\">  Decidable</span>\n<span class=\"cm\">    (a = true ∧</span>\n<span class=\"cm\">      b = true ∧</span>\n<span class=\"cm\">        c = true ∧</span>\n<span class=\"cm\">          d = true ∧</span>\n<span class=\"cm\">            e = true ∧</span>\n<span class=\"cm\">              f = true ∧</span>\n<span class=\"cm\">                g = true ∧</span>\n<span class=\"cm\">                  h = true ∧</span>\n<span class=\"cm\">                    b = true ∧</span>\n<span class=\"cm\">                      c = true ∧</span>\n<span class=\"cm\">                        d = true ∧</span>\n<span class=\"cm\">                          e = true ∧</span>\n<span class=\"cm\">                            f = true ∧</span>\n<span class=\"cm\">                              g = true ∧</span>\n<span class=\"cm\">                                h = true ∧</span>\n<span class=\"cm\">                                  f = true ∧</span>\n<span class=\"cm\">                                    g = true ∧</span>\n<span class=\"cm\">                                      h = true ∧</span>\n<span class=\"cm\">                                        b = true ∧</span>\n<span class=\"cm\">                                          c = true ∧</span>\n<span class=\"cm\">                                            d = true ∧</span>\n<span class=\"cm\">                                              e = true ∧</span>\n<span class=\"cm\">                                                f = true ∧</span>\n<span class=\"cm\">                                                  g = true ∧</span>\n<span class=\"cm\">                                                    h = true ∧</span>\n<span class=\"cm\">                                                      b = true ∧</span>\n<span class=\"cm\">                                                        c = true ∧</span>\n<span class=\"cm\">                                                          d = true ∧</span>\n<span class=\"cm\">                                                            e = true ∧</span>\n<span class=\"cm\">                                                              f = true ∧</span>\n<span class=\"cm\">                                                                g = true ∧</span>\n<span class=\"cm\">                                                                  h = true ∧</span>\n<span class=\"cm\">                                                                    b = true ∧</span>\n<span class=\"cm\">                                                                      c = true ∧</span>\n<span class=\"cm\">                                                                        d = true ∧</span>\n<span class=\"cm\">                                                                          e = true ∧</span>\n<span class=\"cm\">                                                                            f = true ∧</span>\n<span class=\"cm\">                                                                              g = true ∧</span>\n<span class=\"cm\">                                                                                h = true ∧</span>\n<span class=\"cm\">                                                                                  b = true ∧</span>\n<span class=\"cm\">                                                                                    c = true ∧</span>\n<span class=\"cm\">                                                                                      d = true ∧</span>\n<span class=\"cm\">                                                                                        e = true ∧</span>\n<span class=\"cm\">                                                                                          f = true ∧</span>\n<span class=\"cm\">                                                                                            g = true ∧</span>\n<span class=\"cm\">                                                                                              h = true ∧</span>\n<span class=\"cm\">                                                                                                b = true ∧</span>\n<span class=\"cm\">                                                                                                  c = true ∧</span>\n<span class=\"cm\">                                                                                                    d = true ∧</span>\n<span class=\"cm\">                                                                                                      e = true ∧</span>\n<span class=\"cm\">                                                                                                        f = true ∧</span>\n<span class=\"cm\">                                                                                                          g = true ∧</span>\n<span class=\"cm\">                                                                                                            h = true ∧</span>\n<span class=\"cm\">                                                                                                              b = true ∧</span>\n<span class=\"cm\">                                                                                                                c =</span>\n<span class=\"cm\">                                                                                                                    true ∧</span>\n<span class=\"cm\">                                                                                                                  d =</span>\n<span class=\"cm\">                                                                                                                      true ∧</span>\n<span class=\"cm\">                                                                                                                    e =</span>\n<span class=\"cm\">                                                                                                                        true ∧</span>\n<span class=\"cm\">                                                                                                                      f =</span>\n<span class=\"cm\">                                                                                                                          true ∧</span>\n<span class=\"cm\">                                                                                                                        g =</span>\n<span class=\"cm\">                                                                                                                            true ∧</span>\n<span class=\"cm\">                                                                                                                          h =</span>\n<span class=\"cm\">                                                                                                                              true ∧</span>\n<span class=\"cm\">                                                                                                                            b =</span>\n<span class=\"cm\">                                                                                                                                true ∧</span>\n<span class=\"cm\">                                                                                                                              c =</span>\n<span class=\"cm\">                                                                                                                                  true ∧</span>\n<span class=\"cm\">                                                                                                                                d =</span>\n<span class=\"cm\">                                                                                                                                    true ∧</span>\n<span class=\"cm\">                                                                                                                                  e =</span>\n<span class=\"cm\">                                                                                                                                      true ∧</span>\n<span class=\"cm\">                                                                                                                                    a =</span>\n<span class=\"cm\">                                                                                                                                      true)</span>\n<span class=\"cm\">All Messages (4)-/</span>\n</code></pre></div>",
        "id": 317346439,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709914
    },
    {
        "content": "<p>That doesn't look like an error message?</p>",
        "id": 317346543,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709934
    },
    {
        "content": "<p>Yes, sorry, copy-pasted the wrong thing.</p>",
        "id": 317346622,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671709955
    },
    {
        "content": "<p>So maybe the coercion from <code>Bool</code> to <code>Prop</code> has a super-short timeout / search depth for synthesizing instances?</p>",
        "id": 317346633,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709958
    },
    {
        "content": "<p>Or alternatively, maybe it spends most of it's budget in the <code>CoeTC</code> typeclasses</p>",
        "id": 317346745,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671709997
    },
    {
        "content": "<p>I do not know, but already knowing that <code>∧</code> is \"just\" for Props clarified a lot!</p>",
        "id": 317346777,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671710010
    },
    {
        "content": "<p>Please update your Lean version, <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> fixed this yesterday</p>",
        "id": 317346920,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671710049
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/1981\">https://github.com/leanprover/lean4/pull/1981</a>?</p>",
        "id": 317347140,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710135
    },
    {
        "content": "<p>Yes! <a href=\"https://github.com/leanprover/lean4/commit/6083b01c86f530e1fb037114d8c0ddd4ac2e909e\">https://github.com/leanprover/lean4/commit/6083b01c86f530e1fb037114d8c0ddd4ac2e909e</a></p>",
        "id": 317347294,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1671710178
    },
    {
        "content": "<p>Not <a href=\"https://github.com/leanprover/lean4/pull/1981/commits/770ea8e730544d1a81ea19d3560bf10855ed45f9\">https://github.com/leanprover/lean4/pull/1981/commits/770ea8e730544d1a81ea19d3560bf10855ed45f9</a>?</p>",
        "id": 317347317,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710189
    },
    {
        "content": "<p>Oh I guess it was rebased</p>",
        "id": 317347355,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671710208
    },
    {
        "content": "<p>I am ashamed for asking, but... how do I update the lean version?</p>",
        "id": 317347511,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671710271
    },
    {
        "content": "<p>Edit the <code>lean-toolchain</code> file.</p>",
        "id": 317351044,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671711309
    },
    {
        "content": "<p>Siddhartha, thank you very much!</p>",
        "id": 317352478,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671711775
    },
    {
        "content": "<p>I can confirm that the issue that I had raised disappeared!</p>\n<p>64 <code>Bool</code>s still seem to be too many, though.  <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">seven</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">c</span> <span class=\"bp\">∧</span> <span class=\"n\">d</span> <span class=\"bp\">∧</span> <span class=\"n\">e</span> <span class=\"bp\">∧</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span>\n <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">type mismatch</span>\n<span class=\"cm\">  a = true ∧</span>\n<span class=\"cm\">    b = true ∧</span>\n<span class=\"cm\">      c = true ∧</span>\n<span class=\"cm\">        d = true ∧</span>\n<span class=\"cm\">          e = true ∧</span>\n<span class=\"cm\">            f = true ∧</span>\n<span class=\"cm\">              g = true ∧</span>\n<span class=\"cm\">                h = true ∧</span>\n<span class=\"cm\">                  b = true ∧</span>\n<span class=\"cm\">                    c = true ∧</span>\n<span class=\"cm\">                      d = true ∧</span>\n<span class=\"cm\">                        e = true ∧</span>\n<span class=\"cm\">                          f = true ∧</span>\n<span class=\"cm\">                            g = true ∧</span>\n<span class=\"cm\">                              h = true ∧</span>\n<span class=\"cm\">                                f = true ∧</span>\n<span class=\"cm\">                                  h = true ∧</span>\n<span class=\"cm\">                                    b = true ∧</span>\n<span class=\"cm\">                                      c = true ∧</span>\n<span class=\"cm\">                                        d = true ∧</span>\n<span class=\"cm\">                                          e = true ∧</span>\n<span class=\"cm\">                                            f = true ∧</span>\n<span class=\"cm\">                                              g = true ∧</span>\n<span class=\"cm\">                                                h = true ∧</span>\n<span class=\"cm\">                                                  b = true ∧</span>\n<span class=\"cm\">                                                    c = true ∧</span>\n<span class=\"cm\">                                                      d = true ∧</span>\n<span class=\"cm\">                                                        e = true ∧</span>\n<span class=\"cm\">                                                          f = true ∧</span>\n<span class=\"cm\">                                                            g = true ∧</span>\n<span class=\"cm\">                                                              h = true ∧</span>\n<span class=\"cm\">                                                                b = true ∧</span>\n<span class=\"cm\">                                                                  c = true ∧</span>\n<span class=\"cm\">                                                                    d = true ∧</span>\n<span class=\"cm\">                                                                      e = true ∧</span>\n<span class=\"cm\">                                                                        f = true ∧</span>\n<span class=\"cm\">                                                                          g = true ∧</span>\n<span class=\"cm\">                                                                            h = true ∧</span>\n<span class=\"cm\">                                                                              h = true ∧</span>\n<span class=\"cm\">                                                                                h = true ∧</span>\n<span class=\"cm\">                                                                                  h = true ∧</span>\n<span class=\"cm\">                                                                                    h = true ∧</span>\n<span class=\"cm\">                                                                                      h = true ∧</span>\n<span class=\"cm\">                                                                                        h = true ∧</span>\n<span class=\"cm\">                                                                                          h = true ∧</span>\n<span class=\"cm\">                                                                                            h = true ∧</span>\n<span class=\"cm\">                                                                                              h = true ∧</span>\n<span class=\"cm\">                                                                                                h = true ∧</span>\n<span class=\"cm\">                                                                                                  h = true ∧</span>\n<span class=\"cm\">                                                                                                    h = true ∧</span>\n<span class=\"cm\">                                                                                                      h = true ∧</span>\n<span class=\"cm\">                                                                                                        h = true ∧</span>\n<span class=\"cm\">                                                                                                          h = true ∧</span>\n<span class=\"cm\">                                                                                                            h = true ∧</span>\n<span class=\"cm\">                                                                                                              h = true ∧</span>\n<span class=\"cm\">                                                                                                                h =</span>\n<span class=\"cm\">                                                                                                                    true ∧</span>\n<span class=\"cm\">                                                                                                                  h =</span>\n<span class=\"cm\">                                                                                                                      true ∧</span>\n<span class=\"cm\">                                                                                                                    h =</span>\n<span class=\"cm\">                                                                                                                        true ∧</span>\n<span class=\"cm\">                                                                                                                      h =</span>\n<span class=\"cm\">                                                                                                                          true ∧</span>\n<span class=\"cm\">                                                                                                                        h =</span>\n<span class=\"cm\">                                                                                                                            true ∧</span>\n<span class=\"cm\">                                                                                                                          h =</span>\n<span class=\"cm\">                                                                                                                              true ∧</span>\n<span class=\"cm\">                                                                                                                            h =</span>\n<span class=\"cm\">                                                                                                                                true ∧</span>\n<span class=\"cm\">                                                                                                                              h =</span>\n<span class=\"cm\">                                                                                                                                  true ∧</span>\n<span class=\"cm\">                                                                                                                                h =</span>\n<span class=\"cm\">                                                                                                                                  true</span>\n<span class=\"cm\">has type</span>\n<span class=\"cm\">  Prop : Type</span>\n<span class=\"cm\">but is expected to have type</span>\n<span class=\"cm\">  Bool : Type</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Now that I know this, this is with <code>leanprover/lean4:nightly-2022-12-22</code>.</p>",
        "id": 317352489,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671711778
    },
    {
        "content": "<p>Anyway, I am satisfied with the current situation!  Thanks a lot to all!</p>",
        "id": 317352604,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1671711815
    }
]