[
    {
        "content": "<p>I could have sworn this worked before, but right now I am not getting replacements on abbreviations like <code>\\alpha</code> via the lean 4 vscode extension (leanprover.lean4 v0.0.5). It works fine if I enable the lean 3 extension instead, I've tried disabling other extensions and so on but no luck. I assume this works for others because lean 4 is pretty unwriteable without unicode abbreviations, since a lot of core syntax depends on it</p>",
        "id": 226099681,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613107494
    },
    {
        "content": "<p>It seems to have stopped working for me too (on macOS). Maybe there was something in the recent update of VS Code?</p>",
        "id": 226100160,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613108166
    },
    {
        "content": "<p>Hmm, if I open the VS Code settings tab and then go back to the editor tab, the input starts working again.</p>",
        "id": 226103121,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613112411
    },
    {
        "content": "<p>Actually, just switching back and forth between two file tabs seems to get it working again.</p>",
        "id": 226103202,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613112564
    },
    {
        "content": "<p>I've seen the same behavior in lean 3</p>",
        "id": 226110684,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613119834
    },
    {
        "content": "<p>I've just experienced the same issue as well.  Thanks for the workaround!</p>",
        "id": 226116257,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1613123280
    },
    {
        "content": "<p>I'm running into the same issue now but the workaround does not seem to work. Huh.</p>",
        "id": 226119896,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613125513
    },
    {
        "content": "<p>The problem is that this here returns false (I'm still investigating why, the languageId of the document is <code>lean4</code> and it is in fact matching against <code>lean4</code>): <a href=\"https://github.com/leanprover-community/vscode-lean4/blob/master/src/abbreviation/rewriter/AbbreviationRewriterFeature.ts#L49\">https://github.com/leanprover-community/vscode-lean4/blob/master/src/abbreviation/rewriter/AbbreviationRewriterFeature.ts#L49</a><br>\nalso, I believe that if condition three lines above should call <code>.get()</code> on the setting :)</p>",
        "id": 226126225,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613130068
    },
    {
        "content": "<p>My first guess is that right after opening a file, the id is still <code>lean</code> before the extension changes it to <code>lean4</code>.</p>",
        "id": 226126443,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1613130242
    },
    {
        "content": "<p>You're right, I was missled by the debugger showing me a later state.</p>",
        "id": 226126649,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613130395
    },
    {
        "content": "<p>Adding an <code>await</code> to <code>setLean4LanguageId</code> makes it work :)</p>",
        "id": 226127070,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613130722
    },
    {
        "content": "<p>The fix is underway to a vscode near you!</p>",
        "id": 226128566,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1613131617
    },
    {
        "content": "<p>The new version will also have support for a simple (non-widget) goal view.</p>",
        "id": 226128707,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613131695
    },
    {
        "content": "<p>Is there an associated fix to the lean3 extension?</p>",
        "id": 226132968,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613134578
    },
    {
        "content": "<p>The bug that this fixed was specific to vscode-lean4</p>",
        "id": 226133038,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613134629
    },
    {
        "content": "<p>Then I must be seeing a different bug with similar manifestation</p>",
        "id": 226136935,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613136880
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/abbreviations.20in.20vscode/near/226136935\">said</a>:</p>\n<blockquote>\n<p>Then I must be seeing a different bug with similar manifestation</p>\n</blockquote>\n<p>I can confirm that after fixing the above issue, abbreviations still sometimes stop working (in vscode-lean4). I'll take a look later.</p>",
        "id": 226240209,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613215029
    },
    {
        "content": "<p>Abbreviations have been really weird in Lean 3 recently, although I just spent a while playing around and couldn't reproduce. I'll look out for the issue.</p>",
        "id": 226308091,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613314577
    },
    {
        "content": "<p>This happens for me every time:</p>\n<ul>\n<li>New file, don't save it</li>\n<li>Set syntax lean (3). Type some ascii, goal view works fine</li>\n<li>Type \\alpha. No substitution happens.</li>\n<li>Switch to another tab, switch back</li>\n<li>\\alpha now works</li>\n</ul>",
        "id": 226315217,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613323076
    },
    {
        "content": "<p>I don't see this, it works fine for me (on Ubuntu). Note that I only use VS Code for Lean 3 so I don't know what \"set syntax Lean (3)\" means.</p>",
        "id": 226316521,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613324954
    },
    {
        "content": "<p>It means \"I don't have lean 4 installed in any form\"</p>",
        "id": 226316618,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613325122
    },
    {
        "content": "<p>But I'm on windows</p>",
        "id": 226316658,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613325138
    },
    {
        "content": "<p>I didn't get to looking at the other issue yet, but I think I just ran into another issue with the new abbreviations. Specifically, I undo'd a bunch, looked at some older state of the file and then redo'd a bunch. <br>\nAt some point during redoing, it stopped at some intermediate state next to an abbreviation I was typing in and eagerly completed the abbreviation (At least I think that's what happened?), which made me lose the rest of the redo history.<br>\nIt stopped next to a \"\\n\" that I was typing in via \"\\\\n\" and eagerly replaced that with \"¬\".</p>",
        "id": 226860995,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1613674508
    },
    {
        "content": "<p>I've a partial fix to this problem in <a href=\"https://github.com/leanprover/vscode-lean/pull/263\">https://github.com/leanprover/vscode-lean/pull/263</a></p>",
        "id": 237138938,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620036448
    },
    {
        "content": "<p>Are people still seeing the bug with \\ not working sometimes in latest version of vscore-lean4 ? I can't seem to repro the bug. Looking at the code I can force a similar repro if I force this.dontTrackNewAbbr to get stuck a \"true\" in  <a href=\"https://github.com/lovettchris/vscode-lean4/blob/master/vscode-lean4/src/abbreviation/rewriter/AbbreviationRewriter.ts\">AbbreviationRewriter1.ts</a> , which is what I suspect is happening, but looking at the code there is a try catch protecting that flag so I don't see how it can get stuck on. Switching active files back and forth completely reconstructs AbbreviationRewriter which is why that is a workaround. So I need a repro.  In the meantime, this PR might help get more info if someone does fine a repro: <a href=\"https://github.com/leanprover-community/vscode-lean4/pull/35\">https://github.com/leanprover-community/vscode-lean4/pull/35</a></p>",
        "id": 252392777,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1631063283
    },
    {
        "content": "<p>I use <code>;</code> to escape unicode. Recently, when I've been encountering this problem, not even resetting VS Code solves it (it used to when <code>\\</code> was my escaping character). But I want to mention a <del>weird</del> workaround that I found.</p>\n<p>The workaround is simply expanding the extensions menu and clicking on the <code>lean4</code> extension.</p>\n<p><a href=\"/user_uploads/3121/h-iont0nVE3AcQUH_D9glouF/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/h-iont0nVE3AcQUH_D9glouF/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/h-iont0nVE3AcQUH_D9glouF/image.png\"></a></div><p>Then I can just close the extension tab and it starts working again</p>",
        "id": 271165897,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644343013
    },
    {
        "content": "<blockquote>\n<p>this problem</p>\n</blockquote>\n<p>I think I lost tracked of the issues in this thread.  Can you explain the issue more clearly, ideally with steps to reproduce it?</p>",
        "id": 271166810,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1644343376
    },
    {
        "content": "<p>The problem is that escaping unicode suddenly stops working. For instance, when you want to type <code>α</code> then you type <code>\\</code> and <code>a</code> and it just stays as <code>\\a</code>.</p>\n<p>Unfortunately, I <em>still</em> haven't figured out a way to reproduce it. So I thought that a diagnosis by workaround might give us some clue about what's going on. For some reason, simply clicking on the <code>lean4</code> extension icon solves it (until it happens again)</p>",
        "id": 271167580,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644343673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> you would have to type <code>\\</code> and <code>a</code> and <code>space</code> to get the abbreviation to activate to <code>α</code>.  </p>\n<p>But can you try disabling all other extensions you have loaded in VS code and see if it still repro's in that kind of pristine environment?</p>",
        "id": 271383959,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1644465983
    },
    {
        "content": "<p>For example, I'm seeing a lot of uncaught exceptions from other extensions while typing inside a Lean source file, especially the github copilot extension... so I'm wondering if there's some bad extension that is confusing things here...</p>",
        "id": 271383992,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1644466046
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"434989\">Chris Lovett</span> <a href=\"#narrow/stream/270676-lean4/topic/abbreviations.20in.20vscode/near/271383959\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> you would have to type <code>\\</code> and <code>a</code> and <code>space</code> to get the abbreviation to activate to <code>α</code>.  </p>\n<p>But can you try disabling all other extensions you have loaded in VS code and see if it still repro's in that kind of pristine environment?</p>\n</blockquote>\n<p>I'm aware of how you'd trigger the abbreviation, but I don't have other extensions except for one that makes certain characters glow in another color</p>",
        "id": 271384114,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644466192
    }
]