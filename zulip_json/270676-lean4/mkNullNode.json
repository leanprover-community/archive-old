[
    {
        "content": "<p>I'm pretty sure this used to work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span> <span class=\"s2\">\"mwe\"</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">return</span> <span class=\"n\">mkNullNode</span> <span class=\"bp\">#</span><span class=\"o\">[]</span>\n</code></pre></div>\n<p>But on the current nightly I get:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">pure</span> <span class=\"o\">(</span><span class=\"n\">mkNullNode</span> <span class=\"bp\">#</span><span class=\"o\">[])</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">mkNullNode</span> <span class=\"bp\">#</span><span class=\"o\">[]</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">Syntax</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">TSyntax</span> <span class=\"bp\">`</span><span class=\"n\">command</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n</code></pre></div>\n<p>What is the proper way of combining multiple <code>Command</code>s into a single command now?</p>\n<p><em>(Cf. an <a href=\"#narrow/stream/270676-lean4/topic/Antiquot.20Splice/near/297760730\">answer by Gabriel</a> on this topic.)</em></p>",
        "id": 309212110,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1668179970
    },
    {
        "content": "<p>you can just do <code>return ⟨mkNullNode⟩</code></p>",
        "id": 309215859,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668181186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Do you see a nice solution here? I don't think we want to introduce a <code>commands</code> category just for that. For tactics we already have <code>($tac1; $tac2)</code>, perhaps we should allow <code>section</code> (or some new syntax) to parse contained commands eagerly <em>when inside a quotation</em> as in</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">command</span><span class=\"bp\">|</span> <span class=\"kn\">section</span>\n  <span class=\"bp\">$</span><span class=\"n\">cmd1</span>\n  <span class=\"bp\">$</span><span class=\"n\">cmd2</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 309633416,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1668441191
    },
    {
        "content": "<p>why not just invent some kind of grouping syntax for commands?</p>",
        "id": 309633832,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441305
    },
    {
        "content": "<p>we already have <code>mutual</code>, so a grouping syntax wouldn't be any more complicated than that</p>",
        "id": 309634122,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441379
    },
    {
        "content": "<p>I think <code>meta if</code> also frequently needs command groups</p>",
        "id": 309634263,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441422
    },
    {
        "content": "<p>How about:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">section</span> <span class=\"n\">name</span><span class=\"bp\">?</span> <span class=\"o\">{</span>\n <span class=\"bp\">$</span><span class=\"n\">cmd1</span>\n <span class=\"bp\">$</span><span class=\"n\">cmd2</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 309634601,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441518
    },
    {
        "content": "<p>which behaves exactly like <code>section ... end</code> except it is a single command</p>",
        "id": 309634747,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441562
    },
    {
        "content": "<p>I don't see an advantage over my suggestion tbh</p>",
        "id": 309635687,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1668441813
    },
    {
        "content": "<p>having syntax that is only valid in quotations is not nice</p>",
        "id": 309635993,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441890
    },
    {
        "content": "<p>also your syntax has no terminator</p>",
        "id": 309636020,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441898
    },
    {
        "content": "<p>To be clear, users would also be able to write <code>section foo { def bar := 1 }</code></p>",
        "id": 309636317,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668441969
    },
    {
        "content": "<p>But the syntax is just as valid outside! That the following commands are not technically part of the section syntax is an implementation detail, people certainly think of them being part of the section.</p>",
        "id": 309636529,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1668442028
    },
    {
        "content": "<p>I can imagine some people will prefer that style, although it remains to be seen what kind of side effects arise from it being a single command</p>",
        "id": 309636578,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668442040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/mkNullNode/near/309636020\">said</a>:</p>\n<blockquote>\n<p>also your syntax has no terminator</p>\n</blockquote>\n<p>Well <code>end</code> would be the obvious one</p>",
        "id": 309636641,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1668442060
    },
    {
        "content": "<p>Just not quite as obvious to parse, but we should manage :)</p>",
        "id": 309765945,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1668442094
    },
    {
        "content": "<p>I think it is simpler overall not to special case quotations and just have a general purpose grouping syntax</p>",
        "id": 309765989,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668442106
    },
    {
        "content": "<p><code>section</code> is not a grouping syntax in that sense, at least currently</p>",
        "id": 309766086,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668442134
    },
    {
        "content": "<p>I'm assuming that <code>(</code> is not an option</p>",
        "id": 309766199,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1668442171
    }
]