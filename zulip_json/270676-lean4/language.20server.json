[
    {
        "content": "<p>I usually develop with nix and use nix develop to set <code>LEAN_PATH</code> and <code>LEAN_SRC_PATH</code> with the respective dependencies. I also add local directories with to <code>LEAN_PATH</code>, but this isn't perfect. Because the language server <code>lean --server</code> complains that there is no .olean files in the local dir. Why can't it just compile them? I want to make several improvements to the Lsp so that it becomes more nix friendly. </p>\n<p>On a different note: Would it be possible to integrate the lean parser with <code>tree-sitter</code> so that one doesn't have to reimplement the parser there?</p>",
        "id": 271105120,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644314752
    },
    {
        "content": "<p>You should not have to do any of this. <code>lean-dev/emacs-dev/vscode-dev</code> take care of compiling everything on the fly.</p>",
        "id": 271105597,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644315001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"433842\">Anders Christiansen Sørby</span> <a href=\"#narrow/stream/270676-lean4/topic/language.20server/near/271105120\">said</a>:</p>\n<blockquote>\n<p>On a different note: Would it be possible to integrate the lean parser with <code>tree-sitter</code> so that one doesn't have to reimplement the parser there?</p>\n</blockquote>\n<p>A static grammar like Tree-sitter's will never fully understand Lean's dynamic syntax. But writing a tool that generates a Tree-sitter grammar from a given set of Lean modules might be possible.</p>",
        "id": 271106012,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644315237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/language.20server/near/271105597\">said</a>:</p>\n<blockquote>\n<p>You should not have to do any of this. <code>lean-dev/emacs-dev/vscode-dev</code> take care of compiling everything on the fly.</p>\n</blockquote>\n<p>Yes, but I'm using helix editor and it would be nice if the language server itself took care of generating olean files IMO.</p>",
        "id": 271109523,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644317274
    },
    {
        "content": "<p>Now I have to do it manually with lean</p>",
        "id": 271109604,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644317304
    },
    {
        "content": "<p>Then use <code>lean-dev</code> from your editor, just like <code>emacs-dev</code> and <code>vscode-dev</code> do</p>",
        "id": 271109675,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644317366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> has been working on a tree sitter parser iiuc <a href=\"https://github.com/Julian/tree-sitter-lean\">https://github.com/Julian/tree-sitter-lean</a></p>",
        "id": 271110504,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1644317853
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/language.20server/near/271105597\">said</a>:</p>\n<blockquote>\n<p>You should not have to do any of this. <code>lean-dev/emacs-dev/vscode-dev</code> take care of compiling everything on the fly.</p>\n</blockquote>\n<p>I missed that part. Maybe move/copy it to an editor specific section?</p>",
        "id": 271111011,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644318162
    }
]