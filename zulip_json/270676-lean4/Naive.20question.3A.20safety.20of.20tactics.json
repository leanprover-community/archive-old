[
    {
        "content": "<p>I was trying to understang some of the source code, specifically <code>liftMetaTactic</code> and have a naive question - what goes wrong if we call this with a tactic that simply maps <code>MVarId</code> to <code>return []</code>, i.e., just declares no goals are left. Is such a function not well-defined for some reason? Or is it the responsibility of the tactic writer, and a failure will happen later?</p>\n<p>Thanks.</p>",
        "id": 251541290,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1630494969
    },
    {
        "content": "<p>this will definitely not be caught at compile time if that's what you mean</p>",
        "id": 251541371,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630495047
    },
    {
        "content": "<p>Thanks. That is what I meant.</p>",
        "id": 251541478,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1630495114
    },
    {
        "content": "<p>You can do the same thing in lean 3 tactics. What happens is that you get no goals so it looks like you finished, but then you get a more low level error saying the tactic didn't actually produce a complete term like it was supposed to</p>",
        "id": 251541479,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630495115
    },
    {
        "content": "<p>This is generally considered a bug in the tactic</p>",
        "id": 251541506,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630495134
    },
    {
        "content": "<p>Thanks. So I see it is the responsibility while writing a tactic to ensure that <code>MVar</code> is a consequence of the new metavariables returned, and that a proof of this has been added (to the local context?)</p>",
        "id": 251541651,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1630495245
    },
    {
        "content": "<p>You should ensure that the input <code>MVar</code> is either passed back out as a goal, or assigned to an expression which would be a complete term if all the mvars returned as goals are assigned to complete terms</p>",
        "id": 251541795,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1630495339
    },
    {
        "content": "<p>What does _assign_ mean here?</p>",
        "id": 251547739,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1630498624
    }
]