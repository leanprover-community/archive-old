[
    {
        "content": "<p>I have just merged <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>'s PR that enables widget support in the vscode extension.  This will most likely break something, so please keep an eye out for new bugs and complain here or on the bugtracker if you find one!</p>",
        "id": 257997400,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634547767
    },
    {
        "content": "<p>Now we just need an elisp guru for the last remaining editor...</p>",
        "id": 257997420,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634547781
    },
    {
        "content": "<p>Not sure if it's related, but the timing matches quite well. On my machine (VSCode on Linux), the infoview now stops updating after a while. The \"Problems\" tab still updates properly, but the infoview is stuck in some state, usually empty. Here's a screenshot: <a href=\"https://imgur.com/RrHLi7w.png\">https://imgur.com/RrHLi7w.png</a></p>\n<div class=\"message_inline_image\"><a href=\"https://imgur.com/RrHLi7w.png\"><img src=\"https://uploads.zulipusercontent.net/7115a9d1c5cbd54b80dc246ac931ed20fd6b5776/68747470733a2f2f696d6775722e636f6d2f5272484c6937772e706e67\"></a></div>",
        "id": 258240497,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1634665338
    },
    {
        "content": "<p>This might be the same issue as <a href=\"https://github.com/Julian/lean.nvim/issues/176\">https://github.com/Julian/lean.nvim/issues/176</a><br>\nDo you remember how you got into the stuck state?  It would be awesome for debugging if we could reliably reproduce this.</p>",
        "id": 258240724,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634665415
    },
    {
        "content": "<p>Unfortunately not, except that I can reliably reproduce it by working for 5-15 minutes. ;)</p>",
        "id": 258241314,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1634665639
    },
    {
        "content": "<p>If you can indeed manage to get it into the stuck state and can come back and interactively debug while you're in the stuck state that may also help all of us figure it out -- e.g. by enabling logging and seeing what chatter is going from VSCode -&gt; lean, or stracing the language server process and seeing what it's doing, or something.</p>",
        "id": 258247636,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634667825
    },
    {
        "content": "<p>I've just noticed that in one of my files, it reliably happens almost immediately after opening. More specifically, only the first click works, then it gets stuck. It's a particularly heavy file; that might be part of the reason. If someone else wants to try it with the same file, the project is at <a href=\"https://github.com/SReichelt/universe-abstractions\">https://github.com/SReichelt/universe-abstractions</a>, and the particular file is FunctorUniverse.lean.</p>",
        "id": 258257830,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1634671861
    },
    {
        "content": "<p>Is there any plan to bring the Lean 3 infoview widgets to Lean 4?  I particularly miss the buttons which displayed on the pop-up from clicking a subterm in the infoview: (1) jump to the definition of the leading function application, (2) copy the whole subterm, (3) close the pop-up.</p>",
        "id": 318150148,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672170100
    },
    {
        "content": "<p>jump to definition is already there, close the popup should hopefully be a lot more automatic than it used to be</p>",
        "id": 318150529,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672170279
    },
    {
        "content": "<p>For \"copy the subterm\", one relatively unimposing way to do it would be to have clicking on a hoverable term (such that the term has a highlight and the hover itself may or may not be shown) select the text, and then you can just ctrl-C copy it</p>",
        "id": 318150978,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672170486
    },
    {
        "content": "<p>Heather, jump to definition is there as an Easter egg, you need to know the secret code which is Ctrl-click.</p>",
        "id": 318152187,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1672171062
    },
    {
        "content": "<p>I agree that the copy-paste button is needed. And it would be good to have a smart one (providing something that is more likely to elaborate than what is displayed).</p>",
        "id": 318152350,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1672171135
    },
    {
        "content": "<p>Thanks Patrick.  Indeed I didn't know about the Ctrl-click.</p>",
        "id": 318152566,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672171244
    },
    {
        "content": "<p>It also took me forever. I think I had to ask Ed and he revealed this secret to me. It has been here for ever, hiding in plain sight.</p>",
        "id": 318152645,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1672171276
    },
    {
        "content": "<p>Less important, but I also think the display in Lean 3 is visually clearer.  It gives more prominence to the type of the term (which is often what I want to know): it displays as say</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>ℝ\n3 * a + b ^ 1.5\n</code></pre></div>\n<p>rather than</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>3 * a + b ^ 1.5 : ℝ\n</code></pre></div>\n<p>Does anyone else share my appetite for requesting a change on that?</p>",
        "id": 318153105,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672171479
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Widgets.20in.20vscode/near/318152645\">said</a>:</p>\n<blockquote>\n<p>It also took me forever. I think I had to ask Ed and he revealed this secret to me. It has been here for ever, hiding in plain sight.</p>\n</blockquote>\n<p>Yeah.. the hope was that for people who already use VScode where ctrl-click is the default way of jumping to a definition via mouse, this would be \"obvious\" so they wouldn't even have to think about it. Clearly that's not the case though, especially for people who use the keyboard or the right-click menu. I do think the new UX is better because you can jump to the leading function without even opening a popup, but it needs to be more discoverable. Maybe we need a (?) button that shows a small tutorial.</p>",
        "id": 318168473,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1672180886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Widgets.20in.20vscode/near/318152645\">said</a>:</p>\n<blockquote>\n<p>It also took me forever. I think I had to ask Ed and he revealed this secret to me. It has been here for ever, hiding in plain sight.</p>\n</blockquote>\n<p>I also discovered this easter egg from Ed -- I bumped into him in person a couple of months ago and moaned about its absence and he told me the secret :-)</p>",
        "id": 318168757,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672181064
    },
    {
        "content": "<blockquote>\n<p>For \"copy the subterm\", one relatively unimposing way to do it would be to have clicking on a hoverable term (such that the term has a highlight and the hover itself may or may not be shown) select the text, and then you can just ctrl-C copy it</p>\n</blockquote>\n<p>This is a good idea, except that currently clicking on a subterm also opens a popup. Not sure that clicking should do two things at once since you may not always want to both select something for copying <em>and</em> open the popup</p>",
        "id": 318168909,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1672181159
    },
    {
        "content": "<blockquote>\n<p>Does anyone else share my appetite for requesting a change on that?</p>\n</blockquote>\n<p>Implementation-wise this would be a trivial change; it's just a matter of what the community prefers</p>",
        "id": 318168990,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1672181198
    },
    {
        "content": "<p>In Lean 3 cut-and-paste from the infoview was hit-and-miss (and apparently even more hit and miss on Windows), but in Lean 4 I've had no problems. Like Heather I today wanted to see the type of a (large) expression (I wasn't sure if it was Prop or Type) and it was a little annoying than clicking on it in the infoview didn't immediately just tell me the answer, so I had to use my brain.</p>",
        "id": 318170065,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672181848
    }
]