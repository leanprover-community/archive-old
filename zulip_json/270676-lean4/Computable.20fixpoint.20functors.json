[
    {
        "content": "<p>I would like to write an inductive type</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Tm</span> <span class=\"o\">(</span><span class=\"n\">tm</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Type</span>  <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>with functor instance (Assuming Nat is a discrete category).</p>\n<p>Since I can't write a terminating instance for fixpoints generally, could you specialize it to just initial algebras. Would it be computable assuming the functor is computable? If not, what conditions do I need for it to be computable?</p>",
        "id": 288378843,
        "sender_full_name": "ohhaimark",
        "timestamp": 1656922126
    }
]