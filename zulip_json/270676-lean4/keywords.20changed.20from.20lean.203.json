[
    {
        "content": "<p>Does lean4 change the meaning of the keywords <code>lemma</code>, <code>begin</code>, and <code>end</code>? They aren't mentioned in the \"significant changes\" document at <a href=\"https://leanprover.github.io/lean4/doc/lean3changes.html\">https://leanprover.github.io/lean4/doc/lean3changes.html</a> but when I try out some simple stuff in lean 4 it does not seem like they work any more.</p>",
        "id": 317009312,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1671559972
    },
    {
        "content": "<p>They are gone.</p>",
        "id": 317009670,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671560081
    },
    {
        "content": "<p>You can use <code>theorem</code> instead of <code>lemma</code>, use <code>by</code> instead of <code>begin</code> and forget about <code>end</code>.</p>",
        "id": 317009767,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671560110
    },
    {
        "content": "<p>ok cool. it would be handy to have a list of all lean 3 keywords that have been renamed or removed from lean 4</p>",
        "id": 317010351,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1671560307
    },
    {
        "content": "<p>I guess you can try to open a PR adding this to the page you were looking at. Polite documentation PRs are rather welcome.</p>",
        "id": 317011239,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1671560609
    },
    {
        "content": "<p>I was thinking about it, I just hesitate to try to document lean 4 when I know so little about it</p>",
        "id": 317011439,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1671560663
    },
    {
        "content": "<p>here's a similar issue, although one notch more complicated - I believe in lean 3 the <code>trivial</code> tactic would prove <code>p -&gt; p</code>. now it does not seem to. is that a change in how things work and I should use another tactic there, or am I misremembering?</p>",
        "id": 317012043,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1671560840
    },
    {
        "content": "<p><code>trivial</code> doesn't appear to prove <code>p -&gt; p</code> in Lean 3.</p>",
        "id": 317023032,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671564277
    },
    {
        "content": "<p><code>lemma</code> is most definitely <strong>not</strong> gone. I've been using it myself.</p>",
        "id": 317028287,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1671565898
    },
    {
        "content": "<p>It's gone in core Lean -- it was <a href=\"https://github.com/leanprover-community/mathlib4/blob/998f1838962d8d637b8e0dcea6d99a2b19e706c3/Mathlib/Tactic/Basic.lean#L22-L33\">re-added in mathlib</a>.</p>",
        "id": 317029340,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671566292
    },
    {
        "content": "<p>I think it is so cool that Lean 4 is so flexible that with just a few lines of code you can do this. I am still really excited by those changes in Lean 4. It took me a while to understand the significance -- at some point I was moaning to Leo about how I couldn't do X any more and he just said \"sure you can do X, you can just do it yourself -- that's the point\"</p>",
        "id": 317030041,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671566574
    }
]