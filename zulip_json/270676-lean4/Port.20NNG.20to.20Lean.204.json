[
    {
        "content": "<p>Is it possible to port NNG to Lean 4? Will we do it?</p>",
        "id": 224330756,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1611843275
    },
    {
        "content": "<p>I would imagine that porting the Lean code would be a very pleasant exercise, and indeed a few weeks ago someone posted to this Zulip a bunch of NNG stuff in Lean 4. I have no clue about how one turns Lean 4 code into a browser game though so cannot comment on that. It would probably be not unfair to say that this is not high priority for me right now (although of course if someone else wants to take it on I'm not going to be complaining!). However once we're at the stage where we are expecting newcomers to use Lean 4 rather than Lean 3 (and I have no clue about when this will happen, I am adopting a \"wait and see\" approach here because I have no idea about any of the subtleties involved) then I would imagine that this would become a much higher priority, because NNG seems to work as a way of attracting people with a mathematical interest to Lean.</p>",
        "id": 224331433,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611843583
    },
    {
        "content": "<p>step 1: figure out how to compile Lean 4 to Wasm<br>\nstep 2: figure out how to connect the Lean 4 server with a web editor<br>\nstep 3: remove \"<strong>and don't forget the comma</strong>\"</p>",
        "id": 224332130,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1611843878
    },
    {
        "content": "<p>you forgot all semicolons in your message</p>",
        "id": 224332201,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611843907
    },
    {
        "content": "<p>I noticed <code>rw</code> doesn't like to apply <del><code>refl</code></del> <code>rfl</code> afterwards now, so Kevin will be happy about that!</p>",
        "id": 224332228,
        "sender_full_name": "Reid Barton",
        "timestamp": 1611843921
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/224332201\">said</a>:</p>\n<blockquote>\n<p>you forgot all semicolons in your message</p>\n</blockquote>\n<p>I prefer whitespace sensitivity</p>",
        "id": 224332384,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1611843967
    },
    {
        "content": "<p>So we see!</p>",
        "id": 224332437,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611843985
    },
    {
        "content": "<p>(I also use it to tex and lean from my iPad)</p>",
        "id": 292178394,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1659717357
    },
    {
        "content": "<p>I had worked on the idea of running Lean on a server a while ago, and now I've worked on it a little more. Here is the result so far: <a href=\"https://lean-browser.herokuapp.com/\">https://lean-browser.herokuapp.com/</a>. It may take a while to load because I am not paying for the server. As soon as you see a little \"1\" in the top left corner, write some Lean code. You can hover over anything that gets underlined. There is no info view yet... And the whole thing seems to collapse after some time of inactivity. But it definitely seems fast enough to work with, at least from Europe where the server is located.</p>",
        "id": 292204840,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1659731971
    },
    {
        "content": "<p>Oh, and I haven't worked out how to handle multiple users at once. So if you get output that doesn't seem to belong to you, somebody else is playing at the same time <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 292205241,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1659732207
    },
    {
        "content": "<p>Here is the source code: <a href=\"https://github.com/abentkamp/lean-browser\">https://github.com/abentkamp/lean-browser</a></p>",
        "id": 292205494,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1659732342
    },
    {
        "content": "<p>Alexander Bentkamp <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/292205241\">said</a>:</p>\n<blockquote>\n<p>Oh, and I haven't worked out how to handle multiple users at once. So if you get output that doesn't seem to belong to you, somebody else is playing at the same time <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>\n</blockquote>\n<p>I'm interested in playing a bit with this idea but I realize I have no idea how stateful web applications work. How can I tell my Apache server that whenever it gets a request on a certain url it should check whether this user already runs Lean and either talk to the corresponding Lean process or start one? Is that something that FastCGI can do? How does something like GitPod handles this? Then how does GitPod or a similar application decides to kill any process? Does it simply wait for a certain time after the last request?</p>",
        "id": 293975065,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660769927
    },
    {
        "content": "<p>I've fixed this issue by now. I am using websockets, which is a protocol that can identify different clients much more easily than HTTP. I think Gitpod is using websockets, too. I don't know FastCGI.</p>",
        "id": 294022549,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660806027
    },
    {
        "content": "<p>With HTTP, you would need to assign an identifier to each client that the client would include with each request. The identifier should be hard to guess so that you can't steal other people's identity.</p>",
        "id": 294022641,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660806099
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129120\">@Alexander Bentkamp</span>  Do you have any documentation to recommend about all that?</p>",
        "id": 294053023,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660820390
    },
    {
        "content": "<p>It depends on what you would like to use to implement the server. I used NodeJS. Here is a tutorial about that: <a href=\"https://dev.to/codesphere/getting-started-with-web-sockets-in-nodejs-49n0\">https://dev.to/codesphere/getting-started-with-web-sockets-in-nodejs-49n0</a></p>",
        "id": 294056189,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660821676
    },
    {
        "content": "<p>Here is documentation about the client side: <a href=\"https://developer.mozilla.org/de/docs/Web/API/WebSocket\">https://developer.mozilla.org/de/docs/Web/API/WebSocket</a><br>\nAnd here documentation about the (NodeJS) server side: <a href=\"https://www.npmjs.com/package/ws\">https://www.npmjs.com/package/ws</a></p>",
        "id": 294056465,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660821755
    },
    {
        "content": "<p>So NodeJS is directly taking connections from the outside world without going through Apache or Nginx or anything like that?</p>",
        "id": 294058678,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660822658
    },
    {
        "content": "<p>It's a pity that we can't do that directly in Lean 4 yet. But maybe František Silváši will tell us it actually can.</p>",
        "id": 294058868,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660822735
    },
    {
        "content": "<p>You don't need Apache or Nginx. I also used express (<a href=\"https://www.npmjs.com/package/express\">https://www.npmjs.com/package/express</a>) in the prototype above, although maybe that wasn't even necessary.</p>",
        "id": 294062462,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660824236
    },
    {
        "content": "<p>Implementing the server directly in Lean would be nice :-)</p>",
        "id": 294062622,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660824285
    },
    {
        "content": "<p>I assume that will come when someone writes ffi bindings to something like <a href=\"https://github.com/cesanta/mongoose\">https://github.com/cesanta/mongoose</a></p>",
        "id": 294065940,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1660825465
    },
    {
        "content": "<p>Or maybe <a href=\"https://www.gnu.org/software/libmicrohttpd/\">https://www.gnu.org/software/libmicrohttpd/</a> which seems smaller.</p>",
        "id": 294066255,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1660825529
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"364929\">@František Silváši</span> is actually doing it the hard way and implements the protocol from scratch :-).</p>",
        "id": 294066328,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660825560
    },
    {
        "content": "<p>I am familiar with the JVM world so the specific libraries mentioned above are just from naive googleing.</p>",
        "id": 294066392,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1660825571
    },
    {
        "content": "<p>Anyway, for a usable Lean web interface, it's mostly the client side that needs more love. The server just forwards messages.</p>",
        "id": 294066638,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660825681
    },
    {
        "content": "<p>And of course, there is the problem that someone would need to pay for the server.</p>",
        "id": 294066875,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660825758
    },
    {
        "content": "<p>This is just a proof of concept, isn't it? Because you didn't do security verification to prevent Lean from damaging the system, right?</p>",
        "id": 294077828,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1660829585
    },
    {
        "content": "<p>It is possible to write programs in Lean. Programs in Lean can do anything programs in other languages can.</p>",
        "id": 294078076,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1660829675
    },
    {
        "content": "<p>Hm, yeah, good point. Any ideas how to prevent that?</p>",
        "id": 294078974,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660830017
    },
    {
        "content": "<p>run lean in a container</p>",
        "id": 294079613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660830221
    },
    {
        "content": "<p>Is that enough?</p>",
        "id": 294079641,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1660830232
    },
    {
        "content": "<p>I think that's the standard approach for projects like <a href=\"http://tio.run\">tio.run</a> and <a href=\"http://godbolt.org\">godbolt.org</a></p>",
        "id": 294079734,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660830256
    },
    {
        "content": "<p>you also need resource limits</p>",
        "id": 294079828,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660830295
    },
    {
        "content": "<p>This question has come up other times and the conclusion is often \"run it in a VM/container\". I don't have other ideas.</p>\n<p>I have memories of someone mentioning that they were trying to build an inoffensive version of Lean 4 without <code>IO</code></p>",
        "id": 294079992,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1660830325
    },
    {
        "content": "<p>yeah I strongly recommend against internal sandboxing here</p>",
        "id": 294080044,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660830348
    },
    {
        "content": "<p>it's way too hard to get right and if you fail your server is hosed</p>",
        "id": 294080177,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660830386
    },
    {
        "content": "<p>If it is not in the browser, then I would just make sure to have a kill switch and nothing of value on the machine.</p>",
        "id": 294080256,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1660830417
    },
    {
        "content": "<p>at the very least the machine has credentials to communicate with the website</p>",
        "id": 294080395,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660830474
    },
    {
        "content": "<p><a href=\"https://go.googlesource.com/playground/+/refs/heads/master\">Source code</a> for the playground at <a href=\"http://go.dev/play\">go.dev/play</a>. In case anyone wants an example.</p>",
        "id": 294083995,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1660831570
    },
    {
        "content": "<p>I'm pleased to announce that an early prototype of the first five levels of the natural number game is very temporarily available on <a href=\"http://pat.perso.ens-lyon.org/nng4/\">http://pat.perso.ens-lyon.org/nng4/</a>. I know that several things are missing (for instance you can easily type unicode characters if you want to right to left rewrite). This was mostly a learning project for me (Lean 4 programming of course but also React that I wanted to learn for future  widget writing purposes). It is also a technological demo.</p>",
        "id": 301790596,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664615922
    },
    {
        "content": "<p>Note that, when you play the game, Lean runs on my home computer acting as a server. I won't keep this server running forever. So if you read the above message late and can't see anything but a circular loading icon in the middle of a webpage then it means the server is switched off.</p>\n<p>EDIT: There is a small issue currently. If you see the circular loading thing forever when the server is meant to be running then you can open <code>about:config</code>  in Firefox and toggle <code>network.websocket.allowInsecureFromHTTPS</code> to true.</p>",
        "id": 301790672,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664615978
    },
    {
        "content": "<p>Please see <a href=\"https://github.com/PatrickMassot/lean4-game-server\">https://github.com/PatrickMassot/lean4-game-server</a>, <a href=\"https://github.com/PatrickMassot/NNG4\">https://github.com/PatrickMassot/NNG4</a> and <a href=\"https://github.com/PatrickMassot/nng4-interface\">https://github.com/PatrickMassot/nng4-interface</a> for a lot more details.</p>",
        "id": 301790772,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664616033
    },
    {
        "content": "<p>/me can't see anything but a circular loading icon in the middle of a webpage</p>",
        "id": 301790875,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664616094
    },
    {
        "content": "<p>This is extremely weird. Can you try reloading the page?</p>",
        "id": 301791282,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664616308
    },
    {
        "content": "<p>It worked yesterday evening with Kevin</p>",
        "id": 301791294,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664616319
    },
    {
        "content": "<p><code>Ctrl-F5</code> doesn't help</p>",
        "id": 301791427,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664616378
    },
    {
        "content": "<p>Same here.</p>",
        "id": 301791714,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1664616543
    },
    {
        "content": "<p>Tried with firefox and chrome</p>",
        "id": 301791761,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1664616567
    },
    {
        "content": "<p><code>Firefox can’t establish a connection to the server at wss://pat.perso.ens-lyon.org:8765/.</code></p>",
        "id": 301792806,
        "sender_full_name": "Julian Berman",
        "timestamp": 1664617149
    },
    {
        "content": "<p>I'll need to fix that but in the mean time you can open <code>about:config</code>  in Firefox and toggle <code>network.websocket.allowInsecureFromHTTPS</code></p>",
        "id": 301792981,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664617232
    },
    {
        "content": "<p>It still seems to try to upgrade the connection, probably because of HTTPS-only mode... will try from another browser.</p>",
        "id": 301793316,
        "sender_full_name": "Julian Berman",
        "timestamp": 1664617410
    },
    {
        "content": "<p>It now works for Johan</p>",
        "id": 301793356,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664617428
    },
    {
        "content": "<p>To be clear, what happens is that the website is running over https but it tries to talk to Lean through a non-secure websocket connection. I'll have to understand how to use a secure websocket connection.</p>",
        "id": 301793484,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664617502
    },
    {
        "content": "<p>It still doesn't work here, (either because I'm on a newer version of FF beta than Johan or because my HTTPS-only mode is on the maximum security which I think isn't the default) but what does work is:</p>\n<p><a href=\"/user_uploads/3121/0ausZVyJp4dmeom7ROpXFMpC/Screen-Shot-2022-10-01-at-10.48.23.png\">Screen-Shot-2022-10-01-at-10.48.23.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/0ausZVyJp4dmeom7ROpXFMpC/Screen-Shot-2022-10-01-at-10.48.23.png\" title=\"Screen-Shot-2022-10-01-at-10.48.23.png\"><img src=\"/user_uploads/3121/0ausZVyJp4dmeom7ROpXFMpC/Screen-Shot-2022-10-01-at-10.48.23.png\"></a></div><p>i.e. just whitelisting your domain to allow non-HTTPS connections. And it's cool!</p>",
        "id": 301793979,
        "sender_full_name": "Julian Berman",
        "timestamp": 1664617775
    },
    {
        "content": "<p>I really like the game-play. The way you get hints at a very granular level along the way is super nice!</p>",
        "id": 301794106,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664617853
    },
    {
        "content": "<p>That granularity was a very important target. It was one of main pains of the original NNG.</p>",
        "id": 301794159,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664617889
    },
    {
        "content": "<p>You can see how tactic-state-triggered messages are registered at <a href=\"https://github.com/PatrickMassot/NNG4/blob/main/NNG/Levels/Level2.lean#L31-L32\">https://github.com/PatrickMassot/NNG4/blob/main/NNG/Levels/Level2.lean#L31-L32</a> for instance.</p>",
        "id": 301794257,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664617930
    },
    {
        "content": "<p>Wow, this is beautiful. Great work!</p>\n<p>Do you have a way to get a server from your university? I assume I will get access to a university server next week. If you won't get one, I'd go ahead and host it there. It would be a pity to take it down, even if it's just a demo now.</p>",
        "id": 301802533,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1664621941
    },
    {
        "content": "<p>It would make more sense to get a server from the Hoskinson center (cc <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> ). But this is a bit premature. We need people to work a bit more on the interface (at least implementing unicode abbreviations and navigating the proof) and more people porting levels. Note that I stopped porting after the first level using induction.</p>",
        "id": 301807416,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664624410
    },
    {
        "content": "<p>Then before making wide announcements we would need someone who understand security to have a look at this.</p>",
        "id": 301807590,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664624477
    },
    {
        "content": "<p>Ok, right, hosting it at the Hoskinson center would be even better.</p>\n<p>It seems that security is not that much of an issue here because the interface to Lean is very restricted. You can just run a handful of tactics, not execute arbitrary Lean code. Anyway, sandboxing the Lean instances might still be a good idea, as Mario proposed above.</p>",
        "id": 301808614,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1664624915
    },
    {
        "content": "<p>Sure, this is the main reason why I'm not allowing to run any tactic. I also prevents \"cheating\".</p>",
        "id": 301808800,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664625009
    },
    {
        "content": "<p>I found a way to cheat</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>rewrite [] &lt;;&gt; sorry</p>\n</div></div>\n<p>Maybe the server should check the proof for axioms?</p>",
        "id": 301817537,
        "sender_full_name": "pcpthm",
        "timestamp": 1664629098
    },
    {
        "content": "<p>The tactic detection is indeed really basic. This is why I wrote this should be strengthened before advertising it more widely.</p>",
        "id": 301821359,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664630903
    },
    {
        "content": "<p>I tried to build nng4-interface locally. I get:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">npm</span> <span class=\"n\">run</span> <span class=\"n\">build</span>\n\n<span class=\"bp\">&gt;</span> <span class=\"n\">nng_interface</span><span class=\"bp\">@</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"n\">build</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">react</span><span class=\"bp\">-</span><span class=\"n\">scripts</span> <span class=\"n\">build</span>\n\n<span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">a</span> <span class=\"n\">required</span> <span class=\"n\">file.</span>\n  <span class=\"n\">Name</span><span class=\"o\">:</span> <span class=\"n\">index.html</span>\n  <span class=\"n\">Searched</span> <span class=\"k\">in</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">alex</span><span class=\"bp\">/</span><span class=\"n\">Projects</span><span class=\"bp\">/</span><span class=\"n\">nng4</span><span class=\"bp\">-</span><span class=\"n\">interface</span><span class=\"bp\">/</span><span class=\"n\">public</span>\n</code></pre></div>",
        "id": 301906803,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1664700250
    },
    {
        "content": "<p>Ok, got it to work using this standard React app <code>index.html</code> file: <a href=\"https://github.com/react-cosmos/create-react-app-example/blob/master/public/index.html\">https://github.com/react-cosmos/create-react-app-example/blob/master/public/index.html</a></p>",
        "id": 301908294,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1664701436
    },
    {
        "content": "<p>Oops, I forgot the <code>public</code> folder. Indeed I don't think I touched anything in that folder since launching the react app creation script. I just pushed it, sorry about the inconvenience.</p>",
        "id": 301919771,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664708345
    },
    {
        "content": "<p>No problem, thanks!</p>",
        "id": 301953552,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1664728556
    },
    {
        "content": "<p>Could anyone have a look at whether <a href=\"https://pat.perso.ens-lyon.org/nng4ssl/\">https://pat.perso.ens-lyon.org/nng4ssl/</a> works without switching off any security thing?</p>",
        "id": 302144924,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664829624
    },
    {
        "content": "<p>It seems to work fine for me</p>",
        "id": 302144985,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1664829658
    },
    {
        "content": "<p>And did you test the previous version?</p>",
        "id": 302145023,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664829675
    },
    {
        "content": "<p>No :-/</p>",
        "id": 302145038,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1664829684
    },
    {
        "content": "<p>Ok, it's still useful information but it would be even better to have someone who had to change something to get the previous version.</p>",
        "id": 302145104,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664829713
    },
    {
        "content": "<p>The issue is that it depends on web browser paranoia setting.</p>",
        "id": 302145194,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664829729
    },
    {
        "content": "<p>I'll try again with https everywhere turned on</p>",
        "id": 302145228,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1664829741
    },
    {
        "content": "<p>On Saturday night Kevin had no trouble accessing the non-secure version but on Sunday morning Johan, Julian and Riccardo couldn't.</p>",
        "id": 302145281,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664829768
    },
    {
        "content": "<p>Works for me also (Safari).</p>",
        "id": 302145282,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1664829768
    },
    {
        "content": "<p>Also did not test the previous version.</p>",
        "id": 302145352,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1664829800
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/302145228\">said</a>:</p>\n<blockquote>\n<p>I'll try again with https everywhere turned on</p>\n</blockquote>\n<p>https everywhere on and it still works</p>",
        "id": 302145353,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1664829801
    },
    {
        "content": "<p>So now I have all the default paranoid settings from firefox turned on (https everywhere, full tracker blocking) as well as ublock origin turned on, and things still look good!</p>",
        "id": 302145578,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1664829905
    },
    {
        "content": "<p>I tried it on iPadOS Safari and it works there. In my experience, iPadOS has the most stringent security defaults.</p>",
        "id": 302145932,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1664830081
    },
    {
        "content": "<p>Nice. For people interested in hosting their own game, I pushed a sample <a href=\"https://github.com/PatrickMassot/NNG4/blob/main/gameserver_ssl.py\">https://github.com/PatrickMassot/NNG4/blob/main/gameserver_ssl.py</a> creating a wss server talking to Lean.</p>",
        "id": 302147022,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664830524
    },
    {
        "content": "<p>By the way <span class=\"user-mention\" data-user-id=\"110099\">@Frantisek Silvasi</span> the above 50 lines of python are the only non-Lean piece of the Lean 4  NNG prototype. If your planned WebSocket lib in Lean can do that then we could have a 100% Lean setup.</p>",
        "id": 302147291,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664830637
    },
    {
        "content": "<p>I would be interested if any real Lean 4 programmer could have a look at what I did at <a href=\"https://github.com/PatrickMassot/lean4-game-server\">https://github.com/PatrickMassot/lean4-game-server</a>. It was a nice exercise to do this myself (with help of answers to my questions here of course), but now I would be very happy to see the official textbook solution.</p>",
        "id": 302147857,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664830853
    },
    {
        "content": "<p>The project's being worked on, albeit slowly - I'll be happy to open source this mid-development if someone's interested, although maybe this is a good time to ping <span class=\"user-mention\" data-user-id=\"414345\">@Xubai Wang</span> to see if they're willing to put some license on: <a href=\"https://github.com/xubaiw/BaseN.lean/\">https://github.com/xubaiw/BaseN.lean/</a> :).</p>\n<p>Nevertheless, the current state of affairs is such that one can handshake/negotiate a WebSocket connection and I am in the process of finishing/debugging the basic frame structure that this connection requires. I can make few promises wrt. timelines here as this is very much a 'weekend evening' project, but it's not dead.</p>",
        "id": 302219556,
        "sender_full_name": "František Silváši 🦉",
        "timestamp": 1664874628
    },
    {
        "content": "<p>It's not really blocking anything, but it would be nice for Leo's talks to be able to say that Lean 4 goes all the way from checking proofs in the game to serving websocket connections.</p>",
        "id": 302222221,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664875676
    },
    {
        "content": "<p>We should not abandon the goal of making all this work without a server either though :) . In fact a custom UI like this should make that quite a bit easier since replicating the LSP editor interface always seemed like the biggest hurdle.</p>",
        "id": 302229767,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1664878847
    },
    {
        "content": "<p>What do you mean by \"without a server\"? Do you mean running Lean directly in the browser?</p>",
        "id": 302240063,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664883048
    },
    {
        "content": "<p>Yes. You're not using the language server, so \"export these specific Lean functions to (single-threaded) JS/WASM\" is all you need, right?</p>",
        "id": 302240685,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1664883304
    },
    {
        "content": "<p>Plus \"load this restricted set of imports from bundled .olean files\". The size of .olean files (Init+Lean) was another in-browser worry, but that shouldn't be an issue for your case I assume.</p>",
        "id": 302240790,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1664883357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/302145104\">said</a>:</p>\n<blockquote>\n<p>Ok, it's still useful information but it would be even better to have someone who had to change something to get the previous version.</p>\n</blockquote>\n<p>this works for me and the previous version didn't! (and it's really cool)</p>",
        "id": 302248839,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1664886414
    },
    {
        "content": "<p>I love the geeky RPG vibes of this version. Well done!</p>",
        "id": 302250168,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1664886820
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/302240685\">said</a>:</p>\n<blockquote>\n<p>Yes. You're not using the language server, so \"export these specific Lean functions to (single-threaded) JS/WASM\" is all you need, right?</p>\n</blockquote>\n<p>I don't really know. What I I think I need is exactly what is in <a href=\"https://github.com/PatrickMassot/lean4-game-server\">https://github.com/PatrickMassot/lean4-game-server</a></p>",
        "id": 302267557,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664892146
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/302250168\">said</a>:</p>\n<blockquote>\n<p>I love the geeky RPG vibes of this version. Well done!</p>\n</blockquote>\n<p>Some of it is already in the original NNG, but I wanted to emphasize that Lean 4 meta programming allows to use Lean in a way that doesn't look like Lean, and this is part of it. As explained in <a href=\"https://github.com/PatrickMassot/NNG4#some-game-play-choices\">https://github.com/PatrickMassot/NNG4#some-game-play-choices</a>, this is completely specific to NNG and not baked in the game server.</p>",
        "id": 302267957,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664892254
    },
    {
        "content": "<p>I'm also interested in doing the nng as a lean4 sample that runs in vscode  (or in gitpod), see <a href=\"https://github.com/leanprover/lean4-samples/tree/clovett/NaturalNumberGame/NaturalNumberGame\">https://github.com/leanprover/lean4-samples/tree/clovett/NaturalNumberGame/NaturalNumberGame</a>.</p>",
        "id": 302384118,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1664943788
    },
    {
        "content": "<p>What is the motivation for that version?</p>",
        "id": 302400567,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664954820
    },
    {
        "content": "<p>mostly trying to decouple from the problem of \"web hosting\" so we can make progress on the actual content, and providing a place for the code to be checked in so multiple folks can work on it...   I saw you posted this link <a href=\"http://pat.perso.ens-lyon.org/nng4/\">http://pat.perso.ens-lyon.org/nng4/</a> but the web page you posted didn't respond.  Ah, but now I see you have a repo already at <a href=\"https://github.com/PatrickMassot/NNG4\">https://github.com/PatrickMassot/NNG4</a> so I'll check that out.  Ignore my branch then, unless you want to make this an official lean4-sample.  My branch has more of additional world too I think.  Should I port that to your repo? are you actively working on this or should I continue with my branch? Your TacticDocs stuff is interesting... I see you are also working on <a href=\"https://github.com/PatrickMassot/lean4-game-server\">https://github.com/PatrickMassot/lean4-game-server</a>, so I'll check that out also...</p>",
        "id": 302527893,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1664997536
    },
    {
        "content": "<p>You can try <a href=\"http://pat.perso.ens-lyon.org/nng4ssl/\">http://pat.perso.ens-lyon.org/nng4ssl/</a> that has less SSL issues.</p>",
        "id": 302533838,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664999750
    },
    {
        "content": "<p>And indeed contributing more levels to <a href=\"https://github.com/PatrickMassot/NNG4\">https://github.com/PatrickMassot/NNG4</a> is very welcome. I stopped at the first inductive proof because I was interested in building the framework, not porting levels. I hope Kevin will easily find people interested in porting levels. Also the game server currently does not put levels into worlds. This refinement would be very easy to add, but doing it from the beginning would have been a distraction only.</p>",
        "id": 302534174,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1664999867
    },
    {
        "content": "<p>ha ha, it works, that's pretty fun, thanks.  I found that the <code>rfl</code> after <code>rewrite</code> was unnecessary because <code>rewrite</code> now does a <code>rfl</code> automatically, but your version of the game still acts like the <code>rfl</code> is needed... also the instructions talk about typing \"\\l\" to get a left arrow, but that doesn't work in your Invocation box...</p>",
        "id": 302537316,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665001014
    },
    {
        "content": "<p>removing the <code>rfl</code> after <code>rw</code> is one of the changes that was made in the original NNG to make it more orthogonal for teaching purposes</p>",
        "id": 302538022,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665001252
    },
    {
        "content": "<p>and I take it level 5 is not complete yet? It doesn't let me \"cast an induction spell\"...<br>\n<a href=\"/user_uploads/3121/J5l-KeJKYYAzxJvcm0SYwN7F/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/J5l-KeJKYYAzxJvcm0SYwN7F/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/J5l-KeJKYYAzxJvcm0SYwN7F/image.png\"></a></div>",
        "id": 302539546,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665001838
    },
    {
        "content": "<p>That's because you didn't read the explanation about how to cast that spell</p>",
        "id": 302539601,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665001863
    },
    {
        "content": "<p>The game server is really meant for single line tactics. The new-style induction tactic is completely orthogonal to that, so I wrote a custom induction tactic. And for that game in particular <code>induction</code> won't work anyway because the natural numbers that are used are <em>not</em> an inductive type, see the discussion at <a href=\"https://github.com/PatrickMassot/NNG4#some-game-play-choices\">https://github.com/PatrickMassot/NNG4#some-game-play-choices</a></p>",
        "id": 302539852,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665001968
    },
    {
        "content": "<p>The blurb at the end of level 3 mentions <code>rewrite ← h</code> which is problematic both because of the lack of unicode and the missing brackets</p>",
        "id": 302541058,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665002497
    },
    {
        "content": "<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> I tried to find all those missing brackets but obviously they were <em>everywhere</em> since you would never put them for a single rewrite in Lean 3.</p>",
        "id": 302541301,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665002586
    },
    {
        "content": "<p>why not have the NNG version be just <code>rw h</code> with no brackets and no option for multiple rewrite?</p>",
        "id": 302541424,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665002640
    },
    {
        "content": "<p>in level 5 if you write <code>induction_on n with n ih</code> it gives an \"unexpected end of input\" error</p>",
        "id": 302541852,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665002802
    },
    {
        "content": "<p><code>rw h</code> doesn't work for me in VS Code with latest lean4 ...? It seems I have to write <code>rw [h]</code></p>",
        "id": 302541871,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665002813
    },
    {
        "content": "<p>that's the lean 3 syntax</p>",
        "id": 302541913,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665002828
    },
    {
        "content": "<p>you were allowed to omit the brackets if there was only one rewrite</p>",
        "id": 302541944,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665002845
    },
    {
        "content": "<p>in lean 4 this was removed</p>",
        "id": 302541959,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665002853
    },
    {
        "content": "<p>That seems to go counter to your goal in lean4-game-server of \"This discrepancy led to some issues down the road where people got confused by ways tactic have subtly different behaviors in NNG and regular Lean\"</p>",
        "id": 302542068,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665002890
    },
    {
        "content": "<p>I fixed those issues (sorry for people who were playing, I restarted the server)</p>",
        "id": 302542074,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665002892
    },
    {
        "content": "<p>What goes counter to my goal?</p>",
        "id": 302542115,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665002922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/302541424\">said</a>:</p>\n<blockquote>\n<p>why not have the NNG version be just <code>rw h</code> with no brackets and no option for multiple rewrite?</p>\n</blockquote>\n<p>I also considered doing that. But since <code>rewrite</code> already existed it was faster to simply use it. I also wasn't sure how to shadow the existing <code>rw</code> tactic.</p>",
        "id": 302542181,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665002962
    },
    {
        "content": "<p>I assumed that's why you spelled your induction tactic <code>induction_on</code> as well</p>",
        "id": 302542224,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665002986
    },
    {
        "content": "<p>Yes</p>",
        "id": 302542246,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665002997
    },
    {
        "content": "<p>I believe <code>(priority := high)</code> on the syntax should suffice</p>",
        "id": 302542304,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665003006
    },
    {
        "content": "<blockquote>\n<p>What goes counter to my goal?</p>\n</blockquote>\n<p>teaching to tactics that you invented just for the game...</p>",
        "id": 302542359,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665003027
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"434989\">Chris Lovett</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/302542068\">said</a>:</p>\n<blockquote>\n<p>That seems to go counter to your goal in lean4-game-server of \"This discrepancy led to some issues down the road where people got confused by ways tactic have subtly different behaviors in NNG and regular Lean\"</p>\n</blockquote>\n<p>I think you misunderstood the proposed solution here. Patrick's approach is not to better stick with Lean4, but on the contrary to make a clear distinction between the game and Lean4 so that there is no confusion possible</p>",
        "id": 302542433,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1665003065
    },
    {
        "content": "<p>Renaming the induction tactic also helps if people want to switch to regular Lean. This way it's clear it's a different tactic.</p>",
        "id": 302542436,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665003066
    },
    {
        "content": "<p>It might be easier to use a custom syntax category if you want to deviate from <code>tactic</code> in general</p>",
        "id": 302542640,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1665003137
    },
    {
        "content": "<p>so do you plan to stick with single line input for the whole game? If so, perhaps my \"vs code\" version of NNG serves a different goal for folks who want to learn Lean while editing actual lean programs, doing the NNG levels (exercises) as they go with the power of the full lean editor at their finger tips - this is what I personally would prefer but perhaps this then is for a different audience.  Question is though would this cause confusion having 2 versions?  Should I rename my \"lean4-sample\" perhaps just call it \"NaturalNumbers\" or something... since it doesn't really have all the fun \"game\" elements that the online version has.</p>",
        "id": 302542974,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665003290
    },
    {
        "content": "<p>Indeed I think it's better to have a clear distinction between the game and more serious stuff. As I explained in the README, Kevin really wanted this to be a game from the beginning. It became a common first Lean learning step by accident.</p>",
        "id": 302543224,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665003393
    },
    {
        "content": "<p>Yes we were all surprised about how well it took off.</p>",
        "id": 302545064,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665004104
    },
    {
        "content": "<p>Ok, I've renamed the sample to just \"Natural Numbers\" and prepared it as a leanink style book (removing the game elements).  See <a href=\"https://github.com/leanprover/lean4-samples/tree/main/NaturalNumbers\">https://github.com/leanprover/lean4-samples/tree/main/NaturalNumbers</a>.  This can be hosted on a simple github pages site like this: <a href=\"https://lovettsoftware.com/NaturalNumbers/index.html\">https://lovettsoftware.com/NaturalNumbers/index.html</a></p>",
        "id": 302563177,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665013872
    },
    {
        "content": "<p>Now I'm running into an interesting bug in my version and I'm not sure why, I'm finding I need to add this theorem <code>theorem zero_is_0 : MyNat.zero = 0 := by rfl</code> and use it in some places like in <a href=\"file:///D:/git/leanprover/lean4-samples/NaturalNumbers/docs/AdditionWorld/Level4.lean.html\">Addition Level 4</a> and I'm not sure why.  Is there something missing from MyNat definition that makes it so that I have to do this? I think I implemented OfNat properly because I can do this <code>#eval (zero : MyNat) -- 0</code>, so I'm confused why I need this hack?</p>",
        "id": 302567681,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665016972
    },
    {
        "content": "<p>When you just apply the induction principle for <code>Nat</code>, you end up with the actual constructors of the type, unadorned with any <code>OfNat</code> wrapper. The original NNG had to deal with this as well</p>",
        "id": 302568230,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665017419
    },
    {
        "content": "<p>this is part of why NNG overrides the implementation of <code>induction</code> to handle this</p>",
        "id": 302568248,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665017440
    },
    {
        "content": "<p>the regular <code>induction</code> tactic has the same behavior:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction</span> <span class=\"n\">x</span>\n<span class=\"c1\">-- case zero</span>\n<span class=\"c1\">-- ⊢ Nat.zero = Nat.zero</span>\n<span class=\"c1\">-- case succ</span>\n<span class=\"c1\">-- n✝: ℕ</span>\n<span class=\"c1\">-- : n✝ = n✝</span>\n<span class=\"c1\">-- ⊢ Nat.succ n✝ = Nat.succ n✝</span>\n</code></pre></div>",
        "id": 302568613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665017753
    },
    {
        "content": "<p>Ok, so it sounds like my having to add <code>rw [zero_is_0]</code> is not a bug, but things are working normally then.  If so, I will try and add some explanation for this.  I also found that the <code>simp</code> example didn't work in Lean 4 with the <a href=\"https://lovettsoftware.com/NaturalNumbers/AdditionWorld/Level6.lean.html\">Level 6 example</a> of <code>(((a+b)+c)+d)+e=(c+((b+e)+a))+d</code>, is this because I have not completed the AddMonoid  instances and does that somehow extend the power of <code>simp</code>?</p>",
        "id": 302570959,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665019977
    },
    {
        "content": "<p>you need to simp with <code>add_assoc</code>, <code>add_comm</code>, <code>add_left_comm</code> either by passing them to the <code>simp</code> call or marking the lemmas as <code>@[simp]</code></p>",
        "id": 302571205,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665020234
    },
    {
        "content": "<p>I already have this: <code>attribute [simp]  zero_add add_assoc add_comm succ_add add_succ succ_eq_add_one one_eq_succ_zero add_right_comm</code> but there is no add_left_com in the original NNG?</p>",
        "id": 302571429,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665020453
    },
    {
        "content": "<p>But interestingly, when I got to multiplication level 9 that example worked:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">MyNat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(((</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">c</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">d</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">e</span><span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"o\">((</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">))</span><span class=\"bp\">*</span><span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 302572455,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665021454
    },
    {
        "content": "<p>and this has a left_comm <code>attribute [simp] mul_assoc mul_comm mul_left_comm</code> so I went back to level6 and changed it to this, and now it works too :-) </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">add_assoc</span> <span class=\"n\">add_comm</span> <span class=\"n\">add_left_comm</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">MyNat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(((</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">+</span><span class=\"n\">c</span><span class=\"o\">)</span><span class=\"bp\">+</span><span class=\"n\">d</span><span class=\"o\">)</span><span class=\"bp\">+</span><span class=\"n\">e</span><span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"bp\">+</span><span class=\"o\">((</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"n\">e</span><span class=\"o\">)</span><span class=\"bp\">+</span><span class=\"n\">a</span><span class=\"o\">))</span><span class=\"bp\">+</span><span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 302572751,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665021685
    },
    {
        "content": "<p>Yeah, this was a problem in Lean 3 NNG; <code>0</code> is <code>has_zero.zero</code> whereas <code>induction</code> would spit out <code>nat.zero</code> which printed differently and confused users. <a href=\"https://github.com/ImperialCollegeLondon/natural_number_game/blob/f29b6c2884299fc63fdfc81ae5d7daaa3219f9fd/src/tactic/modded.lean#L71\">here</a> is where I change <code>induction</code> so that it does usual induction and then runs <code>dsimp</code> with a simp set including <a href=\"https://github.com/ImperialCollegeLondon/natural_number_game/blob/e662e49ac977d4f0bbe53502e677e18025f9394c/src/mynat/definition.lean#L24\">this</a> which means that users don't ever see the problem.</p>",
        "id": 302593982,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665040142
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/Port.20NNG.20to.20Lean.204/near/302240685\">said</a>:</p>\n<blockquote>\n<p>Yes. You're not using the language server, so \"export these specific Lean functions to (single-threaded) JS/WASM\" is all you need, right?</p>\n</blockquote>\n<p>Do you have some hints on how to do this?</p>",
        "id": 302637843,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1665058261
    },
    {
        "content": "<p>I think the most promising way to an official Emscripten build of Lean was last discussed in <a href=\"#narrow/stream/270676-lean4/topic/wasm.20nix.20emscripten.20build/near/271113368\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/wasm.20nix.20emscripten.20build/near/271113368</a>. Though if someone is seriously considering completing that work, we should first chat with <span class=\"user-mention\" data-user-id=\"112857\">@Leonardo de Moura</span> about .olean platform portability expectations.</p>",
        "id": 302639057,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1665058717
    },
    {
        "content": "<p>I found this Lean 4 solution to Power World Level 8, not using \"Ring\", but is there a simpler one?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">add_squared</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">MyNat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">two</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">two</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">two</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">two_eq_succ_one</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">one_eq_succ_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_succ</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">one_mul</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_add</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_mul</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">one_plus_one</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_mul</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">one_mul</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>\n<p>See <a href=\"http://lovettsoftware.com/NaturalNumbers/PowerWorld/Level8.lean.html\">lean ink version</a></p>\n<p>I couldn't get Mathlib.Tactic.Ring to work here as shown in <a href=\"https://github.com/ImperialCollegeLondon/natural_number_game/blob/master/src/game/world4/level8.lean\">Lean 3 NNG</a>.</p>",
        "id": 302752476,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665095532
    },
    {
        "content": "<p>I'm happy to report the entire NNG is now ported to lean4, here's the raw source code :</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/leanprover/lean4-samples\">https://github.com/leanprover/lean4-samples</a><br>\nwhich is published in a non-interactive-game format as a tutorial here:</p>\n</li>\n<li>\n<p><a href=\"https://lovettsoftware.com/NaturalNumbers/TutorialWorld.lean.html\">https://lovettsoftware.com/NaturalNumbers/TutorialWorld.lean.html</a></p>\n</li>\n</ul>\n<p>The effort was a great learning experience and I have to thank Mario Carneiro, Heather Macbeth for much help and guidance along the way.</p>\n<p>Note that this is not a 1:1 port as some tactics are missing still, like <code>cc</code> so the port includes  rewriting proofs so they do not depend on these missing tactics. I think <code>cc</code> was the only real big missing piece I ran into.  I also did not use <code>ring</code> since it was more work to setup.  But if someone wants to go back and put <code>ring</code> back in PR's are welcome.</p>\n<p>TBD: the stuff about collectable \"instances\" of things that use your proofs is not implemented because some of that stuff is still missing from mathlib4.  If you search the web page for BUGBUG you will see where those TBD work items exist.</p>",
        "id": 303965735,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665725361
    },
    {
        "content": "<p>Oh, and having gone through the whole thing with a fine tooth comb, I have to say huge thanks to Kevin Buzzard for the original content - it is definitely well thought out and presents things in a really clear and enjoyable way.  I only found 1 typo: <code>your your goal</code></p>",
        "id": 303987529,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665737410
    },
    {
        "content": "<p>This is a map of the tactics covered and where they are first introduced:</p>\n<p><a href=\"/user_uploads/3121/O_BR94uG-FgDpOYwKSm3cGgw/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/O_BR94uG-FgDpOYwKSm3cGgw/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/O_BR94uG-FgDpOYwKSm3cGgw/image.png\"></a></div>",
        "id": 304009155,
        "sender_full_name": "Chris Lovett",
        "timestamp": 1665746161
    },
    {
        "content": "<p>The reason I push for \"naturals are a semiring\" before starting on order theory is that to prove naturals are a semiring you only need to know three tactics! I found this extraordinary. I remember telling <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> at the time and him replying \"sure, it's just equational reasoning\" and me not having a clue what that even meant.</p>",
        "id": 304018104,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665749839
    },
    {
        "content": "<p>It was conversations like this which made me realise that 25 years of being a professional number theorist doesn't teach you anything about how mathematics actually <em>works</em></p>",
        "id": 304018549,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665749966
    },
    {
        "content": "<p>In classic category theorist fashion, I guess I get to say \"number theory is really just the study of the free semiring on one generator\"...</p>\n<p>More seriously, there is such impressive richness in our playground, even from humble origins.</p>",
        "id": 304034713,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1665754955
    },
    {
        "content": "<p>What I had in mind was Birkhoff's theorem: <br>\n<a href=\"https://en.wikipedia.org/wiki/Variety_(universal_algebra)\">https://en.wikipedia.org/wiki/Variety_(universal_algebra)</a><br>\nIt tells us that lots of interesting structures can be axiomatized by equations, and that consequences of those equations can be proved with just <code>rw</code>.<br>\n<a href=\"https://en.wikipedia.org/wiki/Birkhoff%27s_theorem_(equational_logic)\">https://en.wikipedia.org/wiki/Birkhoff%27s_theorem_(equational_logic)</a></p>",
        "id": 304071628,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1665764907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> given that Chris Lovett ported the content to Lean4 are you just going to use his port for the content and keep working on the interface? What's your plan?</p>",
        "id": 305066058,
        "sender_full_name": "joaogui1 (he/him)",
        "timestamp": 1666228814
    },
    {
        "content": "<p>Chris's effort is completely orthogonal to what is needed for the game. He wanted a set of Lean files to edit normally in VSCode, using an inductive type for natural numbers and Lean regular tactics. Also, in the game version, a lot of the work is to update the explanations from the Lean 3 game to remove unneeded parts and, much more importantly, to give explanations in response to tactic states.</p>",
        "id": 305157645,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1666274871
    },
    {
        "content": "<p>Got it!</p>",
        "id": 305182472,
        "sender_full_name": "joaogui1 (he/him)",
        "timestamp": 1666281628
    }
]